<?php
function get_value($table, $field_name, $condition_field = '', $condition_value = '', $setParams = '', $directValue = '')
{
    global $obj;
    $returnValue = array();
    $where = ($condition_field != '') ? ' WHERE ' . clean($condition_field) : '';
    $where .= ($where != '' && $condition_value != '') ? ' = "' . clean($condition_value) . '"' : '';
    if ($table != '' && $field_name != '' && $where != '') {
        $sql = "SELECT $field_name FROM  $table $where";
        if ($setParams != '') {
            $sql .= $setParams;
        }
        $returnValue = $obj->MySQLSelect($sql);
    } else if ($table != '' && $field_name != '') {
        $sql = "SELECT $field_name FROM  $table";
        if ($setParams != '') {
            $sql .= $setParams;
        }
        $returnValue = $obj->MySQLSelect($sql);
    }
    if ($directValue == '') {
        return $returnValue;
    } else {
        $temp = "";
        if (isset($returnValue[0][$field_name])) {
            $temp = $returnValue[0][$field_name];
        }
        return $temp;
    }
}

function dateDifference($date_1, $date_2, $differenceFormat = '%a')
{
    $datetime1 = date_create($date_1);
    $datetime2 = date_create($date_2);
    $interval = date_diff($datetime1, $datetime2);
    return $interval->format($differenceFormat);
}

function getInvoicePaymentImg($paymentm)
{
    global $tconfig;
    if ($paymentm == "Card") {
        return $tconfig["tsite_url"] . "webimages/icons/payment_images/ic_payment_type_card.png";
    } else if ($paymentm == "Organization") {
        return $tconfig["tsite_url"] . "webimages/icons/payment_images/ic_payment_type_org.png";
    } else {
        return $tconfig["tsite_url"] . "webimages/icons/payment_images/ic_payment_type_cash.png";
    }
}

function getInvoiceRating($ratingval)
{
    global $tconfig;
    $a = $ratingval;
    $b = explode('.', $a);
    $c = $b[0];
    $str = "";
    $count = 0;
    for ($i = 0; $i < 5; $i++) {
        if ($c > $i) {
            $str .= '<img src="' . $tconfig["tsite_url"] . 'webimages/icons/ratings_images/Star-Full-resize.png" style="outline:none;text-decoration:none;width:20px;border:none" width="20px;" height="20" width="20" align="left" >';
        } elseif ($a > $c && $count == 0) {
            $str .= '<img src="' . $tconfig["tsite_url"] . 'webimages/icons/ratings_images/Star-Half-Full-resize.png" style="outline:none;text-decoration:none;width:20px;border:none" width="20px;" height="20" width="20" align="left" >';
            $count = 1;
        } else {
            $str .= '<img src="' . $tconfig["tsite_url"] . 'webimages/icons/ratings_images/Star-blank-resize.png" style="outline:none;text-decoration:none;width:20px;border:none" width="20px;" height="20" width="20" align="left" >';
        }
    }
    return $str;
}

function getVehicleCostData($tabelName, $vehicleTypeID)
{
    global $obj, $vehicleTypeDataArr;
    //Added By HJ On 20-06-2020 For Optimized vehicle_type Table Query Start
    if (isset($vehicleTypeDataArr[$tabelName])) {
        $VehicleTypeData = $vehicleTypeDataArr[$tabelName];
    } else {
        $VehicleTypeData = $obj->MySQLSelect("SELECT * from " . $tabelName);
        $vehicleTypeDataArr['vehicle_type'] = $VehicleTypeData;
    }
    $tripVehicleDataArr = $tripVehicleData = $Data_fare = array();
    for ($h = 0; $h < count($VehicleTypeData); $h++) {
        $tripVehicleDataArr[$VehicleTypeData[$h]['iVehicleTypeId']] = $VehicleTypeData[$h];
    }
    if (isset($tripVehicleDataArr[$vehicleTypeID])) {
        $Data_fare[] = $tripVehicleDataArr[$vehicleTypeID];
    }
    //Added By HJ On 20-06-2020 For Optimized vehicle_type Table Query End
    return $Data_fare;
}

function UpdateTripPositions($tripId, $latitudes, $longitudes)
{
    global $obj;
    $sql = "SELECT * FROM `trips_locations` WHERE iTripId = '$tripId'";
    $DataExist = $obj->MySQLSelect($sql);
    if (count($DataExist) > 0) {
        $latitudeList = $DataExist[0]['tPlatitudes'];
        $longitudeList = $DataExist[0]['tPlongitudes'];
        if ($latitudeList != '') {
            $data_latitudes = $latitudeList . ',' . $latitudes;
        } else {
            $data_latitudes = $latitudes;
        }
        if ($longitudeList != '') {
            $data_longitudes = $longitudeList . ',' . $longitudes;
        } else {
            $data_longitudes = $longitudes;
        }
        $where = " iTripId = '" . $tripId . "'";
        $Data_tripsLocations['tPlatitudes'] = $data_latitudes;
        $Data_tripsLocations['tPlongitudes'] = $data_longitudes;
        $id = $obj->MySQLQueryPerform("trips_locations", $Data_tripsLocations, 'update', $where);
    } else {
        $sql = "SELECT tStartLat,tStartLong FROM `trips` WHERE iTripId = '$tripId'";
        $TripData = $obj->MySQLSelect($sql);
        $tStartLat = $TripData[0]['tStartLat'];
        $tStartLong = $TripData[0]['tStartLong'];
        if ($latitudes != "") {
            $insertlat = $tStartLat . "," . $latitudes;
        } else {
            $insertlat = $tStartLat;
        }
        if ($longitudes != "") {
            $insertlong = $tStartLong . "," . $longitudes;
        } else {
            $insertlong = $tStartLong;
        }
        $Data_trips_locations['iTripId'] = $tripId;
        $Data_trips_locations['tPlatitudes'] = $insertlat;
        $Data_trips_locations['tPlongitudes'] = $insertlong;
        $id = $obj->MySQLQueryPerform("trips_locations", $Data_trips_locations, 'insert');
    }
    return $id;
}

function calcluateTripDistance($tripId)
{
    global $obj;
    $sql = "SELECT * FROM `trips_locations` WHERE iTripId = '$tripId'";
    $Data_tripsLocations = $obj->MySQLSelect($sql);
    $TotalDistance = 0;
    $arrOfLocations = array();
    if (count($Data_tripsLocations) > 0) {
        $trip_path_latitudes = $Data_tripsLocations[0]['tPlatitudes'];
        $trip_path_longitudes = $Data_tripsLocations[0]['tPlongitudes'];
        $trip_path_latitudes = preg_replace("/[^0-9,.-]/", '', $trip_path_latitudes);
        $trip_path_longitudes = preg_replace("/[^0-9,.-]/", '', $trip_path_longitudes);
        $TripPathLatitudes = explode(",", $trip_path_latitudes);
        $TripPathLongitudes = explode(",", $trip_path_longitudes);
        $previousDistance = 0;
        $isFirstProcessed = false;
        for ($i = 0; $i < count($TripPathLatitudes) - 1; $i++) {
            if ($isFirstProcessed == false) {
                $firsttemplat = $TripPathLatitudes[0];
                $firsttempLon = $TripPathLongitudes[0];
                $nexttempLat = $TripPathLatitudes[$i];
                $nexttempLon = $TripPathLongitudes[$i];
                $TempDistance_First = distanceByLocation($firsttemplat, $firsttempLon, $nexttempLat, $nexttempLon, "K");
                if ($TempDistance_First > 2) {
                    continue;
                } else {
                    $isFirstProcessed = true;
                    $previousDistance = $TempDistance_First;
                    continue;
                }
            }
            $tempLat_current = $TripPathLatitudes[$i];
            $tempLon_current = $TripPathLongitudes[$i];
            $tempLat_next = $TripPathLatitudes[$i + 1];
            $tempLon_next = $TripPathLongitudes[$i + 1];
            $arrAddLocValue = $tempLat_current . "," . $tempLon_current;
            if (in_array($arrAddLocValue, $arrOfLocations)) {
                continue;
            } else {
                $arrOfLocations[] = $arrAddLocValue;
            }
            if ($tempLat_current == '0.0' || $tempLon_current == '0.0' || $tempLat_next == '0.0' || $tempLon_next == '0.0' || $tempLat_current == '-180.0' || $tempLon_current == '-180.0' || $tempLat_next == '-180.0' || $tempLon_next == '-180.0' || ($tempLat_current == $tempLat_next && $tempLon_current == $tempLon_next)) {
                //if ($tempLat_current == '0.0' || $tempLon_current == '0.0' || $tempLat_next == '0.0' || $tempLon_next == '0.0' || $tempLat_current == '-180.0' || $tempLon_current == '-180.0' || $tempLat_next == '-180.0' || $tempLon_next == '-180.0' || $tempLat_current == $tempLat_next || $tempLon_current == $tempLon_next) {
                continue;
            }
            $TempDistance = distanceByLocation($tempLat_current, $tempLon_current, $tempLat_next, $tempLon_next, "K");
            if (is_nan($TempDistance)) {
                $TempDistance = 0;
            }
            if (abs($previousDistance - $TempDistance) > 0.1) {
                $TempDistance = 0;
            } else {
                $previousDistance = $TempDistance;
            }
            $TotalDistance += $TempDistance;
        }
    }
    return round($TotalDistance, 2);
}

function getDistanceInfoFromGoogleDirections($tripDistance, $startLatitude, $startLongitude, $endLatitude, $endLongitude, $isFareEstimate = "0", $vGMapLangCode = "", $isReturnArr = false)
{
    global $CONFIG_OBJ, $obj, $DISTANCE_CALCULATION_STRATEGY, $GOOGLE_SEVER_GCM_API_KEY, $FILTER_ROUTE_RAW_DATA, $MAPS_API_REPLACEMENT_STRATEGY, $tconfig, $vSystemDefaultLangvGMapLangCode;
    if ($vGMapLangCode == "" || $vGMapLangCode == NULL) {
        //Added By HJ On 24-06-2020 For Optimize language_master Table Query Start
        if (!empty($vSystemDefaultLangvGMapLangCode)) {
            $vGMapLangCode = $vSystemDefaultLangvGMapLangCode;
        } else {
            $vLangCodeData = get_value('language_master', 'vCode, vGMapLangCode', 'eDefault', 'Yes');
            $vGMapLangCode = $vLangCodeData[0]['vGMapLangCode'];
        }
        //Added By HJ On 24-06-2020 For Optimize language_master Table Query End
    }
    if (empty($GOOGLE_SEVER_GCM_API_KEY)) {
        $GOOGLE_API_KEY = $CONFIG_OBJ->getConfigurations("configurations", "GOOGLE_SEVER_GCM_API_KEY");
    } else {
        $GOOGLE_API_KEY = $GOOGLE_SEVER_GCM_API_KEY;
    }
    if (!empty($_REQUEST['type']) && $_REQUEST['type'] == "ProcessEndTrip" && !empty($_REQUEST["TripId"]) && !empty($DISTANCE_CALCULATION_STRATEGY)) {
        $tripId = $_REQUEST["TripId"];
        $TripPathLatitudes = $TripPathLongitudes = "";
        if (strtoupper($FILTER_ROUTE_RAW_DATA) == "YES") {
            $sql_snap_locations = "SELECT * FROM `trips_route_locations` WHERE iTripId = '$tripId' AND eType='SnapToRoad'";
            $Data_snap_locations = $obj->MySQLSelect($sql_snap_locations);
            if (!empty($Data_snap_locations) && count($Data_snap_locations) > 0) {
                $TripPathLatitudes = explode(",", $Data_snap_locations[0]['tPlatitudes']);
                $TripPathLongitudes = explode(",", $Data_snap_locations[0]['tPlongitudes']);
            }
        }
    }
    include_once($tconfig["tpanel_path"] . "assets/libraries/include_advance_api.php");
    $requestDataArr = array();
    $requestDataArr['SOURCE_LATITUDE'] = $startLatitude;
    $requestDataArr['SOURCE_LONGITUDE'] = $startLongitude;
    $requestDataArr['DEST_LATITUDE'] = $endLatitude;
    $requestDataArr['DEST_LONGITUDE'] = $endLongitude;
    $requestDataArr['LANGUAGE_CODE'] = $vGMapLangCode;
    $direction_data = getPathInfoBetweenLocations($requestDataArr);
    $distance_google_directions = $direction_data['distance'] / 1000;
    if ($isFareEstimate == "0") {
        $comparedDist = ($distance_google_directions * 85) / 100;
        if ($isReturnArr == true) {
            if ($tripDistance > $comparedDist) {
                $distance_google_directions_val = $tripDistance;
            } else {
                $distance_google_directions_val = round($distance_google_directions, 2);
            }
            $duration_google_directions = $direction_data['duration'];
            $sAddress = "";
            $dAddress = "";
            $steps = $direction_data['data'];
            $returnArr['Time'] = $duration_google_directions;
            $returnArr['Distance'] = $distance_google_directions_val;
            $returnArr['GDistance'] = $distance_google_directions;
            $returnArr['SAddress'] = $sAddress;
            $returnArr['DAddress'] = $dAddress;
            $returnArr['steps'] = $steps;
            return $returnArr;
        } else {
            if ($tripDistance > $comparedDist) {
                return $tripDistance;
            } else {
                return round($distance_google_directions, 2);
            }
        }
    } else {
        $duration_google_directions = $direction_data['duration'] / 60;
        $sAddress = "";
        $dAddress = "";
        $steps = $direction_data['data'];
        $returnArr['Time'] = $duration_google_directions;
        $returnArr['Distance'] = $distance_google_directions;
        $returnArr['SAddress'] = $sAddress;
        $returnArr['DAddress'] = $dAddress;
        $returnArr['steps'] = $steps;
        return $returnArr;
    }
}

function distanceByLocation($lat1, $lon1, $lat2, $lon2, $unit)
{
    if ((($lat1 == $lat2) && ($lon1 == $lon2)) || ($lat1 == '' || $lon1 == '' || $lat2 == '' || $lon2 == '')) {
        return 0;
    }
    $theta = $lon1 - $lon2;
    $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) + cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
    $dist = acos($dist);
    $dist = rad2deg($dist);
    $miles = $dist * 60 * 1.1515;
    $unit = strtoupper($unit);
    if ($unit == "K") {
        return ($miles * 1.609344);
    } else if ($unit == "N") {
        return ($miles * 0.8684);
    } else {
        return $miles;
    }
}

function sendChargeVerificationSms($toMobileNum, $message)
{
    global $MOBILE_VERIFY_SID_TWILIO, $MOBILE_VERIFY_TOKEN_TWILIO, $MOBILE_NO_TWILIO;
    $account_sid = $MOBILE_VERIFY_SID_TWILIO;
    $auth_token = $MOBILE_VERIFY_TOKEN_TWILIO;
    $twilioMobileNum = $MOBILE_NO_TWILIO;
    $client = new Services_Twilio($account_sid, $auth_token);
    try {
        $sms = $client->account->messages->sendMessage($twilioMobileNum, $toMobileNum, $message);
        return 1;
    } catch (Services_Twilio_RestException $e) {
        return 0;
    }
}

function converToTz($time, $toTz, $fromTz, $dateFormat = "Y-m-d H:i:s")
{
    $date = new DateTime($time, new DateTimeZone($fromTz));
    $date->setTimezone(new DateTimeZone($toTz));
    $time = $date->format($dateFormat);
    return $time;
}

function check_email_send($iDriverId, $tablename, $field)
{
    global $obj, $COMM_MEDIA_OBJ;
    $sql = "SELECT * FROM " . $tablename . " WHERE " . $field . "= '" . $iDriverId . "'";
    $db_data = $obj->MySQLSelect($sql);
    //print_r($db_data);//exit;
    //$valid=0;
    if ($tablename == 'register_driver') {
        //echo "hi";exit;
        if ($db_data[0]['vNoc'] != NULL && $db_data[0]['vLicence'] != NULL && $db_data[0]['vCerti'] != NULL) {
            $maildata['USER'] = "Driver";
            $maildata['NAME'] = $db_data[0]['vName'];
            $maildata['EMAIL'] = $db_data[0]['vEmail'];
            $COMM_MEDIA_OBJ->SendMailToMember("PROFILE_UPLOAD", $maildata);
            //header("location:profile.php?success=1&var_msg=" . $var_msg);
            //return;
        }
    } else {
        if ($db_data[0]['vNoc'] != NULL && $db_data[0]['vCerti'] != NULL) {
            $maildata['USER'] = "Company";
            $maildata['NAME'] = $db_data[0]['vName'];
            $maildata['EMAIL'] = $db_data[0]['vEmail'];
            $COMM_MEDIA_OBJ->SendMailToMember("PROFILE_UPLOAD", $maildata);
        }
    }
    return true;
}

function formatNum($number)
{
    return strval(number_format($number, 2));
}

function get_tiny_url($url)
{
    $ch = curl_init();
    $timeout = 5;
    curl_setopt($ch, CURLOPT_URL, 'http://tinyurl.com/api-create.php?url=' . $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
    $data = curl_exec($ch);
    curl_close($ch);
    return $data;
}

function UpdateDriverRequest($iDriverId, $iUserId, $iTripId, $eStatus)
{
    global $obj;
    $sql = "SELECT * FROM `driver_request` WHERE iDriverId = '" . $iDriverId . "' AND iUserId = '" . $iUserId . "' AND iTripId = '0' ORDER BY iDriverRequestId DESC LIMIT 0,1";
    $db_sql = $obj->MySQLSelect($sql);
    $request_count = count($db_sql);
    if ($request_count > 0) {
        $where = " iDriverRequestId = '" . $db_sql[0]['iDriverRequestId'] . "'";
        $Data_Update['eStatus'] = $eStatus;
        $Data_Update['tDate'] = @date("Y-m-d H:i:s");
        $Data_Update['iTripId'] = $iTripId;
        $id = $obj->MySQLQueryPerform("driver_request", $Data_Update, 'update', $where);
    }
    return $request_count;
}

function fetch_address_geocode($address, $geoCodeResult = "")
{
    global $GOOGLE_SEVER_API_KEY_WEB;
    $address = str_replace(" ", "+", "$address");
    $url = "https://maps.google.com/maps/api/geocode/json?address=$address&sensor=false&key=" . $GOOGLE_SEVER_API_KEY_WEB;
    if ($geoCodeResult == "") {
        $result = file_get_contents("$url");
        $result = preg_replace("/[\n\r]/", "", $result);
    } else {
        $result = $geoCodeResult;
        $result = stripslashes(preg_replace("/[\n\r]/", "", $result));
    }
    $json = json_decode($result);
    $city = $state = $country = $country_code = '';
    foreach ($json->results as $result) {
        foreach ($result->address_components as $addressPart) {
            if (((in_array('locality', $addressPart->types)) && (in_array('political', $addressPart->types))) || ((in_array('sublocality', $addressPart->types)) && (in_array('political', $addressPart->types)) && (in_array('sublocality_level_1', $addressPart->types)))) {
                $city = $addressPart->long_name;
            } else if ((in_array('administrative_area_level_1', $addressPart->types)) && (in_array('political', $addressPart->types))) {
                $state = $addressPart->long_name;
            } else if ((in_array('country', $addressPart->types)) && (in_array('political', $addressPart->types))) {
                $country = $addressPart->long_name;
                $country_code = $addressPart->short_name;
            }
        }
    }
    // if(($city != '') && ($state != '') && ($country != ''))
    // $address = $city.', '.$state.', '.$country;
    // else if (($city != '') && ($state != ''))
    // $address = $city.', '.$state;
    // else if (($state != '') && ($country != ''))
    // $address = $state.', '.$country;
    // else if ($country != '')
    // $address = $country;
    $returnArr = array('city' => $city, 'state' => $state, 'country' => $country, 'country_code' => $country_code);
    return $returnArr;
}

function UploadUserImage($iMemberId, $UserType = "Passenger", $eSignUpType, $vFbId, $vImageURL = "")
{
    global $UPLOAD_OBJ, $tconfig, $TWITTER_OAUTH_ACCESS_TOKEN, $TWITTER_OAUTH_ACCESS_TOKEN_SECRET, $TWITTER_CONSUMER_KEY, $TWITTER_CONSUMER_SECRET, $GOOGLE_SEVER_API_KEY_WEB;
    $vimage = "";
    if ($UserType == "Passenger") {
        $Photo_Gallery_folder = $tconfig["tsite_upload_images_passenger_path"] . "/" . $iMemberId . "/";
        $OldImage = get_value('register_user', 'vImgName', 'iUserId', $iMemberId, '', 'true');
    } else {
        $Photo_Gallery_folder = $tconfig["tsite_upload_images_driver_path"] . "/" . $iMemberId . "/";
        $OldImage = get_value('register_driver', 'vImage', 'iDriverId', $iMemberId, '', 'true');
    }
    unlink($Photo_Gallery_folder . $OldImage);
    unlink($Photo_Gallery_folder . "1_" . $OldImage);
    unlink($Photo_Gallery_folder . "2_" . $OldImage);
    unlink($Photo_Gallery_folder . "3_" . $OldImage);
    unlink($Photo_Gallery_folder . "4_" . $OldImage);
    if (!is_dir($Photo_Gallery_folder)) {
        mkdir($Photo_Gallery_folder, 0777);
    }
    if ($eSignUpType == "Facebook") {
        if ($vImageURL != "") {
            $vImageURL = str_replace("type=large", "width=256", $vImageURL);
            $baseurl = $vImageURL;
        } else {
            //$baseurl =  "http://graph.facebook.com/".$vFbId."/picture?type=large";
            $baseurl = "http://graph.facebook.com/" . $vFbId . "/picture?width=256";
            //$url = $vFbId."_".time().".jpg";
        }
        $url = time() . ".jpg";
        /* file_get_content */
        $profile_Image = $baseurl;
        $userImage = $url;
        $thumb_image = file_get_contents($baseurl);
        $thumb_file = $Photo_Gallery_folder . $url;
        $image_name = file_put_contents($thumb_file, $thumb_image);
        /* file_get_content  ends */
        if (is_file($Photo_Gallery_folder . $url)) {
            $imgname = $UPLOAD_OBJ->img_data_upload($Photo_Gallery_folder, $url, $Photo_Gallery_folder, $tconfig["tsite_upload_images_member_size1"], $tconfig["tsite_upload_images_member_size2"], $tconfig["tsite_upload_images_member_size3"], "");
            $vimage = $imgname;
        }
    }
    if ($eSignUpType == "Google") {
        if ($vImageURL != "") {
            $baseurl = $vImageURL;
            $url = time() . ".jpg";
        } else {
            //$baseurl1 =  "https://www.googleapis.com/plus/v1/people/114434193354602240754?fields=image&key=AIzaSyB7_FaMl2gU1ItcomolF2S1Fzh8prnvNNw";
            $baseurl1 = "https://www.googleapis.com/plus/v1/people/" . $vFbId . "?fields=image&key=" . $GOOGLE_SEVER_API_KEY_WEB;
            //$url = $vFbId."_".time().".jpg";
            //$url = time().".jpg";
            $url = time() . ".jpg";
            try {
                $jsonfile = file_get_contents($baseurl1);
                $jsondata = json_decode($jsonfile);
                $baseurl = $jsondata->image->url;
                if (!empty($baseurl)) {
                    $baseurl = str_replace("?sz=50", "?sz=256", $baseurl);
                } else {
                    $baseurl = '';
                }
            } catch (ErrorException $ex) {
                $imgname = "";
                $vimage = $imgname;
            }
        }
        if (!empty($baseurl)) {
            /* file_get_content */
            $profile_Image = $baseurl;
            $userImage = $url;
            $thumb_image = file_get_contents($baseurl);
            $thumb_file = $Photo_Gallery_folder . $url;
            $image_name = file_put_contents($thumb_file, $thumb_image);
            /* file_get_content  ends */
        } else {
            $imgname = "";
            $vimage = $imgname;
        }
        if (is_file($Photo_Gallery_folder . $url)) {
            $imgname = $UPLOAD_OBJ->img_data_upload($Photo_Gallery_folder, $url, $Photo_Gallery_folder, $tconfig["tsite_upload_images_member_size1"], $tconfig["tsite_upload_images_member_size2"], $tconfig["tsite_upload_images_member_size3"], "");
            $vimage = $imgname;
        }
    }
    if ($eSignUpType == "Twitter") {
        if ($vImageURL != "") {
            $baseurl = $vImageURL;
        } else {
            require_once('assets/libraries/twitter/TwitterAPIExchange.php');
            $settings = array('oauth_access_token' => $TWITTER_OAUTH_ACCESS_TOKEN, 'oauth_access_token_secret' => $TWITTER_OAUTH_ACCESS_TOKEN_SECRET, 'consumer_key' => $TWITTER_CONSUMER_KEY, 'consumer_secret' => $TWITTER_CONSUMER_SECRET);
            $url = 'https://api.twitter.com/1.1/users/show.json';
            $getfield = '?user_id=' . $vFbId;
            $requestMethod = 'GET';
            $twitter = new TwitterAPIExchange($settings);
            $twitterArr = $twitter->setGetfield($getfield)->buildOauth($url, $requestMethod)->performRequest();
            $jsondata = json_decode($twitterArr); //echo "<pre>";print_r($jsondata);exit;
            $profile_image_url = $jsondata->profile_image_url;
            $baseurl = str_replace("_normal", "", $profile_image_url);
        }
        //$url = $vFbId."_".time().".jpg";
        $url = time() . ".jpg";
        /* file_get_content */
        $profile_Image = $baseurl;
        $userImage = $url;
        $thumb_image = file_get_contents($baseurl);
        $thumb_file = $Photo_Gallery_folder . $url;
        $image_name = file_put_contents($thumb_file, $thumb_image);
        /* file_get_content  ends */
        if (is_file($Photo_Gallery_folder . $url)) {
            $imgname = $UPLOAD_OBJ->img_data_upload($Photo_Gallery_folder, $url, $Photo_Gallery_folder, $tconfig["tsite_upload_images_member_size1"], $tconfig["tsite_upload_images_member_size2"], $tconfig["tsite_upload_images_member_size3"], "");
            $vimage = $imgname;
        }
    }
    if ($eSignUpType == "LinkedIn") {
        $baseurl = $vImageURL;
        $url = time() . ".jpg";
        $thumb_image = file_get_contents($baseurl);
        $thumb_file = $Photo_Gallery_folder . $url;
        $image_name = file_put_contents($thumb_file, $thumb_image);
        /* file_get_content  ends */
        if (is_file($Photo_Gallery_folder . $url)) {
            $imgname = $UPLOAD_OBJ->img_data_upload($Photo_Gallery_folder, $url, $Photo_Gallery_folder, $tconfig["tsite_upload_images_member_size1"], $tconfig["tsite_upload_images_member_size2"], $tconfig["tsite_upload_images_member_size3"], "");
            $vimage = $imgname;
        }
        //echo $vimage;die;
    }
    return $vimage;
}

function getMemberCountryUnit($iMemberId, $UserType = "Passenger")
{
    global $obj, $DEFAULT_DISTANCE_UNIT, $countryCodeAdmin, $userDetailsArr, $country_data_arr;
    $vCountryfield = "vCountry";
    if (empty($countryCodeAdmin)) {
        if ($UserType == 'Company') {
            $tblname = "company";
            $iUserId = "iCompanyId";
        } else if ($UserType == "Passenger") {
            $tblname = "register_user";
            $iUserId = "iUserId";
        } else {
            $tblname = "register_driver";
            $iUserId = "iDriverId";
        }
        //Added By HJ On 09-06-2020 For Optimization Start
        if (isset($userDetailsArr[$tblname . "_" . $iMemberId]) && count($userDetailsArr[$tblname . "_" . $iMemberId]) > 0) {
            $sqlcountryCode = array();
            if (isset($userDetailsArr[$tblname . "_" . $iMemberId][0][$vCountryfield]) && trim($userDetailsArr[$tblname . "_" . $iMemberId][0][$vCountryfield]) != "") {
                $memberCountryCode = $userDetailsArr[$tblname . "_" . $iMemberId][0][$vCountryfield];
                if (isset($country_data_arr[$memberCountryCode])) {
                    $sqlcountryCode[] = $country_data_arr[$memberCountryCode];
                }
            }
        }
        //Added By HJ On 09-06-2020 For Optimization End
        if (!empty($sqlcountryCode) && count($sqlcountryCode) > 0) {
            // Data Found From Global Array
        } else {
            $sqlcountryCode = $obj->MySQLSelect("SELECT co.eUnit FROM country as co LEFT JOIN $tblname as rd ON co.vCountryCode = rd.$vCountryfield WHERE $iUserId = '" . $iMemberId . "'");
        }
    } else {
        //Added By HJ On 09-06-2020 For Optimization Start
        if (isset($country_data_arr[$countryCodeAdmin])) {
            $sqlcountryCode = array();
            $sqlcountryCode[] = $country_data_arr[$countryCodeAdmin];
        } else {
            $sqlcountryCode = $obj->MySQLSelect("SELECT co.eUnit FROM country as co WHERE vCountryCode='" . $countryCodeAdmin . "'");
        }
        //Added By HJ On 09-06-2020 For Optimization End
    }
    $vCountry = "US";
    if (isset($sqlcountryCode[0]['eUnit'])) {
        $vCountry = $sqlcountryCode[0]['eUnit'];
    }
    //$vCountry = $sqlcountryCode[0]['eUnit'];
    //$vCountry = get_value($tblname, $vCountryfield, $iUserId, $iMemberId, '', 'true');
    if ($vCountry == "" || $vCountry == NULL) {
        $vCountryCode = $DEFAULT_DISTANCE_UNIT;
    } else {
        $vCountryCode = $vCountry;
    }
    return $vCountryCode;
}

function getVehicleCountryUnit_PricePerKm($vehicleTypeID, $fPricePerKM, $iMemberId = "", $userType = "")
{
    global $obj, $DEFAULT_DISTANCE_UNIT, $vehicleTypeDataArr, $country_data_arr, $countryAssociateArr, $userDetailsArr, $locationDataArr;
    //Added By HJ On 22-06-2020 For Optimize vehicle_type Table Query Start
    if (isset($vehicleTypeDataArr['vehicle_type'])) {
        $vehicleTypeData = $vehicleTypeDataArr['vehicle_type'];
        $typeDataArr = array();
        for ($h = 0; $h < count($vehicleTypeData); $h++) {
            $typeDataArr[$vehicleTypeData[$h]['iVehicleTypeId']] = $vehicleTypeData[$h]['iLocationid'];
        }
        if (isset($typeDataArr[$vehicleTypeID])) {
            $iLocationid = $typeDataArr[$vehicleTypeID];
        } else {
            $iLocationid = get_value("vehicle_type", "iLocationid", "iVehicleTypeId", $vehicleTypeID, '', 'true');
        }
    } else {
        $iLocationid = get_value("vehicle_type", "iLocationid", "iVehicleTypeId", $vehicleTypeID, '', 'true');
    }
    //Added By HJ On 22-06-2020 For Optimize vehicle_type Table Query End
    //Added By HJ On 23-06-2020 For Optimize location_master Table Query Start
    if ($iLocationid > 0) {
        if (isset($locationDataArr['location_master'])) {
            $locationData = $locationDataArr['location_master'];
        } else {
            $locationData = $obj->MySQLSelect("SELECT * FROM location_master");
            $locationDataArr['location_master'] = $locationData;
        }
        $locationArr = array();
        for ($g = 0; $g < count($locationData); $g++) {
            $locationArr[$locationData[$g]['iLocationId']] = $locationData[$g]['iCountryId'];
        }
        //echo $iLocationid."<br>";
        //echo "<pre>";print_r($locationDataArr);die;
        if (isset($locationArr[$iLocationid])) {
            $iCountryId = $locationArr[$iLocationid];
        } else {
            $iCountryId = get_value("location_master", "iCountryId", "iLocationId", $iLocationid, '', 'true');
        }
    }
    //Added By HJ On 23-06-2020 For Optimize location_master Table Query End
    //echo "<pre>";print_r($iCountryId);die;
    if ($iLocationid == "-1") {
        $eUnit = $DEFAULT_DISTANCE_UNIT;
    } else {
        if (isset($countryAssociateArr[$iCountryId])) {
            $eUnit = $countryAssociateArr[$iCountryId]['eUnit'];
        } else {
            $eUnit = get_value("country", "eUnit", "iCountryId", $iCountryId, '', 'true');
        }
    }
    if ($eUnit == "" || $eUnit == NULL) {
        $eUnit = $DEFAULT_DISTANCE_UNIT;
    }
    if ($iMemberId != "" && $userType != "") {
        if (isset($userDetailsArr['register_user_' . $iMemberId])) {
            $vCountry = $userDetailsArr['register_user_' . $iMemberId][0]['vCountry'];
        } else {
            $vCountry = get_value("register_user", "vCountry", "iUserId", $iMemberId, '', 'true');
        }
        if ($vCountry == "") {
            $userUnit = $DEFAULT_DISTANCE_UNIT;
        } else {
            if (isset($country_data_arr[$vCountry])) {
                $userUnit = $country_data_arr[$vCountry]['eUnit'];
            } else {
                $userUnit = get_value("country", "eUnit", "vCountryCode", $vCountry, '', 'true');
            }
        }
        if ($userUnit == "" || $userUnit == NULL) {
            $userUnit = $DEFAULT_DISTANCE_UNIT;
        }
        if ($userUnit == "Miles" && $eUnit == "Miles") {
            return $fPricePerKM * 0.621371;
        } else if ($userUnit == "KMs" && $eUnit == "Miles") {
            return $fPricePerKM * 1.60934;
        } else if ($userUnit == "Miles" && $eUnit == "KMs") {
            return $fPricePerKM * 0.621371;
        } else if ($userUnit == "KMs" && $eUnit == "KMs") {
            return $fPricePerKM;
        }
    }
    if ($eUnit == "Miles") {
        $PricePerKM = $fPricePerKM * 0.621371;
    } else {
        $PricePerKM = $fPricePerKM;
    }
    return $PricePerKM;
}

function getVehiclePrice_ByUSerCountry($iUserId, $fPricePerKM)
{
    global $obj, $DEFAULT_DISTANCE_UNIT;
    $vCountry = get_value("register_user", "vCountry", "iUserId", $iUserId, '', 'true');
    if ($vCountry == "") {
        $eUnit = $DEFAULT_DISTANCE_UNIT;
    } else {
        $eUnit = get_value("country", "eUnit", "vCountryCode", $vCountry, '', 'true');
    }
    if ($eUnit == "" || $eUnit == NULL) {
        $eUnit = $DEFAULT_DISTANCE_UNIT;
    }
    if ($eUnit == "Miles") {
        $PricePerKM = $fPricePerKM * 1.60934;
    } else {
        $PricePerKM = $fPricePerKM;
    }
    return $PricePerKM;
}

function getVehicleCountryUnit($vehicleTypeID, $fPerKM)
{
    global $obj, $DEFAULT_DISTANCE_UNIT, $vehicleTypeDataArr, $countryAssociateArr;
    //Added By HJ On 20-06-2020 For Optimized vehicle_type Table Query Start
    $tabelName = "vehicle_type";
    if (isset($vehicleTypeDataArr['vehicle_type'])) {
        $vehicleTypeData = $vehicleTypeDataArr['vehicle_type'];
        $typeDataArr = array();
        for ($h = 0; $h < count($vehicleTypeData); $h++) {
            $typeDataArr[$vehicleTypeData[$h]['iVehicleTypeId']] = $vehicleTypeData[$h]['iLocationid'];
        }
        if (isset($typeDataArr[$vehicleTypeID])) {
            $iLocationid = $typeDataArr[$vehicleTypeID];
        } else {
            $iLocationid = get_value("vehicle_type", "iLocationid", "iVehicleTypeId", $vehicleTypeID, '', 'true');
        }
    } else {
        $iLocationid = get_value("vehicle_type", "iLocationid", "iVehicleTypeId", $vehicleTypeID, '', 'true');
    }
    //Added By HJ On 22-06-2020 For Optimize vehicle_type Table Query End
    $iCountryId = get_value("location_master", "iCountryId", "iLocationId", $iLocationid, '', 'true');
    if ($iLocationid == "-1") {
        $eUnit = $DEFAULT_DISTANCE_UNIT;
    } else {
        if (isset($countryAssociateArr[$iCountryId])) {
            $eUnit = $countryAssociateArr[$iCountryId]['eUnit'];
        } else {
            $eUnit = get_value("country", "eUnit", "iCountryId", $iCountryId, '', 'true');
        }
    }
    if ($eUnit == "" || $eUnit == NULL) {
        $eUnit = $DEFAULT_DISTANCE_UNIT;
    }
    if ($eUnit == "Miles") {
        $KMvalue = $fPerKM * 1.60934;
    } else {
        $KMvalue = $fPerKM;
    }
    return round($KMvalue, 2);
}

function InitiateHailTrip($iUserId, $driverId, $selectedCarTypeID, $PickUpLatitude, $PickUpLongitude, $PickUpAddress, $DestLatitude, $DestLongitude, $DestAddress, $fTollPrice = 0, $vTollPriceCurrencyCode = "", $eTollSkipped = "No", $iRentalPackageId = "")
{
    global $obj, $APPLY_SURGE_ON_FLAT_FARE, $vTimeZone, $ENABLE_AIRPORT_SURCHARGE_SECTION, $PACKAGE_TYPE, $userDetailsArr, $currencyAssociateArr;
    $vDistance = isset($_REQUEST["vDistance"]) ? $_REQUEST["vDistance"] : 0;
    $vDuration = isset($_REQUEST["vDuration"]) ? $_REQUEST["vDuration"] : 0;
    $vDuration = setTwoDecimalPoint($vDuration / 60);
    $vDistance = setTwoDecimalPoint($vDistance / 1000);
    //Added By HJ On 01-10-2020 For Optimization register_user and register_driver Table Query Start
    if (isset($userDetailsArr["register_user_" . $iUserId])) {
        $userDetails = $userDetailsArr["register_user_" . $iUserId];
    } else {
        $userDetails = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM register_user WHERE iUserId='" . $iUserId . "'");
        $userDetailsArr["register_user_" . $iUserId] = $userDetails;
    }
    if (isset($userDetailsArr['register_driver_' . $driverId])) {
        $driverDetails = $userDetailsArr['register_driver_' . $driverId];
    } else {
        $driverDetails = $obj->MySQLSelect("SELECT *,iDriverId as iMemberId FROM register_driver WHERE iDriverId='" . $driverId . "'");
        $userDetailsArr['register_driver_' . $driverId] = $driverDetails;
    }
    //Added By HJ On 01-10-2020 For Optimization register_user and register_driver Table Query End
    $getVehicleTypeData = $obj->MySQLSelect("SELECT eFareType,fVisitFee FROM vehicle_type WHERE iVehicleTypeId='" . $selectedCarTypeID . "'");
    $Data['vRideNo'] = rand(10000000, 99999999);
    $Data['iVerificationCode'] = rand(1000, 9999);
    $Data['iUserId'] = $iUserId;
    $Data['iDriverId'] = $driverId;
    //Added By HJ On 01-10-2020 For Fixed Fare Calculation Mode Start
    $Data['fDistance'] = $Data['tTotalDistance'] = $vDistance;
    $Data['fDuration'] = $Data['tTotalDuration'] = $vDuration;
    //Added By HJ On 01-10-2020 For Fixed Fare Calculation Mode End
    $Data['tTripRequestDate'] = @date("Y-m-d H:i:s");
    $Data['iVehicleTypeId'] = $selectedCarTypeID;
    //$Data['iDriverVehicleId'] = get_value('register_driver', 'iDriverVehicleId', 'iDriverId', $driverId, '', 'true');
    $Data['iDriverVehicleId'] = $driverDetails[0]['iDriverVehicleId'];
    $Data['iActive'] = 'On Going Trip';
    $Data['tStartDate'] = @date("Y-m-d H:i:s");
    $Data['tDriverArrivedDate'] = @date("Y-m-d H:i:s");
    $Data['tStartLat'] = $PickUpLatitude;
    $Data['tStartLong'] = $PickUpLongitude;
    $Data['tSaddress'] = $PickUpAddress;
    $Data['tEndLat'] = $DestLatitude;
    $Data['tEndLong'] = $DestLongitude;
    $Data['tDaddress'] = $DestAddress;
    //$Data['eFareType'] = get_value('vehicle_type', 'eFareType', 'iVehicleTypeId', $selectedCarTypeID, '', 'true');
    //$Data['fVisitFee'] = get_value('vehicle_type', 'fVisitFee', 'iVehicleTypeId', $selectedCarTypeID, '', 'true');
    $Data['eFareType'] = $getVehicleTypeData[0]['eFareType'];
    $Data['fVisitFee'] = $getVehicleTypeData[0]['fVisitFee'];
    $Data['vTripPaymentMode'] = "Cash";
    $Data['eType'] = "Ride";
    $Data['eHailTrip'] = "Yes";
    $Data['eFareType'] = "Regular";
    $Data['vCountryUnitRider'] = getMemberCountryUnit($iUserId, "Passenger");
    $Data['vCountryUnitDriver'] = getMemberCountryUnit($driverId, "Driver");
    $Data['fTollPrice'] = $fTollPrice;
    $Data['vTollPriceCurrencyCode'] = $vTollPriceCurrencyCode;
    $Data['eTollSkipped'] = $eTollSkipped;
    $currencyList = get_value('currency', '*', 'eStatus', 'Active');
    for ($i = 0; $i < count($currencyList); $i++) {
        $currencyCode = $currencyList[$i]['vName'];
        $Data['fRatio_' . $currencyCode] = $currencyList[$i]['Ratio'];
    }
    //$Data['vCurrencyPassenger'] = get_value('register_user', 'vCurrencyPassenger', 'iUserId', $iUserId, '', 'true');
    $Data['vCurrencyPassenger'] = $userDetails[0]['vCurrencyPassenger'];
    //$Data['vCurrencyDriver'] = get_value('register_driver', 'vCurrencyDriver', 'iDriverId', $driverId, '', 'true');
    $Data['vCurrencyDriver'] = $driverDetails[0]['vCurrencyDriver'];
    //Added By HJ On 01-10-2020 For Optimization currency Table Query Start
    if (isset($currencyAssociateArr[$Data['vCurrencyPassenger']])) {
        $fRatioPassenger = $currencyAssociateArr[$Data['vCurrencyPassenger']]['Ratio'];
    } else {
        $fRatioPassenger = get_value('currency', 'Ratio', 'vName', $Data['vCurrencyPassenger'], '', 'true');
    }
    if (isset($currencyAssociateArr[$Data['vCurrencyDriver']])) {
        $fRatioDriver = $currencyAssociateArr[$Data['vCurrencyDriver']]['Ratio'];
    } else {
        $fRatioDriver = get_value('currency', 'Ratio', 'vName', $Data['vCurrencyDriver'], '', 'true');
    }
    //$Data['fRatioPassenger'] = get_value('currency', 'Ratio', 'vName', $Data['vCurrencyPassenger'], '', 'true');
    $Data['fRatioPassenger'] = $fRatioPassenger;
    //$Data['fRatioDriver'] = get_value('currency', 'Ratio', 'vName', $Data['vCurrencyDriver'], '', 'true');
    $Data['fRatioDriver'] = $fRatioDriver;
    //Added By HJ On 01-10-2020 For Optimization currency Table Query End
    $fPickUpPrice = $fNightPrice = 1;
    $sourceLocationArr = array($PickUpLatitude, $PickUpLongitude);
    $destinationLocationArr = array($DestLatitude, $DestLongitude);
    $data_flattrip = checkFlatTripnew($sourceLocationArr, $destinationLocationArr, $selectedCarTypeID, $iRentalPackageId);
    /* changed for rental */ //added by SP on 08-09-2020 bcoz cabo client have issue in hail ride not applied nightsurge charge for 23 to 2 like that time set for diff timezone
    //$data_surgePrice = checkSurgePrice($selectedCarTypeID, $Data['tStartDate'], $iRentalPackageId);
    $data_surgePrice = checkSurgePrice($selectedCarTypeID, "", $iRentalPackageId);
    if ($data_surgePrice['Action'] == "0") {
        if ($data_surgePrice['message'] == "LBL_PICK_SURGE_NOTE") {
            $fPickUpPrice = $data_surgePrice['SurgePriceValue'];
        } else {
            $fNightPrice = $data_surgePrice['SurgePriceValue'];
        }
    }
    if ($APPLY_SURGE_ON_FLAT_FARE == "No" && $data_flattrip['eFlatTrip'] == "Yes") {
        $fPickUpPrice = $fNightPrice = 1;
    }
    $fpickupsurchargefare = $fdropoffsurchargefare = 0;
    if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
        $GetVehicleIdfromGeoLocation = CheckSurgeAirportFromGeoLocation($sourceLocationArr, $destinationLocationArr, $selectedCarTypeID);
        $fpickupsurchargefare = $GetVehicleIdfromGeoLocation['fpickupsurchargefare'];
        $fdropoffsurchargefare = $GetVehicleIdfromGeoLocation['fdropoffsurchargefare'];
    }
    $Data['eFlatTrip'] = $data_flattrip['eFlatTrip'];
    $Data['fFlatTripPrice'] = $data_flattrip['Flatfare'];
    $Data['fPickUpPrice'] = $fPickUpPrice;
    $Data['fNightPrice'] = $fNightPrice;
    $Data['fAirportPickupSurge'] = $fpickupsurchargefare;
    $Data['fAirportDropoffSurge'] = $fdropoffsurchargefare;
    $Data['vTimeZone'] = $vTimeZone;
    /* added for rental */
    $Data['iRentalPackageId'] = $iRentalPackageId;
    $Data['eWalletDebitAllow'] = "No";
    $id = $obj->MySQLQueryPerform("trips", $Data, 'insert');
    //update insurance log
    if ($PACKAGE_TYPE == "SHARK") {
        $details_arr['iTripId'] = $id;
        $details_arr['LatLngArr']['vLatitude'] = $PickUpLatitude;
        $details_arr['LatLngArr']['vLongitude'] = $PickUpLongitude;
        // $details_arr['LatLngArr']['vLocation'] = $Source_point_Address;
        update_driver_insurance_status($driverId, "Accept", $details_arr, "GenerateTrip");
    }
    //update insurance log
    return $id;
}

function UpdateOtherLanguage($vLabel, $vValue, $vLangCode, $tablename)
{
    global $obj;
    $sql = "SELECT vCode,vLangCode FROM `language_master` where vCode!='" . $vLangCode . "' ORDER BY `iDispOrder`";
    $db_master = $obj->MySQLSelect($sql);
    $count_all = count($db_master);
    if ($count_all > 0) {
        for ($i = 0; $i < $count_all; $i++) {
            $vCode = $db_master[$i]['vCode'];
            $vGmapCode = $db_master[$i]['vLangCode'];
            $url = 'http://api.mymemory.translated.net/get?q=' . urlencode($vValue) . '&de=harshilmehta1982@gmail.com&langpair=en|' . $vGmapCode;
            $result = file_get_contents($url);
            $finalResult = json_decode($result);
            $getText = $finalResult->responseData;
            $resulttext = $getText->translatedText;
            if ($resulttext == "") {
                $resulttext = $vValue;
            }
            $db_language_label = $obj->MySQLSelect("SELECT LanguageLabelId FROM $tablename where vLabel = '" . $vLabel . "' AND vCode = '" . $vCode . "'");
            $count = count($db_language_label);
            if ($count > 0) {
                $where = " LanguageLabelId = '" . $db_language_label[0]['LanguageLabelId'] . "'";
                $data_update['vValue'] = $resulttext;
                $obj->MySQLQueryPerform($tablename, $data_update, 'update', $where);
            }
        }
    }
    return $count_all;
}

function FetchTollPrice($from_Currency, $to_Currency, $amount)
{
    $forignalamount = $amount;
    $amount = urlencode($amount);
    $from_Currency = urlencode($from_Currency);
    $to_Currency = urlencode($to_Currency);
    //$url = "http://www.google.com/finance/converter?a=$amount&from=$from_Currency&to=$to_Currency";
    $url = "https://finance.google.com/finance/converter?a=$amount&from=$from_Currency&to=$to_Currency";
    $ch = curl_init();
    $timeout = 0;
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    //curl_setopt ($ch, CURLOPT_USERAGENT,"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)");
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
    $rawdata = curl_exec($ch);
    curl_close($ch);
    $data = explode('bld>', $rawdata);
    $data = explode($to_Currency, $data[1]);
    $ftollprice = round($data[0], 2);
    if ($ftollprice == 0 || $ftollprice == 0.00) {
        $ftollprice = $amount;
    }
    //return round($data[0], 2);
    return $ftollprice;
}

function Updateuserlocationdatetime($iMemberId, $user_type = "Passenger", $vTimeZone)
{
    global $obj;
    if ($user_type == "Passenger") {
        $tableName = "register_user";
        $iUserId = 'iUserId';
    } else {
        $tableName = "register_driver";
        $iUserId = 'iDriverId';
    }
    $systemTimeZone = date_default_timezone_get();
    $currentdate = @date("Y-m-d H:i:s");
    // $tLocationUpdateDate = converToTz($currentdate,$systemTimeZone,$vTimeZone);
    $tLocationUpdateDate = $currentdate;
    $where = " $iUserId = '$iMemberId' ";
    $Data_update['vTimeZone'] = $vTimeZone;
    $Data_update['tLocationUpdateDate'] = $tLocationUpdateDate;
    $obj->MySQLQueryPerform($tableName, $Data_update, 'update', $where);
    return true;
}

function getusertripsourcelocations($iMemberId, $type = "SourceLocation")
{
    global $obj;
    $ssql = "";
    if ($type == "SourceLocation") {
        $fields = "tStartLat,tStartLong,tSaddress";
        $ssql .= " AND tStartLat!='' AND tStartLong!='' AND tSaddress!='' AND eSystem='General'";
    } else {
        $fields = "tEndLat,tEndLong,tDaddress";
        $ssql .= "AND eType != 'UberX' AND tEndLat!='' AND tEndLong!='' AND tDaddress!='' AND eSystem='General'";
    }
    $db_passenger_source = $obj->MySQLSelect("SELECT $fields FROM trips where iUserId = '" . $iMemberId . "' AND iActive = 'Finished' $ssql ORDER BY iTripId DESC");
    if (count($db_passenger_source) > 0) {
        $db_passenger_source = array_slice($db_passenger_source, 0, 5);
    } else {
        $db_passenger_source = array();
    }
    return $db_passenger_source;
}

function fetchtripstatustimeinterval()
{
    global $obj, $FETCH_TRIP_STATUS_TIME_INTERVAL, $PACKAGE_TYPE;
    $range = "";
    if ($PACKAGE_TYPE == "SHARK") {
        global $Data, $POOL_ENABLE;
        include_once("include/include_webservice_sharkfeatures.php");
        $range = fetchtripstatustimeintervalForPool();
    }
    if ($range == "") {
        $FETCH_TRIP_STATUS_TIME_INTERVAL_ARR = explode("-", $FETCH_TRIP_STATUS_TIME_INTERVAL);
        $FETCH_TRIP_STATUS_TIME_INTERVAL_MIN = $FETCH_TRIP_STATUS_TIME_INTERVAL_ARR[0];
        $FETCH_TRIP_STATUS_TIME_INTERVAL_MIN = $FETCH_TRIP_STATUS_TIME_INTERVAL_MIN - 4;
        if ($FETCH_TRIP_STATUS_TIME_INTERVAL_MIN < 15) {
            $FETCH_TRIP_STATUS_TIME_INTERVAL_MIN = 15;
        }
        $FETCH_TRIP_STATUS_TIME_INTERVAL_MAX = $FETCH_TRIP_STATUS_TIME_INTERVAL_ARR[1];
        $range = rand($FETCH_TRIP_STATUS_TIME_INTERVAL_MIN, $FETCH_TRIP_STATUS_TIME_INTERVAL_MAX);
    }
    return $range;
}

function fetchtripstatustimeMAXinterval()
{
    global $obj, $FETCH_TRIP_STATUS_TIME_INTERVAL;
    $FETCH_TRIP_STATUS_TIME_INTERVAL_ARR = explode("-", $FETCH_TRIP_STATUS_TIME_INTERVAL);
    $FETCH_TRIP_STATUS_TIME_INTERVAL_MAX = $FETCH_TRIP_STATUS_TIME_INTERVAL_ARR[1];
    return $FETCH_TRIP_STATUS_TIME_INTERVAL_MAX;
}

function CheckAvailableTimes($str)
{
    if ($str != "") {
        $str = str_replace("00", "12", $str);
        $strArr = explode(",", $str);
        $returnArr = array();
        for ($i = 0; $i < count($strArr); $i++) {
            $number = $strArr[$i];
            $numberArr = explode("-", $number);
            $number1 = $numberArr[0];
            $number2 = $numberArr[1];
            $number1 = str_pad($number1, 2, '0', STR_PAD_LEFT);
            $number2 = str_pad($number2, 2, '0', STR_PAD_LEFT);
            $finalnumber = $number1 . "-" . $number2;
            $returnArr[] = $finalnumber;
        }
        $vAvailableTimes = implode(",", $returnArr);
    } else {
        $vAvailableTimes = "";
    }
    return $vAvailableTimes;
}

function contains($point, $polygon)
{
    if ($polygon[0] != $polygon[count($polygon) - 1]) $polygon[count($polygon)] = $polygon[0];
    $j = 0;
    $oddNodes = false;
    $x = $point[1];
    $y = $point[0];
    $n = count($polygon);
    for ($i = 0; $i < $n; $i++) {
        $j++;
        if ($j == $n) {
            $j = 0;
        }
        if ((($polygon[$i][0] < $y) && ($polygon[$j][0] >= $y)) || (($polygon[$j][0] < $y) && ($polygon[$i][0] >= $y))) {
            if ($polygon[$i][1] + ($y - $polygon[$i][0]) / ($polygon[$j][0] - $polygon[$i][0]) * ($polygon[$j][1] - $polygon[$i][1]) < $x) {
                $oddNodes = !$oddNodes;
            }
        }
    }
    return $oddNodes;
}

function FetchVehicleTypeFromGeoLocation($Address_Array)
{
    global $obj;
    $Vehicle_Str = "-1";
    if (!empty($Address_Array)) {
        $allowed_data = $obj->MySQLSelect("SELECT * FROM location_master WHERE eStatus='Active' AND eFor = 'VehicleType'");
        if (!empty($allowed_data)) {
            $polygon = array();
            foreach ($allowed_data as $key => $val) {
                $latitude = explode(",", $val['tLatitude']);
                $longitude = explode(",", $val['tLongitude']);
                for ($x = 0; $x < count($latitude); $x++) {
                    if (!empty($latitude[$x]) || !empty($longitude[$x])) {
                        $polygon[$key][] = array($latitude[$x], $longitude[$x]);
                    }
                }
                //print_r($polygon[$key]);
                if ($polygon[$key]) {
                    $address = contains($Address_Array, $polygon[$key]) ? 'IN' : 'OUT';
                    if ($address == 'IN') {
                        $Vehicle_Str .= "," . $val['iLocationId'];
                        //break;
                    }
                }
            }
        }
    }
    return $Vehicle_Str;
}

function ShowBookingDetails($iCabBookingIds)
{
    global $obj, $userDetailsArr, $vSystemDefaultCurrencyName, $currencyAssociateArr, $LANG_OBJ;
    //Added By HJ On 06-07-2020 For Optimize For Loop Query Start
    $finalReturnArr = $driverIdArr = $driverVehicleArr = $driverVehicleIdArr = $serviceProAmtArr = $langCodeArr = $vehicleCateDataArr = $vehicleIdArr = array();
    $db_booking = $obj->MySQLSelect("SELECT * FROM `cab_booking` WHERE iCabBookingId IN ($iCabBookingIds)");
    $serverTimeZone = date_default_timezone_get();
    $lcodeDefault = $LANG_OBJ->FetchDefaultLangData("vCode");
    $langCodeArr[] = $lcodeDefault;
    for ($g = 0; $g < count($db_booking); $g++) {
        $userId = $db_booking[$g]['iUserId'];
        //Added By HJ On 20-06-2020 For Optimization register_user Table Query Start
        if (isset($userDetailsArr["register_user_" . $userId])) {
            $row = $userDetailsArr["register_user_" . $userId];
        } else {
            $row = $obj->MySQLSelect("SELECT * FROM register_user WHERE iUserId='" . $userId . "'");
            $userDetailsArr["register_user_" . $userId] = $row;
        }
        $lang = $row[0]['vLang'];
        if ($lang == "" || $lang == NULL) {
            $langCodeArr[] = $lang;
        }
        if ($db_booking[$g]['iDriverId'] > 0) {
            $driverIdArr[] = $db_booking[$g]['iDriverId'];
        }
    }
    if (count($driverIdArr) > 0) {
        $driverIds = implode(",", $driverIdArr);
        $db_drv_vehicle = $obj->MySQLSelect("SELECT iDriverVehicleId,iDriverId from driver_vehicle WHERE iDriverId IN ($driverIds)");
        for ($d = 0; $d < count($db_drv_vehicle); $d++) {
            $driverVehicleArr[$db_drv_vehicle[$d]['iDriverId']] = $db_drv_vehicle[$d]['iDriverVehicleId'];
            $driverVehicleIdArr[] = $db_drv_vehicle[$d]['iDriverVehicleId'];
        }
    }
    $driverVehicleIdArr = array_unique($driverVehicleIdArr);
    if (count($driverVehicleIdArr) > 0) {
        $iDriverVehicleIds = implode(",", $driverVehicleIdArr);
        $serviceProData = $obj->MySQLSelect("SELECT iDriverVehicleId,iVehicleTypeId,fAmount FROM `service_pro_amount` WHERE iDriverVehicleId IN ($iDriverVehicleIds)");
        for ($b = 0; $b < count($serviceProData); $b++) {
            $serviceProAmtArr[$serviceProData[$b]['iDriverVehicleId']][$serviceProData[$b]['iVehicleTypeId']] = $serviceProData[$b]['fAmount'];
        }
    }
    $langCodeArr = array_unique($langCodeArr);
    $sql_vehicle_category_table_name = getVehicleCategoryTblName();
    $vehicleTypeIdArr = $typeDataAssocArr = $catDataAssocArr = array();
    for ($h = 0; $h < count($db_booking); $h++) {
        $vehicleTypeIdArr[] = $db_booking[$h]['iVehicleTypeId'];
    }
    if (count($vehicleTypeIdArr) > 0) {
        $vehicleTypeIdArr = array_unique($vehicleTypeIdArr);
        $implodeIds = "0," . implode(",", $vehicleTypeIdArr);
        //echo "<pre>";print_r($implodeIds);die;
        $Data = $obj->MySQLSelect("SELECT vc.iVehicleCategoryId, vc.iParentId,vc.vCategory_" . $lang . " as vCategory, vc.vCategoryTitle_" . $lang . " as vCategoryTitle, vc.tCategoryDesc_" . $lang . " as tCategoryDesc, vc.ePriceType, vt.vVehicleType_" . $lang . " as vVehicleType, vt.eFareType, vt.fFixedFare, vt.fPricePerHour, vt.fPricePerKM, vt.fPricePerMin, vt.iBaseFare,vt.fCommision, vt.iMinFare,vt.iPersonSize, vt.vLogo as vVehicleTypeImage, vt.eType, vt.eIconType, vt.eAllowQty, vt.iMaxQty, vt.iVehicleTypeId, fFixedFare FROM " . $sql_vehicle_category_table_name . " as vc LEFT JOIN vehicle_type AS vt ON vt.iVehicleCategoryId = vc.iVehicleCategoryId WHERE vt.iVehicleTypeId IN ($implodeIds)");
        ///echo "<pre>23";print_r($Data);die;
        for ($n = 0; $n < count($Data); $n++) {
            $typeDataAssocArr[$Data[$n]['iVehicleTypeId']][] = $Data[$n];
        }
        $data_category_tmp_price = $obj->MySQLSelect("SELECT iVehicleCategoryId,ePriceType,vCategory_" . $lang . " as vCategory FROM " . $sql_vehicle_category_table_name);
        for ($x = 0; $x < count($data_category_tmp_price); $x++) {
            $catDataAssocArr[$data_category_tmp_price[$x]['iVehicleCategoryId']] = $data_category_tmp_price[$x];
        }
    }
    //Added By HJ On 06-07-2020 For Optimize For Loop Query End
    for ($h = 0; $h < count($db_booking); $h++) {
        $returnArr = array();
        $iCabBookingId = $db_booking[$h]['iCabBookingId'];
        $db_booking[$h]['dBooking_dateOrig'] = converToTz($db_booking[$h]['dBooking_date'], $db_booking[$h]['vTimeZone'], $serverTimeZone);
        $seldatetime = $db_booking[$h]['dBooking_dateOrig'];
        $selecteddate = date("Y-m-d", strtotime($seldatetime));
        $newdate = explode(" ", $seldatetime);
        $time_in_12_hour_format = date("a", strtotime($seldatetime));
        $timearr = explode(":", $newdate[1]);
        $timearr1 = $timearr[0];
        $timearr1 = $timearr1 % 12;
        $timearr2 = $timearr1 + 1;
        $number1 = str_pad($timearr1, 2, '0', STR_PAD_LEFT);
        $number2 = str_pad($timearr2, 2, '0', STR_PAD_LEFT);
        $selectedtime = $number1 . "-" . $number2 . " " . $time_in_12_hour_format;
        $scheduletime1 = $timearr[0];
        $scheduletime2 = $scheduletime1 + 1;
        $scheduletime1 = str_pad($scheduletime1, 2, '0', STR_PAD_LEFT);
        $scheduletime2 = str_pad($scheduletime2, 2, '0', STR_PAD_LEFT);
        $scheduledate = $selecteddate . " " . $scheduletime1 . "-" . $scheduletime2;
        $userId = $db_booking[$h]['iUserId'];
        //Added By HJ On 20-06-2020 For Optimization register_user Table Query Start
        if (isset($userDetailsArr["register_user_" . $userId])) {
            $row = $userDetailsArr["register_user_" . $userId];
        } else {
            $row = $obj->MySQLSelect("SELECT * FROM register_user WHERE iUserId='" . $userId . "'");
            $userDetailsArr["register_user_" . $userId] = $row;
        }
        $lang = $row[0]['vLang'];
        if ($lang == "" || $lang == NULL) {
            //Added By HJ On 04-07-2020 For Optimize language_master Table Query Start
            $lang = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 04-07-2020 For Optimize language_master Table Query End
        }
        $vCurrencyPassenger = $row[0]['vCurrencyPassenger'];
        if ($vCurrencyPassenger == "" || $vCurrencyPassenger == NULL) {
            //Added By HJ On 04-07-2020 For Optimization currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName)) {
                $vCurrencyPassenger = $vSystemDefaultCurrencyName;
            } else {
                $vCurrencyPassenger = get_value('currency', 'vName', 'eDefault', 'Yes', '', 'true');
            }
            //Added By HJ On 04-07-2020 For Optimization currency Table Query End
        }
        //Added By HJ On 04-07-2020 For Optimization currency Table Query Start
        $UserCurrencyData = $db_drv_vehicle = array();
        if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
            $userCurrencyData = $currencyAssociateArr[$vCurrencyPassenger];
            $UserCurrencyData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $UserCurrencyData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        } else {
            $UserCurrencyData = $obj->MySQLSelect("SELECT vSymbol,Ratio FROM currency WHERE vName='" . $vCurrencyPassenger . "'");
        }
        //Added By HJ On 04-07-2020 For Optimization currency Table Query End
        $priceRatio = $UserCurrencyData[0]['Ratio'];
        $vSymbol = $UserCurrencyData[0]['vSymbol'];
        $driverId = $db_booking[$h]['iDriverId'];
        $iDriverVehicleId = $iVehicleTypeId = 0;
        if (isset($driverVehicleArr[$driverId])) {
            $iDriverVehicleId = $driverVehicleArr[$driverId];
            $iVehicleTypeId = $db_booking[$h]['iVehicleTypeId'];
        }
        $tVehicleTypeDataArr = array();
        if ($db_booking[$h]['tVehicleTypeData'] != "" /* && $iVehicleTypeId == 0 */) {
            $tVehicleTypeDataArr = (array)json_decode($db_booking[$h]['tVehicleTypeData']);
            if (count($tVehicleTypeDataArr) > 0) {
                $tmpTVehicleTypeDataArr = (array)$tVehicleTypeDataArr[0];
                $iVehicleTypeId = $tmpTVehicleTypeDataArr['iVehicleTypeId'];
            }
        }
        //Added By HJ On 06-07-2020 For Optimize For Loop Query Start
        $Data = array();
        if (isset($typeDataAssocArr[$iVehicleTypeId])) {
            $Data = $typeDataAssocArr[$iVehicleTypeId];
        }
        //Added By HJ On 06-07-2020 For Optimize For Loop Query End
        $iParentId = 0;
        if (isset($Data[0]['iParentId']) && $Data[0]['iParentId'] > 0) {
            $iParentId = $Data[0]['iParentId'];
        }
        if (isset($Data[0]['ePriceType']) && $iParentId == 0) {
            $ePriceType = $Data[0]['ePriceType'];
        } else {
            $data_category_tmp_price = array();
            if (isset($catDataAssocArr[$iParentId])) {
                $data_category_tmp_price[] = $catDataAssocArr[$iParentId];
            }
            $ePriceType = "";
            if (isset($data_category_tmp_price[0]['ePriceType'])) {
                $ePriceType = $data_category_tmp_price[0]['ePriceType'];
            }
            //Added By HJ On 06-07-2020 For Optimize For Loop Query End
            if (count($tVehicleTypeDataArr) > 0) {
                $Data[0]['vCategory'] = $data_category_tmp_price[0]['vCategory'];
            }
        }
        $ALLOW_SERVICE_PROVIDER_AMOUNT = $ePriceType == "Provider" ? "Yes" : "No";
        $fAmount = 0;
        if (isset($Data[0]['eFareType']) && $Data[0]['eFareType'] == "Fixed") {
            //$fAmount = $vCurrencySymbol.$vehicleTypeData[0]['fFixedFare'];
            $fAmount = $Data[0]['fFixedFare'];
        } else if (isset($Data[0]['eFareType']) && $Data[0]['eFareType'] == "Hourly") {
            //$fAmount = $vCurrencySymbol.$vehicleTypeData[0]['fPricePerHour']."/hour";
            $fAmount = $Data[0]['fPricePerHour'];
        }
        $iPrice = $fAmount;
        if ($ALLOW_SERVICE_PROVIDER_AMOUNT == "Yes") {
            if (isset($serviceProAmtArr[$iDriverVehicleId][$iVehicleTypeId]) && $serviceProAmtArr[$iDriverVehicleId][$iVehicleTypeId] > 0) {
                $fAmount = $serviceProAmtArr[$iDriverVehicleId][$iVehicleTypeId];
            } else {
                $fAmount = $iPrice;
            }
            $iPrice = $fAmount;
        }
        $returnArr['selectedtime'] = $selectedtime; // 01-02 am
        $returnArr['selecteddatetime'] = $scheduledate; // 2017-10-25 01-02
        $eFareType = "Regular";
        if (isset($Data[0]['eFareType'])) {
            $eFareType = $Data[0]['eFareType'];
        }
        $vVehicleType = "";
        if (isset($Data[0]['vVehicleType'])) {
            $vVehicleType = $Data[0]['vVehicleType'];
        }
        $returnArr['SelectedFareType'] = $eFareType;
        $returnArr['SelectedQty'] = $db_booking[$h]['iQty'];
        $returnArr['SelectedPrice'] = $iPrice;
        $returnArr['SelectedCurrencySymbol'] = $vSymbol;
        $returnArr['SelectedCurrencyRatio'] = $priceRatio;
        $returnArr['SelectedVehicle'] = $vVehicleType;
        $returnArr['SelectedCategory'] = "";
        $returnArr['SelectedCategoryId'] = "";
        $returnArr['SelectedCategoryTitle'] = "";
        $returnArr['SelectedCategoryDesc'] = "";
        $returnArr['SelectedAllowQty'] = "";
        $returnArr['SelectedPriceType'] = "";
        if(!empty($Data)) {
            $returnArr['SelectedCategory'] = $Data[0]['vCategory'];
            $returnArr['SelectedCategoryId'] = $Data[0]['iVehicleCategoryId'];
            $returnArr['SelectedCategoryTitle'] = $Data[0]['vCategoryTitle'];
            $returnArr['SelectedCategoryDesc'] = $Data[0]['tCategoryDesc'];
            $returnArr['SelectedAllowQty'] = $Data[0]['eAllowQty'];
            $returnArr['SelectedPriceType'] = $Data[0]['ePriceType'];
        }
        
        $returnArr['ALLOW_SERVICE_PROVIDER_AMOUNT'] = $ALLOW_SERVICE_PROVIDER_AMOUNT;
        $finalReturnArr[$iCabBookingId] = $returnArr;
    }
    return $finalReturnArr;
}

function getTripChatDetails($iTripId)
{
    global $obj, $tconfig, $FIREBASE_DEFAULT_URL, $FIREBASE_DEFAULT_TOKEN, $GOOGLE_SENDER_ID;
    require_once('assets/libraries/firebase/src/firebaseInterface.php');
    require_once('assets/libraries/firebase/src/firebaseLib.php');
    $DEFAULT_PATH = $GOOGLE_SENDER_ID . "-chat";
    $firebase = new \Firebase\FirebaseLib($FIREBASE_DEFAULT_URL, $FIREBASE_DEFAULT_TOKEN);
    $fetch = $firebase->get($DEFAULT_PATH . '/' . $iTripId . '-Trip'); // reads value from Firebase
    $fetchdeco = json_decode($fetch);
    foreach ($fetchdeco as $Tripobj) {
        $Data['iTripId'] = $Tripobj->iTripId;
        $Data['tMessage'] = $Tripobj->Text;
        $iUserId = $Tripobj->passengerId;
        $iDriverId = $Tripobj->driverId;
        $Data['dAddedDate'] = @date("Y-m-d H:i:s");
        $eUserType = $Tripobj->eUserType;
        $Data['eUserType'] = $eUserType;
        $Data['eStatus'] = "Unread";
        $Data['iFromMemberId'] = ($eUserType == "Passenger") ? $iUserId : $iDriverId;
        $Data['iToMemberId'] = ($eUserType == "Passenger") ? $iDriverId : $iUserId;
        $id = $obj->MySQLQueryPerform("trip_messages", $Data, 'insert');
    }
    $delchat = $firebase->delete($DEFAULT_PATH . '/' . $iTripId . '-Trip'); // deletes value from Firebase
    return $iTripId;
}

function CalculateMemberAvgRating($iMemberId, $eFor = "Passenger", $date = "", $enddate = "")
{
    global $obj;
    $ssql = "";
    if ($eFor == "Passenger") {
        $UserType = "Driver";
        $iUserId = "iUserId";
        $ssql .= "AND tr.iUserId = '" . $iMemberId . "' AND rsu.eToUserType = '".$eFor."'";
    } else {
        $UserType = "Passenger";
        $iUserId = "iDriverId";
        $ssql .= "AND tr.iDriverId = '" . $iMemberId . "' AND rsu.eToUserType = '".$eFor."'";
    }
    /*if ($date != "") {
        if ($date != "" && $enddate != "") {
            $ssql .= " AND tr.tTripRequestDate BETWEEN '" . $date . "' AND '" . $enddate . "' ";
        } else {
            $ssql .= " AND tr.tTripRequestDate LIKE '" . $date . "%' ";
        }
    }*/
    $sqlcount = "SELECT vRating1 FROM ratings_user_driver as rsu LEFT JOIN trips as tr ON rsu.iTripId=tr.iTripId WHERE rsu.eUserType='" . $UserType . "' AND tr.eHailTrip = 'No' AND (tr.eBookingFrom != 'Hotel' OR tr.eBookingFrom != 'Kiosk') And tr.iActive = 'Finished' AND rsu.vRating1 != '' AND rsu.eStatus != 'Deleted'  " . $ssql;
    // echo $sqlcount;
    // exit;
    $dbtriprating = $obj->MySQLSelect($sqlcount);
    $avgRating = 0;
    $totalRating = 0;
    $count = count($dbtriprating);
    if (count($dbtriprating) > 0) {
        for ($i = 0; $i < count($dbtriprating); $i++) {
            $vRating1 = $dbtriprating[$i]['vRating1'];
            $totalRating = $totalRating + $vRating1;
        }
        $avgRating = round(($totalRating / $count), 2);
    }
    return round($avgRating, 1);
}

function checkAreaRestriction($Address_Array, $DropOff)
{
    global $obj, $rNGfm99RfAqifzEoqjYY9NPszcDnpChRWu;
    $ssql = "";
    if ($DropOff == "No") {
        $ssql .= " AND (eRestrictType = 'Pick Up' OR eRestrictType = 'All')";
    } else {
        $ssql .= " AND (eRestrictType = 'Drop Off' OR eRestrictType = 'All')";
    }
    if (!empty($Address_Array)) {
        ############### Check For Allow Location ######################################
        if (isset($rNGfm99RfAqifzEoqjYY9NPszcDnpChRWu['restricted_negative_area'])) {
            $getAreaData = $rNGfm99RfAqifzEoqjYY9NPszcDnpChRWu['restricted_negative_area'];
        } else {
            $getAreaData = $obj->MySQLSelect("SELECT eType,eRestrictType,rs.iLocationId,lm.vLocationName,lm.tLatitude,lm.tLongitude FROM `restricted_negative_area` AS rs LEFT JOIN location_master as lm ON lm.iLocationId = rs.iLocationId WHERE rs.eStatus='Active' AND lm.eFor = 'Restrict'");
            $rNGfm99RfAqifzEoqjYY9NPszcDnpChRWu['restricted_negative_area'] = $getAreaData;
        }
        $allowed_data = $disallowed_data = array();
        for ($a = 0; $a < count($getAreaData); $a++) {
            $eRestrictType = $getAreaData[$a]['eRestrictType'];
            $eType = $getAreaData[$a]['eType'];
            if ($DropOff == "No") {
                if (strtoupper($eRestrictType) == "PICK UP" || strtoupper($eRestrictType) == "ALL") {
                    if (strtoupper($eType) == "ALLOWED") {
                        $allowed_data[] = $getAreaData[$a];
                    } else {
                        $disallowed_data[] = $getAreaData[$a];
                    }
                }
            } else {
                if (strtoupper($eRestrictType) == "DROP OFF" || strtoupper($eRestrictType) == "ALL") {
                    if (strtoupper($eType) == "ALLOWED") {
                        $allowed_data[] = $getAreaData[$a];
                    } else {
                        $disallowed_data[] = $getAreaData[$a];
                    }
                }
            }
        }
        //Added By HJ On 20-06-2020 For Optimized restricted_negative_area Table Query End
        ///echo "<pre>";print_r($allowed_data);die;
        if (count($allowed_data) > 0) {
            $allowed_ans = 'No';
            $polygon = array();
            foreach ($allowed_data as $key => $val) {
                $latitude = explode(",", $val['tLatitude']);
                $longitude = explode(",", $val['tLongitude']);
                for ($x = 0; $x < count($latitude); $x++) {
                    if (!empty($latitude[$x]) || !empty($longitude[$x])) {
                        $polygon[$key][] = array($latitude[$x], $longitude[$x]);
                    }
                }
                if ($polygon[$key]) {
                    $address = contains($Address_Array, $polygon[$key]) ? 'IN' : 'OUT';
                    if ($address == 'IN') {
                        $allowed_ans = 'Yes';
                        break;
                    }
                }
            }
        } else {
            $allowed_ans = 'Yes';
        }
        ############### Check For Allow Location ######################################
        ############### Check For DisAllow Location ######################################
        if ($allowed_ans == 'Yes') {
            if (count($disallowed_data) > 0) {
                $allowed_ans = 'Yes';
                $polygon = array();
                foreach ($disallowed_data as $key => $val) {
                    $latitude = explode(",", $val['tLatitude']);
                    $longitude = explode(",", $val['tLongitude']);
                    for ($x = 0; $x < count($latitude); $x++) {
                        if (!empty($latitude[$x]) || !empty($longitude[$x])) {
                            $polygon[$key][] = array($latitude[$x], $longitude[$x]);
                        }
                    }
                    //print_r($polygon[$key]);
                    if ($polygon[$key]) {
                        $address = contains($Address_Array, $polygon[$key]) ? 'IN' : 'OUT';
                        if ($address == 'IN') {
                            $allowed_ans = 'No';
                            break;
                        }
                    }
                }
            } else {
                $allowed_ans = 'Yes';
            }
        }
        ############### Check For DisAllow Location ######################################
    }
    return $allowed_ans;
}

function getMemberCountryTax($iMemberId, $UserType = "Passenger")
{
    global $obj, $countryCodeAdmin;
    $returnArr = array();
    $vCountryfield = "vCountry";
    if (empty($countryCodeAdmin)) {
        if ($UserType == 'Company') {
            $tblname = "company";
            $iUserId = "iCompanyId";
        } else if ($UserType == "Passenger") {
            $tblname = "register_user";
            $iUserId = "iUserId";
        } else {
            $tblname = "register_driver";
            $iUserId = "iDriverId";
        }
        $sqlcountryTax = $obj->MySQLSelect("SELECT COALESCE(co.fTax1, '0') as fTax1,COALESCE(co.fTax2, '0') as fTax2 FROM country as co LEFT JOIN $tblname as ru ON co.vCountryCode = ru.$vCountryfield WHERE $iUserId = '" . $iMemberId . "'");
    } else {
        $sqlcountryTax = $obj->MySQLSelect("SELECT COALESCE(co.fTax1, '0') as fTax1,COALESCE(co.fTax2, '0') as fTax2 FROM country as co WHERE vCountryCode='" . $countryCodeAdmin . "'");
    }
    $fTax1 = $fTax2 = 0;
    if (count($sqlcountryTax) > 0) {
        $fTax1 = $sqlcountryTax[0]['fTax1'];
        $fTax2 = $sqlcountryTax[0]['fTax2'];
    }
    $returnArr['fTax1'] = $fTax1;
    $returnArr['fTax2'] = $fTax2;
    return $returnArr;
}

function FetchMemberCountryData($iMemberId, $UserType = "Passenger", $vTimeZone, $vUserDeviceCountry = "")
{
    global $obj, $tconfig, $DEFAULT_COUNTRY_CODE_WEB, $tconfig, $country_data_retrieve, $userDetailsArr, $userCountryDetailsArr;
    $returnArr = array();
    if ($UserType == "Passenger") {
        $tblname = "register_user";
        $vCountryfield = "vCountry";
        $iUserId = "iUserId";
    } elseif ($UserType == "Tracking") {
        $tblname = "track_service_users";
        $vCountryfield = "vCountry";
        $iUserId = "iTrackServiceUserId";
    } else if ($UserType == "Driver") {
        $tblname = "register_driver";
        $vCountryfield = "vCountry";
        $iUserId = "iDriverId";
    } else {
        $tblname = "company";
        $vCountryfield = "vCountry";
        $iUserId = "iCompanyId";
    }
    $returnArr['vDefaultCountry'] = $returnArr['vDefaultCountryCode'] = $returnArr['vDefaultPhoneCode'] = $returnArr['vDefaultCountryImage'] = $returnArr['tRegistrationDate'] = '';
    // Added By HJ On 04-06-2020 For Optimized Country Table Query Start
    $countryCodeArr = $sqlcountryCode = $countryDataArr = array();
    for ($d = 0; $d < count($country_data_retrieve); $d++) {
        if (strtoupper($country_data_retrieve[$d]['eStatus']) == "ACTIVE") {
            $dataArr = array();
            $dataArr['vDefaultCountry'] = $dataArr['vCountry'] = $country_data_retrieve[$d]['vCountry'];
            $dataArr['vDefaultCountryCode'] = $dataArr['vCountryCode'] = $country_data_retrieve[$d]['vCountryCode'];
            $dataArr['vDefaultPhoneCode'] = $dataArr['vPhoneCode'] = $country_data_retrieve[$d]['vPhoneCode'];
            $dataArr['vRImage'] = $country_data_retrieve[$d]['vRImage'];
            $dataArr['vSImage'] = $country_data_retrieve[$d]['vSImage'];
            $dataArr['vTimeZone'] = $country_data_retrieve[$d]['vTimeZone'];
            $countryDataArr[$country_data_retrieve[$d]['vCountryCode']] = $dataArr;
        }
    }
    if ($vTimeZone != "") {
        foreach ($countryDataArr as $key => $val) {
            if (strtoupper($val['vTimeZone']) == strtoupper($vTimeZone)) {
                $sqlcountryCode[] = $val;
            }
        }
        //$sql = "SELECT vCountry as vDefaultCountry, vCountryCode as vDefaultCountryCode, vPhoneCode as vDefaultPhoneCode FROM country WHERE vTimeZone = '" . $vTimeZone . "' AND eStatus = 'Active'";
        //$sqlcountryCode = $obj->MySQLSelect($sql);
    }
    // Added By HJ On 04-06-2020 For Optimized Country Table Query ENd

    if ($iMemberId > 0) {
        if (isset($userCountryDetailsArr[$tblname . "_" . $iMemberId]) && count($userCountryDetailsArr[$tblname . "_" . $iMemberId]) > 0) {
            $datac = $userCountryDetailsArr[$tblname . "_" . $iMemberId];
            $vCountry = $datac[0][$vCountryfield];
        } else {
            $datac = $obj->MySQLSelect("SELECT $vCountryfield as vCountry, tRegistrationDate FROM $tblname WHERE $iUserId = '" . $iMemberId . "'");
            $userCountryDetailsArr[$tblname . "_" . $iMemberId] = $datac;
            $vCountry = $datac[0]['vCountry'];
        }
        
        $sqlcountryCode = array();
        foreach ($countryDataArr as $key => $val) {
            if (strtoupper($val['vCountryCode']) == strtoupper($vCountry)) {
                $sqlcountryCode[] = $val;
            }
        }
        $returnArr['tRegistrationDate'] = $datac[0]['tRegistrationDate'];
    }

    if (!empty($sqlcountryCode) && count($sqlcountryCode) > 0) {
        $returnArr = $sqlcountryCode[0];
        if ($iMemberId > 0) {
            $returnArr['tRegistrationDate'] = $datac[0]['tRegistrationDate'];
        }
    } else {
        if ($vUserDeviceCountry != "") {
            $vUserDeviceCountry = strtoupper($vUserDeviceCountry);
            if (isset($countryDataArr[$vUserDeviceCountry])) {
                $sqlusercountryCode = array();
                $sqlusercountryCode[] = $countryDataArr[$vUserDeviceCountry];
            } else {
                $sqlusercountryCode = $obj->MySQLSelect("SELECT vCountry as vDefaultCountry, vCountryCode as vDefaultCountryCode, vPhoneCode as vDefaultPhoneCode FROM country WHERE vCountryCode = '" . $vUserDeviceCountry . "' AND eStatus = 'Active'");
            }
            if (!empty($sqlusercountryCode) && count($sqlusercountryCode) > 0) {
                $returnArr = $sqlusercountryCode[0];
            } else {
                if (isset($countryDataArr[$DEFAULT_COUNTRY_CODE_WEB])) {
                    $sqlcountryCode = array();
                    $sqlcountryCode[] = $countryDataArr[$DEFAULT_COUNTRY_CODE_WEB];
                } else {
                    $sqlcountryCode = $obj->MySQLSelect("SELECT vCountry as vDefaultCountry, vCountryCode as vDefaultCountryCode, vPhoneCode as vDefaultPhoneCode FROM country WHERE vCountryCode = '" . $DEFAULT_COUNTRY_CODE_WEB . "'");
                }
                if (count($sqlcountryCode) > 0) {
                    $returnArr = $sqlcountryCode[0];
                }
            }
        } else {
            if (isset($countryDataArr[$DEFAULT_COUNTRY_CODE_WEB])) {
                $sqlcountryCode = array();
                $sqlcountryCode[] = $countryDataArr[$DEFAULT_COUNTRY_CODE_WEB];
            } else {
                $sqlcountryCode = $obj->MySQLSelect("SELECT vCountry as vDefaultCountry, vCountryCode as vDefaultCountryCode, vPhoneCode as vDefaultPhoneCode FROM country WHERE vCountryCode = '" . $DEFAULT_COUNTRY_CODE_WEB . "'");
            }
            if (!empty($sqlcountryCode) && count($sqlcountryCode) > 0) {
                $returnArr = $sqlcountryCode[0];
            }
        }
    }
    $vCountry = $returnArr['vDefaultCountryCode'];
    //added by SP for getting user wise image on 6-9-2019
    //Added Bu HJ On 09-07-2020 For Optimization Start

    //$sqlc = "SELECT $vCountryfield as vCountry FROM $tblname WHERE $iUserId = '" . $iMemberId . "'";
    //$datac = $obj->MySQLSelect($sqlc);
    if (isset($countryDataArr[$vCountry])) {
        $datacode = array();
        $datacode[] = $countryDataArr[$vCountry];
    } else {
        $datacode = $obj->MySQLSelect("SELECT vCountry as vCountry, vCountryCode as vCountryCode, vPhoneCode as vPhoneCode,vRImage,vSImage FROM country WHERE vCountryCode = '" . $vCountry . "' AND eStatus = 'Active'");
    }
    //Added Bu HJ On 09-07-2020 For Optimization End
    //$sqlcd = "SELECT vCountry as vCountry, vCountryCode as vCountryCode, vPhoneCode as vPhoneCode,vRImage,vSImage FROM country WHERE vCountryCode = '" . $datac[0]['vCountry'] . "'";
    //$datacode = $obj->MySQLSelect($sqlcd);
    //$temp_image = checkimgexist("webimages/icons/country_flags/" . strtolower($datacode[0]['vCountryCode']) . "_r.png", '1');
    $temp_image = checkimgexist("webimages/icons/country_flags/" . $datacode[0]['vRImage'], '1');
    $returnArr['vRImageMember'] = $temp_image; //added by SP for country image related changes on 05-08-2019
    //$temp_image = checkimgexist("webimages/icons/country_flags/" . strtolower($datacode[0]['vCountryCode']) . "_s.png", '2');
    $temp_image = checkimgexist("webimages/icons/country_flags/" . $datacode[0]['vSImage'], '2');
    $returnArr['vSImageMember'] = $temp_image; //added by SP for country image related changes on 05-08-2019
    $temp_image = checkimgexist("webimages/icons/country_flags/" . strtolower($returnArr['vDefaultCountryCode']) . "_r.png", '1');
    $returnArr['vRImage'] = $temp_image; //added by SP for country image related changes on 05-08-2019
    $temp_image = checkimgexist("webimages/icons/country_flags/" . strtolower($returnArr['vDefaultCountryCode']) . "_s.png", '2');
    $returnArr['vSImage'] = $temp_image; //added by SP for country image related changes on 05-08-2019
    if (empty($datac[0]['vCountry'])) { //added by SP for when country is not inserted for the particular user as like FB user then we will overwrite it as default country image on 04-10-2019
        $returnArr['vRImageMember'] = $returnArr['vRImage'];
        $returnArr['vSImageMember'] = $returnArr['vSImage'];
    }
    $temp_image = checkimgexist("webimages/icons/country_flags/" . strtolower($returnArr['vDefaultCountryCode']) . "_s.png", "2");
    $returnArr['vDefaultCountryImage'] = $temp_image; //added by SP for country image related changes on 06-08-2019
    return $returnArr;
}

function getMemberCountryPoliceNumber($iMemberId, $UserType = "Passenger", $vCountry)
{
    global $obj, $SITE_POLICE_CONTROL_NUMBER, $userDetailsArr, $country_data_arr;
    if ($vCountry != "") {
        if ($UserType == "Passenger") {
            $tblname = "register_user";
            $vCountryfield = "vCountry";
            $iUserId = "iUserId";
        } elseif ($UserType == "Tracking") {
            $tblname = "track_service_users";
            $vCountryfield = "vCountry";
            $iUserId = "iTrackServiceUserId";
        } else if ($UserType == "Driver") {
            $tblname = "register_driver";
            $vCountryfield = "vCountry";
            $iUserId = "iDriverId";
        } else {
            $tblname = "company";
            $vCountryfield = "vCountry";
            $iUserId = "iCompanyId";
        }
        //Added By HJ On 09-07-2020 For Optimize register_driver/register_user/company Table Query Start
        if (isset($userDetailsArr[$tblname . '_' . $iMemberId])) {
            $Data = $userDetailsArr[$tblname . '_' . $iMemberId];
        } else {
            $Data = $obj->MySQLSelect("SELECT *,$iUserId as iMemberId FROM " . $tblname . " WHERE $iUserId='" . $iMemberId . "'");
            $userDetailsArr[$tblname . '_' . $iMemberId] = $Data;
        }
        //Added By HJ On 09-07-2020 For Optimize register_driver/register_user/company Table Query End
        //Added By HJ On 09-07-2020 For Optimize country Table Query Start
        $vCountryCode = $Data[0]['vCountry'];
        if (isset($country_data_arr[$vCountryCode])) {
            $Country_Police_Number = $country_data_arr[$vCountryCode]['vEmergencycode'];
        } else {
            $db_sql = $obj->MySQLSelect("SELECT vEmergencycode FROM country WHERE vCountryCode='" . $vCountryCode . "'");
            $Country_Police_Number = $db_sql[0]['vEmergencycode'];
        }
        //$sql = "SELECT co.vEmergencycode FROM country as co LEFT JOIN $tblname as rd ON co.vCountryCode = rd.$vCountryfield WHERE $iUserId = '" . $iMemberId . "'";
        //$db_sql = $obj->MySQLSelect($sql);
        //$Country_Police_Number = $db_sql[0]['vEmergencycode'];
        //Added By HJ On 09-07-2020 For Optimize country Table Query End
        if ($Country_Police_Number == "" || $Country_Police_Number == NULL) {
            $Country_Police_Number = $SITE_POLICE_CONTROL_NUMBER;
        }
    } else {
        $Country_Police_Number = $SITE_POLICE_CONTROL_NUMBER;
    }
    return $Country_Police_Number;
}

function FetchTripWaitingCharges($iTripId)
{
    global $obj, $ENABLE_WAITING_CHARGE_RENTAL, $ENABLE_WAITING_CHARGE_FLAT_TRIP, $SERVICE_PROVIDER_FLOW;
    if (isset($tripDetailsArr['trips_' . $iTripId])) {
        $tripdata = $tripDetailsArr['trips_' . $iTripId];
    } else {
        $tripdata = $obj->MySQLSelect("SELECT * FROM trips WHERE iTripId='" . $iTripId . "'");
        $tripDetailsArr['trips_' . $iTripId] = $tripdata;
    }
    $scheduled_trip = $obj->MySQLSelect("SELECT dBooking_date FROM cab_booking WHERE iTripId = '$iTripId' ");
    $dBooking_date = "";
    if (!empty($scheduled_trip) && count($scheduled_trip) > 0) {
        $dBooking_date = $scheduled_trip[0]['dBooking_date'];
    }
    $startDate = $tripdata[0]['tStartDate'];
    if ($startDate == "0000-00-00 00:00:00") {
        $startDate = @date("Y-m-d H:i:s");
    }
    $eFlatTrip = $tripdata[0]['eFlatTrip'];
    $tDriverArrivedDate = $tripdata[0]['tDriverArrivedDate'];
    $Vehicle_WaitingFeeTimeLimit = $tripdata[0]['iWaitingFeeTimeLimit'];
    if (!empty($tripdata[0]['tVehicleTypeFareData']) && $tripdata[0]['eType'] == "UberX") {
        $tVehicleTypeFareDataArr = (array)json_decode($tripdata[0]['tVehicleTypeFareData']);
        $Vehicle_WaitingFeeTimeLimit = $tVehicleTypeFareDataArr['ParentWaitingTimeLimit'];
    }
    $Vehicle_WaitingFeeTimeLimit = $Vehicle_WaitingFeeTimeLimit * 60;
    $waiting_time_diff = strtotime($startDate) - strtotime($tDriverArrivedDate);
    if (!empty($dBooking_date) && strtotime($tDriverArrivedDate) < strtotime($dBooking_date)) {
        $waiting_time_diff = strtotime($startDate) - strtotime($dBooking_date);
    }
    $waitingTime = ceil($waiting_time_diff / 60);
    $vehicleTypeID = $tripdata[0]['iVehicleTypeId'];
    $eHailTrip = $tripdata[0]['eHailTrip'];
    $eType = $tripdata[0]['eType'];
    $iRentalPackageId = $tripdata[0]['iRentalPackageId'];
    $fWaitingFees = 0;
    if ($eHailTrip == "Yes" || ($iRentalPackageId > 0 && $ENABLE_WAITING_CHARGE_RENTAL != "Yes") || ($eFlatTrip == "Yes" && $ENABLE_WAITING_CHARGE_FLAT_TRIP != "Yes")) {
        return 0;
    } else {
        if ($SERVICE_PROVIDER_FLOW == "Provider" && $tripdata[0]['tVehicleTypeData'] != "") {
            // $tripdata[0]['eFareType'] == "Fixed"
            $tVehicleTypeFareData = json_decode($tripdata[0]['tVehicleTypeFareData'], true);
            $fWaitingFeesCommission = 0;
            $fWaitingFees = $tVehicleTypeFareData['ParentWaitingFees'];
            $iWaitingFeeTimeLimit = $tVehicleTypeFareData['ParentWaitingTimeLimit'];
            $parentCommision = $tVehicleTypeFareData['ParentCommision'];
            if ($waitingTime > $iWaitingFeeTimeLimit) {
                $waitingTime = $waitingTime - $iWaitingFeeTimeLimit;
                $fWaitingFees = $fWaitingFees * $waitingTime;
                $fWaitingFees = round($fWaitingFees, 2);
            } else {
                $fWaitingFees = 0;
            }
            $fWaitingFeesCommission = round((($fWaitingFees * $parentCommision) / 100), 2);
            $returnWaitingFeeArr['WaitingFee'] = $fWaitingFees;
            $returnWaitingFeeArr['WaitingFeeCommission'] = $fWaitingFeesCommission;
            return $returnWaitingFeeArr;
        } else {
            //Added By HJ On 22-06-2020 For Optimize vehicle_type Table Query Start
            if (isset($vehicleTypeDataArr['vehicle_type'])) {
                $vehicleTypeData = $vehicleTypeDataArr['vehicle_type'];
                $typeDataArr = array();
                for ($h = 0; $h < count($vehicleTypeData); $h++) {
                    $typeDataArr[$vehicleTypeData[$h]['iVehicleTypeId']] = $vehicleTypeData[$h]['fWaitingFees'];
                }
                if (isset($typeDataArr[$vehicleTypeID])) {
                    $fWaitingFees = $typeDataArr[$vehicleTypeID];
                } else {
                    $tripvehicledata = $obj->MySQLSelect("SELECT fWaitingFees FROM vehicle_type WHERE iVehicleTypeId='" . $vehicleTypeID . "'");
                    $fWaitingFees = $tripvehicledata[0]['fWaitingFees'];
                }
            } else {
                $tripvehicledata = $obj->MySQLSelect("SELECT fWaitingFees FROM vehicle_type WHERE iVehicleTypeId='" . $vehicleTypeID . "'");
                $fWaitingFees = $tripvehicledata[0]['fWaitingFees'];
            }
            //Added By HJ On 22-06-2020 For Optimize vehicle_type Table Query End
            $iWaitingFeeTimeLimit = $tripdata[0]['iWaitingFeeTimeLimit'];
            if ($waitingTime > $iWaitingFeeTimeLimit) {
                $waitingTime = $waitingTime - $iWaitingFeeTimeLimit;
                $fWaitingFees = $fWaitingFees * $waitingTime;
                $fWaitingFees = round($fWaitingFees, 2);
            } else {
                $fWaitingFees = 0;
            }
        }
    }
    return $fWaitingFees;
}

function ReviseTripPayableAmount($iTripId, $ePaidByPassenger = "No", $ePaidToDriver = "No")
{
    global $WALLET_OBJ, $MODULES_OBJ, $obj, $CREDIT_TO_WALLET_ENABLE;
    $sql = "SELECT iUserId,iDriverId,fCancellationFare,fWalletDebit,vTripPaymentMode,vRideNo,iVehicleTypeId, tVehicleTypeFareData,eCardFailed,iFare,fTax1,fTax2,fAddedOutstandingamt FROM trips WHERE iTripId='" . $iTripId . "'"; //added by SP Outstanding calculate if payment failed end on 27-7-2019 add eCardFailed
    $tripdata = $obj->MySQLSelect($sql);
    $iUserId = $tripdata[0]['iUserId'];
    $iDriverId = $tripdata[0]['iDriverId'];
    $fTax1 = $tripdata[0]['fTax1'];
    $fTax2 = $tripdata[0]['fTax2'];
    $fCancellationFare = $tripdata[0]['fCancellationFare']; // Tax Amount added By HJ On 05-08-2020 When Tax Applied On Cancel Trip
    $fWalletDebit = $tripdata[0]['fWalletDebit'];
    $vTripPaymentMode = $tripdata[0]['vTripPaymentMode'];
    $iVehicleTypeId = $tripdata[0]['iVehicleTypeId'];
    $eCardFailed = $tripdata[0]['eCardFailed']; //added by SP Outstanding calculate if payment failed end on 27-7-2019
    $iFare = $tripdata[0]['iFare'];
    $fCommision = $fPendingAmount = 0;
    if ($iVehicleTypeId > 0) {
        $fCommision = get_value('vehicle_type', 'fCommision', 'iVehicleTypeId', $iVehicleTypeId, '', 'true');
    }
    if (!empty($tripdata[0]['tVehicleTypeFareData'])) {
        $tVehicleTypeFareDataArr = json_decode($tripdata[0]['tVehicleTypeFareData'], true);
        $fCommision = $tVehicleTypeFareDataArr['ParentCommision'];
    }
    /* added by SP Outstanding calculate if payment failed start on 27-7-2019 */
    if ($eCardFailed == 'Yes') {
        $fCancellationFare = $iFare - $tripdata[0]['fAddedOutstandingamt'];
    }
    if ($fWalletDebit == 0 && $tripdata[0]['fCancellationFare'] > 0) //card failed at that time trip finished and wallet is not ticked so here tax is calulated again in iFare...so put condition when only cancel trip then tax is calculated
    {
        $fCancellationFare += $fTax1 + $fTax2;
    }
    //if($fWalletDebit == 0)
    //{
    //    $fCancellationFare += $fTax1 + $fTax2;
    //}
    /* added by SP Outstanding calculate if payment failed end on 27-7-2019 */
    if ($fCancellationFare > 0) {
        $fPendingAmount = $fCancellationFare;
    }
    if ($fPendingAmount < 0) {
        $fPendingAmount = 0;
    }
    ## Calculate Driver's Commission and PendingAmount ##
    $DriverTotalAmount = $fWalletDebit + $fCancellationFare;
    // $Site_Commision = round((($DriverTotalAmount * $fCommision) / 100), 2);
    $Site_Commision = round(((($DriverTotalAmount - $fTax1 - $fTax2) * $fCommision) / 100), 2);
    $fDriverPendingAmount = $DriverTotalAmount - $Site_Commision - $fTax1 - $fTax2;
    $fTripGenerateFare = $fWalletDebit + $fCancellationFare;
    $iFare = $fCancellationFare;
    ## Calculate Driver's Commission and PendingAmount ##
    $Data_trip_OutstandingAmount["iTripId"] = $iTripId;
    $Data_trip_OutstandingAmount["iUserId"] = $iUserId;
    $Data_trip_OutstandingAmount["iDriverId"] = $iDriverId;
    $Data_trip_OutstandingAmount["fWalletDebit"] = $fWalletDebit;
    $Data_trip_OutstandingAmount["fCancellationFare"] = $fCancellationFare;
    $Data_trip_OutstandingAmount["vTripPaymentMode"] = $vTripPaymentMode;
    $Data_trip_OutstandingAmount["ePaidByPassenger"] = $ePaidByPassenger;
    $Data_trip_OutstandingAmount["ePaidToDriver"] = $ePaidToDriver;
    $Data_trip_OutstandingAmount["fPendingAmount"] = $fPendingAmount;
    $Data_trip_OutstandingAmount["fCommision"] = $Site_Commision;
    $Data_trip_OutstandingAmount["fDriverPendingAmount"] = $fDriverPendingAmount;
    if ($ePaidByPassenger == "Yes") {
        $Data_trip_OutstandingAmount["vTripAdjusmentId"] = $iTripId;
    }
    $currencyList = get_value('currency', '*', 'eStatus', 'Active');
    for ($i = 0; $i < count($currencyList); $i++) {
        $currencyCode = $currencyList[$i]['vName'];
        $Data_trip_OutstandingAmount['fRatio_' . $currencyCode] = $currencyList[$i]['Ratio'];
    }
    $iTripOutstandId = $obj->MySQLQueryPerform("trip_outstanding_amount", $Data_trip_OutstandingAmount, 'insert');
    if ($iTripOutstandId > 0 && $ePaidByPassenger == "No" && $fPendingAmount > 0) {
        $updateQuery = "UPDATE register_user set fTripsOutStandingAmount = fTripsOutStandingAmount+'" . $fPendingAmount . "' WHERE iUserId = " . $iUserId;
        $obj->sql_query($updateQuery);
    }
    ### Debit  User Wallet & Credit Driver Wallet ###
    if ($eCardFailed == 'No') { //added by SP because when card failed at that time, it is checked otherwise two times debited from the user account on 30-07-2019
        if ($fWalletDebit > 0) {
            ### Debit  User Wallet  ###
            $vRideNo = $tripdata[0]['vRideNo'];
            $data_user_wallet['iUserId'] = $iUserId;
            $data_user_wallet['eUserType'] = "Rider";
            $data_user_wallet['iBalance'] = $fWalletDebit;
            $data_user_wallet['eType'] = "Debit";
            $data_user_wallet['dDate'] = @date("Y-m-d H:i:s");
            $data_user_wallet['iTripId'] = $iTripId;
            $data_user_wallet['eFor'] = "Booking";
            $data_user_wallet['ePaymentStatus'] = "Settelled";
            $data_user_wallet['tDescription'] = "#LBL_DEBITED_CANCELLED_BOOKING# " . " " . $vRideNo;
            $WALLET_OBJ->PerformWalletTransaction($data_user_wallet['iUserId'], $data_user_wallet['eUserType'], $data_user_wallet['iBalance'], $data_user_wallet['eType'], $data_user_wallet['iTripId'], $data_user_wallet['eFor'], $data_user_wallet['tDescription'], $data_user_wallet['ePaymentStatus'], $data_user_wallet['dDate']);
            ### Debit  User Wallet  ###
            ### Credit Driver Wallet ###
            // if ($fCancellationFare == 0) {
            //     $fWalletDebit = $fWalletDebit - $Site_Commision;
            // }
            if ($MODULES_OBJ->isAutoCreditToDriverModuleAvailable()) {
                $data_driver_wallet['iUserId'] = $iDriverId;
                $data_driver_wallet['eUserType'] = "Driver";
                $data_driver_wallet['iBalance'] = $DriverTotalAmount;
                $data_driver_wallet['eType'] = "Credit";
                $data_driver_wallet['dDate'] = @date("Y-m-d H:i:s");
                $data_driver_wallet['iTripId'] = $iTripId;
                $data_driver_wallet['eFor'] = "Deposit";
                $data_driver_wallet['ePaymentStatus'] = "Settelled";
                $data_driver_wallet['tDescription'] = "#LBL_AMOUNT_CANCELTRIP_CREDIT#" . " " . $vRideNo;
                $WALLET_OBJ->PerformWalletTransaction($data_driver_wallet['iUserId'], $data_driver_wallet['eUserType'], $data_driver_wallet['iBalance'], $data_driver_wallet['eType'], $data_driver_wallet['iTripId'], $data_driver_wallet['eFor'], $data_driver_wallet['tDescription'], $data_driver_wallet['ePaymentStatus'], $data_driver_wallet['dDate']);
                $obj->sql_query("UPDATE trip_outstanding_amount set ePaidToDriver = 'Yes' WHERE iTripOutstandId = " . $iTripOutstandId);
                $obj->sql_query("UPDATE trips set eDriverPaymentStatus = 'Settelled' WHERE iTripId = " . $iTripId);
            }
            ### Credit Driver Wallet ###
            ### Debit commission + tax from Driver Wallet ###
            if ($MODULES_OBJ->autoDeductDriverCommision("Ride") == "Yes") {
                $driverWalletDebit = $Site_Commision + $fTax1 + $fTax2;
                $data_driver_wallet['iUserId'] = $iDriverId;
                $data_driver_wallet['eUserType'] = "Driver";
                $data_driver_wallet['iBalance'] = $driverWalletDebit;
                $data_driver_wallet['eType'] = "Debit";
                $data_driver_wallet['dDate'] = @date("Y-m-d H:i:s");
                $data_driver_wallet['iTripId'] = $iTripId;
                $data_driver_wallet['eFor'] = "Withdrawl";
                $data_driver_wallet['ePaymentStatus'] = "Settelled";
                $data_driver_wallet['tDescription'] = "#LBL_DEBITED_SITE_EARNING_BOOKING#" . " " . $vRideNo;
                $WALLET_OBJ->PerformWalletTransaction($data_driver_wallet['iUserId'], $data_driver_wallet['eUserType'], $data_driver_wallet['iBalance'], $data_driver_wallet['eType'], $data_driver_wallet['iTripId'], $data_driver_wallet['eFor'], $data_driver_wallet['tDescription'], $data_driver_wallet['ePaymentStatus'], $data_driver_wallet['dDate']);
            }
            ### Credit Driver Wallet ###
        }
    }
    ### Debit  User Wallet & Credit Driver Wallet ###
    $ssql = "";
    if ($ePaidToDriver == "Yes") {
        $ssql = ",eDriverPaymentStatus = 'Settelled'";
    }
    if ($ePaidByPassenger == "Yes") {
        $updateQuery = "UPDATE trips set iFare = '" . $iFare . "',fTripGenerateFare = '" . $fTripGenerateFare . "',ePaymentCollect = 'Yes' $ssql,fCommision = '" . $Site_Commision . "' WHERE iTripId = " . $iTripId;
        $obj->sql_query($updateQuery);
    } else {
        $updateQuery = "UPDATE trips set iFare = '" . $iFare . "',fTripGenerateFare = '" . $fTripGenerateFare . "',fCommision = '" . $Site_Commision . "' WHERE iTripId = " . $iTripId;
        $obj->sql_query($updateQuery);
    }
    return $iTripOutstandId;
}

function GetPassengerOutstandingAmount($iUserId)
{
    global $obj, $_REQUEST, $data_trips, $PACKAGE_TYPE, $tconfig, $type;
    if ($PACKAGE_TYPE == "SHARK") {
        include_once $tconfig['tpanel_path'] . 'include/include_webservice_sharkfeatures.php';
        return GetPassengerOutstandingAmountShark($iUserId);
    } else {
        return GetPassengerOutstandingAmountOrg($iUserId);
    }
}

function GetPassengerOutstandingAmountOrg($iUserId)
{
    global $obj, $iOrganizationId, $ePaymentBy, $SYSTEM_PAYMENT_FLOW, $ePayWallet;
    $iOrganizationId = 0;
    $ePaymentBy = "Passenger";
    $outStandingSql = "";
    // if ($SYSTEM_PAYMENT_FLOW == 'Method-2' || $SYSTEM_PAYMENT_FLOW == 'Method-3') {
    if (!empty($ePayWallet) && strtoupper($ePayWallet) == "YES") {
        $outStandingSql = " AND eAuthoriseIdName='No' AND iAuthoriseId ='0'";
    }
    if ($ePaymentBy == "Passenger") {
        $sql = "SELECT SUM(fPendingAmount) as fPendingAmount FROM trip_outstanding_amount WHERE iUserId='" . $iUserId . "' AND iUserId > 0 AND ePaidByPassenger = 'No' $outStandingSql";
    }
    /*if ($ePaymentBy == "Passenger") {

        $sql = "SELECT fPendingAmount as fPendingAmount FROM trip_outstanding_amount WHERE iUserId='" . $iUserId . "' AND iUserId > 0 AND ePaidByPassenger = 'No' $outStandingSql";

        $sql = $sql .  " ORDER BY iTripOutstandId DESC LIMIT 1";

    }*/
    $tripoutstandingdata = $obj->MySQLSelect($sql);
    $fPendingAmount = round($tripoutstandingdata[0]['fPendingAmount'], 2);
    if ($fPendingAmount == "" || $fPendingAmount == NULL) {
        $fPendingAmount = 0;
    }
    return $fPendingAmount;
}

function FetchOrderLiveTrackDetails($iOrderId, $iUserId, $UserType)
{
    global $obj, $LANG_OBJ;
    if ($UserType == "Passenger") {
        $tblname = "register_user";
        $iMemberId = 'ord.iUserId';
        $UserDetailsArr = getUserCurrencyLanguageDetails($iUserId, $iOrderId);
        $Ratio = $UserDetailsArr['Ratio'];
        $currencySymbol = $UserDetailsArr['currencySymbol'];
        $vLang = $UserDetailsArr['vLang'];
        $NotInStatusCode = "12";
        $fields = "concat(vName,' ',vLastName) as drivername,vImgName AS vImage";
    } else if ($UserType == "Driver") {
        $tblname = "register_driver";
        $iMemberId = 'ord.iDriverId';
        $UserDetailsArr = getDriverCurrencyLanguageDetails($iUserId, $iOrderId);
        $Ratio = $UserDetailsArr['Ratio'];
        $currencySymbol = $UserDetailsArr['currencySymbol'];
        $vLang = $UserDetailsArr['vLang'];
        $NotInStatusCode = "12";
        $fields = "concat(vName,' ',vLastName) as drivername,vImage";
    } else {
        $tblname = "company";
        $iMemberId = 'ord.iCompanyId';
        $UserDetailsArr = getCompanyCurrencyLanguageDetails($iUserId, $iOrderId);
        $Ratio = $UserDetailsArr['Ratio'];
        $currencySymbol = $UserDetailsArr['currencySymbol'];
        $vLang = $UserDetailsArr['vLang'];
        $NotInStatusCode = "1,2,12";
        $fields = "concat(vName,' ',vLastName) as drivername,vImage";
    }
    if (isset($_SESSION['sess_lang']) && stripos($_SERVER['REQUEST_URI'], WEBSERVICE_API_FILE_NAME) === false) {
        $vLang = $_SESSION['sess_lang'];
    }
    $orderdata = get_value('orders', 'iServiceId,eTakeaway,eBuyAnyService,ePaymentOption', 'iOrderId', $iOrderId);
    $iServiceId = $orderdata[0]['iServiceId'];
    $eTakeaway = !empty($orderdata[0]['eTakeaway']) ? $orderdata[0]['eTakeaway'] : "No";
    $eBuyAnyServiceOrd = $orderdata[0]['eBuyAnyService'];
    if ($eTakeaway == 'Yes') {
        $NotInStatusCode .= ", 4 ,5";
    }
    $OrderStatusMain = $OrderStatusNotExistMain = array();
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
    $LBL_ITEMSLBL_ITEMS = $languageLabelsArr['LBL_ITEMSLBL_ITEMS'];
    $LBL_ITEMSLBL_ITEM = $languageLabelsArr['LBL_ITEMSLBL_ITEM'];
    $LBL_RESTAURANT_TXT = $languageLabelsArr['LBL_RESTAURANT_TXT'];
    $LBL_VEHICLE_DRIVER_TXT_FRONT = $languageLabelsArr['LBL_VEHICLE_DRIVER_TXT_FRONT'];
    //$sql = "SELECT os.vStatus_" . $vLang . " as vStatus,os.vStatus_Track_" . $vLang . " as vStatus_Track,osl.dDate,osl.iStatusCode,ord.iUserId,ord.iCompanyId,ord.iDriverId,ord.iStatusCode as OrderCurrentStatusCode,ord.iUserAddressId,ord.vOrderNo,ord.tOrderRequestDate,ord.fNetTotal,ord.iOrderId FROM order_status_logs as osl LEFT JOIN order_status as os ON osl.iStatusCode = os.iStatusCode LEFT JOIN orders as ord ON osl.iOrderId=ord.iOrderId WHERE osl.iOrderId = '" . $iOrderId . "' AND osl.iStatusCode NOT IN(" . $NotInStatusCode . ") ORDER BY osl.iStatusCode ASC";
    $sql = "SELECT DISTINCT os.vStatus_" . $vLang . " as vStatus,os.vStatus_Track_" . $vLang . " as vStatus_Track,osl.iStatusCode,ord.iUserId,ord.iCompanyId,ord.iDriverId,ord.iStatusCode as OrderCurrentStatusCode,ord.iUserAddressId,ord.vOrderNo,ord.tOrderRequestDate,ord.fNetTotal,ord.iOrderId,ord.vTimeZone,os.eTakeaway,os.eBuyAnyService FROM order_status_logs as osl LEFT JOIN order_status as os ON osl.iStatusCode = os.iStatusCode LEFT JOIN orders as ord ON osl.iOrderId=ord.iOrderId WHERE osl.iOrderId = '" . $iOrderId . "' AND osl.iStatusCode NOT IN(" . $NotInStatusCode . ") ORDER BY osl.iStatusCode ASC"; // here remove osl.dDate and apply DISTINCT, becoz 8 status in some case twotimes entry so that put distinct but if ddate then it not work..so remove it
    $OrderStatusMain = $obj->MySQLSelect($sql);
    $eDisplayDottedLine = "No";
    $eDisplayRouteLine = "No";
    if (count($OrderStatusMain) > 0) {
        //$returnArr['Action'] = "1";
        //$UserSelectedAddressArr = FetchMemberAddressData($OrderStatus[0]['iUserId'], "Passenger", $OrderStatus[0]['iUserAddressId']);
        $sql = "SELECT concat(vName,' ',vLastName) as drivername,vImage,vCode,vPhone from  register_driver WHERE iDriverId ='" . $OrderStatusMain[0]['iDriverId'] . "'";
        $driverdetail = $obj->MySQLSelect($sql);
        $drivername = $imgaeName = $vCode = $vPhone = "";
        if (!empty($driverdetail)) {
            $drivername = $driverdetail[0]['drivername'];
            $imgaeName = $driverdetail[0]['vImage'];
            $vCode = $driverdetail[0]['vCode'];
            $vPhone = $driverdetail[0]['vPhone'];
        }
        if (empty($drivername) || $drivername == NULL) {
            //$drivername = "Delivery Driver";
            $drivername = $LBL_VEHICLE_DRIVER_TXT_FRONT;
        }
        //$OrderPickedUpDate = "";
        $CheckOtherStatusCode = "Yes";
        $companyfields = "vCompany,vRestuarantLocation,vRestuarantLocationLat,vRestuarantLocationLong,vCaddress";
        //$Data_cab_requestcompany = get_value('company', $companyfields, 'iCompanyId', $OrderStatus[0]['iCompanyId']);
        // echo "<pre>";print_r($Data_cab_requestcompany);
        $serverTimeZone = date_default_timezone_get();
        $OrderStatusCode = "";
        for ($i = 0; $i < count($OrderStatusMain); $i++) {
            if ($OrderStatusMain[$i]['iStatusCode'] == 6 || $OrderStatusMain[$i]['iStatusCode'] == 2) {
                $ordtakeaway = !empty($OrderStatusMain[$i]['eTakeaway']) ? $OrderStatusMain[$i]['eTakeaway'] : "No";
                if ($eTakeaway == 'Yes' && $ordtakeaway == "No") {
                    continue;
                }
                if ($eTakeaway == 'No' && $ordtakeaway == "Yes") {
                    continue;
                }
            }
            //Buy Any Service feature start /* Added by HV on 01-09-2020 for Buy Any Service Feature */
            if (in_array($OrderStatusMain[$i]['iStatusCode'], [1, 2, 4])) {
                if (($eBuyAnyServiceOrd == 'Yes' && $OrderStatusMain[$i]['eBuyAnyService'] == "No") || ($eBuyAnyServiceOrd == 'No' && $OrderStatusMain[$i]['eBuyAnyService'] == "Yes") || ($OrderStatusMain[$i]['iStatusCode'] == 2 && $eBuyAnyServiceOrd == 'Yes')) {
                    continue;
                }
            }
            if (in_array($OrderStatusMain[$i]['iStatusCode'], [13, 14]) && $eBuyAnyServiceOrd == 'No') {
                continue;
            }
            //Buy Any Service feature /* Added by HV on 01-09-2020 for Buy Any Service Feature End */
            $OrderStatus[$i] = $OrderStatusMain[$i];
            $OrderStatusCode .= $OrderStatus[$i]['iStatusCode'] . ",";
            //added by SP on 11-09-2019 bc ddate as mentioned in above qry but problem in some case so i have taken it as differently here...
            $sqlddate = $obj->MySQLSelect("SELECT dDate from order_status_logs WHERE iStatusCode ='" . $OrderStatus[$i]['iStatusCode'] . "' AND iOrderId = '" . $OrderStatus[$i]['iOrderId'] . "'");
            $dDate = $sqlddate[0]['dDate'];
            //$dDate = $OrderStatus[$i]['dDate'];
            $vTimeZone = $OrderStatus[$i]['vTimeZone'];
            $dDate = converToTz($dDate, $vTimeZone, $serverTimeZone);
            $OrderStatus[$i]['dDate'] = $dDate;
            $OrderStatus[$i]['driverName'] = $drivername;
            $OrderStatus[$i]['driverImage'] = $imgaeName;
            $OrderStatus[$i]['phoneCode'] = $vCode;
            $OrderStatus[$i]['vPhone'] = $vPhone;
            $iStatusCode = $OrderStatus[0]['OrderCurrentStatusCode'];
            if ($iStatusCode == 1 || $iStatusCode == 2 || $iStatusCode == 8 || $iStatusCode == 8) {
                $eDisplayDottedLine = "Yes";
                $eDisplayRouteLine = "No";
            }
            if ($iStatusCode == 5) {
                $eDisplayDottedLine = "No";
                $eDisplayRouteLine = "Yes";
                //$OrderPickedUpDate = $OrderStatus[$i]['dDate'];
            }
            //$OrderStatus[$i]['eShowCallImg'] = "No";
            //$StatusCodeLogwise = $OrderStatus[$i]['iStatusCode'];
            //if ($StatusCodeLogwise == 5) {
            // $OrderStatus[$i]['eShowCallImg'] = "Yes";
            //}
            $OrderStatus[$i]['vStatus_Track'] = str_replace("#DriverName#", $drivername, $OrderStatus[$i]['vStatus_Track']);
            $OrderStatus[$i]['vStatus_Track'] = str_replace("#STORE#", $LBL_RESTAURANT_TXT, $OrderStatus[$i]['vStatus_Track']);
            $OrderStatus[$i]['vStatus'] = str_replace("#STORE#", $LBL_RESTAURANT_TXT, $OrderStatus[$i]['vStatus']);
            $OrderStatus[$i]['eCompleted'] = "Yes";
            if ($iStatusCode == 8 || $iStatusCode == 9) {
                $CheckOtherStatusCode = "No";
            }
        }
        if ($eBuyAnyServiceOrd == "Yes") {
            $OrderStatus = array_values($OrderStatus);
            if ($OrderStatus[0]['OrderCurrentStatusCode'] == 8 || $OrderStatus[0]['OrderCurrentStatusCode'] == 9) {
                $CheckOtherStatusCode = "No";
            }
        }
        //echo $CheckOtherStatusCode."aaaaa".$UserType;
        if ($CheckOtherStatusCode == "Yes" && $UserType == "Passenger") {
            $OrderStatusCode = substr($OrderStatusCode, 0, -1);
            $OrderStatusCode = $OrderStatusCode . ",7,8,9,11,12";
            if ($eTakeaway == 'Yes') {
                $OrderStatusCode .= ", 4 ,5";
            }
            $sql = "SELECT vStatus_" . $vLang . " as vStatus,vStatus_Track_" . $vLang . " as vStatus_Track,iStatusCode,eTakeaway,eBuyAnyService FROM order_status WHERE iStatusCode NOT IN(" . $OrderStatusCode . ") ORDER BY iDisplayOrder ASC";
            $OrderStatusNotExistMain = $obj->MySQLSelect($sql);
            for ($i = 0; $i < count($OrderStatusNotExistMain); $i++) {
                if ($OrderStatusNotExistMain[$i]['iStatusCode'] == 6 || $OrderStatusNotExistMain[$i]['iStatusCode'] == 2) {
                    $ordtakeaway = !empty($OrderStatusNotExistMain[$i]['eTakeaway']) ? $OrderStatusNotExistMain[$i]['eTakeaway'] : "No";
                    if ($eTakeaway == 'Yes' && $ordtakeaway == "No") {
                        continue;
                    }
                    if ($eTakeaway == 'No' && $ordtakeaway == "Yes") {
                        continue;
                    }
                }
                //Buy Any Service feature start /* Added by HV on 01-09-2020 for Buy Any Service Feature */
                if (in_array($OrderStatusNotExistMain[$i]['iStatusCode'], [1, 2, 4])) {
                    if (($eBuyAnyServiceOrd == 'Yes' && $OrderStatusNotExistMain[$i]['eBuyAnyService'] == "No") || ($eBuyAnyServiceOrd == 'No' && $OrderStatusNotExistMain[$i]['eBuyAnyService'] == "Yes") || ($OrderStatusNotExistMain[$i]['iStatusCode'] == 2 && $eBuyAnyServiceOrd == 'Yes')) {
                        continue;
                    }
                }
                if (in_array($OrderStatusNotExistMain[$i]['iStatusCode'], [13, 14]) && $eBuyAnyServiceOrd == 'No') {
                    continue;
                }
                //Buy Any Service feature /* Added by HV on 01-09-2020 for Buy Any Service Feature End */
                $OrderStatusNotExist[$i] = $OrderStatusNotExistMain[$i];
                $OrderStatusNotExist[$i]['vStatus'] = $OrderStatusNotExist[$i]['vStatus'];
                $OrderStatusNotExist[$i]['vStatus_Track'] = str_replace("#DriverName#", $drivername, $OrderStatusNotExist[$i]['vStatus_Track']);
                $OrderStatusNotExist[$i]['vStatus_Track'] = str_replace("#STORE#", $LBL_RESTAURANT_TXT, $OrderStatusNotExist[$i]['vStatus_Track']);
                $OrderStatusNotExist[$i]['vStatus'] = str_replace("#STORE#", $LBL_RESTAURANT_TXT, $OrderStatusNotExist[$i]['vStatus']);
                $OrderStatusNotExist[$i]['dDate'] = "";
                $OrderStatusNotExist[$i]['iStatusCode'] = $OrderStatusNotExist[$i]['iStatusCode'];
                $OrderStatusNotExist[$i]['iUserId'] = $OrderStatus[0]['iUserId'];
                $OrderStatusNotExist[$i]['iCompanyId'] = $OrderStatus[0]['iCompanyId'];
                $OrderStatusNotExist[$i]['iDriverId'] = $OrderStatus[0]['iDriverId'];
                $OrderStatusNotExist[$i]['OrderCurrentStatusCode'] = $OrderStatus[0]['OrderCurrentStatusCode'];
                //$OrderStatusNotExist[$i]['iUserAddressId'] = $OrderStatus[0]['iUserAddressId'];
                $OrderStatusNotExist[$i]['vOrderNo'] = $OrderStatus[0]['vOrderNo'];
                $OrderStatusNotExist[$i]['tOrderRequestDate'] = $OrderStatus[0]['tOrderRequestDate'];
                //$OrderStatusNotExist[$i]['fNetTotal'] = $OrderStatus[0]['fNetTotal'];
                //$OrderStatusNotExist[$i]['eShowCallImg'] = $OrderStatus[0]['eShowCallImg'];
                $OrderStatusNotExist[$i]['eCompleted'] = "No";
                // print_R($OrderStatusNotExist); exit;
                array_push($OrderStatus, $OrderStatusNotExist[$i]);
            }
        }
        foreach ($OrderStatus as $k => $v) {
            $Data_name['iStatusCode'][$k] = $v['iStatusCode'];
        }
        array_multisort($Data_name['iStatusCode'], SORT_ASC, $OrderStatus); //Added By HJ ON 3-1-2019 For Sort BY iStatusCode
        /* Added by HV on 01-09-2020 for Buy Any Service Feature */
        if ($eBuyAnyServiceOrd == "Yes") {
            $insertAfterKey = "";
            $arrToInsert = array();
            foreach ($OrderStatus as $okey => $oValue) {
                if ($oValue['iStatusCode'] == 4) {
                    $insertAfterKey = $okey;
                }
                if ($oValue['iStatusCode'] == 13 || $oValue['iStatusCode'] == 14) {
                    $arrToInsert[] = $OrderStatus[$okey];
                    unset($OrderStatus[$okey]);
                }
            }
            if (count($arrToInsert) > 0) {
                array_splice($OrderStatus, $insertAfterKey + 1, 0, $arrToInsert);
            }
            if ($orderdata[0]['ePaymentOption'] == "Cash") {
                $insertAfterKeyNew = "";
                $arrToInsertNew = array();
                foreach ($OrderStatus as $okey => $oValue) {
                    if ($oValue['iStatusCode'] == 5) {
                        $insertAfterKeyNew = $okey;
                    }
                    if ($oValue['iStatusCode'] == 14) {
                        $arrToInsertNew[] = $OrderStatus[$okey];
                        unset($OrderStatus[$okey]);
                    }
                }
                if (count($arrToInsertNew) > 0) {
                    array_splice($OrderStatus, $insertAfterKeyNew, 0, $arrToInsertNew);
                }
            }
        }
        /* Added by HV on 01-09-2020 for Buy Any Service Feature End */
        $returnArr['message'] = $OrderStatus;
        //$fNetTotal = $OrderStatus[0]['fNetTotal'];
        //$fNetTotal = round($fNetTotal * $Ratio, 2);
        //$returnArr['fNetTotal'] = $currencySymbol . " " . formatnum($fNetTotal);
        $returnArr['vOrderNo'] = $OrderStatus[0]['vOrderNo'];
        //$TotalOrderItems = getTotalOrderDetailItemsCount($iOrderId);
        //$returnArr['TotalOrderItems'] = ($TotalOrderItems > 1) ? $TotalOrderItems . " " . $LBL_ITEMSLBL_ITEMS : $TotalOrderItems . " " . $LBL_ITEMSLBL_ITEM;
        $tOrderRequestDate = $OrderStatus[0]['tOrderRequestDate'];
        $tOrderRequestDate = converToTz($tOrderRequestDate, $vTimeZone, $serverTimeZone);
        $returnArr['tOrderRequestDate'] = $tOrderRequestDate;
        $returnArr['OrderCurrentStatusCode'] = $OrderStatus[0]['OrderCurrentStatusCode'];
        // $returnArr['PassengerLat'] = $UserSelectedAddressArr['vLatitude'];
        // $returnArr['PassengerLong'] = $UserSelectedAddressArr['vLongitude'];
        // $returnArr['DeliveryAddress'] = $UserSelectedAddressArr['UserAddress'];
        //$returnArr['vCompany'] = $Data_cab_requestcompany[0]['vCompany'];
        // $returnArr['CompanyLat'] = $Data_cab_requestcompany[0]['vRestuarantLocationLat'];
        // $returnArr['CompanyLong'] = $Data_cab_requestcompany[0]['vRestuarantLocationLong'];
        // $returnArr['CompanyAddress'] = $Data_cab_requestcompany[0]['vRestuarantLocation'];
        $returnArr['iDriverId'] = $OrderStatus[0]['iDriverId'];
        $returnArr['eDisplayDottedLine'] = $eDisplayDottedLine;
        $returnArr['eDisplayRouteLine'] = $eDisplayRouteLine;
        //$returnArr['OrderPickedUpDate'] = $OrderPickedUpDate;
        //$returnArr['iServiceId'] = $iServiceId;
        /* if ($OrderStatus[0]['iDriverId'] > 0) {

          $Data_cab_driverlatlong = get_value('register_driver', 'vLatitude,vLongitude,vCode,vPhone', 'iDriverId', $OrderStatus[0]['iDriverId']);

          $returnArr['DriverLat'] = $Data_cab_driverlatlong[0]['vLatitude'];

          $returnArr['DriverLong'] = $Data_cab_driverlatlong[0]['vLongitude'];

          $returnArr['DriverPhone'] = '+' . $Data_cab_driverlatlong[0]['vCode'] . $Data_cab_driverlatlong[0]['vPhone'];

          } else {

          $returnArr['DriverLat'] = "";

          $returnArr['DriverLong'] = "";

          $returnArr['DriverPhone'] = "";

      } */
    }
    $jsondata = json_encode($returnArr, JSON_UNESCAPED_UNICODE);
    return $jsondata;
}

function getCustomeNotificationSound($DataArr)
{
    global $obj, $APP_TYPE, $cacheKeysArr, $oCache;
    $soundSql = " AND eSoundFor != 'Store'";
    if ($APP_TYPE == "Ride-Delivery-UberX" || $APP_TYPE == "Foodonly" || $APP_TYPE == "Deliverall" || DELIVERALL == "Yes" || ONLYDELIVERALL == "Yes") {
        $soundSql = "";
    }
    $DataArr['USER_NOTIFICATION'] = $DataArr['PROVIDER_NOTIFICATION'] = $DataArr['DIAL_NOTIFICATION'] = $DataArr['STORE_NOTIFICATION'] = $DataArr['VOIP_NOTIFICATION'] = "";
    //Added By HJ On 29-07-2020 For Store notification_sound Data into Cache Start
    $notificationApcKey = md5($cacheKeysArr['notification_sound_active']);
    $getNotificationCacheData = $oCache->getData($notificationApcKey);
    if (!empty($getNotificationCacheData) && count($getNotificationCacheData) > 0) {
        $notificationData = $getNotificationCacheData;
    } else {
        $notificationData = $obj->MySQLSelect("SELECT * FROM notification_sound WHERE eStatus='Active' AND eIsSelected ='Yes' AND eAdminDisplay='Yes' $soundSql");
        $setNotificationCacheData = $oCache->setData($notificationApcKey, $notificationData);
    }
    //Added By HJ On 29-07-2020 For Store notification_sound Data into Cache End
    //$notificationData = $obj->MySQLSelect("SELECT * FROM notification_sound WHERE eStatus='Active' AND eIsSelected ='Yes' AND eAdminDisplay='Yes' $soundSql");
    for ($s = 0; $s < count($notificationData); $s++) {
        $eSoundFor = $notificationData[$s]['eSoundFor'];
        $vFileName = $notificationData[$s]['vFileName'];
        $eDefault = $notificationData[$s]['eDefault'];
        if ($eDefault == "Yes") {
            $vFileName = "";
        }
        if ($eSoundFor == "User") {
            $DataArr['USER_NOTIFICATION'] = $vFileName;
        } else if ($eSoundFor == "Store") {
            $DataArr['STORE_NOTIFICATION'] = $vFileName;
        } else if ($eSoundFor == "Provider") {
            $DataArr['PROVIDER_NOTIFICATION'] = $vFileName;
        } else if ($eSoundFor == "Dial") {
            $DataArr['DIAL_NOTIFICATION'] = $vFileName;
        } else if ($eSoundFor == "Voip") {
            $DataArr['VOIP_NOTIFICATION'] = $vFileName;
        }
    }
    return $DataArr;
}

//added by SP on 15-02-2021 for custom notification for ride,delivery and uberx
function GetCustomNotificationDetailsRDU($iTripId, $vMessage, $vLang = '')
{
    global $obj, $LANG_OBJ;
    $customArrayNotification = array();
    //echo $iTripId;
    $StatusArray = array("Active", "Arrived", "On Going Trip", "Finished");
    $StatusArrayIcon = array("Active", "Arriving", "OnGoingTrip", "Finished");
    $tripdata = $obj->MySQLSelect("SELECT t.iTripId,t.iCabBookingId,t.vRideNo,t.iActive,t.eCancelled,t.eDriverArrived,t.eApproveRequestSentByDriver,t.vChargesDetailData,t.eType,t.eApproved,t.iFromStationId,t.iToStationId,u.vLang,d.vTripStatus, CONCAT(u.vName,' ',u.vLastName) as ridername, CONCAT(d.vName,' ',d.vLastName) as drivername FROM trips t LEFT Join register_user u ON u.iUserId = t.iUserId LEFT JOIN register_driver d on d.iDriverId = t.iDriverId WHERE t.iTripId = $iTripId AND t.eSystem = 'General'");
    if (empty($vLang)) {
        $vLang = $tripdata[0]['vLang'];
        if ($vLang == "" || $vLang == NULL) {
            $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
        }
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", 0);
    $iActiveCurrent = $tripdata[0]['iActive'];
    $iActiveCurrentDriver = $tripdata[0]['vTripStatus'];
    $eDriverArrived = $tripdata[0]['eDriverArrived'];
    $eApproveRequestSentByDriver = $tripdata[0]['eApproveRequestSentByDriver'];
    $eApproved = $tripdata[0]['eApproved'];
    $vChargesDetailData = $tripdata[0]['vChargesDetailData'];
    $eType = $tripdata[0]['eType'];
    if ($eType == 'Ride') {
        if (!empty($tripdata[0]['iFromStationId']) && !empty($tripdata[0]['iToStationId'])) {
            $StatusArray = array("Active", "On Going Trip", "Finished");
            $StatusArrayTitle = array($languageLabelsArr["LBL_BOOKED"], $languageLabelsArr["LBL_EN_ROUTE"], $languageLabelsArr["LBL_REACHED"]);
            $StatusArrayIcon = array("Active", "OnGoingTrip", "Finished");
            if ($iActiveCurrent == 'Arrived') {
                $iActiveCurrent = 'Active';
                $iActiveCurrentDriver = 'Active';
            }
        } else {
            $StatusArrayTitle = array($languageLabelsArr["LBL_BOOKED"], $languageLabelsArr["LBL_ARRIVING"], $languageLabelsArr["LBL_EN_ROUTE"], $languageLabelsArr["LBL_REACHED"]);
        }
    }
    if ($eType == 'UberX') {
        $StatusArrayTitle = array($languageLabelsArr["LBL_BOOKED"], $languageLabelsArr["LBL_ARRIVING"], $languageLabelsArr["LBL_JOB_START"], $languageLabelsArr["LBL_COMPLETED"]);
    }
    if ($eType == 'Deliver' || $eType == 'Multi-Delivery') {
        $StatusArrayTitle = array($languageLabelsArr["LBL_BOOKED"], $languageLabelsArr["LBL_ARRIVING"], $languageLabelsArr["LBL_IN_TRANSIT"], $languageLabelsArr["LBL_DELIVERED_CUSTOM_NOTI"]);
    }
    $cancel = 0;
    $StatusArrayCancel = $languageLabelsArr["LBL_CANCELLED"];
    $cancelIcon = "cancelled";
    if ($iActiveCurrent == "Canceled" && $tripdata[0]['eCancelled'] == "Yes" && $eDriverArrived == "No") {
        $cancel = 1;
        //$StatusArrayCancel = "Cancelled before arrive";
    }
    if ($iActiveCurrent == "Canceled" && $tripdata[0]['eCancelled'] == "Yes" && $eDriverArrived == "Yes") {
        $cancel = 2;
        //$StatusArrayCancel = "Cancelled after arrive";
    }
    if ($iActiveCurrent == "Finished" && $tripdata[0]['eCancelled'] == "Yes") {
        $cancel = 3;
        //$StatusArrayCancel = "Cancelled after start";
    }
    //Arriving is in active mode when accept request not active booked.
    $arriving = "No";
    if ($iActiveCurrent == 'Active' && $iActiveCurrentDriver != 'Arrived' && empty($tripdata[0]['iFromStationId']) && empty($tripdata[0]['iToStationId'])) {
        $iActiveCurrent = 'Arrived';
        $arriving = "Yes";
    }
    //echo $cancel;exit;
    //echo $cancel.">>".$iActiveCurrentDriver.">>".$tripdata[0]['eCancelled'];exit;
    $complete = "Yes";
    for ($i = 0; $i < count($StatusArray); $i++) {
        $currentStatus = "No";
        //if($cancel == 0 && $StatusArray[$i]=='Cancelled') {
        //    continue;
        //}
        //finished >> when last stage then driver status is not active so it does not shown currentstatus yes..so put this condition
        //on going  trip for multi delivery when more location then seacond trip start at that time it will again set to no for on going and arriverd to set current status becoz here also driver status set to arrived
        //if($iActiveCurrentDriver==$StatusArray[$i] || ($iActiveCurrent=='Finished' && $iActiveCurrent==$StatusArray[$i]) || ($iActiveCurrent=="On Going Trip" && $eType=='Multi-Delivery' && $iActiveCurrent==$StatusArray[$i])) {
        //    $currentStatus = "Yes";
        //    if($eType=='Multi-Delivery' && $iActiveCurrent=="On Going Trip" && $iActiveCurrentDriver=='Arrived' && $iActiveCurrentDriver==$StatusArray[$i]) {
        //        $currentStatus = "No";
        //    }
        //}
        if (($iActiveCurrent == $StatusArray[$i] && $iActiveCurrent != "Active") || ($iActiveCurrent == "Active" && $iActiveCurrentDriver == $StatusArray[$i])) {
            $currentStatus = "Yes";
        }
        if ($StatusArray[$i] == 'Arrived' && $complete == "Yes") {
            if ($arriving == "Yes") {
            } else {
                $StatusArrayTitle[$i] = $languageLabelsArr["LBL_ARRIVED"];
                $StatusArrayIcon[$i] = "Arrived";
            }
        }
        if ($StatusArray[$i] == 'On Going Trip' && !empty($vChargesDetailData) && $eApproveRequestSentByDriver == "Yes") {
            $StatusArrayTitle[$i] = $languageLabelsArr["LBL_CONFIRM_TXT"];
            if ($eApproved == "Yes") {
                $complete = "Yes";
            } else {
                $complete = "No";
            }
        }
        if ($StatusArray[$i] == 'On Going Trip' && !empty($vChargesDetailData) && $eApproveRequestSentByDriver == "No") {
            $StatusArrayTitle[$i] = $languageLabelsArr["LBL_DECLINED"];
            if ($eApproved == "Yes") {
                $complete = "Yes";
            } else {
                $complete = "No";
            }
        }
        if ($currentStatus == "Yes") {
            $vCurrentStatus = $StatusArrayTitle[$i];
        }
        //$customArrayNotification[$i]['vStatusOrig'] = $StatusArray[$i];
        $customArrayNotification[$i]['vStatus'] = $StatusArrayTitle[$i];
        $customArrayNotification[$i]['eCompleted'] = $complete;
        $customArrayNotification[$i]['isCurrentStatus'] = $currentStatus;
        $customArrayNotification[$i]['icon'] = $StatusArrayIcon[$i];
        //if($complete=="Yes" && $StatusArray[$i]=='Cancelled' && $cancel==1) {
        //echo $cancel.">>".$i."<br>";
        if ($cancel != 0 && $cancel == $i + 1) {
            $i = $i + 1;
            //$customArrayNotification[$i]['vStatusOrig'] = "Cancelled";
            $customArrayNotification[$i]['vStatus'] = $StatusArrayCancel;
            $customArrayNotification[$i]['eCompleted'] = "Yes";
            $customArrayNotification[$i]['isCurrentStatus'] = "Yes";
            $customArrayNotification[$i]['icon'] = $cancelIcon;
            $vCurrentStatus = $StatusArrayCancel;
            //$currentStatus = "Yes";
            //$customArrayNotification[$i]['currentStatus'] = $currentStatus;
            break;
        }
        //if($iActiveCurrentDriver==$StatusArray[$i]) {
        //    $complete = "No";
        //    //$currentStatus = "Yes";
        //}
        //echo $iActiveCurrent."===".$StatusArray[$i]."====".$iActiveCurrentDriver."<br>";
        if (($iActiveCurrent == $StatusArray[$i] && $iActiveCurrent != "Active") || ($iActiveCurrent == "Active" && $iActiveCurrentDriver == $StatusArray[$i])) {
            $complete = "No";
        }
    }
    $customArrayNotification = array_values(array_filter($customArrayNotification)); // reset array keys
    $customArrayNotification[0]['vCurrentStatus'] = $vCurrentStatus;
    $customArrayNotification[0]['vCurrentStatus_Track'] = str_replace("'", '"', $vMessage);
    $customArrayNotification[0]['eType'] = $eType;
    $customArrayNotification[0]['iCabBookingId'] = $tripdata[0]['iCabBookingId'];
    $customArrayNotification[0]['eFinished'] = "No";
    if ($iActiveCurrent == "Finished") {
        $customArrayNotification[0]['eFinished'] = "Yes";
    }

    return $customArrayNotification;
}

function setDataResponse($responseArr, $dummy = '', $returnData = 'No')
{
    global $dataHelperObj, $websocket, $obj, $IS_INHOUSE_DOMAINS, $MONGO_OP_OBJ, $tconfig, $REQUEST_DATA_DEBUG, $type;
    if (!empty($websocket)) {
        $websocket->close();
    }
    if (empty($dummy)) {
        $responseArr['TSITE_DB'] = TSITE_DB;
        $responseArr['GOOGLE_API_REPLACEMENT_URL'] = GOOGLE_API_REPLACEMENT_URL;
        $responseArr['APP_SERVICE_URL'] = APP_SERVICE_URL;
    }

    if(strtoupper($returnData) == "YES") {
        return $responseArr;
    }

    if (isset($_REQUEST['type'])) {
        if($_REQUEST['type'] == "generalConfigData") {
            if($_SERVER['HTTP_HOST'] == "dev.bbcsproducts.net") {
                $responseArr = OptimizeDataCls::UnsetConfigurationVars($responseArr);
                OptimizeDataCls::optimize($responseArr);
            } else {
                $responseArr = UnsetConfigurationVars($responseArr);
            }
        } elseif (in_array($_REQUEST['type'], ["AuthenticateMember", "signup", "loadStaticInfo", "loadStaticPages", "SetFaqs", "SetCancelReasons", "loadAppImages"]) && $_SERVER['HTTP_HOST'] == "dev.bbcsproducts.net") {
            OptimizeDataCls::optimize($responseArr);
        } elseif ($_REQUEST['type'] == "getDetail" && $_SERVER['HTTP_HOST'] == "dev.bbcsproducts.net") {
            $responseArr = OptimizeDataCls::optimize($responseArr);
        }
    }
    
    /* Create a log of request/Response of all api */
    if (!empty($_SERVER['HTTP_HOST']) && $_SERVER['HTTP_HOST'] == "192.168.1.131" && !empty($_SERVER['REQUEST_URI']) && (strpos($_SERVER['REQUEST_URI'], 'cubejekdev') !== false) == true && isset($_REQUEST['type']) && !empty($_REQUEST['type'])) {
    }
 
    if (!empty($REQUEST_DATA_DEBUG) && $REQUEST_DATA_DEBUG == 'Yes') {
        $dataResponse = $dataHelperObj->getResponse($responseArr);

        $Data_request = array();
        $Data_request['tType'] = $type;
        $Data_request['tRequestParam'] = http_build_query($_REQUEST);
        $Data_request['tResponse'] = $dataResponse;
        // $obj->MySQLQueryPerform('request_data_debug', $Data_request, 'insert');
    }

    if (!empty($obj)) {
        $obj->MySQLClose();
    }

    $dataHelperObj->setResponse($responseArr);
}

function getDataResponse($responseArr, $dummy = '')
{
    global $dataHelperObj, $websocket, $obj, $IS_INHOUSE_DOMAINS;
    if (!empty($websocket)) {
        $websocket->close();
    }
    if (empty($dummy)) {
        $responseArr['TSITE_DB'] = TSITE_DB;
        $responseArr['GOOGLE_API_REPLACEMENT_URL'] = GOOGLE_API_REPLACEMENT_URL;
    }
    if (isset($_REQUEST['type']) && $_REQUEST['type'] == "generalConfigData") {
        $responseArr = UnsetConfigurationVars($responseArr);
    }
    /* Create a log of request/Response of all api */
    if (!empty($_SERVER['HTTP_HOST']) && $_SERVER['HTTP_HOST'] == "192.168.1.131" && !empty($_SERVER['REQUEST_URI']) && (strpos($_SERVER['REQUEST_URI'], 'cubejekdev') !== false) == true && isset($_REQUEST['type']) && !empty($_REQUEST['type'])) {
    }
    return $dataHelperObj->getResponse($responseArr);
}

function UnsetConfigurationVars($responseArr)
{
    unset($responseArr['MOBILE_VERIFY_SID_TWILIO']);
    unset($responseArr['MOBILE_VERIFY_TOKEN_TWILIO']);
    unset($responseArr['MOBILE_NO_TWILIO']);
    unset($responseArr['TWILIO_API_SECRET']);
    unset($responseArr['TWILIO_API_KEY']);
    unset($responseArr['TWILIO_ACCOUNT_SID']);
    unset($responseArr['SETUP_INFO_DATA_ARR']);
    unset($responseArr['MAILGUN_USER']);
    unset($responseArr['MAILGUN_KEY']);
    unset($responseArr['MAILGUN_HOST']);
    unset($responseArr['EXCHANGE_CURRENCY_RATES_APP_ID']);
    unset($responseArr['GOOGLE_CAPTCHA_SITE_KEY']);
    unset($responseArr['GOOGLE_CAPTCHA_SECRET_KEY']);
    unset($responseArr['APNS_KEY_ID']);
    unset($responseArr['APNS_TEAM_ID']);
    unset($responseArr['APNS_PRIVATE_KEY_FILE_NAME']);
    foreach ($responseArr as $k => $val) {
        if (startsWith($k, "STRIPE_") || startsWith($k, "FLUTTERWAVE_") || startsWith($k, "OMISE_") || startsWith($k, "PAYMAYA_") || startsWith($k, "XENDIT_") || startsWith($k, "SENANGPAY_") || startsWith($k, "SERFINSA_") || startsWith($k, "MPESA_") || startsWith($k, "PAYFORT_") || startsWith($k, "IUGU_") || startsWith($k, "PAYMENTEZ_") || startsWith($k, "BRAINTREE_") || startsWith($k, "IYZICO_") || startsWith($k, "ORANGEMOBILEMONEY_") || startsWith($k, "PAYULATAM_") || startsWith($k, "ADYEN_")) {
            unset($responseArr[$k]);
        }
    }
    return $responseArr;
}

function sendTripMessagePushNotification($iFromMemberId, $UserType, $iToMemberId, $iTripId, $tMessage, $eAppTerminate = "No", $iBiddingPostId = "")
{
    global $obj, $FIREBASE_API_ACCESS_KEY, $EVENT_MSG_OBJ;
    $nToUserType = isset($_REQUEST["nToUserType"]) ? $_REQUEST["nToUserType"] : '';
    if ($UserType == "Passenger") {
        $tblname = "register_driver";
        $condfield = 'iDriverId';
        $field = 'vFirebaseDeviceToken';
        $Fromtblname = "register_user";
        $Fromcondfield = 'iUserId';
        $pemFileIdentifier = 1;
        $vImageName = "vImgName";
        $USER_TYPE = RN_PROVIDER;
        if (!empty($nToUserType) && strtolower($nToUserType) == "driver") {
            $tblname = "register_driver";
            $condfield = 'iDriverId';
            $pemFileIdentifier = 1;
            $USER_TYPE = RN_PROVIDER;
        } elseif (!empty($nToUserType) && strtolower($nToUserType) == "company") {
            $tblname = "company";
            $condfield = 'iCompanyId';
            $pemFileIdentifier = 2;
            $USER_TYPE = RN_COMPANY;
        }
    } elseif ($UserType == "Company") {
        $tblname = "register_user";
        $condfield = 'iUserId';
        $pemFileIdentifier = 0;
        $USER_TYPE = RN_USER;
        if (!empty($nToUserType) && strtolower($nToUserType) == "driver") {
            $tblname = "register_driver";
            $condfield = 'iDriverId';
            $pemFileIdentifier = 1;
            $USER_TYPE = RN_PROVIDER;
        } elseif (!empty($nToUserType) && strtolower($nToUserType) == "passenger") {
            $tblname = "register_user";
            $condfield = 'iUserId';
            $pemFileIdentifier = 0;
            $USER_TYPE = RN_USER;
        }
        $field = 'vFirebaseDeviceToken';
        $Fromtblname = "company";
        $Fromcondfield = 'iCompanyId';
        $vImageName = "vImgName";
    } else {
        $tblname = "register_user";
        $condfield = 'iUserId';
        $field = 'vFirebaseDeviceToken';
        $Fromtblname = "register_driver";
        $Fromcondfield = 'iDriverId';
        $pemFileIdentifier = 0;
        $vImageName = "vImage";
        $USER_TYPE = RN_USER;
        if (!empty($nToUserType) && strtolower($nToUserType) == "company") {
            $tblname = "company";
            $condfield = 'iCompanyId';
            $pemFileIdentifier = 2;
            $USER_TYPE = RN_COMPANY;
        }
    }

    $memberData = $obj->MySQLSelect("SELECT iGcmRegId,eDeviceType,eLogout,eAppTerminate,eDebugMode,eHmsDevice,$field FROM $tblname WHERE $condfield = '$iToMemberId' ");

    $vFirebaseDeviceToken = $memberData[0][$field];
    $iGcmRegId = $memberData[0]['iGcmRegId'];
    $eDeviceType = $memberData[0]['eDeviceType'];
    $eLogout = $memberData[0]['eLogout'];
    $eAppTerminate = $memberData[0]['eAppTerminate'];
    $eDebugMode = $memberData[0]['eDebugMode'];
    $eHmsDevice = $memberData[0]['eHmsDevice'];

    $MemberName = get_value($Fromtblname, 'vName,vLastName', $Fromcondfield, $iFromMemberId);
    $FromMemberName = $MemberName[0]['vName'];
    $FromMemberImageName = get_value($Fromtblname, $vImageName, $Fromcondfield, $iFromMemberId, '', 'true');

    if (isset($iBiddingPostId) && !empty($iBiddingPostId)) {
        $bidding_post_data = $obj->MySQLSelect("SELECT iUserId,vBiddingPostNo FROM bidding_post WHERE iBiddingPostId = '$iBiddingPostId'");
        $vRideNo = $bidding_post_data[0]['vBiddingPostNo'];
        $iUserId = $bidding_post_data[0]['iUserId'];
        if ($UserType == "Driver") {
            $iDriverId = $iFromMemberId;
        } else {
            $iDriverId = $iToMemberId;
        }
    } else {
        $vRideNo = get_value('trips', 'vRideNo', 'iTripId', $iTripId, '', 'true');
    }
    
    if ($eLogout != "Yes") {
        $isForVoip = isset($_REQUEST["isForVoip"]) ? $_REQUEST["isForVoip"] : 'No';
        $isForVideoCall = isset($_REQUEST["isForVideoCall"]) ? $_REQUEST["isForVideoCall"] : 'No';
        $MsgType = "CHAT";
        
        if ($isForVoip == "Yes") {
            $MsgType = "VOIP";
        }
        if ($isForVideoCall == "Yes") {
            $MsgType = "VIDEOCALL";
        }
        $generalDataArr = $message_arr = array();
        $message_arr['Msg'] = $tMessage;
        $message_arr['MsgType'] = $MsgType;
        $message_arr['iFromMemberId'] = strval($iFromMemberId);
        if (isset($iBiddingPostId) && !empty($iBiddingPostId)) {
            $message_arr['iBiddingPostId'] = strval($iBiddingPostId);
            $message_arr['iUserId'] = strval($iUserId);
            $message_arr['iDriverId'] = strval($iDriverId);
            $message_arr['eType'] = "Bidding";
        } else {
            $message_arr['iTripId'] = strval($iTripId);
        }
        $message_arr['vBookingNo'] = strval($vRideNo);
        $message_arr['FromMemberName'] = strval($FromMemberName);
        $message_arr['FromMemberImageName'] = strval($FromMemberImageName);
        $generalDataArr[] = array('eDeviceType' => $eDeviceType, 'deviceToken' => $iGcmRegId, 'alertMsg' => $tMessage, 'eAppTerminate' => $eAppTerminate, 'message' => $message_arr, 'eDebugMode' => $eDebugMode, 'eHmsDevice' => $eHmsDevice);
        $EVENT_MSG_OBJ->send(array('GENERAL_DATA' => $generalDataArr), $USER_TYPE);
    }
}

function UpdateUserSmsLimitForEmergency($iMemberId, $UserType = "Passenger")
{
    global $obj, $tconfig, $VERIFICATION_CODE_RESEND_COUNT_EMERGENCY, $VERIFICATION_CODE_RESEND_COUNT_RESTRICTION_EMERGENCY;
    if ($UserType == "Passenger") {
        $tblname = "register_user";
        $fields = 'vVerificationCountEmergency,dSendverificationDateEmergency';
        $condfield = 'iUserId';
    } else {
        $tblname = "register_driver";
        $fields = 'vVerificationCountEmergency,dSendverificationDateEmergency';
        $condfield = 'iDriverId';
    }
    $db_user = $obj->MySQLSelect("select $fields from $tblname where $condfield='" . $iMemberId . "'");
    $vVerificationCount = $db_user[0]['vVerificationCountEmergency'];
    $dSendverificationDate = $db_user[0]['dSendverificationDateEmergency'];
    $currentdate = @date("Y-m-d H:i:s");
    $checklastcount = $VERIFICATION_CODE_RESEND_COUNT_EMERGENCY - 1;
    if ($vVerificationCount == $checklastcount) {
        $minutes = $VERIFICATION_CODE_RESEND_COUNT_RESTRICTION_EMERGENCY;
        $expire_stamp = date('Y-m-d H:i:s', strtotime("+" . $minutes . " minute"));
        $obj->sql_query("UPDATE $tblname set dSendverificationDateEmergency='" . $expire_stamp . "',vVerificationCountEmergency = vVerificationCountEmergency+1 WHERE $condfield = " . $iMemberId);
    } else {
        $vVerificationCount = $vVerificationCount + 1;
        if ($vVerificationCount > $VERIFICATION_CODE_RESEND_COUNT_EMERGENCY) {
            $vVerificationCount = $VERIFICATION_CODE_RESEND_COUNT_EMERGENCY;
        }
        $obj->sql_query("UPDATE " . $tblname . " set vVerificationCountEmergency = '" . $vVerificationCount . "' WHERE $condfield = " . $iMemberId);
    }
    return $iMemberId;
}

function getSocketURL()
{
    global $tconfig;
    $url = $tconfig["tsite_sc_protocol"] . $tconfig["tsite_sc_host"] . ":" . $tconfig["tsite_host_sc_port"] . $tconfig["tsite_host_sc_path"];
    return $url;
}

function FetchMemberAddressData($iUserId, $eUserType = "Passenger", $iUserAddressId)
{
    global $obj, $tconfig;
    $returnArr = array();
    if ($eUserType == "Passenger") {
        $UserType = "Rider";
    } else {
        $UserType = "Driver";
    }
    $sql = "SELECT * from user_address WHERE iUserId = '" . $iUserId . "' AND eUserType = '" . $UserType . "' AND iUserAddressId = '" . $iUserAddressId . "'";
    $result_Address = $obj->MySQLSelect($sql);
    //Added By HJ On 09-01-2020 For Solved 141 Mantis Bug #2799 Start
    $favAddress = 0;
    if (count($result_Address) == 0 || empty($result_Address)) {
        $sql = "SELECT * from user_fave_address WHERE iUserId = '" . $iUserId . "' AND eUserType = '" . $eUserType . "' AND iUserFavAddressId = '" . $iUserAddressId . "'";
        $result_Address = $obj->MySQLSelect($sql);
        $favAddress = 1;
    }
    //Added By HJ On 09-01-2020 For Solved 141 Mantis Bug #2799 End
    //print_r($result_Address);die;
    $ToTalAddress = count($result_Address);
    if ($ToTalAddress > 0) {
        if ($favAddress > 0) {
            $result_Address[0]['UserAddress'] = $result_Address[0]['vAddress'];
        } else {
            $vAddressType = $result_Address[0]['vAddressType'];
            $vBuildingNo = $result_Address[0]['vBuildingNo'];
            $vLandmark = $result_Address[0]['vLandmark'];
            $vServiceAddress = $result_Address[0]['vServiceAddress'];
            $PickUpAddress = ($vAddressType != "") ? $vAddressType . "\n" : "";
            $PickUpAddress .= ($vBuildingNo != "") ? $vBuildingNo . "," : "";
            $PickUpAddress .= ($vLandmark != "") ? $vLandmark . "\n" : "";
            $PickUpAddress .= ($vServiceAddress != "") ? $vServiceAddress : "";
            $result_Address[0]['UserAddress'] = $PickUpAddress;
        }
        $returnArr = $result_Address[0];
    }
    return $returnArr;
}

function FetchTotalMemberAddress($iUserId, $eUserType = "Passenger", $passengerLat, $passengerLon, $iCompanyId = 0)
{
    global $obj, $tconfig, $LIST_RESTAURANT_LIMIT_BY_DISTANCE;
    $ToTalAddress = 0;
    if ($iUserId == "" || $iUserId == 0 || $iUserId == NULL) {
        return $ToTalAddress;
    }
    if ($eUserType == "Passenger") {
        $UserType = "Rider";
    } else {
        $UserType = "Driver";
    }
    $sql = "select * from `user_address` where iUserId = '" . $iUserId . "' AND eUserType = '" . $UserType . "' AND eStatus = 'Active' ORDER BY iUserAddressId DESC";
    $db_userdata = $obj->MySQLSelect($sql);
    $db_userdata_new = array();
    $db_userdata_new = $db_userdata;
    if (count($db_userdata) > 0) {
        for ($i = 0; $i < count($db_userdata); $i++) {
            $isRemoveAddressFromList = "No";
            $passengeraddlat = $db_userdata[$i]['vLatitude'];
            $passengeraddlong = $db_userdata[$i]['vLongitude'];
            if ($iCompanyId == 0) {
                $distance = distanceByLocation($passengerLat, $passengerLon, $passengeraddlat, $passengeraddlong, "K");
                if ($distance > $LIST_RESTAURANT_LIMIT_BY_DISTANCE) {
                    $isRemoveAddressFromList = "Yes";
                }
            }
            ## Checking Distance Between Company and User Address ##
            if ($iCompanyId > 0) {
                $sql = "select vRestuarantLocationLat,vRestuarantLocationLong from `company` where iCompanyId = '" . $iCompanyId . "'";
                $db_companydata = $obj->MySQLSelect($sql);
                $vRestuarantLocationLat = $db_companydata[0]['vRestuarantLocationLat'];
                $vRestuarantLocationLong = $db_companydata[0]['vRestuarantLocationLong'];
                $distancewithcompany = distanceByLocation($passengeraddlat, $passengeraddlong, $vRestuarantLocationLat, $vRestuarantLocationLong, "K");
                if ($distancewithcompany > $LIST_RESTAURANT_LIMIT_BY_DISTANCE) {
                    $isRemoveAddressFromList = "Yes";
                }
            }
            ## Checking Distance Between Company and User Address ##
            if ($isRemoveAddressFromList == "Yes") {
                unset($db_userdata_new[$i]);
            }
        }
        $db_userdata = array_values($db_userdata_new);
        $ToTalAddress = count($db_userdata);
    }
    return $ToTalAddress;
}

function FetchMemberSelectedAddress($iUserId, $eUserType = "Passenger")
{
    global $obj, $tconfig, $userAddressDataArr;
    $returnArr = $result_Address = array();
    if ($eUserType == "Passenger") {
        $UserType = "Rider";
    } else {
        $UserType = "Driver";
    }
    //Added By HJ On 13-06-2020 For Optimization user_address Table Query Start
    if (isset($userAddressDataArr['user_address_' . $iUserId])) {
        $allUserAddress = $userAddressDataArr['user_address_' . $iUserId];
    } else {
        $userAddressDataArr = array();
        $allUserAddress = $obj->MySQLSelect("SELECT * from user_address WHERE iUserId = '" . $iUserId . "' AND eStatus = 'Active'");
        $userAddressDataArr['user_address_' . $iUserId] = $allUserAddress;
    }
    $totalAddressCount = 0;
    for ($a = 0; $a < count($allUserAddress); $a++) {
        $addresUser = $allUserAddress[$a]['eUserType'];
        if (strtoupper($addresUser) == strtoupper($UserType)) {
            $totalAddressCount += 1;
            $result_Address[] = $allUserAddress[$a];
        }
    }
    //Added By HJ On 13-06-2020 For Optimization user_address Table Query End
    $ToTalAddress = $totalAddressCount;
    if ($ToTalAddress > 0) {
        ## Checking First Last Orders Selected Address ##
        $last_order_Address = $obj->MySQLSelect("SELECT ord.iUserAddressId,ua.eStatus,ua.vServiceAddress,ua.vBuildingNo,ua.vLandmark,ua.vAddressType,ua.vLatitude,ua.vLongitude from orders as ord LEFT JOIN user_address as ua ON ord.iUserAddressId=ua.iUserAddressId WHERE ord.iUserId = '" . $iUserId . "' ORDER BY ord.iOrderId DESC limit 0,1");
        $iUserAddressId = $last_order_Address[0]['iUserAddressId'];
        if (count($last_order_Address) > 0 && $iUserAddressId > 0) {
            $eStatus = $last_order_Address[0]['eStatus'];
            if ($eStatus == "Active") {
                $vAddressType = $last_order_Address[0]['vAddressType'];
                $vBuildingNo = $last_order_Address[0]['vBuildingNo'];
                $vLandmark = $last_order_Address[0]['vLandmark'];
                $vServiceAddress = $last_order_Address[0]['vServiceAddress'];
                $PickUpAddress = ($vAddressType != "") ? $vAddressType . "\n" : "";
                $PickUpAddress .= ($vBuildingNo != "") ? $vBuildingNo . "," : "";
                $PickUpAddress .= ($vLandmark != "") ? $vLandmark . "\n" : "";
                $PickUpAddress .= ($vServiceAddress != "") ? $vServiceAddress : "";
                $PickUpLatitude = $last_order_Address[0]['vLatitude'];
                $PickUpLongitude = $last_order_Address[0]['vLongitude'];
                $returnArr['UserSelectedAddress'] = $PickUpAddress;
                $returnArr['UserSelectedLatitude'] = $PickUpLatitude;
                $returnArr['UserSelectedLongitude'] = $PickUpLongitude;
                $returnArr['UserSelectedAddressId'] = $iUserAddressId;
            } else {
                $returnArr['UserSelectedAddress'] = $returnArr['UserSelectedLatitude'] = $returnArr['UserSelectedLongitude'] = "";
                $returnArr['UserSelectedAddressId'] = 0;
            }
        } else {
            $vAddressType = $result_Address[0]['vAddressType'];
            $vBuildingNo = $result_Address[0]['vBuildingNo'];
            $vLandmark = $result_Address[0]['vLandmark'];
            $vServiceAddress = $result_Address[0]['vServiceAddress'];
            $PickUpAddress = ($vAddressType != "") ? $vAddressType . "\n" : "";
            $PickUpAddress .= ($vBuildingNo != "") ? $vBuildingNo . "," : "";
            $PickUpAddress .= ($vLandmark != "") ? $vLandmark . "\n" : "";
            $PickUpAddress .= ($vServiceAddress != "") ? $vServiceAddress : "";
            $PickUpLatitude = $result_Address[0]['vLatitude'];
            $PickUpLongitude = $result_Address[0]['vLongitude'];
            $returnArr['UserSelectedAddress'] = $PickUpAddress;
            $returnArr['UserSelectedLatitude'] = $PickUpLatitude;
            $returnArr['UserSelectedLongitude'] = $PickUpLongitude;
            $returnArr['UserSelectedAddressId'] = $result_Address[0]['iUserAddressId'];
        }
        ## Checking First Last Orders Selected Address ##
    } else {
        $returnArr['UserSelectedAddress'] = $returnArr['UserSelectedLatitude'] = $returnArr['UserSelectedLongitude'] = "";
        $returnArr['UserSelectedAddressId'] = 0;
    }
    return $returnArr;
}

function FetchTotalOngoingTrips($iMemberId)
{
    global $obj, $MODULES_OBJ;
    // $sql_trips_chk = "SELECT iTripId FROM trips as tr WHERE tr.iActive != 'Canceled' AND tr.iActive != 'Finished' AND tr.tUserWalletBalance != '' AND tr.vTripPaymentMode = 'Card' AND tr.iUserId = '" . $iMemberId . "'";
    $data_trips = $obj->MySQLSelect("SELECT iTripId, iOrderId FROM trips as tr WHERE tr.iActive != 'Canceled' AND tr.iActive != 'Finished' AND tr.tUserWalletBalance != '' AND tr.tUserWalletBalance != '0' AND tr.iUserId = '" . $iMemberId . "'");
    $totalCount = 0;
    if ($MODULES_OBJ->isDeliverAllFeatureAvailable()) {
        $ssql_orderIds = "";
        if (!empty($data_trips) && count($data_trips) > 0) {
            for ($i = 0; $i < count($data_trips); $i++) {
                if (!empty($data_trips[$i]['iOrderId']) && $data_trips[$i]['iOrderId'] > 0) {
                    $ssql_orderIds = $ssql_orderIds == "" ? " AND NOT IN( " . $data_trips[$i]['iOrderId'] : $ssql_orderIds . ", " . $data_trips[$i]['iOrderId'];
                }
            }
            if (!empty($ssql_orderIds)) {
                $ssql_orderIds = $ssql_orderIds . ")";
            }
        }
        // $sql_orders_chk = "SELECT iOrderId FROM orders as ord WHERE ord.ePaid = 'No' ".$ssql_orderIds." AND ord.iStatusCode IN(1,2,4,5,12) AND ord.ePaymentOption = 'Card' AND ord.iUserId = '" . $iMemberId . "'";
        $data_orders = $obj->MySQLSelect("SELECT iOrderId FROM orders as ord WHERE ord.ePaid = 'No' " . $ssql_orderIds . " AND ord.iStatusCode IN(1,2,4,5,12)  AND ord.tUserWalletBalance != '' AND ord.tUserWalletBalance != '0' AND ord.iUserId = '" . $iMemberId . "'");
    }
    $tripIdsArr = $orderIdsArr = $bidIdsArr = array();
    if (!empty($data_trips) && count($data_trips) > 0) {
        $totalCount = count($data_trips);
        foreach ($data_trips as $data_trips_tmp) {
            $tripIdsArr[] = $data_trips_tmp['iTripId'];
        }
    }
    if (!empty($data_orders) && count($data_orders) > 0) {
        $totalCount = $totalCount + count($data_orders);
        foreach ($data_orders as $data_orders_tmp) {
            $orderIdsArr[] = $data_orders_tmp['iOrderId'];
        }
    }
    if ($MODULES_OBJ->isEnableBiddingServices()) {
        $data_bids = $obj->MySQLSelect("SELECT iBiddingPostId FROM bidding_post WHERE ePaid = 'No' AND vTaskStatus IN ('Active', 'Arrived', 'Ongoing', 'Finished') AND tUserWalletBalance > 0 AND iUserId = '$iMemberId'");
        if (!empty($data_bids) && count($data_bids) > 0) {
            $totalCount = $totalCount + count($data_bids);
            foreach ($data_bids as $data_bids_tmp) {
                $bidIdsArr[] = $data_bids_tmp['iBiddingPostId'];
            }
        }
    }
    $returnArr['TotalCount'] = $totalCount;
    $returnArr['ActiveTripIds'] = $tripIdsArr;
    $returnArr['ActiveOrderIds'] = $orderIdsArr;
    $returnArr['ActiveBidIds'] = $bidIdsArr;
    return $returnArr;
}

function getValidPromoCodes()
{
    global $obj;
    $eType = isset($_REQUEST['eType']) ? clean($_REQUEST['eType']) : '';
    $eFly = isset($_REQUEST['eFly']) ? clean($_REQUEST['eFly']) : 'No';
    $iMemberId = isset($_REQUEST['iMemberId']) ? clean($_REQUEST['iMemberId']) : '';
    if (empty($iMemberId)) {
        $iMemberId = isset($_REQUEST['iUserId']) ? clean($_REQUEST['iUserId']) : '';
    }
    $userType = isset($_REQUEST['UserType']) ? clean($_REQUEST['UserType']) : 'Passenger';
    $eSystemType = isset($_REQUEST['eSystem']) ? clean($_REQUEST['eSystem']) : '';
    $promoCode = isset($_REQUEST['PromoCode']) ? clean($_REQUEST['PromoCode']) : '';
    if (empty($promoCode)) {
        $promoCode = isset($_REQUEST['vCouponCode']) ? clean($_REQUEST['vCouponCode']) : '';
    }
    $curr_date = @date("Y-m-d");
    $ssql = "";
    if ($eType == "DeliverAll" || !empty($eSystemType)) {
        // Display Only deliverAll category + General Category related promocodes
        $ssql = " AND (eSystemType = 'DeliverAll' OR eSystemType = 'General')";
    } else if (strtoupper($eType) == "DELIVER" || strtoupper($eType) == "DELIVERY") {
        // Display Only Delivery category + General Category Promocodes
        $ssql = " AND (eSystemType = 'Delivery' OR eSystemType = 'Deliver' OR eSystemType = 'General')";
    } else if (strtoupper($eType) == "RIDE") {
        // Display Only Ride category + General Category Promocodes
        $ssql = " AND (eSystemType = 'Ride' OR eSystemType = 'General') AND eFly = '0'";
    } else if (strtoupper($eType) == "UBERX") {
        // Display Only UberX category + General Category Promocodes
        $ssql = " AND (eSystemType = 'UberX' OR eSystemType = 'General')";
    } else {
        // Display Only General category Promocodes
        $ssql = " AND eSystemType = 'General'";
    }
    if ($eFly == 'Yes' || $eType == 'Fly') { //eType condition because of website
        $ssql = " AND ((eSystemType = 'Ride' AND eFly = '1') OR eSystemType = 'General')";
    }
    if ($promoCode != "") {
        // This will be used to validate promocode. If blank then this function() gives array of all valid promo codes
        $ssql .= " AND vCouponCode='" . $promoCode . "'";
    } else {
        $ssql .= " AND vPromocodeType = 'Public'";
    }
    if ($userType == "Passenger") {
        $UserDetail = get_value('register_user AS ru LEFT JOIN currency AS c ON c.vName=ru.vCurrencyPassenger', 'ru.vCurrencyPassenger as currencyCode, ru.vLang as vLang, c.Ratio as currencyRatio, c.vSymbol as currencySymbol', 'ru.iUserId', $iMemberId);
    } else {
        $UserDetail = get_value('register_driver AS rd LEFT JOIN currency AS c ON c.vName=rd.vCurrencyDriver', 'rd.vCurrencyDriver as currencyCode, rd.vLang as vLang, c.Ratio as currencyRatio, c.vSymbol as currencySymbol', 'rd.iDriverId', $iMemberId);
    }
    // add condition when tDescription blank for json extract
    $couponData = $obj->MySQLSelect("SELECT iCouponId,vCouponCode,fDiscount, eType, eValidityType, dActiveDate, dExpiryDate, eSystemType, eFly, CASE WHEN JSON_VALID(tDescription) THEN JSON_UNQUOTE(JSON_VALUE(tDescription, '$.tDescription_" . $UserDetail[0]['vLang'] . "')) ELSE null END AS tDescription, eStoreType, iCompanyId, eFreeDelivery,iLocationId  from coupon WHERE eStatus = 'Active' AND iUsageLimit > iUsed " . $ssql . " ORDER BY iCouponId DESC");
    $validCoponsList = "";
    foreach ($couponData as $couponData_tmp) {
        if ($couponData_tmp['eValidityType'] == "Defined") {
            $dActiveDate = $couponData_tmp['dActiveDate'];
            $dExpiryDate = $couponData_tmp['dExpiryDate'];
            if (($dActiveDate <= $curr_date && $dExpiryDate >= $curr_date) == false) {
                continue;
            }
        }
        $validCoponsList = empty($validCoponsList) ? $couponData_tmp['vCouponCode'] : $validCoponsList . ',' . $couponData_tmp['vCouponCode'];
    }
    if (strtoupper(ONLYDELIVERALL) != "YES") {
        $validCoponsList_sql = "'" . implode("', '", explode(",", $validCoponsList)) . "'";
        $trips_data = $obj->MySQLSelect("select GROUP_CONCAT(`vCouponCode`) as UsedCoupons from `trips` where `vCouponCode` IN (" . $validCoponsList_sql . ") and `iUserId`='$iMemberId' and `iOrderId`='0'");
        if (!empty($trips_data) && count($trips_data) > 0 && !empty($trips_data[0]['UsedCoupons'])) {
            // $validCoponsList = implode(",", array_diff(explode(",", $validCoponsList), explode(",", $trips_data[0]['UsedCoupons'])));
            $validCoponsList = implode(",", array_udiff(explode(",", $validCoponsList), explode(",", $trips_data[0]['UsedCoupons']), 'strcasecmp'));
        }
        //Added By HJ On 04-09-2019 For Check Later Booking Promocode Used Or Not Start
        $validCoponsList_sql = "'" . implode("', '", explode(",", $validCoponsList)) . "'";
        $booking_data = $obj->MySQLSelect("select GROUP_CONCAT(`vCouponCode`) as UsedCoupons from `cab_booking` where `vCouponCode` IN (" . $validCoponsList_sql . ") and `eStatus`!='Declined' and `eStatus`!='Cancel' and `eStatus`!='Completed' and `iUserId`='$iMemberId' "); // and `iUserId`='$iMemberId'
        if (!empty($booking_data) && count($booking_data) > 0 && !empty($booking_data[0]['UsedCoupons'])) {
            // $validCoponsList = implode(",", array_diff(explode(",", $validCoponsList), explode(",", $booking_data[0]['UsedCoupons'])));
            $validCoponsList = implode(",", array_udiff(explode(",", $validCoponsList), explode(",", $booking_data[0]['UsedCoupons']), 'strcasecmp'));
        }
        //Added By HJ On 04-09-2019 For Check Later Booking Promocode Used Or Not End
    }
    if (strtoupper(DELIVERALL) == "YES") {
        $validCoponsList_sql = "'" . implode("', '", explode(",", $validCoponsList)) . "'";
        $trips_data = $obj->MySQLSelect("select GROUP_CONCAT(`vCouponCode`) as UsedCoupons from `orders` where `vCouponCode` IN (" . $validCoponsList_sql . ") and `iUserId`='$iMemberId' AND iStatusCode NOT IN (9,11,12)");
        if (!empty($trips_data) && count($trips_data) > 0 && !empty($trips_data[0]['UsedCoupons'])) {
            // $validCoponsList = implode(",", array_diff(explode(",", $validCoponsList), explode(",", $trips_data[0]['UsedCoupons'])));
            $validCoponsList = implode(",", array_udiff(explode(",", $validCoponsList), explode(",", $trips_data[0]['UsedCoupons']), 'strcasecmp'));
        }
    }
    $finalCouponData = array();
    $validCoponsListArr = explode(",", $validCoponsList);
    $userRatio = $UserDetail[0]['currencyRatio'];
    foreach ($couponData as $couponData_tmp) {
        if (in_array($couponData_tmp['vCouponCode'], $validCoponsListArr)) {
            if ($couponData_tmp['eType'] != "percentage") {
                $couponData_tmp['fDiscount'] = setTwoDecimalPoint($couponData_tmp['fDiscount'] * $userRatio); //Added By HJ On 31-12-2018 Convert Default Currency Into User Currency
                $couponData_tmp['fDiscountSymbol'] = formateNumAsPerCurrency($couponData_tmp['fDiscount'], $UserDetail[0]['currencyCode']);
            } else {
                $couponData_tmp['fDiscountSymbol'] = $couponData_tmp['fDiscount'] . '%';
            }
            $couponData_tmp['vCurrency'] = $UserDetail[0]['currencyCode'];
            $couponData_tmp['vSymbol'] = $UserDetail[0]['currencySymbol'];
            $couponData_tmp['eSystemType'] = ($couponData_tmp['eSystemType'] == 'Ride' && $couponData_tmp['eFly'] == 1) ? 'Fly' : $couponData_tmp['eSystemType'];
            $couponData_tmp['tDescription'] = !empty($couponData_tmp['tDescription']) ? $couponData_tmp['tDescription'] : "";
            $couponData_tmp['dExpiryDate'] = DateTime($couponData_tmp['dExpiryDate'], 22);
            $finalCouponData[] = $couponData_tmp;
        }
    }
    $returnData = array();
    $returnData['CouponList'] = $finalCouponData;
    $returnData['vCurrency'] = $UserDetail[0]['currencyCode'];
    $returnData['vSymbol'] = $UserDetail[0]['currencySymbol'];
    return $returnData;
}

function getGooglelocatiotionTrackingURL($iTripId, $iDriverId)
{
    $trackingURL = '';
    if (isset($iTripId) && !empty($iTripId)) {
        $tripsLocationsData = get_value('trips_locations', 'tPlatitudes,tPlongitudes', 'iTripId', $iTripId);
        $lasttPlatitudes = $lasttPlongitudes = '';
        if (isset($tripsLocationsData) && !empty($tripsLocationsData)) {
            $tPlatitudes = $tripsLocationsData[0]['tPlatitudes'];
            $tPlongitudes = $tripsLocationsData[0]['tPlongitudes'];
            $tPlatitudesArr = explode(",", $tPlatitudes);
            $tPlongitudesArr = explode(",", $tPlongitudes);
            $lasttPlatitudes = $tPlatitudesArr[(count($tPlatitudesArr) - 1)];
            $lasttPlongitudes = $tPlongitudesArr[(count($tPlongitudesArr) - 1)];
        } else {
            $registerDriverData = get_value('register_driver', 'vLatitude,vLongitude', 'iDriverId', $iDriverId);
            $lasttPlatitudes = $registerDriverData[0]['vLatitude'];
            $lasttPlongitudes = $registerDriverData[0]['vLongitude'];
        }
        if (isset($lasttPlongitudes) && !empty($lasttPlongitudes)) {
            $formatted_address = getLocationNameLatLog($lasttPlatitudes, $lasttPlongitudes);
            if (!empty($formatted_address)) {
                $geoUrl = "http://maps.google.com/maps?q=" . urlencode($formatted_address);
            } else {
                $geoUrl = "http://maps.google.com/maps?q=loc:" . $lasttPlatitudes . "," . $lasttPlongitudes;
            }
            //exit;
            $trackingURL = get_tiny_url($geoUrl);
        }
    }
    return $trackingURL;
}

function getLocationNameLatLog($latitudes, $longitudes, $onlyAddress = "Yes")
{
    global $GOOGLE_SEVER_GCM_API_KEY;
    $formatted_address = '';
    if (!empty($latitudes) && !empty($longitudes)) {
        $url = 'latlng=' . $latitudes . ',' . $longitudes . '&key=' . $GOOGLE_SEVER_GCM_API_KEY;
        $ch = curl_init();
        $timeout = 5;
        curl_setopt($ch, CURLOPT_URL, 'https://maps.googleapis.com/maps/api/geocode/json?' . $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
        $data = curl_exec($ch);
        curl_close($ch);
        $data_result = json_decode($data);
        if (!empty($data_result)) {
            if ($data_result->status == "OK") {
                if (!empty($data_result->results)) {
                    $result = $data_result->results;
                    $formatted_address = $result[0]->formatted_address;
                }
            }
        }

        if(strtoupper($onlyAddress) == "YES") {
            return $formatted_address;    
        } else {
            return $data;
        }
    }
}

function getUserOutstandingAmount($iUserId, $tableFieldName, $tripId = 0)
{
    global $obj, $data_trips;
    $whereCondi = "AND eAuthoriseIdName='No' AND iAuthoriseId=0";
    if ($tripId > 0) {
        $whereCondi = "AND eAuthoriseIdName='" . $tableFieldName . "' AND iAuthoriseId='" . $tripId . "'";
    }
    $iOrganizationId = isset($_REQUEST["iOrganizationId"]) ? $_REQUEST["iOrganizationId"] : $data_trips[0]['iOrganizationId'];
    $sql = "SELECT iTripOutstandId,fPendingAmount FROM trip_outstanding_amount WHERE iUserId='" . $iUserId . "' AND ePaidByPassenger = 'No' AND ePaymentBy = 'Passenger' AND fPendingAmount >0 $whereCondi";
    if ($iOrganizationId > 0) {
        $sql .= " AND iOrganizationId ='" . $iOrganizationId . "'";
    } else {
        $sql .= " AND iOrganizationId ='0'";
    }
    $getOutStandingAmt = $obj->MySQLSelect($sql);
    $ids = "";
    $outStandingAmt = 0;
    for ($r = 0; $r < count($getOutStandingAmt); $r++) {
        $ids .= ",'" . $getOutStandingAmt[$r]['iTripOutstandId'] . "'";
        $outStandingAmt += $getOutStandingAmt[$r]['fPendingAmount'];
    }
    /*11-06-2020*/ /*$sql = "SELECT iTripOutstandId,fPendingAmount FROM trip_outstanding_amount WHERE iUserId='" . $iUserId . "' AND ePaidByPassenger = 'No' AND ePaymentBy = 'Passenger' AND fPendingAmount >0 $whereCondi";

    if ($iOrganizationId > 0) {

        $sql .= " AND iOrganizationId ='" . $iOrganizationId . "'";

    } else {

        $sql .= " AND iOrganizationId ='0'";

    }

    $sql = $sql .  " ORDER BY iTripOutstandId DESC LIMIT 1";

    $getOutStandingAmt = $obj->MySQLSelect($sql);



    $outStandingAmt = $getOutStandingAmt[0]['fPendingAmount'];*/
    /*11-06-2020*/
    $returnArr = array();
    if ($ids != "") {
        $ids = trim($ids, ",");
    }
    $returnArr['iTripOutstandId'] = $ids;
    $returnArr['fPendingAmount'] = $outStandingAmt;
    //echo "<pre>";print_r($returnArr);die;
    return $returnArr;
}

//Added By HJ On 31-07-2019 For Insert Default Corporate User When Add New User/Rider In Demo Copy Start
function insertCorporateUserProfile($iUserId, $email)
{
    global $obj;
    $insert_user = array();
    $insert_user['iUserId'] = $iUserId;
    $insert_user['iUserProfileMasterId'] = 1;
    $insert_user['iOrganizationId'] = 1;
    $insert_user['vProfileEmail'] = $email;
    $insert_user['eStatus'] = "Active";
    $id = $obj->MySQLQueryPerform("user_profile", $insert_user, 'insert');
    return $id;
}

//Added By HJ On 07-08-2019 For Calculate Promocode Discount For UbeX App Type As Per Discuss with KS Sir Start
function EvaluatePromoCodeValue($getCouponCode, $fareAmount, $priceRatio)
{
    global $obj;
    $discountValue = $discountValue_orig = 0;
    $discountValueType = "cash";
    if ($getCouponCode != "") {
        //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data Start
        $getCouponCode = $obj->MySQLSelect("SELECT fDiscount,eType FROM coupon WHERE vCouponCode='" . $getCouponCode . "' AND eStatus='Active'");
        if (count($getCouponCode) > 0) {
            $discountValue = $getCouponCode[0]['fDiscount'];
            $discountValueType = $getCouponCode[0]['eType'];
            $discountValue_orig = $discountValue;
        }
        if ($discountValueType == "percentage") {
            $vDiscount = round($discountValue, 1) . ' ' . "%";
            $discountValue = round(($fareAmount * $discountValue), 1) / 100;
        } else {
            $curr_sym = get_value('currency', 'vSymbol', 'eDefault', 'Yes', '', 'true');
            $discountValue = round(($discountValue * $priceRatio), 2);
            if ($discountValue > $fareAmount) {
                $discountValue = $fareAmount;
                $vDiscount = round($fareAmount, 1) . ' ' . $curr_sym;
            } else {
                $vDiscount = round($discountValue, 1) . ' ' . $curr_sym;
            }
        }
    }
    return $discountValue;
}

function AppTypeFilterArr($iMemberId, $UserType, $vLang, $enableFlyFilter = "Yes")
{
    global $MODULES_OBJ, $obj, $APP_TYPE;
    $returnArr = array();
    if ($UserType == "Passenger") {
        $tbl_name = "register_user";
        $currencycode = "vCurrencyPassenger";
        $iUserId = "iUserId";
        $eUserType = "Rider";
    } else {
        $tbl_name = "register_driver";
        $currencycode = "vCurrencyDriver";
        $iUserId = "iDriverId";
        $eUserType = "Driver";
    }
    $langLabels = "'LBL_RIDE','LBL_DELIVERY','LBL_SERVICES','LBL_ALL','LBL_HEADER_RDU_FLY_RIDE'";
    $getLangLabels = $obj->MySQLSelect("SELECT vValue,vLabel FROM `language_label` WHERE vLabel IN ($langLabels) AND vCode = '" . $vLang . "'");
    //echo "<pre>";print_r($getLangLabels);die;
    $codeArr = array();
    for ($l = 0; $l < count($getLangLabels); $l++) {
        $codeArr[$getLangLabels[$l]['vLabel']] = $getLangLabels[$l]['vValue'];
    }
    //echo "<pre>";print_r($codeArr);die;
    foreach ($codeArr as $key => $value) {
        $$key = $value;
    }
    //added by SP for fly stations on 31-08-2019 end
    //Commented By HJ On 18-10-2019 For Purpose Of Optimization End
    if ($APP_TYPE == "Ride-Delivery" || $APP_TYPE == "Ride-Delivery-UberX") {
        $returnArr[] = array("vFilterParam" => "", "vTitle" => $LBL_ALL);
        if ($MODULES_OBJ->isRideFeatureAvailable()) {
            $returnArr[] = array("vFilterParam" => "Ride", "vTitle" => $LBL_RIDE);
        }
        if ($MODULES_OBJ->isDeliveryFeatureAvailable()) {
            $returnArr[] = array("vFilterParam" => "Deliver", "vTitle" => $LBL_DELIVERY);
        }
        if ($APP_TYPE == "Ride-Delivery-UberX" && $MODULES_OBJ->isUfxFeatureAvailable() == 'Yes' && $MODULES_OBJ->isUberXFeatureAvailable()) {
            $returnArr[] = array("vFilterParam" => "UberX", "vTitle" => $LBL_SERVICES);
        }
    }
    //added by SP for fly stations on 31-08-2019 start
    if ($MODULES_OBJ->isAirFlightModuleAvailable() && $enableFlyFilter == "Yes") {
        $returnArr[] = array("vFilterParam" => "eFly", "vTitle" => $LBL_HEADER_RDU_FLY_RIDE);
    }
    //added by SP for fly stations on 31-08-2019 end
    //echo "<pre>";print_r($returnArr);die;
    return $returnArr;
}

function ConfirmOrderByRestaurantcall($iCompanyId, $iOrderId)
{
    global $obj, $PUBNUB_DISABLED, $EVENT_MSG_OBJ, $COMM_MEDIA_OBJ, $LANG_OBJ;
    $where = " iOrderId = '" . $iOrderId . "'";
    $Data_update_order['iStatusCode'] = '2';
    $Order_Update_Id = $obj->MySQLQueryPerform("orders", $Data_update_order, 'update', $where);
    $id = createOrderLog($iOrderId, "2");
    // # Send Notification To User ##
    $Message = "OrderConfirmByRestaurant";
    $sql = "select ru.iUserId,ru.iGcmRegId,ru.eDeviceType,ru.tSessionId,ru.iAppVersion,ru.vLang,ord.vOrderNo,ord.iServiceId,ru.eAppTerminate,ru.eDebugMode,ord.eOrderplaced_by,ord.eTakeaway from orders as ord LEFT JOIN register_user as ru ON ord.iUserId=ru.iUserId where ord.iOrderId = '" . $iOrderId . "'";
    $data_order = $obj->MySQLSelect($sql);
    $vLangCode = $data_order[0]['vLang'];
    $vOrderNo = $data_order[0]['vOrderNo'];
    $iUserId = $data_order[0]['iUserId'];
    $iServiceId = $data_order[0]['iServiceId'];
    $eOrderplaced_by = $data_order[0]['eOrderplaced_by'];
    if ($vLangCode == "" || $vLangCode == NULL) {
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
        $vLangCode = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLangCode, "1", $iServiceId);
    $alertMsg = $languageLabelsArr['LBL_CONFIRM_ORDER_BY_RESTAURANT_APP_TXT'];
    if ($data_order[0]['eTakeaway'] == "Yes") {
        $alertMsg = $languageLabelsArr['LBL_CONFIRM_ORDER_BY_RESTAURANT_TAKEAWAY_TXT'];
    }
    $message_arr = array();
    $message_arr['Message'] = $Message;
    $message_arr['iOrderId'] = $iOrderId;
    $message_arr['vOrderNo'] = $vOrderNo;
    $message_arr['vTitle'] = $alertMsg;
    $message_arr['tSessionId'] = $data_order[0]['tSessionId'];
    $message_arr['eSystem'] = "DeliverAll";
    $iAppVersion = $data_order[0]['iAppVersion'];
    $eDeviceType = $data_order[0]['eDeviceType'];
    $iGcmRegId = $data_order[0]['iGcmRegId'];
    $tSessionId = $data_order[0]['tSessionId'];
    $eAppTerminate = $data_order[0]['eAppTerminate'];
    $eDebugMode = $data_order[0]['eDebugMode'];
    $eHmsDevice = $data_order[0]['eHmsDevice'];
    $channelName = "PASSENGER_" . $iUserId;
    $generalDataArr[] = array('eDeviceType' => $eDeviceType, 'deviceToken' => $iGcmRegId, 'alertMsg' => $alertMsg, 'eAppTerminate' => $eAppTerminate, 'message' => $message_arr, 'channelName' => $channelName, 'eDebugMode' => $eDebugMode, 'eHmsDevice' => $eHmsDevice);
    $EVENT_MSG_OBJ->send(array('GENERAL_DATA' => $generalDataArr), RN_USER);
    if ($Order_Update_Id > 0) {
        $returnArr['Action'] = "1";
        $returnArr['message'] = "LBL_CONFIRM_ORDER_BY_RESTAURANT";
        if (strtoupper($eOrderplaced_by) != "KIOSK") {
            $COMM_MEDIA_OBJ->orderemaildata($iOrderId, 'Passenger');
        }
    }
}

function sendAutoRequestToDriver($iOrderId, $vCountry, $eBuyAnyServiceOrd = "No")
{
    global $PUBNUB_PUBLISH_KEY, $PUBNUB_SUBSCRIBE_KEY, $uuid, $obj, $iServiceId, $intervalmins, $PUBNUB_DISABLED, $EVENT_MSG_OBJ, $MODULES_OBJ, $LANG_OBJ, $RIDER_REQUEST_ACCEPT_TIME;
    $checkOrderRequestStatusArr = checkOrderRequestStatus($iOrderId);
    $action = $checkOrderRequestStatusArr['Action'];
    $db_order = $obj->MySQLSelect('select * from orders where iOrderId="' . $iOrderId . '" and iStatusCode="2"');
    if ($eBuyAnyServiceOrd == "Yes") {
        $db_order = $obj->MySQLSelect('select * from orders where iOrderId="' . $iOrderId . '"');
    }
    $vOrderNo = $db_order[0]['vOrderNo'];
    $eBuyAnyService = $db_order[0]['eBuyAnyService'];
    $eSentMailAdmin = $db_order[0]['eSentMailAdmin'];
    if ($action == 0 && $eSentMailAdmin == "No") {        //Send Mail To Admin
        sendMailToAdmin($vOrderNo);
    }
    $iUserId = $db_order[0]['iUserId'];
    $iCompanyId = $db_order[0]['iCompanyId'];
    $iUserAddressId = $db_order[0]['iUserAddressId'];
    $ePaymentOption = $db_order[0]['ePaymentOption'];
    $companyfields = "vCompany,vRestuarantLocation,vRestuarantLocationLat,vRestuarantLocationLong,vCaddress,iGcmRegId,vImage as vImgName,vAvgRating,vPhone,vCode as vPhoneCode,eDriverOption";
    $Data_cab_requestcompany = get_value('company', $companyfields, 'iCompanyId', $iCompanyId);
    $UserSelectedAddressArr = FetchMemberAddressData($iUserId, "Passenger", $iUserAddressId);
    //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
    $vLangCode = $LANG_OBJ->FetchDefaultLangData("vCode");
    //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLangCode, "1", $iServiceId);
    $userwaitinglabel = $languageLabelsArr['LBL_TRIP_USER_WAITING_DL'];
    if ($eBuyAnyService == "Yes") {
        $userwaitinglabel = $languageLabelsArr['LBL_USER_WAITING'];
    }
    $alertMsg = $userwaitinglabel;
    $PickUpAddress = $Data_cab_requestcompany[0]['vRestuarantLocation'];
    $DestAddress = $UserSelectedAddressArr['UserAddress'];
    $PickUpLatitude = $Data_cab_requestcompany[0]['vRestuarantLocationLat'];
    $PickUpLongitude = $Data_cab_requestcompany[0]['vRestuarantLocationLong'];
    $DestLatitude = $UserSelectedAddressArr['vLatitude'];
    $DestLongitude = $UserSelectedAddressArr['vLongitude'];
    $address_data['PickUpAddress'] = $PickUpAddress;
    $address_data['DropOffAddress'] = $DestAddress;
    $address_data['eDriverType'] = $Data_cab_requestcompany[0]['eDriverOption'];
    $address_data['iCompanyId'] = $iCompanyId;
    $address_data['iOrderId'] = $iOrderId;
    $DataArr = FetchAvailableDrivers($PickUpLatitude, $PickUpLongitude, $address_data, "Yes", "No", "No", "", $DestLatitude, $DestLongitude);
    $Data = $DataArr['DriverList'];
    $driver_id_auto = "";
    if (isset($DataArr['driver_id_auto'])) {
        $driver_id_auto = $DataArr['driver_id_auto'];
    }
    $fWalletDebit = $db_order[0]['fWalletDebit'];
    $fNetTotal = $db_order[0]['fNetTotal'];
    $isFullWalletCharge = "No";
    if ($fWalletDebit > 0 && $fNetTotal == 0) {
        $isFullWalletCharge = "Yes";
    }
    // # Exclude Drivers From list if wallet balance is lower than minimum wallet balance only for cash orders ##
    if ($ePaymentOption == "Cash" && $isFullWalletCharge == "No") {
        $Data_new = array();
        $Data_new = $Data;
        for ($i = 0; $i < count($Data); $i++) {
            $isRemoveFromList = "No";
            $ACCEPT_CASH_TRIPS = $Data[$i]['ACCEPT_CASH_TRIPS'];
            if ($ACCEPT_CASH_TRIPS == "No") {
                $isRemoveFromList = "Yes";
            }
            if ($isRemoveFromList == "Yes") {
                unset($Data_new[$i]);
            }
        }
        $Data = array_values($Data_new);
        $driver_id_auto = "";
        for ($j = 0; $j < count($Data); $j++) {
            $driver_id_auto .= $Data[$j]['iDriverId'] . ",";
        }
        $driver_id_auto = trim($driver_id_auto, ",");
    } else if ($driver_id_auto == "") {
        for ($j = 0; $j < count($Data); $j++) {
            $driver_id_auto .= $Data[$j]['iDriverId'] . ",";
        }
        $driver_id_auto = trim($driver_id_auto, ",");
    }
    $final_message['Message'] = "CabRequested";
    $final_message['sourceLatitude'] = strval($PickUpLatitude);
    $final_message['sourceLongitude'] = strval($PickUpLongitude);
    $final_message['PassengerId'] = strval($iUserId);
    $final_message['iCompanyId'] = strval($iCompanyId);
    $final_message['iOrderId'] = strval($iOrderId);
    $passengerFName = $Data_cab_requestcompany[0]['vCompany'];
    $final_message['PName'] = $passengerFName;
    $final_message['PPicName'] = $Data_cab_requestcompany[0]['vImgName'];
    $final_message['PRating'] = $Data_cab_requestcompany[0]['vAvgRating'];
    $final_message['PPhone'] = $Data_cab_requestcompany[0]['vPhone'];
    $final_message['PPhoneC'] = $Data_cab_requestcompany[0]['vPhoneCode'];
    $final_message['PPhone'] = '+' . $final_message['PPhoneC'] . $final_message['PPhone'];
    $final_message['destLatitude'] = strval($DestLatitude);
    $final_message['destLongitude'] = strval($DestLongitude);
    $final_message['MsgCode'] = strval(time() . mt_rand(1000, 9999));
    $final_message['vTitle'] = $alertMsg;
    $final_message['eSystem'] = "DeliverAll";
    if ($db_order[0]['eBuyAnyService'] == "Yes") {
        $final_message['GenieOrder'] = "Yes";
    }
    $cmpMinutes = ceil((fetchtripstatustimeMAXinterval() + $intervalmins) / 60);
    $str_date = @date('Y-m-d H:i:s', strtotime('-' . $cmpMinutes . ' minutes'));
    $result = $obj->MySQLSelect("SELECT iGcmRegId,eDeviceType,iDriverId,vLang,tSessionId,iAppVersion,vCountry,eAppTerminate,eDebugMode,eHmsDevice FROM register_driver WHERE iDriverId IN (" . $driver_id_auto . ") AND tLocationUpdateDate > '$str_date' AND vAvailability='Available' ");

    $result_new = array();
    if ($MODULES_OBJ->isEnableAcceptMultipleOrders()) {
        $sql = "SELECT iGcmRegId,eDeviceType,iDriverId,vLang,tSessionId,iAppVersion,eAppTerminate,eDebugMode,eHmsDevice FROM register_driver WHERE iDriverId IN (" . $driver_id_auto . ") AND tLocationUpdateDate > '$str_date'";
        $result_new = $obj->MySQLSelect($sql);
    }
    $result = array_merge($result, $result_new);
    if ((count($result) == 0 || $driver_id_auto == "" || count($Data) == 0) && $eSentMailAdmin == "No") {
        sendMailToAdmin($vOrderNo);
    } else {
        $currentDateTime = date("Y-m-d H:i:s");
        $totalSecond = $RIDER_REQUEST_ACCEPT_TIME + 5;
        $cenvertedTime = date('Y-m-d H:i:s', strtotime('+' . $totalSecond . ' seconds', strtotime($currentDateTime)));
        $obj->sql_query("UPDATE orders SET dCronExpiredDate='" . strtotime($cenvertedTime) . "',tDriverIds='" . $driver_id_auto . "' WHERE iOrderId='" . $iOrderId . "'");
    }
    $sourceLoc = $PickUpLatitude . ',' . $PickUpLongitude;
    $destLoc = $DestLatitude . ',' . $DestLongitude;
    $generalDataArr = array();
    foreach ($result as $item) {
        $alertMsg_db = get_value('language_label', 'vValue', 'vLabel', 'LBL_TRIP_USER_WAITING_DL', " and vCode='" . $item['vLang'] . "'", 'true');
        if ($eBuyAnyService == "Yes") {
            $alertMsg_db = get_value('language_label', 'vValue', 'vLabel', 'LBL_USER_WAITING', " and vCode='" . $item['vLang'] . "'", 'true');
        }
        $final_message['tSessionId'] = $item['tSessionId'];
        $final_message['vTitle'] = $alertMsg_db;
        $generalDataArr[] = array('eDeviceType' => $item['eDeviceType'], 'deviceToken' => $item['iGcmRegId'], 'alertMsg' => $alertMsg_db, 'eAppTerminate' => $item['eAppTerminate'], 'eDebugMode' => $item['eDebugMode'], 'eHmsDevice' => $item['eHmsDevice'], 'message' => $final_message, 'addRequestSentArr' => array('iUserId' => $iUserId, 'iDriverId' => $item['iDriverId'], 'tMessage' => $final_message, 'iMsgCode' => $final_message['MsgCode'], 'vStartLatlong' => $sourceLoc, 'vEndLatlong' => $destLoc, 'tStartAddress' => $PickUpAddress, 'tEndAddress' => $DestAddress, 'iOrderId' => $iOrderId), 'channelName' => "CAB_REQUEST_DRIVER_" . $item['iDriverId'],);
    }
    $EVENT_MSG_OBJ->send(array('GENERAL_DATA' => $generalDataArr), RN_PROVIDER);
}

//Added By HJ On 21-10-2019 For Send Mail to Admin When Driver Not Found Start
function sendMailToAdmin($vOrderNo)
{
    global $obj, $tconfig, $COMM_MEDIA_OBJ;
    $maildata = array();
    $maildata['ORDER_NO'] = $vOrderNo;
    $maildata['ADMIN_URL'] = $tconfig['tsite_url_main_admin'] . "allorders.php?serachTripNo=" . $vOrderNo;
    $mail_sent = $COMM_MEDIA_OBJ->SendMailToMember("MANUAL_ACCEPT_STORE_ORDER_BY_ADMIN", $maildata);
    if ($mail_sent) {
        $obj->sql_query("UPDATE orders SET eSentMailAdmin = 'Yes' WHERE vOrderNo = '$vOrderNo' ");
    }
}

//Added By HJ On 31-10-2019 For Get Member Data Start
function RetrieveMemberBookingDetails($vSubFilterParamSel)
{
    global $TIP_DURATION_ON_RECEIPT, $RATING_DURATION_ON_RECEIPT, $obj, $MODULES_OBJ, $THEME_OBJ, $tconfig, $BOOKING_LATER_ACCEPT_AFTER_INTERVAL, $iServiceId, $_REQUEST, $SERVICE_PROVIDER_FLOW, $APP_TYPE, $userDetailsArr, $currencyAssociateArr, $ENABLE_SAFETY_RATING, $LANG_OBJ, $setupInfoDataArr;
    $page = isset($_REQUEST['page']) ? trim($_REQUEST['page']) : 1;
    $cabdataPage = isset($_REQUEST['cabdataPage']) ? trim($_REQUEST['cabdataPage']) : 0;
    $tripdataPage = !empty($_REQUEST['tripdataPage']) ? trim($_REQUEST['tripdataPage']) : 0;
    $memberId = isset($_REQUEST["memberId"]) ? $_REQUEST["memberId"] : '';
    $memberType = isset($_REQUEST["UserType"]) ? $_REQUEST["UserType"] : 'Passenger';
    if (isset($_REQUEST["memberType"])) {
        $memberType = $_REQUEST["memberType"];
    }
    $iTripId = $reqTripId = isset($_REQUEST["iTripId"]) ? $_REQUEST["iTripId"] : '';
    $iCabBookingId = $reqBookingId = isset($_REQUEST["iCabBookingId"]) ? $_REQUEST["iCabBookingId"] : '';
    $vFilterParam = isset($_REQUEST["vFilterParam"]) ? $_REQUEST["vFilterParam"] : ''; // Ride , Deliver Or UberX
    $vSubFilterParam = $reqSubFilter = isset($_REQUEST["vSubFilterParam"]) ? $_REQUEST["vSubFilterParam"] : ''; // All,Pending,Upcoming,Past
    if ($vSubFilterParamSel != "") {
        $vSubFilterParam = $vSubFilterParamSel;
    }
    $date = $serchDate = isset($_REQUEST["dDateOrig"]) ? $_REQUEST["dDateOrig"] : '';
    $dDate_Orig = isset($_REQUEST["dDateOrig"]) ? $_REQUEST["dDateOrig"] : '';
    if (isset($dDate_Orig) && empty($dDate_Orig)) {
        $dDate_Orig = date("Y-m-d");
    }
    $vTimeZone = isset($_REQUEST["vTimeZone"]) ? $_REQUEST["vTimeZone"] : '';
    $date = $date . " " . "12:01:00";
    $date = date("Y-m-d H:i:s", strtotime($date));
    $serverTimeZone = date_default_timezone_get();
    $date = converToTz($date, $serverTimeZone, $vTimeZone, "Y-m-d");
    $date_ = date("Y-m-d H:i:s", strtotime(date("Y-m-d H:i:s")));
    $TimeZoneOffset = converToTz($date_, $serverTimeZone, $vTimeZone, "P");
    $per_page = 3;
    $cab_per_page = 3;
    $whereTripId = $whereCabType = "";
    if ($vFilterParam == "" || $vFilterParam == NULL) {
        $vFilterParam = "";
    }
    ##  App Type Filtering ##
    if ($vFilterParam != "") {
        if ($vFilterParam == 'eFly') {
            $whereTripId .= " AND tr.eType = 'Ride' AND tr.iFromStationId!=0 AND tr.iToStationId!=0 ";
            $whereCabType = $whereTripId;
        } else if ($vFilterParam == "Deliver") {
            $whereTripId .= " AND tr.eType IN ('Deliver','Multi-Delivery')  AND tr.iFromStationId=0 AND tr.iToStationId=0 ";
            $whereCabType = $whereTripId;
        } else {
            $whereTripId .= " AND tr.eType IN ('" . $vFilterParam . "')  AND tr.iFromStationId=0 AND tr.iToStationId=0 ";
            $whereCabType = $whereTripId;
        }
    }
    //Added By HJ On 06-03-2020 For Get Data As Per App Type Start
    if (strtoupper($APP_TYPE) == "RIDE") {
        $whereTripId = $whereCabType = " AND tr.eType = 'Ride' AND tr.iFromStationId=0 AND tr.iToStationId=0 ";
    } else if (strtoupper($APP_TYPE) == "DELIVERY") {
        $whereTripId = $whereCabType = " AND tr.eType IN ('Deliver','Multi-Delivery')  AND tr.iFromStationId=0 AND tr.iToStationId=0 ";
    } else if (strtoupper($APP_TYPE) == "RIDE-DELIVERY") {
        $whereTripId = $whereCabType = " AND tr.eType IN ('Ride','Deliver','Multi-Delivery')  AND tr.iFromStationId=0 AND tr.iToStationId=0 ";
    } else if (strtoupper($APP_TYPE) == "UBERX") {
        $whereTripId = $whereCabType = " AND tr.eType = 'UberX' AND tr.iFromStationId=0 AND tr.iToStationId=0 ";
    }
    //Added By HJ On 06-03-2020 For Get Data As Per App Type End
    $filterSelected = "inprocess";
    if ($memberType != "Passenger") {
        $filterSelected = "pending";
    }
    if ($vSubFilterParam != "") {
        $filterSelected = $vSubFilterParam;
    } else {
        $vSubFilterParam = $filterSelected;
    }
    //$filterSelected = $vSubFilterParam;
    $subSqlTrip = $subSqlBook = "";
    if ($vSubFilterParam != "" && $vSubFilterParam != "all") {
        if ($vSubFilterParam == "pending") {
            $subSqlTrip .= " AND tr.iActive='Active'";
            $subSqlBook .= " AND tr.eStatus='Pending'";
        } else if ($vSubFilterParam == "upcoming") {
            //$subSqlTrip .= " AND (tr.iActive='Active' OR tr.iActive ='On Going Trip')"; //Commented By HJ On 26-10-2019 As Per Discuss With GP Mam - Active
            $subSqlTrip .= " AND (tr.iActive='Arrived' OR tr.iActive ='On Going Trip')"; //Added By HJ On 26-10-2019 As Per Discuss With GP Mam - Arrived
            $subSqlBook .= " AND (tr.eStatus='Assign' OR tr.eStatus='Accepted')";
        } else if ($vSubFilterParam == "past") {
            /* when last delivery confirmation code remaining and in db trips table its status finished so it will shown in process status and not in finished status */
            $tripdeliverySql = "";
            $subSqlTrip .= " AND ((tr.iActive='Finished' OR tr.iActive='Canceled') $tripdeliverySql)";
            $subSqlBook .= " AND (tr.eStatus='Declined' OR tr.eStatus='Failed' OR tr.eStatus='Cancel' OR tr.eStatus='Completed')";
        }
        if ($memberType == "Passenger") {
            if ($vSubFilterParam == "upcoming") {
                $subSqlTrip = $subSqlBook = "";
                $subSqlTrip .= " AND tr.iActive=''";
                $subSqlBook .= " AND tr.dBooking_date > ((CONVERT_TZ(NOW(), 'SYSTEM', '" . $TimeZoneOffset . "'))  - INTERVAL 30 MINUTE)";
                // $subSqlBook .= " AND (tr.eStatus='Assign' OR tr.eStatus='Pending')";     // Commented by HV on 11-05-2021 for #19071
            } else if ($vSubFilterParam == "inprocess") {
                $subSqlTrip = $subSqlBook = "";
                /* when last delivery confirmation code remaining and in db trips table its status finished so it will shown in process status and not in finished status */ // $tripdeliverySql = " AND tr.eType != 'Deliver' ";
                //$tripdeliverySql = " AND tr.eType != 'Multi-Delivery' ";
                $tripdeliverySql = "";
                $subSqlTrip .= " AND ((tr.iActive='On Going Trip' OR tr.iActive='Active' OR tr.iActive='Arrived') $tripdeliverySql)";
                $subSqlBook .= " AND tr.eStatus=''";
            } else if ($vSubFilterParam == "expired") {
                $subSqlTrip = $subSqlBook = "";
                $subSqlTrip .= " AND tr.iActive=''";
                $subSqlBook .= " AND tr.dBooking_date < ((CONVERT_TZ(NOW(), 'SYSTEM', '" . $TimeZoneOffset . "')) - INTERVAL 30 MINUTE)";
            }
        }
    }
    ##  App Type Filtering ##
    $dateFilter = 1;
    $whereTripId_cab = "";
    if ($iTripId > 0) {
        $dateFilter = 0;
        $subSqlTrip = $subSqlBook = "";
        $whereTripId .= " AND tr.iTripId='" . $iTripId . "'";
        $whereTripId_cab .= " AND tr.iTripId='" . $iTripId . "'";
    }
    $searchDate = date("Y-m-d", strtotime($date));
    if ($iCabBookingId > 0) {
        $dateFilter = 0;
        $subSqlTrip = $subSqlBook = "";
        $whereCabType .= " AND tr.iCabBookingId='" . $iCabBookingId . "'";
    }
    if ($date != "" && $memberType != "Passenger" && $dateFilter > 0 && strtolower($vSubFilterParam) == "past") {
        $whereTripId .= " AND tr.tTripRequestDate LIKE '" . $date . "%'";
        $whereCabType .= " AND tr.dBooking_date LIKE '" . $date . "%'";
        /*$whereTripId .= " AND tr.tTripRequestDate BETWEEN (CONVERT_TZ('".$dDate_Orig ." 00:00:00', 'SYSTEM', '".$TimeZoneOffset."')) AND (CONVERT_TZ('".$dDate_Orig ." 23:59:59', 'SYSTEM', '".$TimeZoneOffset."'))";

        $whereCabType .= " AND tr.dBooking_date BETWEEN (CONVERT_TZ('".$dDate_Orig ." 00:00:00', 'SYSTEM', '".$TimeZoneOffset."')) AND (CONVERT_TZ('".$dDate_Orig ." 23:59:59', 'SYSTEM', '".$TimeZoneOffset."'))";*/
    }
    $ssql_fav_q = "";
    if ($MODULES_OBJ->checkFavDriverModule() && $memberType == "Passenger") {
        $ssql_fav_q = getFavSelectQueryDriver($memberId);
    }
    if ($memberType == "Passenger") {
        $tableName = "register_user";
        $pkFieldName = "iUserId";
        $currencyField = "vCurrencyPassenger";
        $fieldName = "*,iUserId as iMemberId,vLang,vCurrencyPassenger as vCurrencyDriver";
    } else if ($memberType == "Driver") {
        $tableName = "register_driver";
        $pkFieldName = "iDriverId";
        $currencyField = "vCurrencyDriver";
        $fieldName = "*,iDriverId as iMemberId,vLang,vCurrencyDriver as vCurrencyDriver";
    } else {
        $tableName = "company";
        $pkFieldName = "iCompanyId";
        $currencyField = "vCurrencyCompany";
        $fieldName = "*,iCompanyId as iMemberId,vLang,vCurrencyCompany as vCurrencyDriver";
    }
    //Added By HJ On 04-07-2020 For Optimization register_driver Table Query Start
    if (isset($userDetailsArr[$tableName . "_" . $memberId])) {
        $getMemberData = $userDetailsArr[$tableName . "_" . $memberId];
    } else {
        $getMemberData = $obj->MySQLSelect("SELECT $fieldName FROM " . $tableName . " WHERE $pkFieldName='" . $memberId . "'");
        $userDetailsArr[$tableName . "_" . $memberId] = $getMemberData;
    }
    $getMemberData[0]['vCurrencyDriver'] = $getMemberData[0][$currencyField];
    //Added By HJ On 04-07-2020 For Optimization register_driver Table Query End
    $vLanguage = "";
    $vCurrencyDriver = "USD";
    $priceRatio = 1;
    if (count($getMemberData) > 0) {
        $vLanguage = $getMemberData[0]['vLang'];
        $vCurrencyDriver = $getMemberData[0]['vCurrencyDriver'];
    }
    if ($vLanguage == "" || $vLanguage == NULL) {
        //Added By HJ On 04-07-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 04-07-2020 For Optimize language_master Table Query End
    }
    //$currencySymbol = get_value('currency', 'vSymbol', 'vName', $vCurrencyDriver, '', 'true');
    //Added By HJ On 04-07-2020 For Optimization currency Table Query Start
    if (isset($currencyAssociateArr[$vCurrencyDriver])) {
        $getCurrencyData = array();
        $userCurrencyData = $currencyAssociateArr[$vCurrencyDriver];
        $getCurrencyData[0]['Ratio'] = $userCurrencyData['Ratio'];
        $getCurrencyData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
    } else {
        $getCurrencyData = $obj->MySQLSelect("SELECT vSymbol,Ratio FROM currency WHERE vName='" . $vCurrencyDriver . "'");
    }
    //Added By HJ On 04-07-2020 For Optimization currency Table Query End
    if (count($getCurrencyData) > 0) {
        $currencySymbol = $getCurrencyData[0]['vSymbol'];
        $priceRatio = $getCurrencyData[0]['Ratio'];
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $iServiceId);
    //$optionArr = array($languageLabelsArr['LBL_PENDING'], $languageLabelsArr['LBL_UPCOMING'], $languageLabelsArr['LBL_PAST']);
    $optionArr = $returnData = array();
    //$optionArr[] = array("vSubFilterParam" => "", "vTitle" => $languageLabelsArr['LBL_ALL']);
    if ($MODULES_OBJ->isUberXFeatureAvailable() && $memberType == "Driver") {
        $optionArr[] = array("vSubFilterParam" => "pending", "vTitle" => $languageLabelsArr['LBL_PENDING']);
    } else {
        // $optionArr[] = array("vSubFilterParam" => "pending", "vTitle" => $languageLabelsArr['LBL_PENDING']);
    }
    $optionArr[] = array("vSubFilterParam" => "upcoming", "vTitle" => $languageLabelsArr['LBL_UPCOMING']);
    $optionArr[] = array("vSubFilterParam" => "past", "vTitle" => $languageLabelsArr['LBL_PAST']);
    $selPending = "pending";
    $selUpcoming = "upcoming";
    $imgUrl = $tconfig['tsite_upload_images_passenger'];
    if ($memberType == "Passenger") {
        $selPending = "upcoming";
        $selUpcoming = "inprocess";
        $imgUrl = $tconfig['tsite_upload_images_driver'];
        $optionArr = array();
        $tableName = "register_user";
        $pkFieldName = "iUserId";
        $optionArr[] = array("vSubFilterParam" => "inprocess", "vTitle" => $languageLabelsArr['LBL_INPROCESS']);
        $optionArr[] = array("vSubFilterParam" => "upcoming", "vTitle" => $languageLabelsArr['LBL_UPCOMING']);
        $optionArr[] = array("vSubFilterParam" => "past", "vTitle" => $languageLabelsArr['LBL_PAST']);
        $optionArr[] = array("vSubFilterParam" => "expired", "vTitle" => $languageLabelsArr['LBL_EXPIRED_TXT']);
        $optionArr[] = array("vSubFilterParam" => "all", "vTitle" => $languageLabelsArr['LBL_ALL']);
    }
    //echo "<pre>";print_r($optionArr);die;
    $returnData['subFilterOption'] = $optionArr;
    $additional_mins = $BOOKING_LATER_ACCEPT_AFTER_INTERVAL;
    $currDate = date('Y-m-d H:i:s');
    $currDate = date("Y-m-d H:i:s", strtotime($currDate . "-" . $additional_mins . " minutes"));
    $bookingDate = "";
    if ($memberType == "Driver") {
        if ($vSubFilterParam == "pending") {
            $currDate = date('Y-m-d H:i:s');
        }
        $bookingDate .= " AND tr.dBooking_date > '" . $currDate . "'";
    }
    if ($memberType == "Driver") {
        $cabBookingQuery = "SELECT COUNT(tr.iCabBookingId) As TotalIds FROM cab_booking as tr WHERE tr.iDriverId != '' AND ( tr.eStatus = 'Accepted' OR tr.eStatus = 'Assign' OR tr.eStatus = 'Pending') AND tr.iDriverId='" . $memberId . "'" . $bookingDate . $whereCabType . $subSqlBook;
    } else {
        $cabBookingQuery = "SELECT COUNT(tr.iCabBookingId) As TotalIds FROM cab_booking as tr WHERE tr.iUserId='" . $memberId . "' AND  ( tr.eStatus = 'Assign' OR tr.eStatus = 'Pending' OR tr.eStatus = 'Accepted' OR tr.eStatus = 'Declined' OR tr.eStatus = 'Cancel') AND tr.eCancelBy != 'Rider'" . $bookingDate . $whereCabType . $subSqlBook;
    }
    $data_count_all = $obj->MySQLSelect($cabBookingQuery);
    if ($iTripId > 0) {
        $data_count_all = array();
    }
    $TotalPages = $totalBookingCount = 0;
    if (isset($data_count_all[0]['TotalIds'])) {
        $totalBookingCount = $data_count_all[0]['TotalIds'];
    }
    if ($totalBookingCount > 0) {
        $TotalPages += ceil($totalBookingCount / $per_page);
    }
    $cab_start_limit = ($page - 1) * $cab_per_page;
    $cablimit = " LIMIT " . $cab_start_limit . ", " . $cab_per_page;
    $sql_vehicle_category_table_name = getVehicleCategoryTblName();
    $tableCommonData = "concat(rd.vName,' ',rd.vLastName) as vName ,rd.vPhone,rd.vLatitude,rd.vLongitude, rd.vAvgRating,rd.vTripStatus,tr.vCancelReason,tr.iCancelReasonId,tr.iRentalPackageId,tr.iVehicleTypeId,tr.vTimeZone, tr.eType, tr.eServiceLocation, tr.vWorkLocation, tr.vWorkLocationLatitude, tr.vWorkLocationLongitude, tr.eSelectWorkLocation, tr.tVehicleTypeData, tr.tVehicleTypeFareData,tr.iCabBookingId,tr.iUserAddressId,tr.iDriverId,tr.iFromStationId, tr.iToStationId, tr.iUserId";
    $memberJoin = "LEFT JOIN register_driver as rd ON rd.iDriverId=tr.iDriverId";
    if ($memberType == "Driver") {
        $memberJoin = "LEFT JOIN register_user as rd ON rd.iUserId=tr.iUserId";
        $tableCommonData .= ",rd.vImgName As vImage, rd.vPhoneCode AS vCode,rd.iUserId As iMemberId";
    } else {
        $tableCommonData .= ",rd.vImage, rd.vCode,rd.iDriverId AS iMemberId";
    }
    // if ($memberType == "Driver") {
    //     $cabDataQuery = "SELECT 'schedule' as vBookingType," . $tableCommonData . ",tr.eStatus AS iActive, tr.vBookingNo AS vRideNo, tr.vSourceAddresss AS tSaddress,tDestAddress AS tDaddress,tr.iCabBookingId AS iTripId, tr.dBooking_date AS tTripRequestDate,tr.eAutoAssign,tr.isVideoCall, IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . " FROM `cab_booking` as tr " . $memberJoin . " WHERE tr.iDriverId != '' AND  ( tr.eStatus = 'Accepted' OR tr.eStatus = 'Assign' OR tr.eStatus = 'Pending')  AND tr.iDriverId='" . $memberId . "' $bookingDate $whereCabType $subSqlBook ORDER BY tr.dBooking_date DESC" . $cablimit; //added by SP on 01-10-2019 for vBookingType instead of BookingType
    // } else {
    //     $cabDataQuery = "SELECT 'schedule' as vBookingType," . $tableCommonData . ",tr.eStatus AS iActive,tr.vBookingNo AS vRideNo, tr.vSourceAddresss AS tSaddress,tDestAddress AS tDaddress,tr.iCabBookingId AS iTripId, tr.dBooking_date AS tTripRequestDate,tr.eAutoAssign,tr.isVideoCall, IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . " FROM `cab_booking` as tr " . $memberJoin . " WHERE tr.iUserId='$memberId' AND ( tr.eStatus = 'Assign' OR tr.eStatus = 'Pending' OR tr.eStatus = 'Accepted' OR tr.eStatus = 'Declined'  OR tr.eStatus = 'Cancel' ) AND tr.eCancelBy != 'Rider' $bookingDate  $whereCabType $subSqlBook ORDER BY tr.dBooking_date DESC" . $cablimit;
    // }
    // $cabData = $obj->MySQLSelect($cabDataQuery);
    //echo $TotalPages;
    //echo "<PRE>";print_r($cabData);die;tTripRequestDate
    /*$pending = $upcoming = $past = 0;

    for ($h = 0; $h < count($cabData); $h++) {

        $status = $cabData[$h]['iActive'];

        if ($status == "Pending") {

            $pending += 1;

        } else if ($status == "Assign" || $status == "Accepted") {

            $upcoming += 1;

        }

    }*/ /*if ($iTripId > 0) {

        $cabData = array();

    }*/ /*$data_count_all = $obj->MySQLSelect("SELECT COUNT(tr.iTripId) As TotalIds from trips as tr WHERE tr.$pkFieldName='" . $memberId . "' AND tr.eSystem = 'General' $whereTripId $subSqlTrip");

    //print_r($data_count_all);die;

    if ($iCabBookingId > 0) {

        $data_count_all = array();

    }

    $tripCount = 0;

    if (isset($data_count_all[0]['TotalIds'])) {

        $tripCount = $data_count_all[0]['TotalIds'];

    }



    if ($tripCount > 0) {

        //echo $tripCount ."rrrR". $per_page;exit;

        $TotalPages += ceil($tripCount / $per_page);

    }*/ //echo $TotalPages;exit;
    //if ($TotalPages > $page) {
    //echo $tripCount."eeee".$per_page."ttttt";
    //echo $page."ddddd".$TotalPages;exit;
    /*if (count($cabData) > 0 && count($cabData) == $per_page) {

        $per_page1 = $per_page - count($cabData);

        $start_limit = ($page - 1) * $per_page1;

        $limit = " LIMIT " . $start_limit . ", " . $per_page1;

        $returnData['tripdataPage'] = $per_page1;

    } else { //if(!empty($tripdataPage))

        if ($page == 1) {

            $tripdataPage = 0;

        }

        $start_limit = $tripdataPage;

        //$start_limit = ($page - 1) * $per_page;

        $limit = " LIMIT " . $start_limit . ", " . $per_page;

        //$returnData['tripdataPage'] = $tripdataPage + 1;

        $returnData['tripdataPage'] = ($start_limit + $per_page);

    }*/ /* else {

     $start_limit = ($page - 1) * $per_page;

     $limit = " LIMIT " . $start_limit . ", " . $per_page;

     $returnData['tripdataPage'] = $tripdataPage;

   } */ //echo $limit;die;
    //$tripData = $obj->MySQLSelect("SELECT tr.* " . $ssql_fav_q . " FROM `trips` as tr WHERE tr.$pkFieldName='$memberId' AND (tr.iActive='Canceled' || tr.iActive='Finished') AND tr.eSystem = 'General' $whereTripId ORDER BY tr.iTripId DESC" . $limit);
    //echo "SELECT 'history' as vBookingType," . $tableCommonData . ",tr.iActive,tr.eFareType,tr.vVerificationMethod, tr.`vRideNo`, tr.tSaddress,tr.tDaddress,tr.iTripId, tr.tTripRequestDate,tr.iFare,tr.fDiscount,tr.fCommision,tr.fTax1,tr.fTax2,tr.fOutStandingAmount,tr.fHotelCommision,tr.fTipPrice,tr.fCancellationFare,tr.fWalletDebit,tr.eHailTrip,tr.eBookingFrom,tr.iFromStationId, tr.iToStationId,fRatio_" . $vCurrencyDriver . " AS priceRatio, IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . " from trips as tr " . $memberJoin . " WHERE tr.$pkFieldName='" . $memberId . "' AND tr.eSystem = 'General' $whereTripId $subSqlTrip GROUP BY tr.iTripId ORDER BY tr.iTripId DESC" . $limit;
    //exit;
    /*$tripData = $obj->MySQLSelect("SELECT 'history' as vBookingType," . $tableCommonData . ",tr.eCancelled,tr.iActive,tr.eFareType,tr.vVerificationMethod, tr.`vRideNo`, tr.tSaddress,tr.tDaddress,tr.iTripId, tr.tTripRequestDate,tr.iFare,tr.fDiscount,tr.fCommision,tr.fTax1,tr.fTax2,tr.fOutStandingAmount,tr.fHotelCommision,tr.fTipPrice,tr.fCancellationFare,tr.fWalletDebit,tr.eHailTrip,tr.eBookingFrom,tr.iFromStationId, tr.iToStationId,tr.fRatio_" . $vCurrencyDriver . " AS priceRatio,tr.vChargesDetailData, tr.eApproveRequestSentByDriver,tr.eApproveByUser,tr.eApproved,tr.vCurrencyDriver,tr.vCurrencyPassenger, tr.eAskCodeToUser,tr.vRandomCode,tr.isVideoCall, IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . " from trips as tr " . $memberJoin . " WHERE tr.$pkFieldName='" . $memberId . "' AND tr.eSystem = 'General' $whereTripId $subSqlTrip GROUP BY tr.iTripId ORDER BY tr.iTripId DESC" . $limit);



    if ($iCabBookingId > 0) {

        $tripData = array();

    }

    $orgTripData = $tripData;



    if(!empty($tripData)) {

        $tripData = array_merge($cabData, $tripData);

    } else if(!empty($cabData)) {

        $tripData = $cabData;

    }*/
    if ($page == 1) {
        $tripdataPage = 0;
    }
    $start_limit = $tripdataPage;
    $returnData['tripdataPage'] = ($start_limit + $per_page);
    if ($memberType == "Driver") {
        //$triDriverId = "tr.iDriverId != ''";
        $triDriverId = "tr.iDriverId != '' AND tr.iDriverId = '" . $memberId . "'";
    } else {
        $triDriverId = "tr.iUserId='$memberId'";
    }
    /*--------------------- missing date ------------------*/
    // $year = date('Y', strtotime($date));
    // $month = date('m', strtotime($date));
    $dSetupDate = $setupInfoDataArr[0]['dSetupDate'];
    $yearFromDate = date('Y-m-d 00:00:00', strtotime($dSetupDate));
    $yearToDate = date('Y-m-d 23:59:59', strtotime($date));
    $sql_3 = "
    select COUNT(tTripRequestDate), date_format(tTripRequestDate, '%Y-%m-%d') as tTripRequestDate
from ( SELECT tr.eStatus AS iActive, 'cab' as cab, tr.dBooking_date AS tTripRequestDate,
    'schedule' as vBookingType," . $tableCommonData . ",tr.vBookingNo AS vRideNo,
    tr.vSourceAddresss AS tSaddress,tr.tDestAddress AS tDaddress,tr.iCabBookingId AS iTripId,
    tr.eAutoAssign,tr.isVideoCall,IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType,
    IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . ",
    ''as fTripGenerateFare,''as fTipPrice,'' as fCommision,'' as fTax1,'' as fTax2,'' as fOutStandingAmount,'' as fAddedOutstandingamt,'' as fHotelCommision,'' as priceRatio,'' as iFare,
     '' as eCancelled,''as eFareType,''as vVerificationMethod,''as fDiscount,'' as fCancellationFare, '' as fWalletDebit, '' as eHailTrip,
     '' as eBookingFrom,'' as vChargesDetailData, '' as eApproveRequestSentByDriver, '' as eApproveByUser, '' as eApproved, '' as vCurrencyDriver,'' as vCurrencyPassenger, '' as eAskCodeToUser, '' as vRandomCode
    FROM cab_booking tr " . $memberJoin . " WHERE (tr.dBooking_date BETWEEN '$yearFromDate' AND '$yearToDate') AND $triDriverId AND ( tr.eStatus = 'Assign' OR tr.eStatus = 'Pending' OR tr.eStatus = 'Accepted' OR tr.eStatus = 'Declined'  OR tr.eStatus = 'Cancel' )  AND tr.eCancelBy != 'Rider' $subSqlBook $whereTripId_cab
    UNION ALL

    (SELECT tr.iActive AS iActive, 'trips', tr.tTripRequestDate,
    'history' as vBookingType," . $tableCommonData . ",tr.vRideNo,
    tr.tSaddress,tr.tDaddress,tr.iTripId,
    '',tr.isVideoCall,IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType,
    IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . ",
    tr.fTripGenerateFare,tr.fTipPrice,tr.fCommision,tr.fTax1,tr.fTax2,tr.fOutStandingAmount,tr.fAddedOutstandingamt,tr.fHotelCommision,fRatio_" . $vCurrencyDriver . " AS priceRatio,tr.iFare,
    tr.eCancelled,tr.eFareType,tr.vVerificationMethod,tr.fDiscount,tr.fCancellationFare,tr.fWalletDebit,tr.eHailTrip,
    tr.eBookingFrom,tr.vChargesDetailData,tr.eApproveRequestSentByDriver,tr.eApproveByUser,tr.eApproved,tr.vCurrencyDriver,
    tr.vCurrencyPassenger,tr.eAskCodeToUser,tr.vRandomCode
    from trips tr " . $memberJoin . " WHERE (tr.tTripRequestDate BETWEEN '$yearFromDate' AND '$yearToDate') AND  tr.$pkFieldName='" . $memberId . "' AND tr.eSystem = 'General'  $subSqlTrip )
    ORDER BY tTripRequestDate DESC )t GROUP BY DATE(tTripRequestDate)";
    $servicesdate = $obj->MySQLSelect($sql_3);
    $tripDate = array_column($servicesdate, 'tTripRequestDate');
    // $missingDate = getMissingdate($tripDate, $date);
    $missingDate = getEarningDates($tripDate);
    /*--------------------- missing date ------------------*/
    $sql_1 = "

    SELECT tr.eStatus AS iActive, 'cab' as cab, tr.dBooking_date AS tTripRequestDate,

    'schedule' as vBookingType," . $tableCommonData . ",tr.vBookingNo AS vRideNo,

    tr.vSourceAddresss AS tSaddress,tr.tDestAddress AS tDaddress,tr.iCabBookingId AS iTripId,

    tr.eAutoAssign,tr.isVideoCall,IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.iVehicleTypeId > 0, (SELECT vt.eIconType FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as eIconType,

    IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . ",

    ''as fTripGenerateFare,''as fTipPrice,'' as fCommision,'' as fTax1,'' as fTax2,'' as fOutStandingAmount,'' as fAddedOutstandingamt,'' as fHotelCommision,'' as priceRatio,'' as iFare,

     '' as eCancelled,''as eFareType,''as vVerificationMethod,''as fDiscount,'' as fCancellationFare, '' as fWalletDebit, '' as eHailTrip,

     '' as eBookingFrom,'' as vChargesDetailData, '' as eApproveRequestSentByDriver, '' as eApproveByUser, '' as eApproved, '' as vCurrencyDriver,'' as vCurrencyPassenger, '' as eAskCodeToUser, '' as vRandomCode, tr.ePayType as vTripPaymentMode, tr.iRentalPackageId

    FROM cab_booking tr " . $memberJoin . " WHERE  $triDriverId AND ( tr.eStatus = 'Assign' OR tr.eStatus = 'Pending' OR tr.eStatus = 'Accepted' OR tr.eStatus = 'Declined'  OR tr.eStatus = 'Cancel' )  AND tr.eCancelBy != 'Rider' $bookingDate  $whereCabType $subSqlBook $whereTripId_cab

    UNION ALL

    (SELECT tr.iActive AS iActive, 'trips', tr.tTripRequestDate,

    'history' as vBookingType," . $tableCommonData . ",tr.vRideNo,

    tr.tSaddress,tr.tDaddress,tr.iTripId,

    '',tr.isVideoCall,IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.iVehicleTypeId > 0, (SELECT vt.eIconType FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as eIconType,

    IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . ",

    tr.fTripGenerateFare,tr.fTipPrice,tr.fCommision,tr.fTax1,tr.fTax2,tr.fOutStandingAmount,tr.fAddedOutstandingamt,tr.fHotelCommision,fRatio_" . $vCurrencyDriver . " AS priceRatio,tr.iFare,

    tr.eCancelled,tr.eFareType,tr.vVerificationMethod,tr.fDiscount,tr.fCancellationFare,tr.fWalletDebit,tr.eHailTrip,

    tr.eBookingFrom,tr.vChargesDetailData,tr.eApproveRequestSentByDriver,tr.eApproveByUser,tr.eApproved,tr.vCurrencyDriver,

    tr.vCurrencyPassenger,tr.eAskCodeToUser,tr.vRandomCode, tr.vTripPaymentMode, tr.iRentalPackageId

    from trips tr " . $memberJoin . " WHERE tr.$pkFieldName='" . $memberId . "' AND tr.eSystem = 'General' $whereTripId $subSqlTrip )

    ORDER BY tTripRequestDate DESC" . $cablimit;
    $tripData = $obj->MySQLSelect($sql_1);
    $totalNum = count($tripData);
    /*if ($memberType == "Driver") {

        $cabDataQuery_rating = $obj->MySQLSelect("SELECT 'schedule' as vBookingType," . $tableCommonData . ",tr.eStatus AS iActive, tr.vBookingNo AS vRideNo, tr.vSourceAddresss AS tSaddress,tDestAddress AS tDaddress,tr.iCabBookingId AS iTripId, tr.dBooking_date AS tTripRequestDate,tr.eAutoAssign, IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . " FROM `cab_booking` as tr " . $memberJoin . " WHERE tr.iDriverId != '' AND  ( tr.eStatus = 'Accepted' OR tr.eStatus = 'Assign' OR tr.eStatus = 'Pending')  AND tr.iDriverId='" . $memberId . "' $bookingDate $whereCabType $subSqlBook ORDER BY tr.dBooking_date DESC");

    } else {

        $cabDataQuery_rating = $obj->MySQLSelect("SELECT 'schedule' as vBookingType," . $tableCommonData . ",tr.eStatus AS iActive,tr.vBookingNo AS vRideNo, tr.vSourceAddresss AS tSaddress,tDestAddress AS tDaddress,tr.iCabBookingId AS iTripId, tr.dBooking_date AS tTripRequestDate,tr.eAutoAssign, IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . " FROM `cab_booking` as tr " . $memberJoin . " WHERE tr.iUserId='$memberId' AND ( tr.eStatus = 'Assign' OR tr.eStatus = 'Pending' OR tr.eStatus = 'Accepted' OR tr.eStatus = 'Declined'  OR tr.eStatus = 'Cancel' ) AND tr.eCancelBy != 'Rider' $bookingDate  $whereCabType $subSqlBook ORDER BY tr.dBooking_date DESC");

    }





    if ($iTripId > 0) {

        $cabDataQuery_rating = array();

    }



    $tripData_rating = $obj->MySQLSelect("SELECT 'history' as vBookingType," . $tableCommonData . ",tr.eCancelled,tr.iActive,tr.eFareType,tr.vVerificationMethod, tr.`vRideNo`, tr.tSaddress,tr.tDaddress,tr.iTripId, tr.tTripRequestDate,tr.iFare,tr.fDiscount,tr.fCommision,tr.fTax1,tr.fTax2,tr.fOutStandingAmount,tr.fAddedOutstandingamt,tr.fHotelCommision,tr.fTripGenerateFare,tr.fTipPrice,tr.fCancellationFare,tr.fWalletDebit,tr.eHailTrip,tr.eBookingFrom,fRatio_" . $vCurrencyDriver . " AS priceRatio, IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType, IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . " from trips as tr " . $memberJoin . " WHERE tr.$pkFieldName='" . $memberId . "' AND tr.eSystem = 'General' $whereTripId $subSqlTrip GROUP BY tr.iTripId ORDER BY tr.iTripId DESC");

    if ($iCabBookingId > 0) {

        $tripData_rating = array();

    }*/ // $tripData_rating = array_merge($cabDataQuery_rating, $tripData_rating);
    //$tripData_rating = $tripData;
    //for the rating start
    $sql_2 = "

    SELECT tr.eStatus AS iActive, 'cab' as cab, tr.dBooking_date AS tTripRequestDate,

    'schedule' as vBookingType," . $tableCommonData . ",tr.vBookingNo AS vRideNo,

    tr.vSourceAddresss AS tSaddress,tr.tDestAddress AS tDaddress,tr.iCabBookingId AS iTripId,

    tr.eAutoAssign,tr.isVideoCall,IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType,

    IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . ",

    ''as fTripGenerateFare,''as fTipPrice,'' as fCommision,'' as fTax1,'' as fTax2,'' as fOutStandingAmount,'' as fAddedOutstandingamt,'' as fHotelCommision,'' as priceRatio,'' as iFare,

     '' as eCancelled,''as eFareType,''as vVerificationMethod,''as fDiscount,'' as fCancellationFare, '' as fWalletDebit, '' as eHailTrip,

     '' as eBookingFrom,'' as vChargesDetailData, '' as eApproveRequestSentByDriver, '' as eApproveByUser, '' as eApproved, '' as vCurrencyDriver,'' as vCurrencyPassenger, '' as eAskCodeToUser, '' as vRandomCode , tr.ePayType as vTripPaymentMode

    FROM cab_booking tr " . $memberJoin . " WHERE  $triDriverId AND ( tr.eStatus = 'Assign' OR tr.eStatus = 'Pending' OR tr.eStatus = 'Accepted' OR tr.eStatus = 'Declined'  OR tr.eStatus = 'Cancel' ) AND tr.eCancelBy != 'Rider' $bookingDate  $whereCabType $subSqlBook $whereTripId_cab

    UNION ALL

    (SELECT tr.iActive AS iActive, 'trips', tr.tTripRequestDate,

    'history' as vBookingType," . $tableCommonData . ",tr.vRideNo,

    tr.tSaddress,tr.tDaddress,tr.iTripId,

    '',tr.isVideoCall,IF(tr.iVehicleTypeId > 0, (SELECT vt.vVehicleType_" . $vLanguage . " FROM vehicle_type as vt WHERE vt.iVehicleTypeId = tr.iVehicleTypeId), '') as vVehicleType,

    IF(tr.tVehicleTypeFareData != '', (SELECT vc.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = JSON_UNQUOTE(JSON_VALUE(IF(tr.tVehicleTypeFareData='','0',tr.tVehicleTypeFareData), '$.ParentVehicleCategoryId'))), '') as ParentCategoryName " . $ssql_fav_q . ",

    tr.fTripGenerateFare,tr.fTipPrice,tr.fCommision,tr.fTax1,tr.fTax2,tr.fOutStandingAmount,tr.fAddedOutstandingamt,tr.fHotelCommision,fRatio_" . $vCurrencyDriver . " AS priceRatio,tr.iFare,

    tr.eCancelled,tr.eFareType,tr.vVerificationMethod,tr.fDiscount,tr.fCancellationFare,tr.fWalletDebit,tr.eHailTrip,

    tr.eBookingFrom,tr.vChargesDetailData,tr.eApproveRequestSentByDriver,tr.eApproveByUser,tr.eApproved,tr.vCurrencyDriver,

    tr.vCurrencyPassenger,tr.eAskCodeToUser,tr.vRandomCode , tr.vTripPaymentMode as vTripPaymentMode

    from trips tr " . $memberJoin . " WHERE tr.$pkFieldName='" . $memberId . "' AND tr.eSystem = 'General' $whereTripId $subSqlTrip )

    ORDER BY tTripRequestDate DESC";
    $tripData_rating = $obj->MySQLSelect($sql_2);
    //for the rating end
    $sql_2 = "

    SELECT COUNT(*)  as COUNT

    FROM 

    ( 

    SELECT tr.iCabBookingId AS iTripId

    FROM cab_booking tr " . $memberJoin . " WHERE  $triDriverId AND ( tr.eStatus = 'Assign' OR tr.eStatus = 'Pending' OR tr.eStatus = 'Accepted' OR tr.eStatus = 'Declined'  OR tr.eStatus = 'Cancel' ) AND tr.eCancelBy != 'Rider' $bookingDate  $whereCabType $subSqlBook $whereTripId_cab

    UNION ALL

    (SELECT tr.iTripId

    from trips tr " . $memberJoin . " WHERE tr.$pkFieldName='" . $memberId . "' AND tr.eSystem = 'General' $whereTripId $subSqlTrip )

    ) AS t1 ";
    $tripData_rating_count = $obj->MySQLSelect($sql_2);
    $totalNum_rating = $tripData_rating_count[0]['COUNT'];
    //Added By HJ On 31-10-2019 For Get Data If Empty Found Start As Per Discuss with KS Sir
    if ($totalNum_rating == 0 && ($filterSelected == "inprocess" || $filterSelected == "pending") && $reqSubFilter == "") {
        RetrieveMemberBookingDetails("upcoming");
    } else if ($totalNum_rating == 0 && $filterSelected == "upcoming" && $reqSubFilter == "") {
        RetrieveMemberBookingDetails("past");
    }
    //Added By HJ On 31-10-2019 For Get Data If Empty Found End As Per Discuss with KS Sir
    // echo "<pre>";print_r($totalNum_rating);die;
    $TotalPages = ceil($totalNum_rating / $per_page);
    $start_limit = ($page - 1) * $per_page;
    $limit = " LIMIT " . $start_limit . ", " . $per_page;
    if (!empty($cabDataQuery_rating) && count($cabDataQuery_rating) > 0) {
        $per_page = $per_page - count($cabDataQuery_rating);
        $start_limit = ($page - 1) * $per_page;
        $limit = " LIMIT " . $start_limit . ", " . $per_page;
    }
    //echo $limit;die;
    if ($memberType == "Driver") {
        //$getDriverRateData = $obj->MySQLSelect("SELECT vRating1, vMessage,iTripId FROM ratings_user_driver WHERE eUserType='Passenger'");
        $getDriverRateData = $obj->MySQLSelect("SELECT vRating1, vMessage,iTripId FROM ratings_user_driver WHERE eFromUserType='Passenger' AND eToUserType='Driver' AND vRating1 != ''");
        for ($b = 0; $b < count($getDriverRateData); $b++) {
            $driverRateArr[$getDriverRateData[$b]['iTripId']] = $getDriverRateData[$b];
        }
    }
    $sortfield = "tTripRequestDate";
    $sortorder = SORT_DESC;
    foreach ($tripData as $k => $v) {
        $Data_name[$sortfield][$k] = $v[$sortfield];
    }
    array_multisort($Data_name[$sortfield], $sortorder, $tripData);
    $tripData_ratingArr = array();
    $totalEarnings_new = $avgRating = $countTrip = $avgRating_new = $countTrip_Finished = $countTrip_new = $iFareSum = 0;
    // Commented and added by HV on 11-03-2021 for loading issue
    for ($t = 0; $t < $totalNum_rating; $t++) {
        //for ($t = $start_limit; $t < ($start_limit + $per_page); $t++) {
        $iTripId = $tripData_rating[$t]['iTripId'];
        $iActive = $tripData_rating[$t]['iActive'];
        $treqDate = $tripData_rating[$t]['tTripRequestDate'];
        $searchReqDate = date("Y-m-d", strtotime($treqDate));
        if ($iActive == "Finished" || $iActive == "Canceled") {
            $countTrip_Finished += 1;
        }
        if (isset($driverRateArr[$iTripId])) {
            $eHailTrip = $tripData_rating[$t]['eHailTrip'];
            $eBookingFrom = $tripData_rating[$t]['eBookingFrom'];
            $vRating1 = $driverRateArr[$iTripId]['vRating1'];
            if ($iActive == "Finished" && $eHailTrip == "No" && ($eBookingFrom != "Hotel" || $eBookingFrom != "Kiosk")) {
                if ($serchDate != "" && $searchReqDate == $searchDate) {
                    $avgRating_new += $vRating1;
                    $countTrip_new += 1;
                } else if ($serchDate == "") {
                    $avgRating_new += $vRating1;
                    $countTrip_new += 1;
                }
            }
        }
        $iActive = $tripData_rating[$t]['iActive'];
        $fCancellationFare = $fWalletDebit = 0;
        if (isset($tripData_rating[$t]['fCancellationFare'])) {
            $fCancellationFare = $tripData_rating[$t]['fCancellationFare'];
        }
        if (isset($tripData_rating[$t]['fWalletDebit'])) {
            $fWalletDebit = $tripData_rating[$t]['fWalletDebit'];
        }
        $tripData_ratingArr[$tripData_rating[$t]['iTripId']] = "0.00";
        if ($iActive == "Finished" || ($iActive == "Canceled" && ($fCancellationFare > 0 || $fWalletDebit > 0))) {
            //$tripPriceDetails = FetchTripFareDetails($iTripId, $memberId, $memberType, 'DISPLAY');
            //$iFare = $tripPriceDetails['iFare'];
            if ($memberType == "Passenger") {
                $iFare = $tripData_rating[$t]['iFare'];
            } else {
                $iFare_Subtotal = $tripData_rating[$t]['iFare'];

                $iFare = $tripData_rating[$t]['fTripGenerateFare'] + $tripData_rating[$t]['fTipPrice'] - $tripData_rating[$t]['fCommision'] - $tripData_rating[$t]['fTax1'] - $tripData_rating[$t]['fTax2'] - $tripData_rating[$t]['fOutStandingAmount'] - $tripData_rating[$t]['fAddedOutstandingamt'] - $tripData_rating[$t]['fHotelCommision'];
            }
            $iFare = $iFare * $priceRatio; //need to put this when getTripPriceDetails this function() is commented.
            $tripData_rating[$t]['iFare'] = $iFare;
            $tripData_ratingArr[$tripData_rating[$t]['iTripId']] = $iFare;
            $iFareSum = str_replace(',', '', $iFare);
            $totalEarnings_new += $iFareSum;
        }
    }
    //echo $totalEarnings_new."====".count($tripData_rating)."****************";
    // echo "<pre>";print_r($driverRateArr);die;
    $appTypeFilterArr = AppTypeFilterArr($memberId, $memberType, $vLanguage);
    $returnData['Action'] = "0";
    $returnData['message'] = "LBL_NO_BOOKINGS_AVAIL";
    $returnData['AppTypeFilterArr'] = $appTypeFilterArr;
    $ratingArr = $vehicleTypeArr = $delLocationArr = $rentalPackageArr = $cancelReasonArr = $verificationDataArr = $driverRateArr = array();
    $tripIds = "";
    //tr.iFare,tr.fDiscount,tr.fCommision,tr.fTax1,tr.fTax2,tr.fOutStandingAmount,tr.fHotelCommision,tr.fTipPrice,tr.fCancellationFare,tr.fWalletDebit,tr.eHailTrip,tr.eBookingFrom
    // echo "<pre>"; print_r($tripData); exit;
    $driverIdArr = $driverImgArr = $getDriverData = array();
    for ($l = 0; $l < count($tripData); $l++) {
        if ($tripData[$l]['iDriverId'] > 0) {
            $driverIdArr[] = $tripData[$l]['iDriverId'];
        }
    }
    if (count($driverIdArr) > 0) {
        $driverIdArr = array_unique($driverIdArr);
        $driverIds = implode($driverIdArr, ",");
        $getDriverData = $obj->MySQLSelect("SELECT vImage,iDriverId FROM register_driver WHERE iDriverId IN ($driverIds)");
    }
    for ($s = 0; $s < count($getDriverData); $s++) {
        $driverImgArr[$getDriverData[$s]['iDriverId']] = $getDriverData[$s]['vImage'];
    }
    $totalEarnings = $avgRating = $countTrip = 0;
    if(!empty($tripData)) {
        for ($v = 0; $v < count($tripData); $v++) {
            $tripIds .= ",'" . $tripData[$v]['iTripId'] . "'";
        }
    }
    
    if (count($tripData) > 0) {
        $iVehicleCategoryIds_str_ufx = "";
        $getRatingData = $obj->MySQLSelect("SELECT count(iRatingId) AS Total,iTripId FROM `ratings_user_driver` WHERE eUserType = '$memberType'  GROUP BY iTripId");
        //echo "<pre>";print_r($getRatingData);die;
        for ($r = 0; $r < count($getRatingData); $r++) {
            $ratingArr[$getRatingData[$r]['iTripId']] = $getRatingData[$r]['Total'];
        }
        //echo "<pre>";print_r($ratingArr);die;
        if ($tripIds != "") {
            $tripIds = trim($tripIds, ",");
            //Commented By HJ On 19-06-2020 For Optimized Query As Per Below Start - Removed Join
            //$verificationData = $obj->MySQLSelect("SELECT tr.iTripId,tdl.iTripDeliveryLocationId,tdl.eSignVerification,tr.iActive, tr.eServiceLocation from trips as tr LEFT JOIN trips_delivery_locations as tdl ON tdl.iTripId=tr.iTripId WHERE tr.iTripId IN ($tripIds) AND tr.eSystem = 'General' GROUP BY tdl.iTripDeliveryLocationId ORDER BY tr.iTripId DESC");
            //Commented By HJ On 19-06-2020 For Optimized Query As Per Below End Removed Join
            $verificationData = $obj->MySQLSelect("SELECT tdl.iTripId,tdl.iTripDeliveryLocationId,tdl.eSignVerification from trips_delivery_locations as tdl WHERE tdl.iTripId IN ($tripIds) GROUP BY tdl.iTripDeliveryLocationId ORDER BY tdl.iTripId DESC");
            //echo "<pre>";print_r($verificationData);die;
            for ($f = 0; $f < count($verificationData); $f++) {
                if ($verificationData[$f]['eSignVerification'] == "No") {
                    $verificationDataArr[$verificationData[$f]['iTripId']] = $verificationData[$f]['eSignVerification'];
                } else if (!isset($verificationDataArr[$verificationData[$f]['iTripId']])) {
                    $verificationDataArr[$verificationData[$f]['iTripId']] = $verificationData[$f]['eSignVerification'];
                }
            }
            if ($memberType == "Driver") {
                //$getDriverRateData = $obj->MySQLSelect("SELECT vRating1, vMessage,iTripId FROM ratings_user_driver WHERE eUserType='Passenger'");
                $getDriverRateData = $obj->MySQLSelect("SELECT vRating1, vMessage,iTripId FROM ratings_user_driver WHERE eFromUserType='Passenger' AND eToUserType='Driver' AND vRating1 != ''");
                for ($b = 0; $b < count($getDriverRateData); $b++) {
                    $driverRateArr[$getDriverRateData[$b]['iTripId']] = $getDriverRateData[$b];
                }
            }
        }
        $parent_data_arr = $obj->MySQLSelect("SELECT vt.iVehicleTypeId,(SELECT vcs.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as vCategory FROM " . $sql_vehicle_category_table_name . " as vc, vehicle_type as vt WHERE vc.iVehicleCategoryId = vt.iVehicleCategoryId");
        for ($v = 0; $v < count($parent_data_arr); $v++) {
            $vehicleTypeArr[$parent_data_arr[$v]['iVehicleTypeId']] = $parent_data_arr[$v]['vCategory'];
        }
        //Commented By HJ On 19-06-2020 For Optimized Query As Per Below Start Removed Join
        //$deliveryLocation = $obj->MySQLSelect("SELECT tdl.iTripDeliveryLocationId,tdl.eSignVerification,tr.iActive, tr.eServiceLocation,tr.iTripId from trips as tr LEFT JOIN trips_delivery_locations as tdl ON tdl.iTripId=tr.iTripId WHERE tr.eSystem = 'General' ORDER BY tr.iTripId DESC");
        //Commented By HJ On 19-06-2020 For Optimized Query As Per Below End Removed Join
        $deliveryLocation = $obj->MySQLSelect("SELECT tdl.iTripId,tdl.iTripDeliveryLocationId,tdl.eSignVerification from trips_delivery_locations as tdl ORDER BY tdl.iTripId DESC");
        for ($d = 0; $d < count($deliveryLocation); $d++) {
            $delLocationArr[$deliveryLocation[$d]['iTripId']][] = $deliveryLocation[$d];
        }
        $getRentalPackage = $obj->MySQLSelect("SELECT iRentalPackageId,vPackageName_" . $vLanguage . " AS vPackageName FROM rental_package");
        for ($p = 0; $p < count($getRentalPackage); $p++) {
            $rentalPackageArr[$getRentalPackage[$p]['iRentalPackageId']] = $getRentalPackage[$p]['vPackageName'];
        }
        $getCancelReasons = $obj->MySQLSelect("SELECT vTitle_" . $vLanguage . " AS cancelReason,iCancelReasonId FROM cancel_reason");
        for ($c = 0; $c < count($getCancelReasons); $c++) {
            $cancelReasonArr[$getCancelReasons[$c]['iCancelReasonId']] = $getCancelReasons[$c]['cancelReason'];
        }
        //echo $totalNum;die;
        //echo "<pre>";print_r($tripData);die;
        $iCabBookingIdArr = $DisplayBookingDetailsArr = array();
        for ($t = 0; $t < $totalNum; $t++) {
            if (trim($tripData[$t]['iCabBookingId']) != "") {
                $iCabBookingIdArr[] = $tripData[$t]['iCabBookingId'];
            }
        }
        //Added By HJ On 06-07-2020 For Optimize Code Of Loop Start
        if (count($iCabBookingIdArr) > 0) {
            $iCabBookingIds = implode(",", $iCabBookingIdArr);
            $DisplayBookingDetailsArr = ShowBookingDetails($iCabBookingIds);
        }
        //Added By HJ On 06-07-2020 For Optimize Code Of Loop End
        // echo "<pre>";print_r($tripData);die;

        $todaydate = date('Y-m-d H:i:s');
        for ($t = 0; $t < $totalNum; $t++) {
            $showViewRequestedServicesBtn = $showReScheduleBtn = $showReBookingBtn = $showCancelBookingBtn = $showViewCancelReasonBtn = $showViewDetailBtn = $showLiveTrackBtn = $showAcceptBtn = $showDeclineBtn = $showStartBtn = $showCancelBtn = "No";
            $iTripId = $tripData[$t]['iTripId'];
            $eType = $tripData[$t]['eType'];
            $iActive = $tripData[$t]['iActive'];
            $vBookingType = $tripData[$t]['vBookingType'];
            $iCabBookingId = $tripData[$t]['iCabBookingId'];
            $treqDate = $tripData[$t]['tTripRequestDate'];
            //Added By HJ On 15-05-2020 As Per Discuss With KS Start
            //added by SP iFare not calculated here bc in any case it will gives wrong value so it takes from the getTripPriceDetails fun..
            if (isset($tripData_ratingArr[$iTripId]['iFare']) && $tripData_ratingArr[$iTripId]['iFare'] != "") {
                $tripData[$t]['iFare'] = $tripData_ratingArr[$iTripId]['iFare'];
            } else {
                $tripData[$t]['iFare'] = $tripData_ratingArr[$iTripId];
            }
            //if (isset($tripData_rating[$t]['fCancellationFare']) && $tripData_rating[$t]['iActive'] == 'Cancelled') {
            //    $tripData[$t]['iFare'] = $tripData_rating[$t]['fCancellationFare'] - $tripData_rating[$t]['fCommision'] + $tripData_rating[$t]['fTipPrice'];
            //}
            if (isset($tripData[$t]['iFare'])) {
                //if (isset($tripData[$t]['fCancellationFare']) && $tripData[$t]['iActive'] == 'Canceled') {
                //    $tripData[$t]['iFare'] = $tripData[$t]['iFare'] - $tripData[$t]['fTax1'] - $tripData[$t]['fTax2'];
                //}
                $iFarenewwithourtformat = str_replace(",", "", $tripData[$t]['iFare']);
                // Commented and removed priceRatio conversion to solve mantis point #15880
                // $tripData[$t]['iFareNew'] = formateNumAsPerCurrency($iFarenewwithourtformat * $priceRatio,$vCurrencyDriver);
                $tripData[$t]['iFareNew'] = formateNumAsPerCurrency($iFarenewwithourtformat, $vCurrencyDriver);
            }
            if (isset($tripData[$t]['fDiscount'])) {
                if(empty($tripData[$t]['fDiscount'])) {
                    $tripData[$t]['fDiscount'] = 0;
                }
                $tripData[$t]['fDiscount'] = setTwoDecimalPoint($tripData[$t]['fDiscount'] * $priceRatio);
            }
            if (isset($tripData[$t]['fCommision'])) {
                if(empty($tripData[$t]['fCommision'])) {
                    $tripData[$t]['fCommision'] = 0;
                }
                $tripData[$t]['fCommision'] = setTwoDecimalPoint($tripData[$t]['fCommision'] * $priceRatio);
            }
            if (isset($tripData[$t]['fTax1'])) {
                if(empty($tripData[$t]['fTax1'])) {
                    $tripData[$t]['fTax1'] = 0;
                }
                $tripData[$t]['fTax1'] = setTwoDecimalPoint($tripData[$t]['fTax1'] * $priceRatio);
            }
            if (isset($tripData[$t]['fTax2'])) {
                if(empty($tripData[$t]['fTax2'])) {
                    $tripData[$t]['fTax2'] = 0;
                }
                $tripData[$t]['fTax2'] = setTwoDecimalPoint($tripData[$t]['fTax2'] * $priceRatio);
            }
            if (isset($tripData[$t]['fOutStandingAmount'])) {
                if(empty($tripData[$t]['fOutStandingAmount'])) {
                    $tripData[$t]['fOutStandingAmount'] = 0;
                }
                $tripData[$t]['fOutStandingAmount'] = setTwoDecimalPoint($tripData[$t]['fOutStandingAmount'] * $priceRatio);
            }
            if (isset($tripData[$t]['fHotelCommision'])) {
                if(empty($tripData[$t]['fHotelCommision'])) {
                    $tripData[$t]['fHotelCommision'] = 0;
                }
                $tripData[$t]['fHotelCommision'] = setTwoDecimalPoint($tripData[$t]['fHotelCommision'] * $priceRatio);
            }
            
            if (isset($tripData[$t]['fTipPrice'])) {
                if(empty($tripData[$t]['fTipPrice'])) {
                    $tripData[$t]['fTipPrice'] = 0;
                }
               $fTipPrice = $tripData[$t]['fTipPrice'] = setTwoDecimalPoint($tripData[$t]['fTipPrice'] * $priceRatio);
            }
            if (isset($tripData[$t]['fCancellationFare'])) {
                if(empty($tripData[$t]['fCancellationFare'])) {
                    $tripData[$t]['fCancellationFare'] = 0;
                }
                $tripData[$t]['fCancellationFare'] = setTwoDecimalPoint($tripData[$t]['fCancellationFare'] * $priceRatio);
            }
            if (isset($tripData[$t]['fWalletDebit'])) {
                if(empty($tripData[$t]['fWalletDebit'])) {
                    $tripData[$t]['fWalletDebit'] = 0;
                }
                $tripData[$t]['fWalletDebit'] = setTwoDecimalPoint($tripData[$t]['fWalletDebit'] * $priceRatio);
            }
            if (isset($tripData[$t]['eHailTrip']) && $tripData[$t]['eHailTrip'] == 'Yes') {
                $tripData[$t]['vName'] = $languageLabelsArr['LBL_HAIL_RIDER'];
            }
            $searchReqDate = date("Y-m-d", strtotime($treqDate));
            $vImage = $tripData[$t]['vImage'];
            $iDriverId = $tripData[$t]['iDriverId'];
            $eFareType = $vVerificationMethod = "";
            if (isset($tripData[$t]['eFareType'])) {
                $eFareType = $tripData[$t]['eFareType'];
            }
            if (isset($tripData[$t]['vVerificationMethod']) && $tripData[$t]['vVerificationMethod'] != "" && $tripData[$t]['vVerificationMethod'] != "None") {
                $vVerificationMethod = $tripData[$t]['vVerificationMethod'];
            }
            $signVerification = "";
            if (isset($verificationDataArr[$iTripId])) {
                $signVerification = $verificationDataArr[$iTripId];
            }
            $viewButtonStatus = 0;
            if ($vVerificationMethod != "" && $signVerification == "No" && $iActive == "Finished") {
                $viewButtonStatus = 1;
            }
            $tripData[$t]['eFareType'] = $eFareType;
            if ($vBookingType == 'history') {
                $tripData[$t]['iCabBookingId'] = "";
                if ($reqTripId > 0) {
                    $tripDetailArr = FetchTripFareDetails($iTripId, $memberId, $memberType);
                    $tripData[$t] = array_merge($tripData[$t], $tripDetailArr);
                }else{
                    $TripRating = "0";
                    if ($tripData[$t]['iTripId'] > 0) {
                        $getTripRateData = $obj->MySQLSelect("SELECT * FROM `ratings_user_driver` WHERE iTripId='" . $tripData[$t]['iTripId'] . "' AND vRating1 != '' ");
                        for ($r = 0; $r < count($getTripRateData); $r++) {
                            $rateUserType = $getTripRateData[$r]['eUserType'];
                            if (strtoupper($rateUserType) == strtoupper($memberType)) {
                                $TripRating = $getTripRateData[$r]['vRating1'];
                            }
                        }
                        $tripData[$t]['TripRating'] = $TripRating;
                    }
                }
            }


            $vRating1 = 0;
            $vMessage = "";
            if (isset($driverRateArr[$iTripId])) {
                $eHailTrip = $tripData[$t]['eHailTrip'];
                $eBookingFrom = $tripData[$t]['eBookingFrom'];
                $vRating1 = $driverRateArr[$iTripId]['vRating1'];
                if ($iActive == "Finished" && $eHailTrip == "No" && ($eBookingFrom != "Hotel" || $eBookingFrom != "Kiosk")) {
                    if ($serchDate != "" && $searchReqDate == $searchDate) {
                        $avgRating += $vRating1;
                        $countTrip += 1;
                    } else if ($serchDate == "") {
                        $avgRating += $vRating1;
                        $countTrip += 1;
                    }
                }
                $vMessage = $driverRateArr[$iTripId]['vMessage'];
            }
            $tripData[$t]['vRating1'] = $vRating1;
            $tripData[$t]['vMessage'] = $vMessage;
            $tripData[$t]['vImage'] = $imgUrl . "/" . $tripData[$t]['iMemberId'] . "/" . $vImage;
            $driverImage = "";
            if (isset($driverImgArr[$iDriverId])) {
                $driverImage = $driverImgArr[$iDriverId];
            }
            $tripData[$t]['driverImage'] = $driverImage;
            if ($iCabBookingId > 0 && $vBookingType == 'schedule') {
                $tripData[$t]['iTripId'] = "";
                $DisplayBookingDetails = array();
                //$DisplayBookingDetails = ShowBookingDetails($iCabBookingId);
                if (isset($DisplayBookingDetailsArr[$iCabBookingId])) {
                    $DisplayBookingDetails = $DisplayBookingDetailsArr[$iCabBookingId];
                }
                $tripData[$t]['tDestAddress'] = "";
                $tripData[$t]['selectedtime'] = $DisplayBookingDetails['selectedtime'];
                $tripData[$t]['selecteddatetime'] = $DisplayBookingDetails['selecteddatetime'];
                $tripData[$t]['SelectedFareType'] = $DisplayBookingDetails['SelectedFareType'];
                $tripData[$t]['SelectedQty'] = $tripData[$t]['iQty'] = $DisplayBookingDetails['SelectedQty'];
                $tripData[$t]['SelectedPrice'] = strval($DisplayBookingDetails['SelectedPrice']);
                $tripData[$t]['SelectedCurrencySymbol'] = $DisplayBookingDetails['SelectedCurrencySymbol'];
                $tripData[$t]['SelectedCurrencyRatio'] = $DisplayBookingDetails['SelectedCurrencyRatio'];
                $tripData[$t]['SelectedVehicle'] = $DisplayBookingDetails['SelectedVehicle'];
                $tripData[$t]['SelectedCategory'] = $DisplayBookingDetails['SelectedCategory'];
                $tripData[$t]['vVehicleType'] = $DisplayBookingDetails['SelectedVehicle'];
                $tripData[$t]['vVehicleCategory'] = $DisplayBookingDetails['SelectedCategory'];
                $tripData[$t]['SelectedCategoryId'] = $DisplayBookingDetails['SelectedCategoryId'];
                $tripData[$t]['SelectedCategoryTitle'] = $DisplayBookingDetails['SelectedCategoryTitle'];
                $tripData[$t]['SelectedCategoryDesc'] = $DisplayBookingDetails['SelectedCategoryDesc'];
                $tripData[$t]['SelectedAllowQty'] = $DisplayBookingDetails['SelectedAllowQty'];
                $tripData[$t]['SelectedPriceType'] = $DisplayBookingDetails['SelectedPriceType'];
                //$tripData[$t]['vService_TEXT_color'] = "#FFFFFF";
                $eAutoAssign = $tripData[$t]['eAutoAssign'];
                if ($memberType != "Driver") {
                    if ($eType == "UberX") {
                        $showCancelBookingBtn = 'Yes';
                        if ($iActive == "Cancel" || $iActive == "Declined") {
                            $showCancelBookingBtn = "No";
                            $showReBookingBtn = $showViewCancelReasonBtn = "Yes";
                        }
                        //added by SP when booking is accepted and expired then set btn like this.
                        $datediffbook = abs(strtotime($treqDate) - strtotime($todaydate));
                        if (strtotime($treqDate) < strtotime($todaydate)) {
                            if ($datediffbook < 1800) {
                                $showReBookingBtn = "Yes";
                            } else {
                                $showReBookingBtn = $showCancelBookingBtn = "No";
                                $tripData[$t]['vTripStatus'] = "Expired";
                                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_EXPIRED_TXT']; //"Expired";
                                if ($iActive == "Declined") {
                                    $tripData[$t]['vTripStatus'] = "Cancelled";
                                    $tripData[$t]['iActive'] = $languageLabelsArr['LBL_CANCELED_TXT'];
                                }
                            }
                            //$showViewDetailBtn = "No";
                        }
                    } else {
                        if ($eAutoAssign == "Yes") {
                            $showCancelBookingBtn = $showReScheduleBtn = "Yes";
                        } else if ($eAutoAssign == "No") {
                            $showCancelBookingBtn = "Yes";
                        }
                        if ($iActive == "Cancel" || $iActive == "Declined") {
                            $showCancelBookingBtn = "No";
                            $showViewCancelReasonBtn = "Yes";
                        }
                        //added by HV on 11-03-2021 for expired bookings
                        $datediffbook = abs(strtotime($treqDate) - strtotime($todaydate));
                        if (strtotime($treqDate) < strtotime($todaydate)) {
                            $showReBookingBtn = "No";
                            if ($datediffbook > 1800) {
                                $showCancelBookingBtn = "No";
                                $showReScheduleBtn = "No";
                                $tripData[$t]['vTripStatus'] = "Expired";
                                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_EXPIRED_TXT']; //"Expired";
                            }
                            //$showViewDetailBtn = "No";
                        }
                    }
                } else {
                    if ($iActive == "Pending") {
                        $showAcceptBtn = $showDeclineBtn = "Yes";
                    }
                    if ($iActive == "Accepted" || $iActive == "Assign") {
                        $showStartBtn = $showCancelBtn = "Yes";
                    }
                }
            }
            if (!empty($tripData[$t]['iFromStationId']) && !empty($tripData[$t]['iToStationId']) && $tripData[$t]['iActive'] == "Arrived" && $tripData[$t]['vTripStatus'] == "Arrived") { //nareshbhai have told me to do this
                $tripData[$t]['vTripStatus'] = "";
                $tripData[$t]['iActive'] = "";
            }
            if ($memberType != "Driver") {
                //'Pending','Assign','Accepted','Declined','Failed','Cancel','Completed'
                if ($eType == "UberX" || $eType == "Multi-Delivery") {
                    if ($iActive == "Accepted") {
                        $showLiveTrackBtn = $showViewDetailBtn = "No";
                    }
                    if (($iActive == "On Going Trip" || $iActive == "Active") && ($eType == "Multi-Delivery" || $eType == "UberX")) {
                        $showLiveTrackBtn = $showViewDetailBtn = "Yes";
                        if ($eType == "UberX") {
                            $showLiveTrackBtn = "No";
                        }
                    }
                    if ($iActive == "On Going Trip" || $iActive == "Active" || $iActive == "Arrived" || $viewButtonStatus == 1) { // Remain sign verification condition
                        $showViewDetailBtn = "Yes";
                    }
                }
            }
            /* Added by HV on 21-08-2020 (Airskillz addon) */
            if ($showViewDetailBtn == "Yes" && $eType == "UberX") {
                $vChargeData = json_decode($tripData[$t]['vChargesDetailData'], true);
                //echo "<pre>";print_r($vChargeData);die;
                if (($vChargeData != '' && $vChargeData != null)) {
                    $DataCharge = array();
                    $driverPriceRatio = get_value('currency', 'Ratio', 'vName', $tripData[$t]['vCurrencyDriver'], '', 'true');
                    $userCurrencySymbol = get_value('currency', 'vSymbol', 'vName', $tripData[$t]['vCurrencyPassenger'], '', 'true');
                    if ($vChargeData['serviceCost'] != '' && $vChargeData['serviceCost'] != 'nan') {
                        //$vChargeData['serviceCost'] = $vChargeData['serviceCost'] / $driverPriceRatio;
                        $DataCharge['serviceCost'] = $tripData[$t]['serviceCost'] = $userCurrencySymbol . ' ' . setTwoDecimalPoint($vChargeData['serviceCost'] * $priceRatio);
                    }
                    if ($vChargeData['totalAmount'] != '' && $vChargeData['totalAmount'] != 'nan') {
                        //$vChargeData['totalAmount'] = $vChargeData['totalAmount'] / $driverPriceRatio;
                        $DataCharge['totalAmount'] = $tripData[$t]['totalAmount'] = $userCurrencySymbol . ' ' . setTwoDecimalPoint($vChargeData['totalAmount'] * $priceRatio);
                    }
                    if ($vChargeData['fMaterialFee'] != '' && $vChargeData['fMaterialFee'] != 'nan') {
                        //$vChargeData['fMaterialFee'] = $vChargeData['fMaterialFee'] / $driverPriceRatio;
                        $DataCharge['fMaterialFee'] = $tripData[$t]['fMaterialFee'] = $userCurrencySymbol . ' ' . setTwoDecimalPoint($vChargeData['fMaterialFee'] * $priceRatio);
                    }
                    if ($vChargeData['fMiscFee'] != '' && $vChargeData['fMiscFee'] != 'nan') {
                        //$vChargeData['fMiscFee'] = $vChargeData['fMiscFee'] / $driverPriceRatio;
                        $DataCharge['fMiscFee'] = $tripData[$t]['fMiscFee'] = $userCurrencySymbol . ' ' . setTwoDecimalPoint($vChargeData['fMiscFee'] * $priceRatio);
                    }
                    if ($vChargeData['fDriverDiscount'] != '' && $vChargeData['fDriverDiscount'] != 'nan') {
                        //$vChargeData['fDriverDiscount'] = $vChargeData['fDriverDiscount'] / $driverPriceRatio;
                        $DataCharge['fDriverDiscount'] = $tripData[$t]['fDriverDiscount'] = $userCurrencySymbol . ' ' . setTwoDecimalPoint($vChargeData['fDriverDiscount'] * $priceRatio);
                    }
                    //echo "<pre>";print_r($vChargeData);die;
                    if ($vChargeData['vConfirmationCode'] != '' && $vChargeData['vConfirmationCode'] != 'nan') {
                        $DataCharge['vConfirmationCode'] = $tripData[$t]['vConfirmationCode'] = $vChargeData['vConfirmationCode'];
                    }
                    if ($tripData[$t]['eApproved'] == 'Yes') {
                        $tripData[$t]['vChargesDetailData'] = "{}";
                    } else {
                        if (count($DataCharge) > 0) {
                            $tripData[$t]['vChargesDetailData'] = json_encode($DataCharge);
                        } else {
                            $tripData[$t]['vChargesDetailData'] = "{}";
                        }
                    }
                } else {
                    $tripData[$t]['vChargesDetailData'] = "{}";
                }
                $tripData[$t]['eApproveByUser'] = $tripData[$t]['eApproveByUser'];
                $tripData[$t]['eApproveRequestSentByDriver'] = $tripData[$t]['eApproveRequestSentByDriver'];
                $tripData[$t]['eApproved'] = $tripData[$t]['eApproved'];
                // echo "<pre>"; print_r($tripData[$t]); exit();
            } else {
                $tripData[$t]['vChargesDetailData'] = "{}";
            }
            /* Added by HV on 21-08-2020 (Airskillz addon) End */ //echo $showViewDetailBtn;die;
            //Start Code For getRideHistory Type
            $rateCount = 0;
            if (isset($ratingArr[$iTripId])) {
                $rateCount = $ratingArr[$iTripId];
            }
            $tripData[$t]['is_rating'] = 'No';
            if ($rateCount > 0) {
                $tripData[$t]['is_rating'] = 'Yes';
            } else {
                if ($MODULES_OBJ->isEnableRating()) {
                    $days = dateDiffInDays($treqDate, date("Y-m-d H:i:s"));
                    if ($days >= $RATING_DURATION_ON_RECEIPT) {
                        $tripData[$t]['is_rating'] = 'Yes';
                    }
                }
            }
            $tripData[$t]['ENABLE_TIP_MODULE'] = 'No';
            if ($eType == "Ride" && $MODULES_OBJ->isEnableTip() && ($tripData[$t]['vTripPaymentMode'] == "Card" || $tripData[$t]['vTripPaymentMode'] == "Wallet")) {
                $days = dateDiffInDays($treqDate, date("Y-m-d H:i:s"));

                if ($fTipPrice == 0 && ($days <= $TIP_DURATION_ON_RECEIPT)) {
                    $tripData[$t]['ENABLE_TIP_MODULE'] = 'Yes';
                }
            }
            // $tripData[$t]['ENABLE_TIP_MODULE'] = 'Yes';
            //if ($tripData[$t]["eType"] == 'UberX' && $tripData[$t]["eFareType"] != "Regular") {
            //$tripData[$t]['tDaddress'] = "";
            //}
            /* Start Added For Rental */
            $vPackageName = "";
            if (isset($rentalPackageArr[$tripData[$t]['iRentalPackageId']])) {
                $vPackageName = $rentalPackageArr[$tripData[$t]['iRentalPackageId']];
            }
            $tripData[$t]['vPackageName'] = $vPackageName;
            /* End Added For Rental */ //End Code For getRideHistory Type
            //Start Code For getOngoingUserTrips Type
            $tripData[$t]['moreServices'] = "No";
            if ($SERVICE_PROVIDER_FLOW == "Provider" && $eType == "UberX" && $tripData[$t]['eServiceLocation'] == "Driver") {
                $tripData[$t]['tSaddress'] = $tripData[$t]['vWorkLocation'];
            }
            if ($tripData[$t]['isVideoCall'] == "Yes") {
                $tripData[$t]['tSaddress'] = "";
            }
            if (isset($tripData[$t]['eRental']) && $tripData[$t]['eRental'] == 'Yes') {
                $tripData[$t]['vServiceDetailTitle'] = $tripData[$t]['vServiceDetailTitle'];
            } else {
                $tripData[$t]['vServiceDetailTitle'] = $tripData[$t]['vVehicleType'];
            }
            $tripData[$t]['SelectedTypeName'] = $tripData[$t]['vServiceTitle'] = $tripData[$t]['vVehicleType'];
            if ($eType == "Ride") {
                $tripData[$t]['vServiceTitle'] = $languageLabelsArr['LBL_TAXI_BOOKING'];
                if($tripData[$t]['eIconType'] == "Ambulance") {
                    $tripData[$t]['vServiceTitle'] = $languageLabelsArr['LBL_AMBULANCE_BOOKING_TXT'];
                }
                if ($vFilterParam == "Ride") {
                    $tripData[$t]['vServiceTitle'] = "";
                }
                if (!empty($tripData[$t]['iFromStationId']) && !empty($tripData[$t]['iToStationId'])) {
                    $tripData[$t]['vServiceTitle'] = $languageLabelsArr['LBL_HEADER_RDU_FLY_RIDE'];
                    if ($vFilterParam == "eFly") {
                        $tripData[$t]['vServiceTitle'] = "";
                    }
                }
            } else if ($eType == "Multi-Delivery" || $eType == "Deliver") {
                $tripData[$t]['vServiceTitle'] = $languageLabelsArr['LBL_DELIVERY'];
                if ($vFilterParam == "Multi-Delivery" || $vFilterParam == "Deliver") {
                    $tripData[$t]['vServiceTitle'] = "";
                }
            }
            //added by SP on 30-9-2019 for cubex when  from app side $vSubFilterParam pass then vServiceTitle be blank start
            if ($vFilterParam != '') {
                $tripData[$t]['vServiceTitle'] = "";
            }
            //added by SP on 30-9-2019 for cubex when  from app side $vSubFilterParam pass then vServiceTitle be blank start
            if ($THEME_OBJ->isDeliveryXThemeActive() == 'Yes' || $THEME_OBJ->isDeliveryXv2ThemeActive() == 'Yes' || $THEME_OBJ->isRideCXThemeActive() == 'Yes' || $THEME_OBJ->isRideCXv2ThemeActive() == 'Yes' || $THEME_OBJ->isProDeliveryThemeActive() == 'Yes') {
                $tripData[$t]['vServiceTitle'] = "";
            }
            $vCategory = "";
            if ($eType == "UberX" && !empty($tripData[$t]['tVehicleTypeFareData'])) {
                $tripData[$t]['moreServices'] = "Yes";
                $tVehicleTypeFareDataArr = json_decode($tripData[$t]['tVehicleTypeFareData'], true);
                $ParentVehicleCategoryId = isset($tVehicleTypeFareDataArr['ParentVehicleCategoryId']) ? $tVehicleTypeFareDataArr['ParentVehicleCategoryId'] : 0;
                if ($ParentVehicleCategoryId == 0) {
                    $tVehicleTypeFareDataArr_fareArr = $tVehicleTypeFareDataArr['FareData'];
                    if (count($tVehicleTypeFareDataArr_fareArr) > 0) {
                        if (isset($vehicleTypeArr[$tVehicleTypeFareDataArr_fareArr[0]['id']])) {
                            $vCategory = $vehicleTypeArr[$tVehicleTypeFareDataArr_fareArr[0]['id']];
                        }
                    }
                } else {
                    $tripData[$t]['ParentVehicleCategoryId'] = $ParentVehicleCategoryId;
                    $iVehicleCategoryIds_str_ufx = $iVehicleCategoryIds_str_ufx == "" ? $ParentVehicleCategoryId : $iVehicleCategoryIds_str_ufx . "," . $ParentVehicleCategoryId;
                }
                $tripData[$t]['eFareTypeServices'] = $tVehicleTypeFareDataArr['eFareTypeServices'];
                if (!empty($tripData[$t]['ParentVehicleCategoryId']) && $tVehicleTypeFareDataArr['eFareTypeServices'] == "Fixed") {
                    $tripData[$t]['vServiceDetailTitle'] = $tripData[$t]['ParentCategoryName'];
                } else {
                    if (isset($vehicleTypeArr[$tripData[$t]['ParentCategoryName']])) {
                        //echo "asd";die;
                        $tripData[$t]['vServiceDetailTitle'] = $vehicleTypeArr[$tripData[$t]['ParentCategoryName']] . " - " . $tripData[$t]['vVehicleType'];
                    }
                }
                if ($tripData[$t]['vServiceTitle'] == "") {
                    $tripData[$t]['vServiceTitle'] = $tripData[$t]['vServiceDetailTitle'];
                    //$tripData[$t]['vServiceTitle'] = '';
                    //$tripData[$t]['SelectedTypeName'] = '';
                }
                if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[$t]['isVideoCall'] == 'Yes') {
                    $FareData = $tVehicleTypeFareDataArr['FareData'];
                    $sql_CatName = "SELECT (SELECT vcs.vCategory_" . $vLanguage . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as ParentCategoryName FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = '" . $FareData[0]['id'] . "'";
                    $CatName = $obj->MySQLSelect($sql_CatName);
                    $tripData[$t]['vServiceDetailTitle'] = $CatName[0]['ParentCategoryName'];
                }
            }
            //added by SP on 1-10-2019 for  cubex design same for driver and user so change condition
            if ($eType == "UberX" && $SERVICE_PROVIDER_FLOW == "Provider" && $tripData[$t]['moreServices'] == "Yes" && $vBookingType == 'schedule') {
                $showViewRequestedServicesBtn = "Yes";
            }
            //echo $showViewRequestedServicesBtn;die;
            $tripData[$t]['vCategory'] = $vCategory;
            //echo "<pre>";print_r($tripData[$t]);die;
            // Convert Into Timezone
            $tripTimeZone = $tripData[$t]['vTimeZone'];
            if ($tripTimeZone != "") {
                $serverTimeZone = date_default_timezone_get();
                //echo $treqDate."===".$tripTimeZone."=".$serverTimeZone;die;
                $tripData[$t]['tTripRequestDate'] = $tripData[$t]['dBooking_dateOrig'] = converToTz($treqDate, $tripTimeZone, $serverTimeZone);
            }
            // Convert Into Timezone
            $tripData[$t]['dDateOrig'] = $tripData[$t]['tTripRequestDate'];
            $tripData[$t]['dBooking_date'] = date('dS M Y \a\t h:i a', strtotime($tripData[$t]['tTripRequestDate']));
            /* ---------------------Multi delivery start--------------------------- */
            if ($eType == "Multi-Delivery") {
                //$sql = "SELECT tdl.iTripDeliveryLocationId,tdl.eSignVerification,tr.iActive, tr.eServiceLocation from trips as tr LEFT JOIN trips_delivery_locations as tdl ON tdl.iTripId=tr.iTripId WHERE tr.iTripId='" . $tripData[$t]['iTripId'] . "' AND tr.eSystem = 'General' GROUP BY tr.iTripId ORDER BY tr.iTripId DESC";
                //$Data2 = $obj->MySQLSelect($sql);
                $delLocationData = array();
                if (isset($delLocationArr[$tripData[$t]['iTripId']])) {
                    $delLocationData = $delLocationArr[$tripData[$t]['iTripId']];
                }
                for ($j = 0; $j < count($delLocationData); $j++) {
                    if ($delLocationData[$j]['eSignVerification'] == "No") {
                        $tripData[$t]['iTripDeliveryLocationId'] = $delLocationData[$j]['iTripDeliveryLocationId'];
                        $tripData[$t]['eSignVerification'] = $delLocationData[$j]['eSignVerification'];
                    }
                }
            }
            /* ---------------------Multi delivery end ---------------------------- */ 
            //End Code For getOngoingUserTrips Type

            //Start Code For checkBookings Type
            $iCancelReasonId = $tripData[$t]['iCancelReasonId'];
            $vCancelReason = $tripData[$t]['vCancelReason'];
            if (isset($cancelReasonArr[$iCancelReasonId])) {
                $vCancelReason = $cancelReasonArr[$iCancelReasonId];
            }
            $tripData[$t]['vCancelReason'] = $vCancelReason;
            //Start Code For checkBookings Type
            //Start Code For Show/Hide Button

            $tripData[$t]['showViewRequestedServicesBtn'] = $showViewRequestedServicesBtn;
            $tripData[$t]['showReScheduleBtn'] = $showReScheduleBtn;
            $tripData[$t]['showReBookingBtn'] = $showReBookingBtn;
            $tripData[$t]['showCancelBookingBtn'] = $showCancelBookingBtn;
            $tripData[$t]['showViewCancelReasonBtn'] = $showViewCancelReasonBtn;
            $tripData[$t]['showViewDetailBtn'] = $showViewDetailBtn;
            $tripData[$t]['showLiveTrackBtn'] = $showLiveTrackBtn;
            //Driver Side Schedule Button Status Start
            $tripData[$t]['showStartBtn'] = $showStartBtn;
            $tripData[$t]['showAcceptBtn'] = $showAcceptBtn;
            $tripData[$t]['showDeclineBtn'] = $showDeclineBtn;
            $tripData[$t]['showCancelBtn'] = $showCancelBtn;
            $tripData[$t]['ALLOW_SERVICE_PROVIDER_AMOUNT'] = isset($DisplayBookingDetails['ALLOW_SERVICE_PROVIDER_AMOUNT']) ? $DisplayBookingDetails['ALLOW_SERVICE_PROVIDER_AMOUNT'] : "No";
            $tripData[$t]['vService_BG_color'] = RANDOM_COLORS_ARR[array_rand(RANDOM_COLORS_ARR, 1)];
            $tripData[$t]['vService_TEXT_color'] = "#FFFFFF";
            //Driver Side Schedule Button Status End
            //End Code For Show/Hide Button
            //added by SP on 19-10-2020 converted iActive to the lang label
            if ($iActive == "Active") {
                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_INPROCESS'];
            } else if ($iActive == "Finished") {
                if ($tripData[$t]['eCancelled'] == "Yes") { //when trip cancel after start trip then iactive is completed..so change it...
                    $tripData[$t]['iActive'] = $languageLabelsArr['LBL_CANCELED_TXT'];
                } else {
                    $tripData[$t]['iActive'] = $languageLabelsArr['LBL_COMPLETED'];
                    if ($reqTripId > 0) {
                        $tripData[$t]['iActive'] = $iActive;
                    }
                }
            } else if ($iActive == "On Going Trip") {
                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_INPROCESS'];
            } else if ($iActive == "Arrived") {
                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_INPROCESS'];
            } else if ($iActive == "Canceled" || $iActive == "Cancel") {
                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_CANCELED_TXT'];
            } else if ($iActive == "Accepted") {
                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_ACCEPTED'];
            } else if ($iActive == "Pending") {
                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_PENDING'];
            }
            if ($tripData[$t]['vTripStatus'] == "Expired") {
                $tripData[$t]['iActive'] = $languageLabelsArr['LBL_EXPIRED_TXT'];
            }
            //not used $tripdeliverIds so commented
            //if (!empty($tripdeliverIds)) {
            //    $tripdeliverIdsArr = explode(',', $tripdeliverIds);
            //}
            //if ($iActive == "Finished" && in_array($tripData[$t]['iTripId'], $tripdeliverIdsArr)) {
            //    $tripData[$t]['iActive'] = $languageLabelsArr['LBL_INPROCESS'];
            //}
            //added by SP on 30-9-2019 for cubex when cancel or finished at that time pass yes start
            $tripData[$t]['eShowHistory'] = 'No';
            if ($iActive == "Canceled" || $iActive == "Finished") {
                $tripData[$t]['eShowHistory'] = 'Yes';
            }
            //added by SP on 30-9-2019 for cubex when cancel or finished at that time pass yes end
            //added by SP  for cubex on 12-10-2019 for cubex start
            $Sender_Signature = "";
            if (isset($tripData[$t]['vSignImage']) && $tripData[$t]['vSignImage'] != "") {
                if ((file_exists($tconfig["tsite_upload_trip_signature_images_path"] . $tripData[$t]['vSignImage'])) && $tripData[$t]['vSignImage'] != "") {
                    $Sender_Signature = $tconfig["tsite_upload_trip_signature_images"] . $tripData[$t]['vSignImage'];
                }
            }
            $tripData[$t]['vSignImage'] = $Sender_Signature;
            //added by SP  for cubex on 12-10-2019 for cubex start
            $tripData[$t]['ShowSafetyRating'] = $ENABLE_SAFETY_RATING;
            if (!in_array($tripData[$t]['eType'], ['Ride', 'UberX'])) {
                $tripData[$t]['ShowSafetyRating'] = "No";
            }
            $tripData[$t]['iActiveDisplay'] = $tripData[$t]['iActive'];
            $tripData[$t]['iActive'] = $iActive;
            if ($tripData[$t]['isVideoCall'] == 'Yes' && $MODULES_OBJ->isEnableVideoConsultingService()) {
                $tVehicleTypeData = json_decode($tripData[$t]['tVehicleTypeData'],true)[0];
                //$get_data = $obj->MySQLSelect("SELECT vCategory_" . $vLanguage . " FROM vehicle_category WHERE iVehicleCategoryId = " . $tripData[$t]['iVehicleTypeId'] . "");
                $get_data = $obj->MySQLSelect("SELECT vCategory_" . $vLanguage . " FROM vehicle_category WHERE iVehicleCategoryId = " . $tVehicleTypeData['iVehicleTypeId'] . "");
                $tripData[$t]['vServiceTitle'] = $get_data[0]['vCategory_' . $vLanguage . ''];

                if($tripData[$t]['vServiceTitle'] == ""){
                    $tripData[$t]['vServiceTitle'] = $tripData[$t]['vServiceDetailTitle'];
                }
            }

            $tripData[$t]['eJobType'] = $eType;
            if($eType == "UberX" && $tripData[$t]['isVideoCall'] == "Yes") {
                $tripData[$t]['eJobType'] = "VideoConsult";
            } elseif ($tripData[$t]['eType'] == "Multi-Delivery") {
                $tripData[$t]['eJobType'] = "Deliver";
            }
        }
        
        //echo "<pre>";print_r($tripData);die;
        $returnData['message'] = $tripData;
        $returnData['SERVER_TIME'] = date('Y-m-d H:i:s');
        $returnData['AppTypeFilterArr'] = $appTypeFilterArr;
        if ($TotalPages > $page) {
            //echo $TotalPages."===".$page;die;
            $returnData['NextPage'] = "" . ($page + 1);
        } else {
            $returnData['NextPage'] = "0";
        }
        $returnData['Action'] = "1";
    }
    //Commented By HJ On 18-10-2019 For Prevent Filter Selection Priority Based On Data Count End
    $returnData['TotalEarning'] = setTwoDecimalPoint($totalEarnings_new);
    // $returnData['TotalEarning'] = formateNumAsPerCurrency($totalEarnings_new,$vCurrencyDriver);
    $returnData['TotalEarningAmount'] = formateNumAsPerCurrency($totalEarnings_new, $vCurrencyDriver);
    $returnData['TotalEarningNew'] = formateNumAsPerCurrency($totalEarnings_new, $vCurrencyDriver);
    //$returnData['TripCount'] = strval(count($tripData));
    //$returnData['TripCount'] = strval(count($tripData_rating));
    $returnData['TripCount'] = $countTrip_Finished;
    $totalRating = 0;
    if ($avgRating_new > 0) {
        $totalRating = number_format($avgRating_new / $countTrip_new, 1);
    }
    /* if ($avgRating > 0) {

        $totalRating = setTwoDecimalPoint($avgRating / $countTrip);

    } */
    /*--------------------- missingDate ------------------*/
    // $returnData['NO_DATA'] = $missingDate;
    $returnData['EARNING_DATA'] = $missingDate;
    /*--------------------- missingDate ------------------*/
    $returnData['AvgRating'] = $totalRating;
    $returnData['CurrencySymbol'] = $currencySymbol;
    $returnData['eFilterSel'] = $filterSelected;

    setDataResponse($returnData);
}

function is_decimal($val)
{
    return is_numeric($val) && floor($val) != $val;
}

function getRoundingOffAmount($originalFare, $currCode)
{
    global $lang_label, $lang_code, $obj, $currencyAssociateArr;
    $DataArr = array();
    if ($currCode != '') {
        if (isset($currencyAssociateArr[$currCode])) {
            $getCurrData[] = $currencyAssociateArr[$currCode];
        } else {
            $getCurrData = $obj->MySQLSelect("SELECT  * FROM  `currency` WHERE vName = '" . $currCode . "' AND `eStatus` = 'Active' ");
        }
        if (count($getCurrData) > 0) {
            if ($getCurrData[0]['eRoundingOffEnable'] == "Yes") {
                $fMiddleRangeValue = (isset($getCurrData[0]['fMiddleRangeValue']) && $getCurrData[0]['fMiddleRangeValue'] != '0.00') ? $getCurrData[0]['fMiddleRangeValue'] : '0.00';
                $fFirstRangeValue = (isset($getCurrData[0]['fFirstRangeValue']) && $getCurrData[0]['fFirstRangeValue'] != '0.00') ? $getCurrData[0]['fFirstRangeValue'] : '0.00';
                $fSecRangeValue = (isset($getCurrData[0]['fSecRangeValue']) && $getCurrData[0]['fSecRangeValue'] != '0.00') ? $getCurrData[0]['fSecRangeValue'] : '0.00';
                if ($originalFare != "" && $originalFare != "0.00") {
                    $min1 = 0;
                    $modBy = "100";
                    if (is_decimal($getCurrData[0]['fMiddleRangeValue'])) {
                        $modBy = "1";
                    }
                    $modValue = fmod($originalFare, $modBy);
                    $difValue = $originalFare - $modValue;
                    if (($modValue >= $min1) && ($modValue <= $fMiddleRangeValue)) {
                        //echo "first";
                        $updatedModValue = $fFirstRangeValue;
                        $finalUpdateValue = $difValue + $fFirstRangeValue;
                    } else if (($modValue >= $fMiddleRangeValue) && ($modValue <= $fSecRangeValue)) {
                        //echo "second";
                        $updatedModValue = $fSecRangeValue;
                        $finalUpdateValue = $difValue + $fSecRangeValue;
                    } else if (($modValue >= $fMiddleRangeValue) && ($modValue >= $fSecRangeValue)) {
                        //echo "third";
                        $updatedModValue = $fSecRangeValue;
                        $finalUpdateValue = $difValue + $fSecRangeValue;
                    }
                    $methodValue = $originalFare - $finalUpdateValue;
                    if ($methodValue < 0) {
                        $method = "Addition";
                    } else if ($methodValue > 0) {
                        $method = "Substraction";
                    } else {
                        $method = "None";
                    }
                    $DataArr['originalFareValue'] = $originalFare;
                    $DataArr['method'] = $method;
                    $DataArr['differenceValue'] = abs($methodValue);
                    //$DataArr['finalFareValue'] = formatNum(setTwoDecimalPoint($finalUpdateValue,2));//coomented this one bc then in all files where this is used i have to remove setTwoDecimalPoint there
                    $DataArr['finalFareValue'] = setTwoDecimalPoint($finalUpdateValue, 2);
                }
            }
        }
    }
    return $DataArr;
}

function getRoundingOffAmounttrip($originalFare, $rAmt, $rtype, $ratio = 1)
{
    global $lang_label, $lang_code, $obj;
    $originalFare = setTwoDecimalPoint($originalFare * $ratio, 2);
    //$rAmt = setTwoDecimalPoint($rAmt * $ratio,2);
    $rAmt = setTwoDecimalPoint($rAmt, 2);
    if ($rtype == 'Addition') {
        $fare = $originalFare + $rAmt;
    } else if ($rtype == 'Substraction') {
        $fare = $originalFare - $rAmt;
    }
    $DataArr['originalFareValue'] = $originalFare;
    $DataArr['method'] = $rtype;
    $DataArr['differenceValue'] = abs($rAmt);
    $DataArr['finalFareValue'] = setTwoDecimalPoint($fare, 2);
    return $DataArr;
    /* find vLanguageCode using member id */ //$originalFare = 0.56;
    //if ($countryCode != '') {
    if ($currCode != '') {
        //$sql = "SELECT  * FROM  `country` WHERE vCountryCode = '" . $countryCode . "' AND `eStatus` = 'Active' ";
        //$getCountryData = $obj->MySQLSelect($sql);
        $sql = "SELECT  * FROM  `currency` WHERE vName = '" . $currCode . "' AND `eStatus` = 'Active' ";
        $getCurrData = $obj->MySQLSelect($sql);
        if (count($getCurrData) > 0) {
            if ($getCurrData[0]['eRoundingOffEnable'] == "Yes") {
                $fMiddleRangeValue = (isset($getCurrData[0]['fMiddleRangeValue']) && $getCurrData[0]['fMiddleRangeValue'] != '0.00') ? $getCurrData[0]['fMiddleRangeValue'] : '0.00';
                $fFirstRangeValue = (isset($getCurrData[0]['fFirstRangeValue']) && $getCurrData[0]['fFirstRangeValue'] != '0.00') ? $getCurrData[0]['fFirstRangeValue'] : '0.00';
                $fSecRangeValue = (isset($getCurrData[0]['fSecRangeValue']) && $getCurrData[0]['fSecRangeValue'] != '0.00') ? $getCurrData[0]['fSecRangeValue'] : '0.00';
                if ($originalFare != "" && $originalFare != "0.00") {
                    $min1 = 0;
                    /* if(($min1 <= $originalFare) && ($originalFare <= $fFirstRangeValue)){



                      $modBy = $fFirstRangeValue;

                      } else if(($fFirstRangeValue <= $originalFare) && ($originalFare <= $fSecRangeValue)){



                      $modBy = $fSecRangeValue;

                  } else{ */ //$modBy = 100;
                    //}
                    if (is_decimal($getCurrData[0]['fMiddleRangeValue'])) {
                        $modBy = "1";
                    } else {
                        $modBy = "100";
                    }
                    $modValue = fmod($originalFare, $modBy);
                    $difValue = $originalFare - $modValue;
                    if (($modValue >= $min1) && ($modValue <= $fMiddleRangeValue)) {
                        //echo "first";
                        $updatedModValue = $fFirstRangeValue;
                        $finalUpdateValue = $difValue + $fFirstRangeValue;
                    } else if (($modValue >= $fMiddleRangeValue) && ($modValue <= $fSecRangeValue)) {
                        //echo "second";
                        $updatedModValue = $fSecRangeValue;
                        $finalUpdateValue = $difValue + $fSecRangeValue;
                    } else if (($modValue >= $fMiddleRangeValue) && ($modValue >= $fSecRangeValue)) {
                        //echo "third";
                        $updatedModValue = $fSecRangeValue;
                        $finalUpdateValue = $difValue + $fSecRangeValue;
                    }
                    $methodValue = $originalFare - $rAmt;
                    if ($methodValue < 0) {
                        $method = "Addition";
                    } else if ($methodValue > 0) {
                        $method = "Substraction";
                    } else {
                        $method = "None";
                    }
                    $DataArr['originalFareValue'] = $originalFare;
                    $DataArr['method'] = $method;
                    $DataArr['differenceValue'] = abs($methodValue);
                    $DataArr['finalFareValue'] = setTwoDecimalPoint($finalUpdateValue, 2);
                }
            }
        }
    }
    return $DataArr;
}

function fetchAPIDetails()
{
    global $_REQUEST;
    $API_URL = isset($_REQUEST['API_URL']) ? utf8_decode(utf8_encode(urldecode($_REQUEST['API_URL']))) : '';
    if ($API_URL != "" || empty($API_URL) == false) {
        $API_URL = preg_replace("/ /", "%20", $API_URL);
        //Added By HJ On 23-09-2020 For Replace # From Url Start
        $newUrlArr = array();
        $explode = explode("&", $API_URL);
        foreach ($explode as $key => $val) {
            if (startsWith($val, "input=")) {
                $val = preg_replace("/#/", "%23", $val);
            }
            $newUrlArr[] = $val;
        }
        $API_URL = implode("&", $newUrlArr);
        //$API_URL = preg_replace("/#/", "%23", $API_URL);
        //Added By HJ On 23-09-2020 For Replace # From Url End
        $dataOfAPI = file_get_contents($API_URL);
        //echo $dataOfAPI;
        //$returnData = array();
        //$returnData['DATA_RESULT'] = json_decode($dataOfAPI, true);
        setDataResponse(json_decode($dataOfAPI, true));
    }
}

function getUserLanguageCode()
{
    global $_REQUEST, $LANG_OBJ;
    $vLangCode = isset($_REQUEST['vLangCode']) ? clean($_REQUEST['vLangCode']) : '';
    $appType = isset($_REQUEST['appType']) ? clean($_REQUEST['appType']) : ''; // Passenger OR Driver
    $vGeneralLang = isset($_REQUEST["vGeneralLang"]) ? $_REQUEST["vGeneralLang"] : '';
    $iMemberId = isset($_REQUEST['iMemberId']) ? clean($_REQUEST['iMemberId']) : '';
    $languageCode = "";
    if (!empty($vGeneralLang)) {
        $languageCode = $vGeneralLang;
    } else if (!empty($vLangCode)) {
        $languageCode = $vLangCode;
    } else if ($iMemberId != "") {
        if ($appType == "Company") {
            $tableName = "company";
            $fieldName = "iCompanyId";
        } else if ($appType == "Driver") {
            $tableName = "register_driver";
            $fieldName = "iDriverId";
            //$languageCode = get_value('register_driver', 'vLang', 'iDriverId', $iMemberId, '', 'true');
        } else {
            $tableName = "register_user";
            $fieldName = "iUserId";
            //$languageCode = get_value('register_user', 'vLang', 'iUserId', $iMemberId, '', 'true');
        }
        $langData = $obj->MySQLSelect("SELECT vLang FROM " . $tableName . " WHERE $fieldName=$iMemberId");
        if (count($langData) > 0) {
            $languageCode = $langData[0]['vLang'];
        }
    }
    if (empty($languageCode)) {
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
        $languageCode = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
    }
    return $languageCode;
}

function isAllowFetchAPIDetails()
{
    if (!empty($_REQUEST['type']) && $_REQUEST['type'] == "fetchAPIDetails" && !empty($_REQUEST['GeneralUserType']) && (strtoupper($_REQUEST['GeneralUserType']) == "PASSENGER" || strtoupper($_REQUEST['GeneralUserType']) == "USER" || strtoupper($_REQUEST['GeneralUserType']) == "RIDER")) {
        return true;
    }
    return false;
}

//Added By HJ On 27-05-2020 For Generate Common Random Number Start
function generateCommonRandom()
{
    global $COMMON_RANDOM_NUMBER_LENGTH;
    if (isset($COMMON_RANDOM_NUMBER_LENGTH) && $COMMON_RANDOM_NUMBER_LENGTH > 0) {
        $digit = $COMMON_RANDOM_NUMBER_LENGTH;
    } else {
        $digit = 4;
    }
    //echo $COMMON_RANDOM_NUMBER_LENGTH;die;
    //$verificationCode = rand(str_repeat(0, $digit), str_repeat(9, $digit));
    $verificationCode = rand(1000, str_repeat(9, $digit)); //added by SP given changed by pratikbhai
    return $verificationCode;
}

function caancelTripCountryTax($memberId, $eUserType, $fareAmount)
{
    $result = array();
    $discountValue = 0;
    /* Tax Calculation */
    $TaxArr = getMemberCountryTax($memberId, $eUserType);
    $fTax1 = $TaxArr['fTax1'];
    $fTax2 = $TaxArr['fTax2'];
    $result['fTax1Percentage'] = $fTax1;
    $result['fTax2Percentage'] = $fTax2;
    $result['fTax1'] = $result['fTax2'] = 0;
    if ($fTax1 > 0) {
        $fTaxAmount1 = round(((($fareAmount - $discountValue) * $fTax1) / 100), 2);
        $result['fTax1'] = $fTaxAmount1;
    }
    if ($fTax2 > 0) {
        $fTaxAmount2 = round((($fareAmount * $fTax2) / 100), 2);
        $result['fTax2'] = $fTaxAmount2;
    }
    /* Tax Calculation */
    return $result;
}

// Added by HV on 23-09-2020 for Genie last 5 order locations
function getgenieorderlocations($iUserId)
{
    global $obj;
    $sql = "SELECT c.vRestuarantLocationLat,c.vRestuarantLocationLong,c.vRestuarantLocation FROM orders as ord LEFT JOIN company as c ON c.iCompanyId = ord.iCompanyId WHERE iUserId = '" . $iUserId . "' AND ord.eBuyAnyService = 'Yes' ORDER BY ord.iOrderId DESC";
    $db_passenger_source = $obj->MySQLSelect($sql);
    if (count($db_passenger_source) > 0) {
        $location_all = array_map("unserialize", array_unique(array_map("serialize", $db_passenger_source)));
        $location_all = array_slice($location_all, 0, 5);
    } else {
        $location_all = array();
    }
    return $location_all;
}

//added by SP on 14-10-2020 for timeslot
function UpdateStoreTimeSlots()
{
    global $obj;
    $timingArray = array('vMonFromSlot', 'vMonToSlot', 'vTueFromSlot', 'vTueToSlot', 'vWedFromSlot', 'vWedToSlot', 'vThuFromSlot', 'vThuToSlot', 'vFriFromSlot', 'vFriToSlot', 'vSatFromSlot', 'vSatToSlot', 'vSunFromSlot', 'vSunToSlot');
    $orgtimingArray = array('vMonFromSlot1', 'vMonToSlot1', 'vTueFromSlot1', 'vTueToSlot1', 'vWedFromSlot1', 'vWedToSlot1', 'vThuFromSlot1', 'vThuToSlot1', 'vFriFromSlot1', 'vFriToSlot1', 'vSatFromSlot1', 'vSatToSlot1', 'vSunFromSlot1', 'vSunToSlot1', 'vMonFromSlot2', 'vMonToSlot2', 'vTueFromSlot2', 'vTueToSlot2', 'vWedFromSlot2', 'vWedToSlot2', 'vThuFromSlot2', 'vThuToSlot2', 'vFriFromSlot2', 'vFriToSlot2', 'vSatFromSlot2', 'vSatToSlot2', 'vSunFromSlot2', 'vSunToSlot2');
    $sltAry = array(1, 2);
    $iCompanyId = isset($_REQUEST['iCompanyId']) ? $_REQUEST['iCompanyId'] : '';
    //Added By HJ On 13-10-2020 For Addon Related Changes Start
    $slotId = isset($_REQUEST['slot']) ? $_REQUEST['slot'] : '';
    if ($slotId != "") {
        $sltAry = array($slotId);
    }
    $returnArr['ENABLE_TIMESLOT_ADDON'] = "Yes";
    //Added By HJ On 13-10-2020 For Addon Related Changes End
    $CALL_TYPE = isset($_REQUEST["CALL_TYPE"]) ? $_REQUEST["CALL_TYPE"] : "Display"; // Display , Update
    if ($CALL_TYPE == "Display") {
        //Getting Field names for get from sql
        $fieldNames = "";
        foreach ($orgtimingArray as $fieldValue) {
            $fieldNames .= $fieldValue . ",";
        }
        $fieldNames = rtrim($fieldNames, ",");
        $sqlc = "SELECT " . $fieldNames . " FROM company WHERE iCompanyId = '" . $iCompanyId . "'";
        $result_company = $obj->MySQLSelect($sqlc);
        for ($i = 1; $i <= count($sltAry); $i++) {
            $returnArr['Action'] = 1;
            //$returnArr['message'][$i] = "";
            $tempCntr = 0;
            $arrayKey = $i;
            if (count($sltAry) == 1) {
                $arrayKey = $sltAry[$i - 1];
                //echo "<pre>";print_r($sltAry);die;
            }
            $returnArr['message'][$arrayKey] = array();
            for ($j = 0; $j < count($timingArray); $j++) {
                //for from timeslot
                $tempArry = array('dayname' => getDaynameBylabel($timingArray[$j]), 'field' => getDaynameBylabel($timingArray[$j], "field"), $timingArray[$j] . $arrayKey => $result_company[0][$timingArray[$j] . $arrayKey],);
                $returnArr['message'][$arrayKey][$tempCntr] = $tempArry;
                //for to timeslot
                $j++;
                $returnArr['message'][$arrayKey][$tempCntr][$timingArray[$j] . $arrayKey] = $result_company[0][$timingArray[$j] . $arrayKey];
                $tempCntr++;
            }
        }
        //gojek
        echo json_encode($returnArr);
        $obj->MySQLClose();
        /* $sqlc = "SELECT ".$fieldNames." FROM company WHERE iCompanyId = '" . $iCompanyId . "'";

          $result_company =s $obj->MySQLSelect($sqlc);

          $returnArr['Action'] = "1";

          $returnArr['message'] = $result_company[0];

          $obj->MySQLClose();

          echo json_encode($returnArr);

          exit; */
        exit;
    } else {
        $data = json_decode(str_replace("\\", "", $_REQUEST['restaurantTiming']), true);
        //Added By HJ On 13-10-2020 For Addon Related Changes Start
        if ($slotId > 1) {
            $orgtimingArray = array('vMonFromSlot2', 'vMonToSlot2', 'vTueFromSlot2', 'vTueToSlot2', 'vWedFromSlot2', 'vWedToSlot2', 'vThuFromSlot2', 'vThuToSlot2', 'vFriFromSlot2', 'vFriToSlot2', 'vSatFromSlot2', 'vSatToSlot2', 'vSunFromSlot2', 'vSunToSlot2', 'vMonFromSlot1', 'vMonToSlot1', 'vTueFromSlot1', 'vTueToSlot1', 'vWedFromSlot1', 'vWedToSlot1', 'vThuFromSlot1', 'vThuToSlot1', 'vFriFromSlot1', 'vFriToSlot1', 'vSatFromSlot1', 'vSatToSlot1', 'vSunFromSlot1', 'vSunToSlot1');
        }
        //Added By HJ On 13-10-2020 For Addon Related Changes End
        foreach ($data as $opValue) {

            $tempCntr1 = ($tempCntr1 > 0) ? $tempCntr1 : 0;
            foreach ($opValue as $innerValue) {
                $Data_Update[$orgtimingArray[$tempCntr1]] = $innerValue[$orgtimingArray[$tempCntr1]];
                $tempCntr1++;
                $Data_Update[$orgtimingArray[$tempCntr1]] = $innerValue[$orgtimingArray[$tempCntr1]];
                $tempCntr1++;
            }
        }
        //Generating Query
        $where = " iCompanyId = '" . $iCompanyId . "'";
        $id = $obj->MySQLQueryPerform("company", $Data_Update, 'update', $where);
        if ($id) {
            $returnArr['Action'] = "1";
            $returnArr['message'] = "LBL_INFO_UPDATED_TXT";
        } else {
            $returnArr['Action'] = "0";
            $returnArr['message'] = "LBL_TRY_AGAIN_LATER";
        }
        $obj->MySQLClose();
        echo json_encode($returnArr);
        exit;
    }
}

function getDaynameBylabel($label, $type = '')
{
    global $LANG_OBJ;
    $vLang = isset($_REQUEST['vGeneralLang']) ? $_REQUEST['vGeneralLang'] : '';
    if (empty($vLang)) {
        $vLang = $LANG_OBJ->FetchDefaultLangData('vCode');
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", "");
    $label = substr($label, 1, -8);
    if ($type == "field") {
        return $label;
    } else {
        switch ($label) {
            case "Mon":
                return $languageLabelsArr["LBL_MONDAY_TXT"];
                break;
            case "Tue":
                return $languageLabelsArr["LBL_TUESDAY_TXT"];
                break;
            case "Wed":
                return $languageLabelsArr["LBL_WEDNESDAY_TXT"];
                break;
            case "Thu":
                return $languageLabelsArr["LBL_THURSDAY_TXT"];
                break;
            case "Fri":
                return $languageLabelsArr["LBL_FRIDAY_TXT"];
                break;
            case "Sat":
                return $languageLabelsArr["LBL_SATURDAY_TXT"];
                break;
            case "Sun":
                return $languageLabelsArr["LBL_SUNDAY_TXT"];
                break;
            default:
                return "Error";
                break;
        }
    }
}

function UpdateStoreTimeSlotsGeneral()
{
    global $obj;
    $iCompanyId = isset($_REQUEST['iCompanyId']) ? $_REQUEST['iCompanyId'] : '';
    $CALL_TYPE = isset($_REQUEST["CALL_TYPE"]) ? $_REQUEST["CALL_TYPE"] : "Display"; // Display , Update
    $returnArr['ENABLE_TIMESLOT_ADDON'] = "No";
    if ($CALL_TYPE == "Display") {
        $sqlc = "SELECT vFromMonFriTimeSlot1,vToMonFriTimeSlot1,vFromMonFriTimeSlot2,vToMonFriTimeSlot2,vFromSatSunTimeSlot1,vToSatSunTimeSlot1,vFromSatSunTimeSlot2,vToSatSunTimeSlot2 FROM company WHERE iCompanyId = '" . $iCompanyId . "'";
        $result_company = $obj->MySQLSelect($sqlc);
        $returnArr['Action'] = "1";
        $returnArr['message'] = $result_company[0];
        setDataResponse($returnArr);
    } else {
        $vFromMonFriTimeSlot1 = isset($_REQUEST['vFromMonFriTimeSlot1']) ? $_REQUEST['vFromMonFriTimeSlot1'] : '';
        $vToMonFriTimeSlot1 = isset($_REQUEST['vToMonFriTimeSlot1']) ? $_REQUEST['vToMonFriTimeSlot1'] : '';
        $vFromMonFriTimeSlot2 = isset($_REQUEST['vFromMonFriTimeSlot2']) ? $_REQUEST['vFromMonFriTimeSlot2'] : '';
        $vToMonFriTimeSlot2 = isset($_REQUEST['vToMonFriTimeSlot2']) ? $_REQUEST['vToMonFriTimeSlot2'] : '';
        $vFromSatSunTimeSlot1 = isset($_REQUEST['vFromSatSunTimeSlot1']) ? $_REQUEST['vFromSatSunTimeSlot1'] : '';
        $vToSatSunTimeSlot1 = isset($_REQUEST['vToSatSunTimeSlot1']) ? $_REQUEST['vToSatSunTimeSlot1'] : '';
        $vFromSatSunTimeSlot2 = isset($_REQUEST['vFromSatSunTimeSlot2']) ? $_REQUEST['vFromSatSunTimeSlot2'] : '';
        $vToSatSunTimeSlot2 = isset($_REQUEST['vToSatSunTimeSlot2']) ? $_REQUEST['vToSatSunTimeSlot2'] : '';
        $where = " iCompanyId = '" . $iCompanyId . "'";
        $Data_Update['vFromMonFriTimeSlot1'] = $vFromMonFriTimeSlot1;
        $Data_Update['vToMonFriTimeSlot1'] = $vToMonFriTimeSlot1;
        $Data_Update['vFromMonFriTimeSlot2'] = $vFromMonFriTimeSlot2;
        $Data_Update['vToMonFriTimeSlot2'] = $vToMonFriTimeSlot2;
        $Data_Update['vFromSatSunTimeSlot1'] = $vFromSatSunTimeSlot1;
        $Data_Update['vToSatSunTimeSlot1'] = $vToSatSunTimeSlot1;
        $Data_Update['vFromSatSunTimeSlot2'] = $vFromSatSunTimeSlot2;
        $Data_Update['vToSatSunTimeSlot2'] = $vToSatSunTimeSlot2;
        $id = $obj->MySQLQueryPerform("company", $Data_Update, 'update', $where);
        if ($id) {
            $returnArr['Action'] = "1";
            $returnArr['message'] = "LBL_INFO_UPDATED_TXT";
        } else {
            $returnArr['Action'] = "0";
            $returnArr['message'] = "LBL_TRY_AGAIN_LATER";
        }
        setDataResponse($returnArr);
    }
}

//Added By HJ On 21-10-2020 For Enable/Disable Sinch Base On Country Configuration Start
function checkCountryVoipMethod($countryCode)
{
    global $country_data_arr, $obj;
    if (isset($country_data_arr[$countryCode]['eEnableSinch']) && trim($country_data_arr[$countryCode]['eEnableSinch']) != "") {
        $eEnableSinch = $country_data_arr[$countryCode]['eEnableSinch'];
    } else {
        $user_country_toll = $obj->MySQLSelect("SELECT eEnableSinch from country WHERE vCountryCode = '" . $countryCode . "'");
        $eEnableSinch = $user_country_toll[0]['eEnableSinch'];
    }
    return $eEnableSinch;
}

//Added By HJ On 21-10-2020 For Enable/Disable Sinch Base On Country Configuration End
function getParentCategoryId($iVehicleCategoryId)
{
    global $obj, $tconfig;
    $sql_catname = "SELECT iParentId FROM vehicle_category where iVehicleCategoryId = '" . $iVehicleCategoryId . "'";
    $db_sub = $obj->MySQLSelect($sql_catname);
    if ($db_sub[0]['iParentId'] > 0) {
        return getParentCategoryId($db_sub[0]['iParentId']);
    } else {
        return $iVehicleCategoryId;
    }
}

//Added by HV on 08-02-2021 for encoding verification code
function encodeVerificationCode($code)
{
    return md5(base64_encode(base64_encode($code) . '@' . $code));
}

//Added by HV on 09-03-2021 for App Launch Images
function getAppLaunchImages($vLang, $eUserType)
{
    global $obj, $tconfig, $MODULES_OBJ, $LANG_OBJ, $oCache;
    if (empty($vLang)) {
        $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
    }
    if($eUserType == "Tracking") {
        $eUserType = "TrackServiceUser";
    }
    $imgArr = array();

    /*if ($MODULES_OBJ->isEnableSmartLogin()) {
        $app_launch_images_general = $obj->MySQLSelect("SELECT *, JSON_UNQUOTE(JSON_VALUE(tTitle, '$.tTitle_" . $vLang . "')) as tTitle, JSON_UNQUOTE(JSON_VALUE(tSubtitle, '$.tSubtitle_" . $vLang . "')) as tSubtitle FROM app_launch_info WHERE eStatus = 'Active' AND eUserType = 'General' AND eForSmartLogin = 'Yes' ORDER BY iDisplayOrder");
        if (!empty($app_launch_images_general) && count($app_launch_images_general) > 0) {
            foreach ($app_launch_images_general as $app_launch_img) {
                if (!empty($app_launch_img['vImage']) && file_exists($tconfig['tsite_upload_app_launch_images_path'] . $app_launch_img['vImage'])) {
                    $imgArr[] = array(
                        'vImage' => $tconfig['tsite_upload_app_launch_images'] . $app_launch_img['vImage'], 'tTitle' => ($app_launch_img['tTitle'] != "") ? $app_launch_img['tTitle'] : "", 'tSubtitle' => ($app_launch_img['tSubtitle'] != "") ? $app_launch_img['tSubtitle'] : "", 'vBGColor' => '#d5eff2'
                    );
                }
            }
        }
    }*/
 
    

    $AppLaunchApcKey = md5('app_launch_info_' . $eUserType . '_' . $vLang);
    $getAppLaunchCacheData = $oCache->getData($AppLaunchApcKey);
    if(!empty($getAppLaunchCacheData) && count($getAppLaunchCacheData) > 0){
        $app_launch_images = $getAppLaunchCacheData;
    } else{
      //  $app_launch_images = $obj->MySQLSelect("SELECT *, JSON_UNQUOTE(JSON_VALUE(tTitle, '$.tTitle_" . $vLang . "')) as tTitle, JSON_UNQUOTE(JSON_VALUE(tSubtitle, '$.tSubtitle_" . $vLang . "')) as tSubtitle FROM app_launch_info WHERE eStatus = 'Active' AND eUserType = '$eUserType' AND eForSmartLogin = 'No' ORDER BY iDisplayOrder");
		$app_launch_images = $obj->MySQLSelect("SELECT *,  CASE WHEN JSON_VALID(tTitle) THEN  JSON_UNQUOTE(JSON_VALUE(tTitle, '$.tTitle_" . $vLang . "')) ELSE tTitle END AS tTitle, CASE WHEN JSON_VALID(tSubtitle) THEN  JSON_UNQUOTE(JSON_VALUE(tSubtitle, '$.tSubtitle_" . $vLang . "'))ELSE tSubtitle END AS tSubtitle FROM app_launch_info WHERE eStatus = 'Active' AND eUserType = '$eUserType' AND eForSmartLogin = 'No' ORDER BY iDisplayOrder");
        $oCache->setData($AppLaunchApcKey, $app_launch_images);
    }
    
    if (!empty($app_launch_images) && count($app_launch_images) > 0) {
        foreach ($app_launch_images as $app_launch_img) {
            if (!empty($app_launch_img['vImage']) && file_exists($tconfig['tsite_upload_app_launch_images_path'] . $app_launch_img['vImage'])) {
                $imgArr[] = array(
                    'vImage' => $tconfig['tsite_upload_app_launch_images'] . $app_launch_img['vImage'], 'tTitle' => $app_launch_img['tTitle'], 'tSubtitle' => $app_launch_img['tSubtitle'], 'vBGColor' => '#d5eff2'
                );
            }
        }
    }
 
    return $imgArr;
}

function getColorFromImage($img_path)
{
    global $tconfig;

    if(file_exists($img_path)) {
        include_once($tconfig["tpanel_path"] . "assets/libraries/ColorExtractor/autoload.php");
        $palette = League\ColorExtractor\Palette::fromFilename($img_path);
        $colorsArr = $CountArr = array();
        foreach ($palette as $color => $count) {
            $colorsArr[] = array('HexCode' => League\ColorExtractor\Color::fromIntToHex($color), 'Count' => $count);
            $CountArr[]['Count'] = $count;
        }
        array_multisort($CountArr, SORT_DESC, $colorsArr);
        return $colorsArr[0]['HexCode'];
    }

    return '#ffffff';    
}

function humanReadableTiming($time)
{
    global $languageLabelDataArr, $vLanguage, $LANG_OBJ;
    if (isset($languageLabelDataArr['language_label_union_other_' . $vLanguage])) {
        $langLabels = $languageLabelDataArr['language_label_union_other_' . $vLanguage];
    } else {
        $langLabels = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1");
        $languageLabelDataArr['language_label_union_other_' . $vLanguage] = $langLabels;
    }
    $time = time() - $time;
    $time = ($time < 84600) ? 84600 : $time;
    $tokens = array(31536000 => 'year', 2592000 => 'month', 604800 => 'week', 86400 => 'day', 3600 => 'hour', 60 => 'minute', 1 => 'second');
    foreach ($tokens as $unit => $text) {
        if ($time < $unit) continue;
        $numberOfUnits = floor($time / $unit);
        if ($numberOfUnits > 1) {
            if ($text == "year") {
                $textnew = $langLabels['LBL_YEARS_TXT'];
            } elseif ($text == "month") {
                $textnew = $langLabels['LBL_MONTHS_TXT'];
            } elseif ($text == "week") {
                $textnew = $langLabels['LBL_WEEKS_TXT'];
            } elseif ($text == "day") {
                $textnew = $langLabels['LBL_DAYS_TXT'];
            } elseif ($text == "hour") {
                $textnew = $langLabels['LBL_HOURS_TXT'];
            } elseif ($text == "minute") {
                $textnew = $langLabels['LBL_MINUTES_TXT'];
            } elseif ($text == "seconds") {
                $textnew = $langLabels['LBL_SECONDS_TXT'];
            }
        } else {
            if ($text == "year") {
                $textnew = $langLabels['LBL_YEAR'];
            } elseif ($text == "month") {
                $textnew = $langLabels['LBL_MONTH_TXT'];
            } elseif ($text == "week") {
                $textnew = $langLabels['LBL_WEEK_TXT'];
            } elseif ($text == "day") {
                $textnew = $langLabels['LBL_DAY_TXT'];
            } elseif ($text == "hour") {
                $textnew = $langLabels['LBL_HOUR_TXT'];
            } elseif ($text == "minute") {
                $textnew = $langLabels['LBL_MINUTE'];
            }
        }
        return $numberOfUnits . ' ' . strtolower($textnew);
    }
}

function humanReadableTimingDashboard($date)
{
    $dif = strtotime(Date('Y-m-d H:i:s')) - strtotime($date);
    if ($dif < 60) {
        $time = floor($dif / (60));
        return "Just Now";
    } else if ($dif < 3600) {
        $time = floor($dif / (60));
        $texts = "Minute";
        if ($time > 1) {
            $texts = "Minutes";
        }
        return $time . " $texts ago";
    } else if ($dif < 86400) {
        $time = floor($dif / (60 * 60));
        $texts = "Hour";
        if ($time > 1) {
            $texts = "Hours";
        }
        return $time . " $texts ago";
    } else {
        $time = floor($dif / (24 * 60 * 60));
        $texts = "Day";
        if ($time > 1) {
            $texts = "Days";
        }
        return $time . " $texts ago";
    }
}

function getFoodRatingDetailFeedbackQuestions($vLang = "")
{
    global $obj, $LANG_OBJ;

    if(isset($_REQUEST['type']) && $_REQUEST['type'] == "loadStaticInfo") {
        $feedback_ques_data = $obj->MySQLSelect("SELECT * FROM rating_feedback_questions WHERE eStatus = 'Active' ");

        $DRIVER_FEEDBACK_QUESTIONS = array();
        foreach ($feedback_ques_data as $fData) {
            $tQuestionArr = json_decode($fData['tQuestion'], true);
            foreach ($tQuestionArr as $key => $tQuestion) {
                $DRIVER_FEEDBACK_QUESTIONS[$key][] = array(
                    'iFeedbackId' => $fData['iFeedbackId'],
                    'tQuestion' => $tQuestion
                );
            }
        }

        if(!empty($Data_ALL_langArr) && count($Data_ALL_langArr) > 0) {
            $language_master = $Data_ALL_langArr;
        } else {
            $language_master = $obj->MySQLSelect("SELECT vCode FROM language_master ORDER BY iDispOrder ASC");
        }

        $DRIVER_FEEDBACK_QUESTIONS_ARR = array();
        foreach ($language_master as $lang) {
            $DRIVER_FEEDBACK_QUESTIONS_ARR[$lang['vCode']] = $DRIVER_FEEDBACK_QUESTIONS['tQuestion_' . $lang['vCode']];
        }
        
        return $DRIVER_FEEDBACK_QUESTIONS_ARR;
    }

    if (empty($vLang)) {
        $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
    }
    $DRIVER_FEEDBACK_QUESTIONS = array();
    $feedback_ques_data = $obj->MySQLSelect("SELECT *, JSON_UNQUOTE(JSON_VALUE(tQuestion, '$.tQuestion_" . $vLang . "')) as tQuestion FROM rating_feedback_questions WHERE eStatus = 'Active' ORDER BY iDisplayOrder");
    if (!empty($feedback_ques_data) && count($feedback_ques_data) > 0) {
        foreach ($feedback_ques_data as $fData) {
            $DRIVER_FEEDBACK_QUESTIONS[] = array('iFeedbackId' => $fData['iFeedbackId'], 'tQuestion' => $fData['tQuestion']);
        }
    }
    return $DRIVER_FEEDBACK_QUESTIONS;
}

function GetUserGeoLocationIdPromoCode($Address_Array)
{
    global $obj;
    // $iLocationId = "0";
    $iLocationId = array();
    if (!empty($Address_Array)) {
        $sqlaa = "SELECT * FROM location_master WHERE eStatus='Active' AND eFor = 'PromoCode'";
        $allowed_data = $obj->MySQLSelect($sqlaa);
        if (!empty($allowed_data)) {
            $polygon = array();
            foreach ($allowed_data as $key => $val) {
                $latitude = explode(",", $val['tLatitude']);
                $longitude = explode(",", $val['tLongitude']);
                for ($x = 0; $x < count($latitude); $x++) {
                    if (!empty($latitude[$x]) || !empty($longitude[$x])) {
                        $polygon[$key][] = array($latitude[$x], $longitude[$x]);
                    }
                }
                // print_r($polygon[$key]);
                if ($polygon[$key]) {
                    $address = contains($Address_Array, $polygon[$key]) ? 'IN' : 'OUT';
                    if ($address == 'IN') {
                        $iLocationId[] = $val['iLocationId'];
                        // break;
                    }
                }
            }
        }
    }
    return $iLocationId;
}

function GetPaymentModeDetails($data)
{
    global $obj, $APP_PAYMENT_METHOD, $PAYMENT_MODE_RESTRICT_TO_WALLET, $CASH_AVAILABLE, $CARD_AVAILABLE, $WALLET_AVAILABLE, $LANG_OBJ, $USER_APP_PAYMENT_METHOD, $tconfig;
    $iMemberId = $data['iMemberId'];
    $eUserType = $data['eUserType'];
    $eType = isset($data['eType']) ? $data['eType'] : "";
    $vLang = isset($data['vLang']) ? $data['vLang'] : "";
    $isContactlessDelivery = isset($data['isContactlessDelivery']) ? $data['isContactlessDelivery'] : "No";
    $eTakeAway = isset($data['eTakeAway']) ? $data['eTakeAway'] : "No";
    if (empty($vLang)) {
        $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", "");
    $payment_mode_user_data = $obj->MySQLSelect("SELECT * FROM payment_mode_user_log WHERE iMemberId = '$iMemberId' AND eUserType = '$eUserType' ORDER BY dDateTime DESC LIMIT 1");


    $fUserOutStandingAmount = GetPassengerOutstandingAmount($iMemberId);
    $returnArr['PAYMENT_MODE_RESTRICT_TO_WALLET'] = $PAYMENT_MODE_RESTRICT_TO_WALLET;
    $returnArr['Profile'] = $returnArr['PROFILE_DISPLAY_LBL'] = $returnArr['PaymentMode'] = $returnArr['PAYMENT_DISPLAY_LBL'] = $returnArr['BusinessReasonId'] = $returnArr['BusinessReasonTitle'] = $returnArr['BusinessReasonOther'] = $returnArr['iUserProfileId'] = $returnArr['iOrganizationId'] = $returnArr['ePaymentBy'] = $returnArr['vProfileEmail'] = $returnArr['DEFAULT_CARD'] = $returnArr['iPaymentInfoId'] = $returnArr['eWalletDebit'] = $returnArr['PaymentModeImg'] = $returnArr['PromoCode'] = $tRequestData = "";
    if (!empty($payment_mode_user_data) && count($payment_mode_user_data) > 0) {
        $tRequestData = json_decode($payment_mode_user_data[0]['tRequestData'], true);
        $returnArr['Action'] = "1";
        $returnArr['iPaymentInfoId'] = $tRequestData['iPaymentInfoId'];
        $returnArr['eWalletDebit'] = $tRequestData['eWalletDebit'];
        if ($tRequestData['Profile'] == "personal" || $tRequestData['Profile'] == "business") {
            $returnArr['PaymentMode'] = $tRequestData['PaymentMode'];
            $returnArr['PAYMENT_DISPLAY_LBL'] = $tRequestData['PaymentMode'] == "cash" ? $languageLabelsArr['LBL_CASH_PAYMENT_TXT'] : ($tRequestData['PaymentMode'] == "card" ? $languageLabelsArr['LBL_CARD'] : $languageLabelsArr['LBL_PAY_BY_WALLET_TXT']);
        }
        if (($tRequestData['PaymentMode'] == "cash" && strtoupper($CASH_AVAILABLE) == "NO") || ($tRequestData['PaymentMode'] == "card" && strtoupper($CARD_AVAILABLE) == "NO") || ($tRequestData['PaymentMode'] == "wallet" && strtoupper($WALLET_AVAILABLE) == "NO")) {
            $returnArr['PaymentMode'] = $returnArr['PAYMENT_DISPLAY_LBL'] = "";
        }
        if ((strtoupper($isContactlessDelivery) == "YES" || strtoupper($eTakeAway) == "YES") && $returnArr['PaymentMode'] == "cash" && $eType == "DeliverAll") {
            $returnArr['PaymentMode'] = $returnArr['PAYMENT_DISPLAY_LBL'] = "";
        }
        if ($eType == "Ride") {
            $returnArr['Profile'] = $tRequestData['Profile'];
            $returnArr['PROFILE_DISPLAY_LBL'] = $tRequestData['Profile'] == "personal" ? $languageLabelsArr['LBL_PERSONAL'] : $tRequestData['OrganizationTitle'];
            $returnArr['BusinessReasonId'] = $tRequestData['BusinessReasonId'];
            $returnArr['BusinessReasonTitle'] = $tRequestData['BusinessReasonTitle'];
            $returnArr['BusinessReasonOther'] = $tRequestData['BusinessReasonOther'];
            $db_data = $obj->MySQLSelect("SELECT up.*, upm.vProfileName, upm.vShortProfileName, upm.vImage, org.vCompany,org.ePaymentBy FROM user_profile as up LEFT JOIN user_profile_master as upm ON up.iUserProfileMasterId=upm.iUserProfileMasterId LEFT JOIN organization as org ON up.iOrganizationId=org.iOrganizationId where upm.eStatus = 'Active' AND up.eStatus = 'Active' AND org.eStatus = 'Active' AND up.iUserId = '" . $iMemberId . "' AND org.iOrganizationId = '" . $tRequestData['OrganizationId'] . "'");
        }
        // echo "<pre>"; print_r($db_data); exit;
        $pay_by_organization = "No";
        if (!empty($db_data) && count($db_data) > 0) {
            if (strtolower($db_data[0]['ePaymentBy']) == "organization") {
                $pay_by_organization = "Yes";
                $OrganizationName = $db_data[0]['vCompany'];
            }
        } else {
            $returnArr['BusinessReasonId'] = $returnArr['BusinessReasonTitle'] = $returnArr['BusinessReasonOther'] = $returnArr['PAYMENT_DISPLAY_LBL'] = "";
        }
        include_once $tconfig['tpanel_path'] . 'assets/libraries/webview/payment_general_functions.php';
        $profileDetails = GetCorporateProfileDetails($iMemberId, $vLang, $eType);
        if ($profileDetails['isOrgAvailable'] == "No") {
            $returnArr['PROFILE_DISPLAY_LBL'] = "";
        }
        if ($pay_by_organization == "Yes" && $tRequestData['Profile'] == "business" && $eType == "Ride") {
            $returnArr['PaymentMode'] = "business";
            $returnArr['PAYMENT_DISPLAY_LBL'] = $OrganizationName;
            $returnArr['iUserProfileId'] = $db_data[0]['iUserProfileId'];
            $returnArr['iOrganizationId'] = $db_data[0]['iOrganizationId'];
            $returnArr['ePaymentBy'] = $db_data[0]['ePaymentBy'];
            $returnArr['vProfileEmail'] = $db_data[0]['vProfileEmail'];
        }
        $returnArr['PromoCode'] = $payment_mode_user_data[0]['vPromocode'];
        $returnArr['iLogId'] = $payment_mode_user_data[0]['iLogId'];
    }
    $userData = $obj->MySQLSelect("SELECT vCountry FROM `register_user` WHERE iUserId='" . $iMemberId . "'");
    $countryPaymentMethod = $obj->MySQLSelect("SELECT vPaymentGateway FROM country WHERE vCountryCode = '" . $userData[0]['vCountry'] . "'");
    $USER_APP_PAYMENT_METHOD = $APP_PAYMENT_METHOD;
    if (!empty($countryPaymentMethod[0]['vPaymentGateway'])) {
        $USER_APP_PAYMENT_METHOD = $countryPaymentMethod[0]['vPaymentGateway'];
    }
    if ($returnArr['PaymentMode'] == "card") {
        $TOKENIZED_STATUS = strtoupper($USER_APP_PAYMENT_METHOD) . '_TOKENIZED';
        global $$TOKENIZED_STATUS;
        $IS_TOKENIZED = $$TOKENIZED_STATUS;
        if (strtoupper($IS_TOKENIZED) == "NO" && $eType != "DeliverAll") {
            // $returnArr['PaymentMode'] = $returnArr['PAYMENT_DISPLAY_LBL'] = "";
        }
    }
    $userPaymentInfoSql = getPaymentDefaultCard($iMemberId, $eUserType, $returnArr['iPaymentInfoId']);
    // echo "<pre>"; print_r($tRequestData); exit;
    $vCardBrand = $last4Digits = $CardBrandName = "";
    if (!empty($userPaymentInfoSql) && count($userPaymentInfoSql) > 0) {
        $vCardBrand = $userPaymentInfoSql[0]['vCardBrand'];
        $last4Digits = substr($userPaymentInfoSql[0]['tCardNum'], -4);
    }
    if (!empty($vCardBrand)) {
        $CardBrandName = getCardBrandName($vCardBrand, $languageLabelsArr);
    }
    if (isset($data['GET_DATA']) && strtoupper($data['GET_DATA']) == "YES") {
        return $returnArr;
    }
    if (count($userPaymentInfoSql) == 0 && $tRequestData['PaymentMode'] == 'card') {
        $returnArr['PAYMENT_DISPLAY_LBL'] = '';
        $returnArr['PaymentMode'] = '';
    }
    if ($returnArr['PaymentMode'] == 'cash') {
        $returnArr['PaymentModeImg'] = $tconfig['tsite_url'] . 'webimages/icons/DefaultImg/ic_cash.png';
        $returnArr['PAYMENT_DISPLAY_LBL'] = $languageLabelsArr['LBL_CASH_PAYMENT_TXT'];
    } elseif ($returnArr['PaymentMode'] == 'card') {
        $returnArr['PaymentModeImg'] = $tconfig['tsite_url'] . 'webimages/icons/DefaultImg/ic_' . $vCardBrand . '_system.png';
        $returnArr['PAYMENT_DISPLAY_LBL'] = $CardBrandName . ' ' . $last4Digits;
    } elseif ($returnArr['PaymentMode'] == 'wallet') {
        $returnArr['PaymentModeImg'] = $tconfig['tsite_url'] . 'webimages/icons/DefaultImg/ic_wallet.png';
        $returnArr['PAYMENT_DISPLAY_LBL'] = $languageLabelsArr['LBL_WALLET_TXT'];
    } elseif ($returnArr['PaymentMode'] == 'business') {
        $returnArr['PaymentModeImg'] = $tconfig['tsite_url'] . 'webimages/icons/DefaultImg/ic_business.png';
    } else {
        $returnArr['PAYMENT_DISPLAY_LBL'] = $languageLabelsArr['LBL_PAYMENT_MODE_TXT'];
        $returnArr['PROFILE_DISPLAY_LBL'] = $languageLabelsArr['LBL_SELECT_TXT'];
        $returnArr['PaymentModeImg'] = $tconfig['tsite_url'] . 'webimages/icons/DefaultImg/ic_error.png';
    }
    $returnArrAll = $returnArr;
    $returnArr = array();
    $returnArr['Action'] = "1";
    $returnArr['message'] = $returnArrAll;
    setDataResponse($returnArr);
}

function getCountryWiseAppPaymentMethod($countryCode = "")
{
    global $obj, $APP_PAYMENT_METHOD;
    $USER_APP_PAYMENT_METHOD = $APP_PAYMENT_METHOD;
    if (!empty($countryCode)) {
        $countryInfo = $obj->MySQLSelect("SELECT vPaymentGateway FROM country WHERE vCountryCode = '$countryCode'");
        if (!empty($countryInfo[0]['vPaymentGateway'])) {
            $USER_APP_PAYMENT_METHOD = $countryInfo[0]['vPaymentGateway'];
        }
    }
    $TOKENIZED_STATUS = strtoupper($USER_APP_PAYMENT_METHOD) . '_TOKENIZED';
    global $$TOKENIZED_STATUS;
    $IS_TOKENIZED = $$TOKENIZED_STATUS;
    $data['USER_APP_PAYMENT_METHOD'] = $USER_APP_PAYMENT_METHOD;
    $data['IS_TOKENIZED'] = $IS_TOKENIZED;
    return $data;
}

function mediaTimeDeFormater($minutes, $userlangcode = "")
{
    global $LANG_OBJ;
    $seconds = @round(abs($minutes * 60));
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($userlangcode, "1");
    // echo "<pre>"; print_r($languageLabelsArr); exit;
    $ret = "";
    $hours = (string)floor($seconds / 3600);
    $secs = (string)$seconds % 60;
    $mins = (string)floor(($seconds - ($hours * 3600)) / 60);
    if (strlen($hours) == 1) $hours = "0" . $hours;
    if (strlen($secs) == 1) $secs = "0" . $secs;
    if (strlen($mins) == 1) $mins = "0" . $mins;
    if ($hours == 0) {
        $mint = "";
        $secondss = "";
        if ($mins > 01) {
            $mint = "$mins";
        } else {
            $mint = "$mins";
        }
        if ($secs > 01) {
            $secondss = "$secs";
        } else {
            $secondss = "$secs";
        }
        $LBL_MINUTES_TXT = ($mins > 1) ? $languageLabelsArr['LBL_MINUTES_TXT'] : strtolower($languageLabelsArr['LBL_MINUTE']);
        if ($mins > 0) {
            $ret = $mint . ":" . $secondss . " " . $LBL_MINUTES_TXT;
        } else {
            $ret = $secondss . " " . $languageLabelsArr['LBL_SECONDS_TXT'];
        }
    } else {
        $mint = "";
        $secondss = "";
        if ($mins > 01) {
            $mint = "$mins";
        } else {
            $mint = "$mins";
        }
        if ($secs > 01) {
            $secondss = "$secs";
        } else {
            $secondss = "$secs";
        }
        if ($hours > 01) {
            $ret = $hours . ":" . $mint . ":" . $secondss . " " . $languageLabelsArr['LBL_HOURS_TXT'];
        } else {
            $ret = $hours . ":" . $mint . ":" . $secondss . " " . $languageLabelsArr['LBL_HOUR_TXT'];
        }
    }
    return $ret;
}

function addToCompanyRequest2($data)
{
    global $obj;
    $data['dAddedDate'] = @date("Y-m-d H:i:s");
    $id = $obj->MySQLQueryPerform("company_request", $data, 'insert');
    return $id;
}

function GetStoreWorkingHoursDetails($iCompanyId, $iUserId, $vLanguage = "", $languageLabelsArr = array(), $storeDetails = array())
{
    global $obj, $MODULES_OBJ, $tconfig, $vTimeZone, $iServiceId, $vCurrentTime, $userDetailsArr, $languageLabelDataArr, $LANG_OBJ, $DEFAULT_COUNTRY_CODE_WEB;
    // date_default_timezone_set($vTimeZone);
    if ($vCurrentTime == "" || $vCurrentTime == NULL) {
        $vCurrentTime = @date("Y-m-d H:i:s");
    }
    $serverTimeZone = date_default_timezone_get();
    if (!empty($_COOKIE['vUserDeviceTimeZone'])) {
        $vTimeZone = $_COOKIE['vUserDeviceTimeZone']; //change here var as $vTimeZone bc it will only assigned and then that var not used any where...so insteadof $serverTimeZone var, i have used $vTimeZone
    }

    //$vTimeZone =date_default_timezone_get();

    $returnArr = array();
    //Added By HJ On 18-07-2020 For Optimize company Table Query Start
    if (isset($userDetailsArr["company_" . $iCompanyId])) {
        //echo "<pre>";print_r($storeDetails[$iCompanyId]);die;
        $Datasql = $userDetailsArr["company_" . $iCompanyId];
    } else {
        $Datasql = $obj->MySQLSelect("SELECT *,iCompanyId AS iMemberId FROM `company` WHERE iCompanyId = '" . $iCompanyId . "'");
        $userDetailsArr["company_" . $iCompanyId] = $Datasql;
    }
    //Added By HJ On 18-07-2020 For Optimize company Table Query End
    $eStatus = $Datasql[0]['eStatus'];
    $vCountry = $Datasql[0]['vCountry'];
    if ($vCountry == "" || $vCountry == NULL) {
        $vCountry = $DEFAULT_COUNTRY_CODE_WEB;
    }
    //$vTimeZone = get_value('country', 'vTimeZone', 'vCountryCode', $vCountry, '', 'true');
    date_default_timezone_set($vTimeZone);
    if ($vLanguage == "" || $vLanguage == NULL) {
        //Added By HJ On 18-07-2020 For Optimize register_user Table Query Start
        if (isset($userDetailsArr["register_user_" . $iUserId])) {
            $userData = $userDetailsArr["register_user_" . $iUserId];
        } else {
            $userData = $obj->MySQLSelect("SELECT *,iUserId AS iMemberId FROM `register_user` WHERE iUserId = '" . $iUserId . "'");
            $userDetailsArr["register_user_" . $iUserId] = $userData;
        }
        //echo "<pre>";print_r($userData);die;
        $vLanguage = $userData[0]['vLang'];
        //$vLanguage = get_value('register_user', 'vLang', 'iUserId', $iUserId, '', 'true');
        //Added By HJ On 18-07-2020 For Optimize register_user Table Query End
        if ($vLanguage == "" || $vLanguage == NULL) {
            //Added By HJ On 18-07-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 18-07-2020 For Optimize language_master Table Query End
        }
    }
    //$day = date("l");
    $vCurrentTime = @date("Y-m-d H:i:s");
    $day = date('l', strtotime($vCurrentTime));
    //added by SP on 14-10-2020 for timeslot changes
    $ENABLE_TIMESLOT_ADDON = !empty($MODULES_OBJ->isEnableTimeslotFeature()) ? "Yes" : "No";
    if (strtoupper($ENABLE_TIMESLOT_ADDON) == "YES") {
        $timingArray = array('vMonFromSlot', 'vMonToSlot', 'vTueFromSlot', 'vTueToSlot', 'vWedFromSlot', 'vWedToSlot', 'vThuFromSlot', 'vThuToSlot', 'vFriFromSlot', 'vFriToSlot', 'vSatFromSlot', 'vSatToSlot', 'vSunFromSlot', 'vSunToSlot');
        $orgtimingArray = array('vMonFromSlot1', 'vMonToSlot1', 'vTueFromSlot1', 'vTueToSlot1', 'vWedFromSlot1', 'vWedToSlot1', 'vThuFromSlot1', 'vThuToSlot1', 'vFriFromSlot1', 'vFriToSlot1', 'vSatFromSlot1', 'vSatToSlot1', 'vSunFromSlot1', 'vSunToSlot1', 'vMonFromSlot2', 'vMonToSlot2', 'vTueFromSlot2', 'vTueToSlot2', 'vWedFromSlot2', 'vWedToSlot2', 'vThuFromSlot2', 'vThuToSlot2', 'vFriFromSlot2', 'vFriToSlot2', 'vSatFromSlot2', 'vSatToSlot2', 'vSunFromSlot2', 'vSunToSlot2');
        $sltAry = array(1, 2);
        switch ($day) {
            case $day == "Monday":
                $vFromTimeSlot1 = "vMonFromSlot1";
                $vToTimeSlot1 = "vMonToSlot1";
                $vFromTimeSlot2 = "vMonFromSlot2";
                $vToTimeSlot2 = "vMonToSlot2";
                break;
            case $day == "Tuesday":
                $vFromTimeSlot1 = "vTueFromSlot1";
                $vToTimeSlot1 = "vTueToSlot1";
                $vFromTimeSlot2 = "vTueFromSlot2";
                $vToTimeSlot2 = "vTueToSlot2";
                break;
            case $day == "Wednesday":
                $vFromTimeSlot1 = "vWedFromSlot1";
                $vToTimeSlot1 = "vWedToSlot1";
                $vFromTimeSlot2 = "vWedFromSlot2";
                $vToTimeSlot2 = "vWedToSlot2";
                break;
            case $day == "Thursday":
                $vFromTimeSlot1 = "vThuFromSlot1";
                $vToTimeSlot1 = "vThuToSlot1";
                $vFromTimeSlot2 = "vThuFromSlot2";
                $vToTimeSlot2 = "vThuToSlot2";
                break;
            case $day == "Friday":
                $vFromTimeSlot1 = "vFriFromSlot1";
                $vToTimeSlot1 = "vFriToSlot1";
                $vFromTimeSlot2 = "vFriFromSlot2";
                $vToTimeSlot2 = "vFriToSlot2";
                break;
            case $day == "Saturday":
                $vFromTimeSlot1 = "vSatFromSlot1";
                $vToTimeSlot1 = "vSatToSlot1";
                $vFromTimeSlot2 = "vSatFromSlot2";
                $vToTimeSlot2 = "vSatToSlot2";
                break;
            case $day == "Sunday":
                $vFromTimeSlot1 = "vSunFromSlot1";
                $vToTimeSlot1 = "vSunToSlot1";
                $vFromTimeSlot2 = "vSunFromSlot2";
                $vToTimeSlot2 = "vSunToSlot2";
                break;
            default:
                echo "break in generalFunction() @ 54XX";
                exit;
                break;
        }
    } else {
        if ($day == "Sunday" || $day == "Saturday") {
            $vFromTimeSlot1 = "vFromSatSunTimeSlot1";
            $vFromTimeSlot2 = "vFromSatSunTimeSlot2";
            $vToTimeSlot1 = "vToSatSunTimeSlot1";
            $vToTimeSlot2 = "vToSatSunTimeSlot2";
        } else {
            $vFromTimeSlot1 = "vFromMonFriTimeSlot1";
            $vFromTimeSlot2 = "vFromMonFriTimeSlot2";
            $vToTimeSlot1 = "vToMonFriTimeSlot1";
            $vToTimeSlot2 = "vToMonFriTimeSlot2";
        }
    }
    if (count($languageLabelsArr) == 0) {
        //Added By HJ On 18-07-2020 For langauge labele and Other Union Table Query Start
        if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId])) {
            $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId];
        } else {
            $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $iServiceId);
            $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId] = $languageLabelsArr;
        }
        //Added By HJ On 18-07-2020 For langauge labele and Other Union Table Query End
    }
    if ($Datasql[0][$vFromTimeSlot1] == "00:00:00" && $Datasql[0][$vToTimeSlot1] == "00:00:00" && $Datasql[0][$vFromTimeSlot2] == "00:00:00" && $Datasql[0][$vToTimeSlot2] == "00:00:00") {
        $returnArr['status'] = "Closed";
        $returnArr['opentime'] = "";
        $returnArr['closetime'] = "";
        $returnArr['restaurantstatus'] = "closed";
    } else {
        /* $vFromTimeSlot1 = strtotime($Datasql[0]['vFromTimeSlot1']);

          $vToTimeSlot1 = strtotime($Datasql[0]['vToTimeSlot1']);

          $vFromTimeSlot2 = strtotime($Datasql[0]['vFromTimeSlot2']);

          $vToTimeSlot2 = strtotime($Datasql[0]['vToTimeSlot2']); */
        if ($Datasql[0][$vToTimeSlot1] < $Datasql[0][$vFromTimeSlot1]) {
            $endTime = strtotime($Datasql[0][$vToTimeSlot1]);
            $vFromTimeSlot_1 = date(("H:i"), strtotime($Datasql[0][$vFromTimeSlot1]));
            $vToTimeSlot_1 = date(("H:i"), strtotime('+1 day', $endTime));
        } else {
            $vFromTimeSlot_1 = date(("H:i"), strtotime($Datasql[0][$vFromTimeSlot1]));
            $vToTimeSlot_1 = date(("H:i"), strtotime($Datasql[0][$vToTimeSlot1]));
        }
        if ($Datasql[0][$vToTimeSlot2] < $Datasql[0][$vFromTimeSlot2]) {
            $endTime2 = strtotime($Datasql[0][$vToTimeSlot2]);
            $vFromTimeSlot_2 = date(("H:i"), strtotime($Datasql[0][$vFromTimeSlot2]));
            $vToTimeSlot_2 = date(("H:i"), strtotime('+1 day', $endTime2));
        } else {
            $vFromTimeSlot_2 = date(("H:i"), strtotime($Datasql[0][$vFromTimeSlot2]));
            $vToTimeSlot_2 = date(("H:i"), strtotime($Datasql[0][$vToTimeSlot2]));
        }
        //$date = @date("H:i");
        $date = @date("H:i", strtotime($vCurrentTime));
        // $currenttime = strtotime($date);
        $status = "closed";
        $status_display = $languageLabelsArr['LBL_RESTAURANT_CLOSED_STATUS_TXT'];
        $opentime = "";
        $OpenAt = $languageLabelsArr['LBL_RESTAURANT_OPEN_TXT'];
        $closetime = "";
        $timeslotavailable = "No";
        if (isBetween($vFromTimeSlot_1, $vToTimeSlot_1, $date) == 1 || isBetween($vFromTimeSlot_2, $vToTimeSlot_2, $date) == 1) {
            $status = "open";
            $timeslotavailable = "Yes";
            $status_display = $languageLabelsArr['LBL_RESTAURANT_OPEN_STAUS_TXT'];
            $currentdate = @date("Y-m-d H:i:s");
            $enddate = @date("Y-m-d");
            if (isBetween($vFromTimeSlot_1, $vToTimeSlot_1, $date) == 1) {
                $enddate = $enddate . " " . $vToTimeSlot_1 . ":00";
            } else {
                $enddate = $enddate . " " . $vToTimeSlot_2 . ":00";
            }
            $datediff = strtotime($enddate) - strtotime($currentdate);
            if ($datediff < 900) {
                $closein = $languageLabelsArr['LBL_RESTAURANT_CLOSE_MINS_TXT'];
                $closemins = round($datediff / 60);
                $closetime = $closein . " " . $closemins . " " . $languageLabelsArr['LBL_MINS_SMALL'];
            }
        } else {
            $newdate = @date("Y-m-d");
            // $newdate = $newdate." ".$vFromTimeSlot_2.":00";
            if (isBetween($vFromTimeSlot_1, $vFromTimeSlot_1, $date) == 1) {
                $newdate = $newdate . " " . $vFromTimeSlot_1 . ":00";
            } else {
                if ($vFromTimeSlot_1 < $vFromTimeSlot_2 && $vFromTimeSlot_1 > $date) {
                    $newdate = $newdate . " " . $vFromTimeSlot_1 . ":00";
                } else {
                    $newdate = ($vFromTimeSlot_2 == "00:00") ? $newdate . " " . $vFromTimeSlot_1 . ":00" : $newdate . " " . $vFromTimeSlot_2 . ":00";
                }
            }
            $currentdate = @date("Y-m-d H:i:s");
            $datediff = strtotime($newdate) - strtotime($currentdate);
            if ($datediff > 0) {
                $opentime = $OpenAt . " " . date("h:i a", strtotime($newdate));
            }
        }
        $eAvailable = $Datasql[0]['eAvailable'];
        $eLogout = $Datasql[0]['eLogout'];
        //if ($eAvailable == "No" || $eLogout == "Yes" || $eStatus != "Active") {
        if ($eAvailable == "No" || $eStatus != "Active") {
            $status_display = $languageLabelsArr['LBL_RESTAURANT_CLOSED_STATUS_TXT'];
            // $opentime = "";
            $closetime = "";
            $status = "closed";
        }
        $returnArr['status'] = $status_display;
        $returnArr['opentime'] = $opentime;
        $returnArr['closetime'] = $closetime;
        $returnArr['restaurantstatus'] = $status;
        $returnArr['timeslotavailable'] = $timeslotavailable;
    }
    // echo "<pre>";print_r($returnArr);
    // if($iCompanyId == 4003) {
    //     echo "<pre>";print_r($returnArr); exit;
    // }
    date_default_timezone_set($serverTimeZone);
    return $returnArr;
}

function GetStoreWorkingHoursDetailsWeb($iCompanyId, $iUserId)
{
    global $obj, $tconfig, $vTimeZone, $iServiceId, $vCurrentTime, $LANG_OBJ;
    $vTimeZone = $_COOKIE['vUserDeviceTimeZone']; //change here var as $vTimeZone bc it will only assigned and then that var not used any where...so insteadof $serverTimeZone var, i have used $vTimeZone
    date_default_timezone_set($vTimeZone); // Added By HJ On 02-08-2019 For Solved Time Zone Issue Same As getcuisinelist Function() For Solved Sheet Bug
    if ($vCurrentTime == "" || $vCurrentTime == NULL) {
        $vCurrentTime = @date("Y-m-d H:i:s");
    }
    //$serverTimeZone = date_default_timezone_get();
    $returnArr = array();
    $sql = "SELECT * FROM `company` WHERE iCompanyId = '" . $iCompanyId . "'";
    $Datasql = $obj->MySQLSelect($sql);
    $eStatus = $Datasql[0]['eStatus'];
    $vCountry = $Datasql[0]['vCountry'];
    if ($vCountry == "" || $vCountry == NULL) {
        $vCountry = $DEFAULT_COUNTRY_CODE_WEB;
    }
    //$vTimeZone = get_value('country', 'vTimeZone', 'vCountryCode', $vCountry, '', 'true');
    //date_default_timezone_set($vTimeZone);
    $vLanguage = get_value('register_user', 'vLang', 'iUserId', $iUserId, '', 'true');
    if ($vLanguage == "" || $vLanguage == NULL) {
        $vLanguage = "EN";
    }
    //$day = date("l");
    $day = date('l', strtotime($vCurrentTime));
    if ($day == "Sunday" || $day == "Saturday") {
        $vFromTimeSlot1 = "vFromSatSunTimeSlot1";
        $vFromTimeSlot2 = "vFromSatSunTimeSlot2";
        $vToTimeSlot1 = "vToSatSunTimeSlot1";
        $vToTimeSlot2 = "vToSatSunTimeSlot2";
    } else {
        $vFromTimeSlot1 = "vFromMonFriTimeSlot1";
        $vFromTimeSlot2 = "vFromMonFriTimeSlot2";
        $vToTimeSlot1 = "vToMonFriTimeSlot1";
        $vToTimeSlot2 = "vToMonFriTimeSlot2";
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $iServiceId);
    if (isset($Datasql[0][$vFromTimeSlot1]) && $Datasql[0][$vFromTimeSlot1] == "00:00:00" && $Datasql[0][$vToTimeSlot1] == "00:00:00" && $Datasql[0][$vFromTimeSlot2] == "00:00:00" && $Datasql[0][$vToTimeSlot2] == "00:00:00") {
        $returnArr['status'] = "Closed";
        $returnArr['opentime'] = "";
        $returnArr['closetime'] = "";
        $returnArr['restaurantstatus'] = "closed";
    } else {
        /* $vFromTimeSlot1 = strtotime($Datasql[0]['vFromTimeSlot1']);

          $vToTimeSlot1 = strtotime($Datasql[0]['vToTimeSlot1']);

          $vFromTimeSlot2 = strtotime($Datasql[0]['vFromTimeSlot2']);

          $vToTimeSlot2 = strtotime($Datasql[0]['vToTimeSlot2']); */
        if ($Datasql[0][$vToTimeSlot1] < $Datasql[0][$vFromTimeSlot1]) {
            $endTime = strtotime($Datasql[0][$vToTimeSlot1]);
            $vFromTimeSlot_1 = date(("H:i"), strtotime($Datasql[0][$vFromTimeSlot1]));
            $vToTimeSlot_1 = date(("H:i"), strtotime('+1 day', $endTime));
        } else {
            $vFromTimeSlot_1 = date(("H:i"), strtotime($Datasql[0][$vFromTimeSlot1]));
            $vToTimeSlot_1 = date(("H:i"), strtotime($Datasql[0][$vToTimeSlot1]));
        }
        if ($Datasql[0][$vToTimeSlot2] < $Datasql[0][$vFromTimeSlot2]) {
            $endTime2 = strtotime($Datasql[0][$vToTimeSlot2]);
            $vFromTimeSlot_2 = date(("H:i"), strtotime($Datasql[0][$vFromTimeSlot2]));
            $vToTimeSlot_2 = date(("H:i"), strtotime('+1 day', $endTime2));
        } else {
            $vFromTimeSlot_2 = date(("H:i"), strtotime($Datasql[0][$vFromTimeSlot2]));
            $vToTimeSlot_2 = date(("H:i"), strtotime($Datasql[0][$vToTimeSlot2]));
        }
        //$date = @date("H:i");
        $date = @date("H:i", strtotime($vCurrentTime));
        // $currenttime = strtotime($date);
        $status = "closed";
        $status_display = $languageLabelsArr['LBL_RESTAURANT_CLOSED_STATUS_TXT'];
        $opentime = "";
        $OpenAt = $languageLabelsArr['LBL_RESTAURANT_OPEN_TXT'];
        $closetime = "";
        $timeslotavailable = "No";
        if (isBetween($vFromTimeSlot_1, $vToTimeSlot_1, $date) == 1 || isBetween($vFromTimeSlot_2, $vToTimeSlot_2, $date) == 1) {
            $status = "open";
            $timeslotavailable = "Yes";
            $status_display = $languageLabelsArr['LBL_RESTAURANT_OPEN_STAUS_TXT'];
            $currentdate = @date("Y-m-d H:i:s");
            $enddate = @date("Y-m-d");
            if (isBetween($vFromTimeSlot_1, $vToTimeSlot_1, $date) == 1) {
                $enddate = $enddate . " " . $vToTimeSlot_1 . ":00";
            } else {
                $enddate = $enddate . " " . $vToTimeSlot_2 . ":00";
            }
            $datediff = strtotime($enddate) - strtotime($currentdate);
            if ($datediff < 900) {
                $closein = $languageLabelsArr['LBL_RESTAURANT_CLOSE_MINS_TXT'];
                $closemins = round($datediff / 60);
                $closetime = $closein . " " . $closemins . " " . $languageLabelsArr['LBL_MINS_SMALL'];
            }
        } else {
            $newdate = @date("Y-m-d");
            // $newdate = $newdate." ".$vFromTimeSlot_2.":00";
            if (isBetween($vFromTimeSlot_1, $vFromTimeSlot_1, $date) == 1) {
                $newdate = $newdate . " " . $vFromTimeSlot_1 . ":00";
            } else {
                if ($vFromTimeSlot_1 < $vFromTimeSlot_2 && $vFromTimeSlot_1 > $date) {
                    $newdate = $newdate . " " . $vFromTimeSlot_1 . ":00";
                } else {
                    $newdate = ($vFromTimeSlot_2 == "00:00") ? $newdate . " " . $vFromTimeSlot_1 . ":00" : $newdate . " " . $vFromTimeSlot_2 . ":00";
                }
            }
            $currentdate = @date("Y-m-d H:i:s");
            $datediff = strtotime($newdate) - strtotime($currentdate);
            if ($datediff > 0) {
                $opentime = $OpenAt . " " . date("h:i a", strtotime($newdate));
            }
        }
        $eAvailable = $Datasql[0]['eAvailable'];
        $eLogout = $Datasql[0]['eLogout'];
        //if ($eAvailable == "No" || $eLogout == "Yes" || $eStatus != "Active") {
        if ($eAvailable == "No" || $eStatus != "Active") {
            $status_display = $languageLabelsArr['LBL_RESTAURANT_CLOSED_STATUS_TXT'];
            // $opentime = "";
            $closetime = "";
            $status = "closed";
        }
        $returnArr['status'] = $status_display;
        $returnArr['opentime'] = $opentime;
        $returnArr['closetime'] = $closetime;
        $returnArr['restaurantstatus'] = $status;
        $returnArr['timeslotavailable'] = $timeslotavailable;
    }
    // echo "<pre>";print_r($returnArr);
    //date_default_timezone_set($serverTimeZone);
    return $returnArr;
}

function isBetween($from, $till, $input)
{
    $f = DateTime::createFromFormat('!H:i', $from);
    $t = DateTime::createFromFormat('!H:i', $till);
    $i = DateTime::createFromFormat('!H:i', $input);
    if ($f > $t) $t->modify('+1 day');
    return ($f <= $i && $i <= $t) || ($f <= $i->modify('+1 day') && $i <= $t);
}

function getStoreDetails($storeIds, $userId, $iToLocationId, $languageLabelsArr)
{
    global $obj, $tconfig, $orderDetailsArr, $LANG_OBJ;
    //echo "<pre>";
    //$vLanguage = "EN";
    $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
    $storePrepareTimeArr = array();
    //$languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $iServiceId);
    $storeData = getcuisinelist($storeIds, $userId, $languageLabelsArr);
    if (isset($storeData['latLangArr'])) {
        $storeLatLangArr = $storeData['latLangArr'];
        $LBL_MINS_SMALL = $languageLabelsArr['LBL_MINS_SMALL'];
        //Added By HJ On 15-07-2020 For Optimize delivery_charges Table Query Start
        $deliveryLocationArr = array();
        if (isset($orderDetailsArr['delivery_charges'])) {
            $getDeliveryCharges = $orderDetailsArr['delivery_charges'];
        } else {
            $getDeliveryCharges = $obj->MySQLSelect("SELECT * FROM delivery_charges WHERE eStatus =  'Active'");
            $orderDetailsArr['delivery_charges'] = $getDeliveryCharges;
        }
        for ($l = 0; $l < count($getDeliveryCharges); $l++) {
            $deliveryLocationArr[$getDeliveryCharges[$l]['iLocationId']][] = $getDeliveryCharges[$l];
        }
        //echo "<pre>";print_r($deliveryLocationArr);die;
        //Added By HJ On 15-07-2020 For Optimize delivery_charges Table Query End
        for ($e = 0; $e < count($storeIds); $e++) {
            //echo "<pre>";print_r($storeData);die;
            //restaurantPricePerPerson
            $fDeliverytime = "0";
            if (count($iToLocationId) > 0) {
                $restaurantlat = $restaurantlong = "";
                if (isset($storeLatLangArr[$storeIds[$e]])) {
                    $restaurantlat = $storeLatLangArr[$storeIds[$e]]['restaurantlat'];
                    $restaurantlong = $storeLatLangArr[$storeIds[$e]]['restaurantlong'];
                }
                $Rest_Address_Array = array($restaurantlat, $restaurantlong);
                $iLocationId = GetUserGeoLocationId($Rest_Address_Array);
                $sql = "SELECT * FROM  `delivery_charges` WHERE ";
                $iToLocationId = $iToLocationId[0];
                $iLocationId = $iLocationId[0];
                $iToLocationId1 = ltrim($iToLocationId, "0.,");
                $iLocationId = ltrim($iLocationId, "0.,");
                $iToLocationId2 = explode(",", $iToLocationId1);
                $iLocationId = explode(",", $iLocationId);
                $countuser = count($iToLocationId2);
                $countrest = count($iLocationId);
                $counttotal = $countrest * $countuser;
                $cott = $cot = 1;
                $delLocationId = "";
                if ($countuser >= $countrest) {
                    for ($ui = 0; $ui < $countuser; $ui++) {
                        for ($ri = 0; $ri < $countrest; $ri++) {
                            //$sql .= "  ( iToLocationId =  '" . $iToLocationId2[$ui] . "' AND iLocationId =  '" . $iLocationId[$ri] . "' AND eStatus =  'Active') "; //Commented BY HJ On 15-07-2020 Bcoz iToLocationId Field not in this table
                            $sql .= "  ( iLocationId =  '" . $iLocationId[$ri] . "' AND eStatus =  'Active') "; //Added BY HJ On 15-07-2020 Bcoz iToLocationId Field not in this table
                            $delLocationId = $iLocationId[$ri];
                            if ($cot != $counttotal) {
                                $sql .= " OR ";
                            }
                            $cot++;
                        }
                    }
                } else {
                    for ($rri = 0; $rri < $countrest; $rri++) {
                        for ($uui = 0; $uui < $countuser; $uui++) {
                            //$sql .= "  ( iToLocationId =  '" . $iToLocationId2[$uui] . "' AND iLocationId =  '" . $iLocationId[$rri] . "' AND eStatus =  'Active') "; //Commented BY HJ On 15-07-2020 Bcoz iToLocationId Field not in this table
                            $sql .= "  ( iLocationId =  '" . $iLocationId[$rri] . "' AND eStatus =  'Active') "; //Added BY HJ On 15-07-2020 Bcoz iToLocationId Field not in this table
                            $delLocationId = $iLocationId[$rri];
                            if ($cott != $counttotal) {
                                $sql .= " OR ";
                            }
                            $cott++;
                        }
                    }
                }
                $sql .= " LIMIT 0,1";
                $datacharg = array();
                if ($delLocationId > 0) {
                    if (isset($deliveryLocationArr[$delLocationId])) {
                        $datacharg = $deliveryLocationArr[$delLocationId];
                    }
                } else {
                    $datacharg = $obj->MySQLSelect($sql);
                }
                if (count($datacharg) && isset($datacharg[0]['fDeliverytime'])) {
                    $fDeliverytime = $datacharg[0]['fDeliverytime'];
                }
            }
            if (isset($datacharg[0]['fDeliverytime'])) {
                $storeData[$storeIds[$e]]['Restaurant_OrderPrepareTime'] = $fDeliverytime . " " . $LBL_MINS_SMALL;
                $storeData[$storeIds[$e]]['Restaurant_OrderPrepareTimeValue'] = $fDeliverytime;
                $storeData[$storeIds[$e]]['Restaurant_OrderPrepareTimePostfix'] = $LBL_MINS_SMALL;
            }
        }
    }
    return $storeData;
}

function GetStoresByCuisine($iUserId, $SearchKeyword, $Restaurant_id_str = 0)
{
    global $obj, $tconfig, $userDetailsArr, $iServiceId, $LANG_OBJ;
    $returnArr = array();
    $vLanguage = "";
    if ($iUserId != "") {
        //Added By HJ On 15-07-2020 For Optimization company Table Query Start
        $tblName = "register_user";
        if (isset($userDetailsArr[$tblName . "_" . $iUserId]) && count($userDetailsArr[$tblName . "_" . $iUserId]) > 0) {
            $userData = $userDetailsArr[$tblName . "_" . $iUserId];
        } else {
            $userData = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM " . $tblName . " WHERE iUserId='" . $iUserId . "'");
            $userDetailsArr[$tblName . "_" . $iUserId] = $userData;
        }
        if (count($userData) > 0) {
            $vLanguage = $userData[0]['vLang'];
        } else {
            $vLanguage = get_value('register_user', 'vLang', 'iUserId', $iUserId, '', 'true');
        }
        //Added By HJ On 15-07-2020 For Optimization company Table Query End
    }
    if ($vLanguage == "" || $vLanguage == NULL) {
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
    }
    // $langLabels = $obj->MySQLSelect("SELECT vValue,vLabel FROM language_label_other WHERE (vLabel='LBL_RESTAURANTS_TXT' || vLabel='LBL_RESTAURANT_TXT') AND vCode='" . $vLanguage . "'");
    $langLabels = $obj->MySQLSelect("SELECT vValue,vLabel FROM language_label_" . $iServiceId . " WHERE (vLabel='LBL_RESTAURANTS_TXT' || vLabel='LBL_RESTAURANT_TXT') AND vCode='" . $vLanguage . "'");
    $LBL_RESTAURANTS_TXT = "Restaurants";
    $LBL_RESTAURANT_TXT = "Restaurant";
    for ($l = 0; $l < count($langLabels); $l++) {
        $vLabel = $langLabels[$l]['vLabel'];
        $vValue = $langLabels[$l]['vValue'];
        if ($vLabel == "LBL_RESTAURANTS_TXT") {
            $LBL_RESTAURANTS_TXT = $vValue;
        }
        if ($vLabel == "LBL_RESTAURANT_TXT") {
            $LBL_RESTAURANT_TXT = $vValue;
        }
    }
    //$LBL_RESTAURANTS_TXT = get_value('language_label_other', 'vValue', 'vLabel', 'LBL_RESTAURANTS_TXT', " and vCode='" . $vLanguage . "'", 'true');
    //$LBL_RESTAURANT_TXT = get_value('language_label_other', 'vValue', 'vLabel', 'LBL_RESTAURANT_TXT', " and vCode='" . $vLanguage . "'", 'true');
    $sql = "SELECT cuisineId, cuisineName_" . $vLanguage . " as cuisineName FROM cuisine WHERE eStatus='Active' AND cuisineName_" . $vLanguage . " LIKE '%" . $SearchKeyword . "%'";
    $CuisineDetail = $obj->MySQLSelect($sql);
    if (count($CuisineDetail) > 0) {
        $CuisineTotalRestaurant = $obj->MySQLSelect("SELECT count(iCompanyId) as TotalRestaurant,cuisineId FROM company_cuisine WHERE iCompanyId IN($Restaurant_id_str) GROUP BY cuisineId");
        $cuisineRestArr = array();
        for ($c = 0; $c < count($CuisineTotalRestaurant); $c++) {
            $cuisineRestArr[$CuisineTotalRestaurant[$c]['cuisineId']] = $CuisineTotalRestaurant[$c]['TotalRestaurant'];
        }
        //echo "<pre>";print_r($cuisineRestArr);die;
        for ($i = 0; $i < count($CuisineDetail); $i++) {
            $cuisineId = $CuisineDetail[$i]['cuisineId'];
            $cuisineName = $CuisineDetail[$i]['cuisineName'];
            //$sqlr = "SELECT count(iCompanyId) as TotalRestaurant,cuisineId FROM company_cuisine WHERE cuisineId = '" . $cuisineId . "' AND iCompanyId IN($Restaurant_id_str)";
            //$CuisineTotalRestaurant = $obj->MySQLSelect($sqlr);
            $TotalRestaurant = $CuisineTotalRestaurant[0]['TotalRestaurant'];
            $TotalRestaurant = 0;
            if (isset($cuisineRestArr[$cuisineId]) && $cuisineRestArr[$cuisineId] > 0) {
                $TotalRestaurant = $cuisineRestArr[$cuisineId];
            }
            if ($TotalRestaurant > 0) {
                $TotalRestaurantTxt = ($TotalRestaurant <= 1) ? $LBL_RESTAURANT_TXT : $LBL_RESTAURANTS_TXT;
                $returnArr[$i]['cuisineId'] = $cuisineId;
                $returnArr[$i]['cuisineName'] = $cuisineName;
                $returnArr[$i]['TotalRestaurant'] = $TotalRestaurant;
                $returnArr[$i]['TotalRestaurantWithLabel'] = $TotalRestaurant . " " . $TotalRestaurantTxt;
            }
        }
    }
    return $returnArr;
}

function FetchStoreWorkingHoursData($iCompanyId, $languageLabelsArr)
{
    global $MODULES_OBJ;
    //added by SP on 14-10-2020 for timeslot changes
    $ENABLE_TIMESLOT_ADDON = !empty($MODULES_OBJ->isEnableTimeslotFeature()) ? "Yes" : "No";
    if (strtoupper($ENABLE_TIMESLOT_ADDON) == "YES") {
        $returnArr = getCompanyTimeSlotAddon($iCompanyId, $languageLabelsArr);
    } else {
        $returnArr = getCompanyTimeSlotSimple($iCompanyId, $languageLabelsArr);
    }
    return $returnArr;
}

function getCompanyTimeSlotAddon($iCompanyId, $languageLabelsArr)
{
    global $obj, $tconfig, $userDetailsArr;
    $timingArray = array('vMonFromSlot', 'vMonToSlot', 'vTueFromSlot', 'vTueToSlot', 'vWedFromSlot', 'vWedToSlot', 'vThuFromSlot', 'vThuToSlot', 'vFriFromSlot', 'vFriToSlot', 'vSatFromSlot', 'vSatToSlot', 'vSunFromSlot', 'vSunToSlot');
    $sltAry = array(1, 2);
    $orgtimingArray = array('vMonFromSlot1', 'vMonToSlot1', 'vMonFromSlot2', 'vMonToSlot2', 'vTueFromSlot1', 'vTueToSlot1', 'vTueFromSlot2', 'vTueToSlot2', 'vWedFromSlot1', 'vWedToSlot1', 'vWedFromSlot2', 'vWedToSlot2', 'vThuFromSlot1', 'vThuToSlot1', 'vThuFromSlot2', 'vThuToSlot2', 'vFriFromSlot1', 'vFriToSlot1', 'vFriFromSlot2', 'vFriToSlot2', 'vSatFromSlot1', 'vSatToSlot1', 'vSatFromSlot2', 'vSatToSlot2', 'vSunFromSlot1', 'vSunToSlot1', 'vSunFromSlot2', 'vSunToSlot2');
    $fieldName = "";
    foreach ($orgtimingArray as $orgvalue) {
        $fieldName .= $orgvalue . ",";
    }
    $fieldName = rtrim($fieldName, ",");
    //Added By HJ On 15-07-2020 For Optimization company Table Query Start
    $tblName = "company";
    if (isset($userDetailsArr[$tblName . "_" . $iCompanyId]) && count($userDetailsArr[$tblName . "_" . $iCompanyId]) > 0) {
        $DataCompanyTime = $userDetailsArr[$tblName . "_" . $iCompanyId];
    } else {
        $DataCompanyTime = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM " . $tblName . " WHERE iCompanyId='" . $iCompanyId . "'");
        $userDetailsArr[$tblName . "_" . $iCompanyId] = $DataCompanyTime;
    }
    //$DataCompanyTime = $obj->MySQLSelect("SELECT " . $fieldName . " FROM company WHERE iCompanyId = '" . $iCompanyId . "'");
    //Added By HJ On 15-07-2020 For Optimization company Table Query End
    $tempCounter = $enable24Hour = 0;
    for ($day = 0; $day < count($orgtimingArray); $day++) {
        $tempVar = "";
        $tempVar = $DataCompanyTime[0][$orgtimingArray[$day]];
        if ($enable24Hour == 0 && $tempVar != "00:00:00") {
            $tempVar = date("h:i A", strtotime($DataCompanyTime[0][$orgtimingArray[$day]])); //Changed By HJ On 22-02-2019 For Changed 24 to 12 Hour Format As Per Discuss With GP Mam
        }
        if ($tempVar == "00:00:00") {
            $tempVar = "";
        }
        $firstValue = $tempVar;
        $returnArr[$tempCounter]['Dayname'] = $orgtimingArray[$day];
        $returnArr[$tempCounter]['slot_time'] = $tempVar;
        $day++;
        //for save second value
        $tempVar = $DataCompanyTime[0][$orgtimingArray[$day]];
        if ($enable24Hour == 0 && $tempVar != "00:00:00") {
            $tempVar = date("h:i A", strtotime($DataCompanyTime[0][$orgtimingArray[$day]])); //Changed By HJ On 22-02-2019 For Changed 24 to 12 Hour Format As Per Discuss With GP Mam
        }
        $secondValue = $tempVar;
        if ($tempVar == "00:00:00") {
            $tempVar = "";
        }
        $returnArr[$tempCounter]['Dayname'] = $orgtimingArray[$day];
        if ($firstValue != "00:00:00" && $secondValue != "00:00:00") {
            $returnArr[$tempCounter]['slot_time'] .= "-";
        }
        $returnArr[$tempCounter]['slot_time'] .= $tempVar;
        $day++;
        //it will take if fields are not empty
        $tempVar1 = $DataCompanyTime[0][$orgtimingArray[$day]];
        if ($enable24Hour == 0 && $tempVar1 != "00:00:00") {
            $tempVar1 = date("h:i A", strtotime($DataCompanyTime[0][$orgtimingArray[$day]])); //Changed By HJ On 22-02-2019 For Changed 24 to 12 Hour Format As Per Discuss With GP Mam
        }
        $tempVar2 = $DataCompanyTime[0][$orgtimingArray[$day + 1]];
        if ($enable24Hour == 0 && $tempVar2 != "00:00:00") {
            $tempVar2 = date("h:i A", strtotime($DataCompanyTime[0][$orgtimingArray[$day + 1]])); //Changed By HJ On 22-02-2019 For Changed 24 to 12 Hour Format As Per Discuss With GP Mam
        }
        if ($tempVar1 != "00:00:00" || $tempVar2 != "00:00:00") {
            if ($firstValue != "00:00:00" && $secondValue != "00:00:00") {
                $returnArr[$tempCounter]['slot_time'] .= "\n";
            }
            $tempVar = $DataCompanyTime[0][$orgtimingArray[$day]];
            if ($enable24Hour == 0 && $tempVar != "00:00:00") {
                $tempVar = date("h:i A", strtotime($DataCompanyTime[0][$orgtimingArray[$day]])); //Changed By HJ On 22-02-2019 For Changed 24 to 12 Hour Format As Per Discuss With GP Mam
            }
            $returnArr[$tempCounter]['Dayname'] = $orgtimingArray[$day];
            $returnArr[$tempCounter]['slot_time'] .= $tempVar;
            $day++;
            $tempVar = $DataCompanyTime[0][$orgtimingArray[$day]];
            if ($enable24Hour == 0 && $tempVar != "00:00:00") {
                $tempVar = date("h:i A", strtotime($DataCompanyTime[0][$orgtimingArray[$day]])); //Changed By HJ On 22-02-2019 For Changed 24 to 12 Hour Format As Per Discuss With GP Mam
            }
            $returnArr[$tempCounter]['Dayname'] = $orgtimingArray[$day];
            if ($firstValue != "00:00:00" && $secondValue != "00:00:00") {
                $returnArr[$tempCounter]['slot_time'] .= "-";
            }
            $returnArr[$tempCounter]['slot_time'] .= $tempVar;
        } else {
            $day++;
        }
        $tempCounter++;
    }
    return $returnArr;
}

function getCompanyTimeSlotSimple($iCompanyId, $languageLabelsArr)
{
    global $obj, $tconfig, $userDetailsArr;
    $selectedLang = $languageLabelsArr['vCode'];
    //Added By HJ On 15-07-2020 For Optimization company Table Query Start
    $tblName = "company";
    if (isset($userDetailsArr[$tblName . "_" . $iCompanyId]) && count($userDetailsArr[$tblName . "_" . $iCompanyId]) > 0) {
        $DataCompanyTime = $userDetailsArr[$tblName . "_" . $iCompanyId];
    } else {
        $DataCompanyTime = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM " . $tblName . " WHERE iCompanyId='" . $iCompanyId . "'");
        $userDetailsArr[$tblName . "_" . $iCompanyId] = $DataCompanyTime;
    }
    //$sql = "SELECT vFromMonFriTimeSlot1,vToMonFriTimeSlot1,vFromMonFriTimeSlot2,vToMonFriTimeSlot2,vFromSatSunTimeSlot1,vToSatSunTimeSlot1,vFromSatSunTimeSlot2,vToSatSunTimeSlot2 FROM company WHERE iCompanyId = '" . $iCompanyId . "'";
    //$DataCompanyTime = $obj->MySQLSelect($sql);
    //Added By HJ On 15-07-2020 For Optimization company Table Query End
    // print_R($DataCompanyTime);die;
    $vFromMonFriTimeSlot1 = substr($DataCompanyTime[0]['vFromMonFriTimeSlot1'], 0, -3);
    $vToMonFriTimeSlot1 = substr($DataCompanyTime[0]['vToMonFriTimeSlot1'], 0, -3);
    $vFromMonFriTimeSlot2 = substr($DataCompanyTime[0]['vFromMonFriTimeSlot2'], 0, -3);
    $vToMonFriTimeSlot2 = substr($DataCompanyTime[0]['vToMonFriTimeSlot2'], 0, -3);
    $vFromSatSunTimeSlot1 = substr($DataCompanyTime[0]['vFromSatSunTimeSlot1'], 0, -3);
    $vToSatSunTimeSlot1 = substr($DataCompanyTime[0]['vToSatSunTimeSlot1'], 0, -3);
    $vFromSatSunTimeSlot2 = substr($DataCompanyTime[0]['vFromSatSunTimeSlot2'], 0, -3);
    $vToSatSunTimeSlot2 = substr($DataCompanyTime[0]['vToSatSunTimeSlot2'], 0, -3);
    $vFromMonFriTimeSlotNew1 = date("g:i a", strtotime($vFromMonFriTimeSlot1));
    $vFromMonFriTimeSlotNew1 = ($selectedLang == "AR") ? convertTimeToArabic(strtotime($vFromMonFriTimeSlot1)) : $vFromMonFriTimeSlotNew1;
    $vToMonFriTimeSlotNew1 = date("g:i a", strtotime($vToMonFriTimeSlot1));
    $vToMonFriTimeSlotNew1 = ($selectedLang == "AR") ? convertTimeToArabic(strtotime($vToMonFriTimeSlot1)) : $vToMonFriTimeSlotNew1;
    $vFromMonFriTimeSlotNew2 = date("g:i a", strtotime($vFromMonFriTimeSlot2));
    $vFromMonFriTimeSlotNew2 = ($selectedLang == "AR") ? convertTimeToArabic(strtotime($vFromMonFriTimeSlot2)) : $vFromMonFriTimeSlotNew2;
    $vToMonFriTimeSlotNew2 = date("g:i a", strtotime($vToMonFriTimeSlot2));
    $vToMonFriTimeSlotNew2 = ($selectedLang == "AR") ? convertTimeToArabic(strtotime($vToMonFriTimeSlot2)) : $vToMonFriTimeSlotNew2;
    $vFromSatSunTimeSlotNew1 = date("g:i a", strtotime($vFromSatSunTimeSlot1));
    $vFromSatSunTimeSlotNew1 = ($selectedLang == "AR") ? convertTimeToArabic(strtotime($vFromSatSunTimeSlot1)) : $vFromSatSunTimeSlotNew1;
    $vToSatSunTimeSlotNew1 = date("g:i a", strtotime($vToSatSunTimeSlot1));
    $vToSatSunTimeSlotNew1 = ($selectedLang == "AR") ? convertTimeToArabic(strtotime($vToSatSunTimeSlot1)) : $vToSatSunTimeSlotNew1;
    $vFromSatSunTimeSlotNew2 = date("g:i a", strtotime($vFromSatSunTimeSlot2));
    $vFromSatSunTimeSlotNew2 = ($selectedLang == "AR") ? convertTimeToArabic(strtotime($vFromSatSunTimeSlot2)) : $vFromSatSunTimeSlotNew2;
    $vToSatSunTimeSlotNew2 = date("g:i a", strtotime($vToSatSunTimeSlot2));
    $vToSatSunTimeSlotNew2 = ($selectedLang == "AR") ? convertTimeToArabic(strtotime($vToSatSunTimeSlot2)) : $vToSatSunTimeSlotNew2;
    if ($vFromMonFriTimeSlot1 == "00:00" && $vToMonFriTimeSlot1 == "00:00" && $vFromMonFriTimeSlot2 == "00:00" && $vToMonFriTimeSlot2 == "00:00") {
        $monfritimeslot_TXT = "";
        $monfritimeslot_Time = "";
        $monfritimeslot_Time_new = "";
    }
    if ($vFromMonFriTimeSlot1 != "00:00" && $vToMonFriTimeSlot1 != "00:00" && $vFromMonFriTimeSlot2 != "00:00" && $vToMonFriTimeSlot2 != "00:00") {
        $monfritimeslot_TXT = $languageLabelsArr['LBL_MON_FRI_TIME_TXT'];
        $monfritimeslot_Time = $vFromMonFriTimeSlot1 . "-" . $vToMonFriTimeSlot1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . " " . $vFromMonFriTimeSlot2 . "-" . $vToMonFriTimeSlot2;
        $monfritimeslot_Time_new = $vFromMonFriTimeSlotNew1 . "-" . $vToMonFriTimeSlotNew1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . "\n" . $vFromMonFriTimeSlotNew2 . "-" . $vToMonFriTimeSlotNew2;
    }
    if ($vFromMonFriTimeSlot1 == "00:00" && $vToMonFriTimeSlot1 != "00:00" && $vFromMonFriTimeSlot2 != "00:00" && $vToMonFriTimeSlot2 != "00:00") {
        $monfritimeslot_TXT = $languageLabelsArr['LBL_MON_FRI_TIME_TXT'];
        $monfritimeslot_Time = $vFromMonFriTimeSlot1 . "-" . $vToMonFriTimeSlot1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . " " . $vFromMonFriTimeSlot2 . "-" . $vToMonFriTimeSlot2;
        $monfritimeslot_Time_new = $vFromMonFriTimeSlotNew1 . "-" . $vToMonFriTimeSlotNew1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . "\n" . $vFromMonFriTimeSlotNew2 . "-" . $vToMonFriTimeSlotNew2;
    }
    if ($vFromMonFriTimeSlot1 != "00:00" && $vToMonFriTimeSlot1 != "00:00" && $vFromMonFriTimeSlot2 == "00:00" && $vToMonFriTimeSlot2 != "00:00") {
        $monfritimeslot_TXT = $languageLabelsArr['LBL_MON_FRI_TIME_TXT'];
        $monfritimeslot_Time = $vFromMonFriTimeSlot1 . "-" . $vToMonFriTimeSlot1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . " " . $vFromMonFriTimeSlot2 . "-" . $vToMonFriTimeSlot2;
        $monfritimeslot_Time_new = $vFromMonFriTimeSlotNew1 . "-" . $vToMonFriTimeSlotNew1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . "\n" . $vFromMonFriTimeSlotNew2 . "-" . $vToMonFriTimeSlotNew2;
    }
    if ($vFromMonFriTimeSlot1 != "00:00" && $vToMonFriTimeSlot1 != "00:00" && $vFromMonFriTimeSlot2 == "00:00" && $vToMonFriTimeSlot2 == "00:00") {
        $monfritimeslot_TXT = $languageLabelsArr['LBL_MON_FRI_TIME_TXT'];
        $monfritimeslot_Time = $vFromMonFriTimeSlot1 . "-" . $vToMonFriTimeSlot1;
        $monfritimeslot_Time_new = $vFromMonFriTimeSlotNew1 . "-" . $vToMonFriTimeSlotNew1;
    }
    if ($vFromMonFriTimeSlot1 == "00:00" && $vToMonFriTimeSlot1 == "00:00" && $vFromMonFriTimeSlot2 != "00:00" && $vToMonFriTimeSlot2 != "00:00") {
        $monfritimeslot_TXT = $languageLabelsArr['LBL_MON_FRI_TIME_TXT'];
        $monfritimeslot_Time = $vFromMonFriTimeSlot2 . "-" . $vToMonFriTimeSlot2;
        $monfritimeslot_Time_new = $vFromMonFriTimeSlotNew2 . "-" . $vToMonFriTimeSlotNew2;
    }
    if ($vFromSatSunTimeSlot1 == "00:00" && $vToSatSunTimeSlot1 == "00:00" && $vFromSatSunTimeSlot2 == "00:00" && $vToSatSunTimeSlot2 == "00:00") {
        $satsuntimeslot_TXT = "";
        $satsuntimeslot_Time = "";
        $satsuntimeslot_Time_new = "";
    }
    if ($vFromSatSunTimeSlot1 != "00:00" && $vToSatSunTimeSlot1 != "00:00" && $vFromSatSunTimeSlot2 != "00:00" && $vToSatSunTimeSlot2 != "00:00") {
        $satsuntimeslot_TXT = $languageLabelsArr['LBL_SAT_SUN_TXT'];
        $satsuntimeslot_Time = $vFromSatSunTimeSlot1 . "-" . $vToSatSunTimeSlot1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . " " . $vFromSatSunTimeSlot2 . "-" . $vToSatSunTimeSlot2;
        $satsuntimeslot_Time_new = $vFromSatSunTimeSlotNew1 . "-" . $vToSatSunTimeSlotNew1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . "\n" . $vFromSatSunTimeSlotNew2 . "-" . $vToSatSunTimeSlotNew2;
    }
    if ($vFromSatSunTimeSlot1 == "00:00" && $vToSatSunTimeSlot1 != "00:00" && $vFromSatSunTimeSlot2 != "00:00" && $vToSatSunTimeSlot2 != "00:00") {
        $satsuntimeslot_TXT = $languageLabelsArr['LBL_SAT_SUN_TXT'];
        $satsuntimeslot_Time = $vFromSatSunTimeSlot1 . "-" . $vToSatSunTimeSlot1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . " " . $vFromSatSunTimeSlot2 . "-" . $vToSatSunTimeSlot2;
        $satsuntimeslot_Time_new = $vFromSatSunTimeSlotNew1 . "-" . $vToSatSunTimeSlotNew1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . "\n" . $vFromSatSunTimeSlotNew2 . "-" . $vToSatSunTimeSlotNew2;
    }
    if ($vFromSatSunTimeSlot1 != "00:00" && $vToSatSunTimeSlot1 != "00:00" && $vFromSatSunTimeSlot2 == "00:00" && $vToSatSunTimeSlot2 != "00:00") {
        $satsuntimeslot_TXT = $languageLabelsArr['LBL_SAT_SUN_TXT'];
        $satsuntimeslot_Time = $vFromSatSunTimeSlot1 . "-" . $vToSatSunTimeSlot1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . " " . $vFromSatSunTimeSlot2 . "-" . $vToSatSunTimeSlot2;
        $satsuntimeslot_Time_new = $vFromSatSunTimeSlotNew1 . "-" . $vToSatSunTimeSlotNew1 . " " . $languageLabelsArr['LBL_TIMSLOT_AND_OTHER_TXT'] . "\n" . $vFromSatSunTimeSlotNew2 . "-" . $vToSatSunTimeSlotNew2;
    }
    if ($vFromSatSunTimeSlot1 != "00:00" && $vToSatSunTimeSlot1 != "00:00" && $vFromSatSunTimeSlot2 == "00:00" && $vToSatSunTimeSlot2 == "00:00") {
        $satsuntimeslot_TXT = $languageLabelsArr['LBL_SAT_SUN_TXT'];
        $satsuntimeslot_Time = $vFromSatSunTimeSlot1 . "-" . $vToSatSunTimeSlot1;
        $satsuntimeslot_Time_new = $vFromSatSunTimeSlotNew1 . "-" . $vToSatSunTimeSlotNew1;
    }
    if ($vFromSatSunTimeSlot1 == "00:00" && $vToSatSunTimeSlot1 == "00:00" && $vFromSatSunTimeSlot2 != "00:00" && $vToSatSunTimeSlot2 != "00:00") {
        $satsuntimeslot_TXT = $languageLabelsArr['LBL_SAT_SUN_TXT'];
        $satsuntimeslot_Time = $vFromSatSunTimeSlot2 . "-" . $vToSatSunTimeSlot2;
        $satsuntimeslot_Time_new = $vFromSatSunTimeSlotNew2 . "-" . $vToSatSunTimeSlotNew2;
    }
    $returnArr['monfritimeslot_TXT'] = $monfritimeslot_TXT;
    $returnArr['monfritimeslot_Time'] = $monfritimeslot_Time;
    $returnArr['monfritimeslot_Time_new'] = $monfritimeslot_Time_new;
    $returnArr['satsuntimeslot_TXT'] = $satsuntimeslot_TXT;
    $returnArr['satsuntimeslot_Time'] = $satsuntimeslot_Time;
    $returnArr['satsuntimeslot_Time_new'] = $satsuntimeslot_Time_new;
    return $returnArr;
}

function getCompanyCurrencyLanguageDetails($iCompanyId = "", $iOrderId = 0)
{
    global $obj, $tconfig, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $orderDetailsArr, $userDetailsArr, $currencyAssociateArr, $LANG_OBJ;
    $returnArr = array();
    if ($iCompanyId != "") {
        //Added By HJ On 13-07-2020 For Optimize company Table Query Start
        if (isset($userDetailsArr['company_' . $iCompanyId])) {
            $passengerData = $userDetailsArr['company_' . $iCompanyId];
        } else {
            $passengerData = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId='" . $iCompanyId . "'");
            $userDetailsArr['company_' . $iCompanyId] = $passengerData;
        }
        //Added By HJ On 13-07-2020 For Optimize company Table Query End
        //Added By HJ On 13-07-2020 For Optimize currency Table Query Start
        $vCurrencyCompany = $passengerData[0]['vCurrencyCompany'];
        if (isset($currencyAssociateArr[$vCurrencyCompany])) {
            $userCurrencyData = $currencyAssociateArr[$vCurrencyCompany];
            //echo "<pre>";print_r($userCurrencyData);die;
            $passengerData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $passengerData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        }

        //Added By HJ On 13-07-2020 For Optimize currency Table Query End
        //$sqlp = "SELECT co.vCurrencyCompany,co.vLang,cu.vSymbol,cu.Ratio FROM company as co LEFT JOIN currency as cu ON co.vCurrencyCompany = cu.vName WHERE iCompanyId = '" . $iCompanyId . "'";
        //$passengerData = $obj->MySQLSelect($sqlp);
        $currencycode = $passengerData[0]['vCurrencyCompany'];
        $vLanguage = $passengerData[0]['vLang'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $Ratio = $passengerData[0]['Ratio'];
        if ($iOrderId > 0) {
            //Added By HJ On 13-07-2020 For Optimize Order Table Query Start
            if (isset($orderDetailsArr['orders_' . $iOrderId])) {
                $CurrencyData = $orderDetailsArr['orders_' . $iOrderId];
            } else {
                $CurrencyData = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");
                $orderDetailsArr['orders_' . $iOrderId] = $CurrencyData;
            }
            //echo "<pre>";print_r($CurrencyData);die;
            if (isset($CurrencyData[0]['fRatio_' . $currencycode])) {
                $Ratio = $CurrencyData[0]['fRatio_' . $currencycode];
            }
            //Added By HJ On 13-07-2020 For Optimize Order Table Query End
        }
        if ($vLanguage == "" || $vLanguage == NULL) {
            //Added By HJ On 13-07-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 13-07-2020 For Optimize language_master Table Query End
        }


        if ($currencycode == "" || $currencycode == NULL) {
            //Added By HJ On 13-07-2020 For Optimization currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencycode = $vSystemDefaultCurrencyName;
                $currencySymbol = $vSystemDefaultCurrencySymbol;
                $Ratio = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
                $currencycode = $currencyData[0]['vName'];
                $currencySymbol = $currencyData[0]['vSymbol'];
                $Ratio = $currencyData[0]['Ratio'];
            }
            //Added By HJ On 13-07-2020 For Optimization currency Table Query End
        }
    } else {
        //Added By HJ On 13-07-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 13-07-2020 For Optimize language_master Table Query End
        //Added By HJ On 13-07-2020 For Optimization currency Table Query Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
            $Ratio = $vSystemDefaultCurrencyRatio;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        }
        //Added By HJ On 13-07-2020 For Optimization currency Table Query End
    }
    $returnArr['currencycode'] = $currencycode;
    $returnArr['currencySymbol'] = $currencySymbol;
    $returnArr['Ratio'] = $Ratio;
    $returnArr['vLang'] = $vLanguage;
    return $returnArr;
}

function GetUserSelectedLastOrderAddressCompanyLocationWise($iUserId, $eUserType = "Passenger", $passengerLat, $passengerLon, $iCompanyId, $iUserAddressId = "")
{
    global $obj, $tconfig, $LIST_RESTAURANT_LIMIT_BY_DISTANCE;
    $ToTalAddress = 0;
    if ($iUserId == "" || $iUserId == 0 || $iUserId == NULL) {
        return $ToTalAddress;
    }
    $UserType = "Driver";
    if ($eUserType == "Passenger") {
        $UserType = "Rider";
    }
    $ssql_user_address = "";
    if ($iUserAddressId != "" && $iUserAddressId > 0) {
        $ssql_user_address = " AND user_address.iUserAddressId = " . $iUserAddressId;
    }
    $sql = "select vRestuarantLocationLat,vRestuarantLocationLong from `company` where iCompanyId = '" . $iCompanyId . "'";
    $db_companydata = $obj->MySQLSelect($sql);
    $vRestuarantLocationLat = $db_companydata[0]['vRestuarantLocationLat'];
    $vRestuarantLocationLong = $db_companydata[0]['vRestuarantLocationLong'];
    $sql_userAddress = "SELECT ROUND(( 6371 * acos( cos( radians(cmp.vRestuarantLocationLat) )

            * cos( radians( ROUND(user_address.vLatitude ,8) ) )

            * cos( radians( ROUND(user_address.vLongitude,8) ) - radians(cmp.vRestuarantLocationLong) )

        + sin( radians(cmp.vRestuarantLocationLat) )

            * sin( radians( ROUND(user_address.vLatitude,8) ) ) ) ),2) AS distance, user_address.*  FROM `user_address`, `company` as cmp

        WHERE (user_address.vLatitude != '' AND user_address.vLatitude != '' AND user_address.eStatus='Active' AND user_address.iUserId='" . $iUserId . "' AND cmp.iCompanyId = '" . $iCompanyId . "' " . $ssql_user_address . ")

            HAVING distance < " . $LIST_RESTAURANT_LIMIT_BY_DISTANCE . " ORDER BY user_address.iUserAddressId DESC LIMIT 0,1";
    $UserAddressData = $obj->MySQLSelect($sql_userAddress);
    if ((empty($UserAddressData) || count($UserAddressData) == 0) && !empty($ssql_user_address)) {
        $ssql_user_address = "";
        $sql_userAddress = "SELECT ROUND(( 6371 * acos( cos( radians(cmp.vRestuarantLocationLat) )

            * cos( radians( ROUND(user_address.vLatitude ,8) ) )

            * cos( radians( ROUND(user_address.vLongitude,8) ) - radians(cmp.vRestuarantLocationLong) )

                    + sin( radians(cmp.vRestuarantLocationLat) )

            * sin( radians( ROUND(user_address.vLatitude,8) ) ) ) ),2) AS distance, user_address.*  FROM `user_address`, `company` as cmp

                    WHERE (user_address.vLatitude != '' AND user_address.vLatitude != '' AND user_address.eStatus='Active' AND user_address.iUserId='" . $iUserId . "' AND cmp.iCompanyId = '" . $iCompanyId . "' " . $ssql_user_address . ")

                        HAVING distance < " . $LIST_RESTAURANT_LIMIT_BY_DISTANCE . " ORDER BY user_address.iUserAddressId DESC LIMIT 0,1";
        $UserAddressData = $obj->MySQLSelect($sql_userAddress);
    }
    $UserSelectedAddressArr = array();
    if (count($UserAddressData) > 0) {
        $vAddressType = $UserAddressData[0]['vAddressType'];
        $vBuildingNo = $UserAddressData[0]['vBuildingNo'];
        $vLandmark = $UserAddressData[0]['vLandmark'];
        $vServiceAddress = $UserAddressData[0]['vServiceAddress'];
        $PickUpAddress = ($vAddressType != "") ? $vAddressType . "\n" : "";
        $PickUpAddress .= ($vBuildingNo != "") ? $vBuildingNo . "," : "";
        $PickUpAddress .= ($vLandmark != "") ? $vLandmark . "\n" : "";
        $PickUpAddress .= ($vServiceAddress != "") ? $vServiceAddress : "";
        $PickUpLatitude = $UserAddressData[0]['vLatitude'];
        $PickUpLongitude = $UserAddressData[0]['vLongitude'];
        $UserSelectedAddressArr['UserSelectedAddress'] = $PickUpAddress;
        $UserSelectedAddressArr['UserSelectedLatitude'] = $PickUpLatitude;
        $UserSelectedAddressArr['UserSelectedLongitude'] = $PickUpLongitude;
        $UserSelectedAddressArr['UserSelectedAddressId'] = $UserAddressData[0]['iUserAddressId'];
    }
    return $UserSelectedAddressArr;
}

function GenerateUniqueOrderNo($eForKiosk = "No")
{
    global $obj, $tconfig;
    $ORDER_NO_LENGTH = 10;
    if (strtoupper($eForKiosk) == "YES") {
        $ORDER_NO_LENGTH = KIOSK_ORDER_NO_LENGTH;
    }
    $random = substr(number_format(time() * rand(), 0, '', ''), 0, $ORDER_NO_LENGTH);
    $str = "select iOrderId from orders where vOrderNo ='" . $random . "'";
    $db_str = $obj->MySQLSelect($str);
    if (!empty($db_str) && count($db_str) > 0) {
        $Generateuniqueorderno = GenerateUniqueOrderNo();
    } else {
        $Generateuniqueorderno = $random;
    }
    return $Generateuniqueorderno;
}

function GenerateUniqueTripNo()
{
    global $obj, $tconfig;
    $random = substr(number_format(time() * rand(), 0, '', ''), 0, 10);
    $str = "select iTripId from trips where vRideNo ='" . $random . "'";
    $db_str = $obj->MySQLSelect($str);
    if (!empty($db_str) && count($db_str) > 0) {
        $Generateuniqueorderno = GenerateUniqueTripNo();
    } else {
        $Generateuniqueorderno = $random;
    }
    return $Generateuniqueorderno;
}

function FoodMenuItemBasicPrice($iMenuItemId, $iQty = 1)
{
    global $obj, $tconfig;
    $fPrice = 0;
    $str = "select fPrice from menu_items where iMenuItemId ='" . $iMenuItemId . "'";
    $db_price = $obj->MySQLSelect($str);
    if (count($db_price) > 0) {
        $fPrice = $db_price[0]['fPrice'];
        $fPrice = $fPrice * $iQty;
    }
    return $fPrice;
}

function GetFoodMenuItemOptionPrice($iOptionId = "")
{
    global $obj, $tconfig;
    if ($iOptionId != "") {
        $str = "select iMenuItemId,fPrice from `menuitem_options` where iOptionId IN(" . $iOptionId . ")";
        $db_price = $obj->MySQLSelect($str);
        $fTotalPrice = 0;
        if (count($db_price) > 0) {
            for ($i = 0; $i < count($db_price); $i++) {
                $fPrice = $db_price[$i]['fPrice'];
                $fTotalPrice = $fTotalPrice + $fPrice;
            }
        }
    } else {
        $fTotalPrice = 0;
    }
    $fTotalPrice = round($fTotalPrice, 2);
    return $fTotalPrice;
}

function GetFoodMenuItemAddOnPrice($vAddonId = "")
{
    global $obj, $tconfig;
    if ($vAddonId != "") {
        $str = "select iMenuItemId,fPrice from `menuitem_options` where iOptionId IN(" . $vAddonId . ")";
        $db_price = $obj->MySQLSelect($str);
        $fTotalPrice = 0;
        if (count($db_price) > 0) {
            for ($i = 0; $i < count($db_price); $i++) {
                $fPrice = $db_price[$i]['fPrice'];
                $fTotalPrice = $fTotalPrice + $fPrice;
            }
        }
    } else {
        $fTotalPrice = 0;
    }
    $fTotalPrice = round($fTotalPrice, 2);
    return $fTotalPrice;
}

function getOrderDetailTotalPrice($iOrderId)
{
    global $obj, $tconfig;
    $sql = "SELECT SUM( `fTotalPrice` ) AS totalprice FROM order_details WHERE iOrderId = '" . $iOrderId . "' AND eAvailable = 'Yes'";
    $data = $obj->MySQLSelect($sql);
    $totalprice = $data[0]['totalprice'];
    if ($totalprice == "" || $totalprice == NULL) {
        $totalprice = 0;
    }
    return $totalprice;
}

function getOrderDeliveryCharge($iOrderId, $fSubTotal)
{
    global $MODULES_OBJ, $obj, $tconfig, $orderDetailsArr;
    $fDeliveryCharge = 0;
    $sql = "SELECT ord.iUserId,ord.iCompanyId,ua.vLatitude as passengerlat,ua.vLongitude as passengerlong,co.vRestuarantLocationLat as restaurantlat,co.vRestuarantLocationLong as restaurantlong,ord.eTakeaway,ord.eBuyAnyService FROM orders as ord LEFT JOIN user_address as ua ON ord.iUserAddressId=ua.iUserAddressId LEFT JOIN company as co ON ord.iCompanyId=co.iCompanyId WHERE ord.iOrderId = '" . $iOrderId . "'";
    $data = $obj->MySQLSelect($sql);
    if (count($data) > 0) {
        $buyanyservice = (!empty($MODULES_OBJ->isEnableAnywhereDeliveryFeature()) && $data[0]['eBuyAnyService'] == 'Yes') ? "Yes" : "No";
        if ($data[0]['eTakeaway'] == 'Yes') {
            $fDeliveryCharge = 0;
            return $fDeliveryCharge;
        }
        $User_Address_Array = array($data[0]['passengerlat'], $data[0]['passengerlong']);
        $iLocationIdArr = GetUserGeoLocationId($User_Address_Array);
        // $distance = distanceByLocation($data[0]['passengerlat'], $data[0]['passengerlong'], $data[0]['restaurantlat'], $data[0]['restaurantlong'], "K");
        $vLangCodeData = get_value('language_master', 'vCode, vGMapLangCode', 'eDefault', 'Yes');
        $vGMapLangCode = $vLangCodeData[0]['vGMapLangCode'];
        $requestDataArr = array();
        $requestDataArr['SOURCE_LATITUDE'] = $data[0]['restaurantlat'];
        $requestDataArr['SOURCE_LONGITUDE'] = $data[0]['restaurantlong'];
        $requestDataArr['DEST_LATITUDE'] = $data[0]['passengerlat'];
        $requestDataArr['DEST_LONGITUDE'] = $data[0]['passengerlong'];
        $requestDataArr['LANGUAGE_CODE'] = $vGMapLangCode;
        $direction_data = getPathInfoBetweenLocations($requestDataArr);
        $distance = $direction_data['distance'] / 1000;
        // echo "<pre>"; print_r($iLocationIdArr); exit();
        $checkAllLocation = 1;
        if (count($iLocationIdArr) > 0) {
            // $sql = "SELECT * FROM `delivery_charges` WHERE iLocationId = '" . $iLocationId . "' AND eStatus='Active'";
            $iLocationId = implode(',', $iLocationIdArr);
            //Added By HJ On 20-07-2020 For Optimize delivery_charges Table Query Start
            $deliveryLocationArr = array();
            if (isset($orderDetailsArr['delivery_charges'])) {
                $getDeliveryCharges = $orderDetailsArr['delivery_charges'];
            } else {
                $getDeliveryCharges = $obj->MySQLSelect("SELECT * FROM delivery_charges WHERE eStatus =  'Active' GROUP BY iLocationId ORDER BY iDeliveyChargeId DESC");
                if ($MODULES_OBJ->isEnableDistanceWiseDeliveryChargeOrder()) {
                    $getDeliveryCharges = $obj->MySQLSelect("SELECT * FROM `delivery_charges` WHERE eStatus='Active' AND $distance >= iDistanceRangeFrom AND $distance <= iDistanceRangeTo ORDER BY iDeliveyChargeId DESC");
                }
                $orderDetailsArr['delivery_charges'] = $getDeliveryCharges;
            }
            for ($l = 0; $l < count($getDeliveryCharges); $l++) {
                $deliveryLocationArr[$getDeliveryCharges[$l]['iLocationId']] = $getDeliveryCharges[$l];
            }
            // echo "<pre>";print_r($deliveryLocationArr);die;
            $data_location = array();
            for ($d = 0; $d < count($iLocationIdArr); $d++) {
                if (isset($deliveryLocationArr[$iLocationIdArr[$d]])) {
                    $data_location[] = $deliveryLocationArr[$iLocationIdArr[$d]];
                }
            }
            //Added By HJ On 20-07-2020 For Optimize delivery_charges Table Query End
            //$data_location = $obj->MySQLSelect("SELECT * FROM `delivery_charges` WHERE iLocationId IN (" . $iLocationId . ") AND eStatus='Active' ORDER BY iDeliveyChargeId DESC");
            if ($MODULES_OBJ->isEnableDistanceWiseDeliveryChargeOrder()) {
                $data_location = $obj->MySQLSelect("SELECT * FROM `delivery_charges` WHERE iLocationId IN (" . $iLocationId . ") AND eStatus='Active' AND $distance >= iDistanceRangeFrom AND $distance <= iDistanceRangeTo ORDER BY iDeliveyChargeId DESC");
            }
            // echo "<pre>";print_r($data_location);die;
            if (count($data_location) > 0) {
                $checkAllLocation = 0;
            }
        }
        if ($checkAllLocation == 1) {
            //Added By HJ On 20-07-2020 For Optimize delivery_charges Table Query Start
            $data_location = array();
            if (isset($deliveryLocationArr[0])) {
                $data_location[] = $deliveryLocationArr[0];
            } else {
                $data_location = $obj->MySQLSelect("SELECT * FROM `delivery_charges` WHERE iLocationId = '0' AND eStatus='Active' GROUP BY iLocationId");
                if ($MODULES_OBJ->isEnableDistanceWiseDeliveryChargeOrder()) {
                    $data_location = $obj->MySQLSelect("SELECT * FROM `delivery_charges` WHERE iLocationId = '0' AND eStatus='Active' AND $distance >= iDistanceRangeFrom AND $distance <= iDistanceRangeTo ORDER BY iDeliveyChargeId DESC");
                }
            }
            //echo "<pre>";print_r($data_location);//die;
            //Added By HJ On 20-07-2020 For Optimize delivery_charges Table Query End
        }
        if (count($data_location) > 0) {
            if ($buyanyservice == "Yes") {
                $fDeliveryChargeCancelled = $data_location[0]['fDeliveryChargeBuyAnyServiceCancelledOrder'];
                $query1 = "UPDATE orders SET fDeliveryChargeCancelled = " . $fDeliveryChargeCancelled . " WHERE iOrderId = '" . $iOrderId . "'";
                $obj->sql_query($query1);
                $fDeliveryCharge = $data_location[0]['fDeliveryChargeBuyAnyService'];
                return $fDeliveryCharge;
            }
            $iFreeDeliveryRadius = $data_location[0]['iFreeDeliveryRadius'];
            if ($distance < $iFreeDeliveryRadius && $iFreeDeliveryRadius >= 0 && !empty($iFreeDeliveryRadius)) { //when zero for free order and radius then do not allow free order
                $fDeliveryCharge = 0;
                return $fDeliveryCharge;
            }
            $fFreeOrderPriceSubtotal = $data_location[0]['fFreeOrderPriceSubtotal'];
            if ($fSubTotal > $fFreeOrderPriceSubtotal && $fFreeOrderPriceSubtotal != 0 && !empty($fFreeOrderPriceSubtotal)) { //when zero for free order and radius then do not allow free order
                $fDeliveryCharge = 0;
                return $fDeliveryCharge;
            }
            $fOrderPriceValue = $data_location[0]['fOrderPriceValue'];
            $fDeliveryChargeAbove = $data_location[0]['fDeliveryChargeAbove'];
            $fDeliveryChargeBelow = $data_location[0]['fDeliveryChargeBelow'];
            if ($fSubTotal >= $fOrderPriceValue) {
                $fDeliveryCharge = $fDeliveryChargeAbove;
                //$fDeliveryCharge = $fDeliveryChargeBelow;
                return $fDeliveryCharge;
            } else {
                $fDeliveryCharge = $fDeliveryChargeBelow;
                //$fDeliveryCharge = $fDeliveryChargeAbove;
                return $fDeliveryCharge;
            }
        } else {
            $fDeliveryCharge = 0;
            return $fDeliveryCharge;
        }
    }
}

function getOrderDistanceWiseDeliveryCharge($iOrderId)
{
    global $obj, $tconfig, $orderDetailsArr, $MODULES_OBJ;
    $customDeliveryCharges['fTotalDeliveryCharge'] = 0;
    $customDeliveryCharges['fDeliveryCharge'] = 0;
    $customDeliveryCharges['fDeliveryChargeUser'] = 0;
    $customDeliveryCharges['customDeliveryChargeDetails'] = "";
    $sql = "SELECT ord.iUserId,ord.iCompanyId,ua.vLatitude as passengerlat,ua.vLongitude as passengerlong,co.vRestuarantLocationLat as restaurantlat,co.vRestuarantLocationLong as restaurantlong,ord.eTakeaway FROM orders as ord LEFT JOIN user_address as ua ON ord.iUserAddressId=ua.iUserAddressId LEFT JOIN company as co ON ord.iCompanyId=co.iCompanyId WHERE ord.iOrderId = '" . $iOrderId . "'";
    $data = $obj->MySQLSelect($sql);
    if (count($data) > 0) {
        $User_Address_Array = array($data[0]['passengerlat'], $data[0]['passengerlong']);
        $iLocationIdArr = GetUserGeoLocationId($User_Address_Array);
        $checkAllLocation = 1;
        if (count($iLocationIdArr) > 0) {
            $iLocationId = implode(',', $iLocationIdArr);
            //Added By HJ On 20-07-2020 For Optimize delivery_charges Table Query Start
            $deliveryLocationArr = $data_location = array();
            if (isset($orderDetailsArr['delivery_charges'])) {
                $getDeliveryCharges = $orderDetailsArr['delivery_charges'];
            } else {
                $getDeliveryCharges = $obj->MySQLSelect("SELECT * FROM delivery_charges WHERE eStatus =  'Active' ORDER BY iDeliveyChargeId DESC");
                $orderDetailsArr['delivery_charges'] = $getDeliveryCharges;
            }
            for ($l = 0; $l < count($getDeliveryCharges); $l++) {
                $deliveryLocationArr[$getDeliveryCharges[$l]['iLocationId']] = $getDeliveryCharges[$l];
            }
            //echo "<pre>";print_r($deliveryLocationArr);die;
            $data_location = array();
            for ($d = 0; $d < count($iLocationIdArr); $d++) {
                if (isset($deliveryLocationArr[$iLocationIdArr[$d]])) {
                    $data_location[] = $deliveryLocationArr[$iLocationIdArr[$d]];
                }
            }
            //echo "<pre>";print_r($data_location);die;
            //Added By HJ On 20-07-2020 For Optimize delivery_charges Table Query End
            //$data_location = $obj->MySQLSelect("SELECT * FROM `delivery_charges` WHERE iLocationId IN ($iLocationId) AND eStatus='Active' ORDER BY iDeliveyChargeId DESC");
            if (count($data_location) > 0) {
                $checkAllLocation = 0;
            }
        }
        if ($checkAllLocation == 1) {
            //Added By HJ On 20-07-2020 For Optimize delivery_charges Table Query Start
            $data_location = array();
            if (isset($deliveryLocationArr[0])) {
                $data_location = $deliveryLocationArr[0];
            } else {
                $data_location = $obj->MySQLSelect("SELECT * FROM `delivery_charges` WHERE iLocationId = '0' AND eStatus='Active'");
            }
            //Added By HJ On 20-07-2020 For Optimize delivery_charges Table Query End
        }
        if ($MODULES_OBJ->isEnableDistanceWiseDeliveryChargeOrder()) {
            // $distance = distanceByLocation($data[0]['passengerlat'], $data[0]['passengerlong'], $data[0]['restaurantlat'], $data[0]['restaurantlong'], "K");
            $vLangCodeData = get_value('language_master', 'vCode, vGMapLangCode', 'eDefault', 'Yes');
            $vGMapLangCode = $vLangCodeData[0]['vGMapLangCode'];
            $requestDataArr = array();
            $requestDataArr['SOURCE_LATITUDE'] = $data[0]['restaurantlat'];
            $requestDataArr['SOURCE_LONGITUDE'] = $data[0]['restaurantlong'];
            $requestDataArr['DEST_LATITUDE'] = $data[0]['passengerlat'];
            $requestDataArr['DEST_LONGITUDE'] = $data[0]['passengerlong'];
            $requestDataArr['LANGUAGE_CODE'] = $vGMapLangCode;
            $direction_data = getPathInfoBetweenLocations($requestDataArr);
            $distance = $direction_data['distance'] / 1000;
            $cdcSql = "SELECT * FROM custom_delivery_charges_order WHERE $distance >= iDistanceRangeFrom AND $distance <= iDistanceRangeTo";
            $cdcData = $obj->MySQLSelect($cdcSql);
            if (count($cdcData) > 0) {
                $customDeliveryCharges['fDeliveryCharge'] = $cdcData[0]['fDeliveryCharge'];
                $customDeliveryCharges['fDeliveryChargeUser'] = $cdcData[0]['fDeliveryChargeUser'];
                $customDeliveryCharges['customDeliveryChargeDetails'] = json_encode($cdcData);
                $customDeliveryCharges['fTotalDeliveryCharge'] = $cdcData[0]['fDeliveryCharge'];
            }
        }
        /* Custom Delivery Charges End */
        return $customDeliveryCharges;
    }
}

function calculateOrderFare($iOrderId)
{
    global $MODULES_OBJ, $WALLET_OBJ, $obj, $ADMIN_COMMISSION, $SYSTEM_PAYMENT_FLOW, $eWalletIgnore, $TIP_AMOUNT_1, $TIP_AMOUNT_2, $TIP_AMOUNT_3, $DELIVERY_TIP_AMOUNT_TYPE_DELIVERALL, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $currencyAssociateArr;
    //Added By HJ On 20-07-2020 For Optimization currency Table Query Start
    if (!empty($vSystemDefaultCurrencyName)) {
        $defaultCurrency = $vSystemDefaultCurrencyName;
    } else {
        $defaultCurrency = get_value('currency', 'vName', 'eDefault', 'Yes', '', 'true');
    }
    //Added By HJ On 20-07-2020 For Optimization currency Table Query End
    //Added By HJ On 20-07-2020 For Optimize Order Table Query Start
    if (isset($orderDetailsArr['orders_' . $iOrderId])) {
        $data_order = $orderDetailsArr['orders_' . $iOrderId];
    } else {
        $data_order = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");
        $orderDetailsArr['orders_' . $iOrderId] = $data_order;
    }
    //Added By HJ On 20-07-2020 For Optimize Order Table Query End
    $couponCode = $data_order[0]['vCouponCode'];
    $iCompanyId = $data_order[0]['iCompanyId'];
    $iUserId = $data_order[0]['iUserId'];
    $iTripId = "";
    if (isset($data_order[0]['iTripId'])) {
        $iTripId = $data_order[0]['iTripId'];
    }
    $iStatusCode = $data_order[0]['iStatusCode'];
    $ePaymentOption = $data_order[0]['ePaymentOption'];
    //Added By HJ On 20-07-2020 For Optimize company Table Query Start
    if (isset($userDetailsArr['company_' . $iCompanyId])) {
        $data_company_detail = $userDetailsArr['company_' . $iCompanyId];
    } else {
        $data_company_detail = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId='" . $iCompanyId . "'");
        $userDetailsArr['company_' . $iCompanyId] = $data_company_detail;
    }
    $fPackingCharge = $data_company_detail[0]['fPackingCharge'];
    //Added By HJ On 20-07-2020 For Optimize company Table Query Start
    $fSubTotal = getOrderDetailTotalPrice($iOrderId);
    $fOffersDiscount = CalculateOrderDiscountPrice($iOrderId);
    $fDeliveryCharge = getOrderDeliveryCharge($iOrderId, $fSubTotal);
    $fCustomDeliveryCharge = getOrderDistanceWiseDeliveryCharge($iOrderId);
    $fDeliveryCharge = $fDeliveryCharge + $fCustomDeliveryCharge['fDeliveryChargeUser'];
    if ($data_order[0]['eTakeaway'] == 'Yes' || $data_order[0]['eOrderplaced_by'] == 'Kiosk') {
        $fDeliveryCharge = 0;
    }
    $TaxArr = getMemberCountryTax($iUserId, "Passenger");
    if ($data_order[0]['eOrderplaced_by'] == "Kiosk") {
        $TaxArr = getMemberCountryTax($iCompanyId, "Company");
    }
    $fTax = $TaxArr['fTax1'];
    if ($fTax > 0) {
        $ftaxamount = $fSubTotal - $fOffersDiscount + $fPackingCharge;
        $fTax = round((($ftaxamount * $fTax) / 100), 2);
    }
    if ($fSubTotal == 0 && !$MODULES_OBJ->isEnableAnywhereDeliveryFeature()) {
        $fPackingCharge = $fDeliveryCharge = $fTax = 0;
    }

    if (strtoupper(ENABLE_TAX_IN_GENIE) == "YES" && $MODULES_OBJ->isEnableAnywhereDeliveryFeature()) {
        $fTax1 = $TaxArr['fTax1'];
        $fTax = round((($fDeliveryCharge * $fTax1) / 100), 2);
    }


    $tbl_name = "register_user";
    $currencycode = "vCurrencyPassenger";
    //Added By HJ On 20-07-2020 For Optimize register_user Table Query Start
    if (isset($userDetailsArr[$tbl_name . '_' . $iUserId])) {
        $user_detail = $userDetailsArr[$tbl_name . '_' . $iUserId];
    } else {
        $user_detail = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM " . $tbl_name . " WHERE iUserId='" . $iUserId . "'");
        $userDetailsArr[$tbl_name . '_' . $iUserId] = $user_detail;
    }
    //Added By HJ On 20-07-2020 For Optimize register_user Table Query Start
    //Added By HJ On 20-07-2020 For Optimize currency Table Query Start
    $vCurrencyPassenger = $user_detail[0][$currencycode];
    if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
        $userCurrencyData = array();
        $userCurrencyData[] = $currencyAssociateArr[$vCurrencyPassenger];
    } else {
        $userCurrencyData = $obj->MySQLSelect("SELECT * FROM currency WHERE vName = '" . $user_detail[0][$currencycode] . "'");
    }
    if ($data_order[0]['eOrderplaced_by'] == "Kiosk") {
        $userCurrencyData = $obj->MySQLSelect("SELECT * FROM currency WHERE vName = '" . $data_company_detail[0]['vCurrencyCompany'] . "'");
    }
    //Added By HJ On 20-07-2020 For Optimize currency Table Query End
    //Added By HJ On 20-07-2020 For Optimization currency Table Query Start
    if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
        $DefaultCurrencyData = array();
        $DefaultCurrencyData[0]['vName'] = $vSystemDefaultCurrencyName;
        $DefaultCurrencyData[0]['vSymbol'] = $vSystemDefaultCurrencySymbol;
        $DefaultCurrencyData[0]['Ratio'] = $vSystemDefaultCurrencyRatio;
    } else {
        $DefaultCurrencyData = $obj->MySQLSelect("SELECT * FROM currency WHERE eDefault = 'Yes'");
    }
    //Added By HJ On 20-07-2020 For Optimization currency Table Query End
    $fTipAmount = 0;
    if ($DELIVERY_TIP_AMOUNT_TYPE_DELIVERALL == "Percentage" && isset($_REQUEST['selectedTipPos'])) {
        if ($_REQUEST['selectedTipPos'] == 1) {
            $fTipAmount = ($TIP_AMOUNT_1 / 100) * ($fSubTotal - $fOffersDiscount);
        } else if ($_REQUEST['selectedTipPos'] == 2) {
            $fTipAmount = ($TIP_AMOUNT_2 / 100) * ($fSubTotal - $fOffersDiscount);
        } else if ($_REQUEST['selectedTipPos'] == 3) {
            $fTipAmount = ($TIP_AMOUNT_3 / 100) * ($fSubTotal - $fOffersDiscount);
        } else if ($_REQUEST['selectedTipPos'] == 4) {
            $fTipAmount = $_REQUEST['fTipAmount'];
            $fTipAmount = $fTipAmount / $userCurrencyData[0]['Ratio'];
            $fTipAmount = $fTipAmount * $DefaultCurrencyData[0]['Ratio'];
        }
    } else {
        $fTipAmount = (isset($_REQUEST['fTipAmount']) && !empty($_REQUEST['fTipAmount'])) ? $_REQUEST['fTipAmount'] : 0;
        $fTipAmount = $fTipAmount / $userCurrencyData[0]['Ratio'];
        $fTipAmount = $fTipAmount * $DefaultCurrencyData[0]['Ratio'];
    }
    $fNetTotal = $fSubTotal + $fPackingCharge + $fDeliveryCharge + $fTax;
    $fTotalGenerateFare = $fNetTotal;
    $fOrderFare_For_Commission = $fSubTotal - $fOffersDiscount + $fPackingCharge + $fTax;
    $fCommision = round((($fOrderFare_For_Commission * $ADMIN_COMMISSION) / 100), 2);
    if ($MODULES_OBJ->isEnableStoreWiseCommission()) {
        $storeCommission = $data_company_detail[0]['fCommission'];
        //Added by HV on 25-02-2021 if Store commission not set and is not zero then apply ADMIN_COMMISSION
        if (empty($storeCommission) && !is_numeric($storeCommission)) {
            $storeCommission = $ADMIN_COMMISSION;
        }
        $fCommision = round((($fOrderFare_For_Commission * $storeCommission) / 100), 2);
    }
    if ($fOffersDiscount > 0) {
        $fNetTotal = $fNetTotal - $fOffersDiscount;
    }
    /* Check Coupon Code For Count Total Fare Start */
    $discountValue = 0;
    $discountValueType = "cash";
    $discountApplied = "No";
    $iUserAddressId = $data_order[0]['iUserAddressId'];
    $userAddressData = $obj->MySQLSelect("SELECT * FROM user_address WHERE iUserAddressId = '$iUserAddressId'");
    $userAddressLatitude = $userAddressData[0]['vLatitude'];
    $userAddressLongitude = $userAddressData[0]['vLongitude'];
    $db_companydata = $obj->MySQLSelect("SELECT vRestuarantLocationLat, vRestuarantLocationLong FROM company WHERE iCompanyId = '$iCompanyId'");
    $User_Address_Array = array($userAddressLatitude, $userAddressLongitude);
    $Rest_Address_Array = array($db_companydata[0]['vRestuarantLocationLat'], $db_companydata[0]['vRestuarantLocationLong']);
    $iLocationIdUser = GetUserGeoLocationIdPromoCode($User_Address_Array);
    $iLocationIdRest = GetUserGeoLocationIdPromoCode($Rest_Address_Array);
    if ($couponCode != '') {
        //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data Start
        $getCouponCode = $obj->MySQLSelect("SELECT fDiscount,eType,eStoreType,iCompanyId,eFreeDelivery,iLocationId FROM coupon WHERE vCouponCode='" . $couponCode . "' AND eStatus='Active'");
        if (count($getCouponCode) > 0) {
            $discountValue = $getCouponCode[0]['fDiscount'];
            $discountValueType = $getCouponCode[0]['eType'];
            if ($MODULES_OBJ->isEnableFreeDeliveryOrStoreSpecificPromoCode() && !empty($getCouponCode[0]['eStoreType'])) {
                if ($data_order[0]['eTakeaway'] == 'No') {
                    if ($getCouponCode[0]['eStoreType'] == "All") {
                        if ($getCouponCode[0]['eFreeDelivery'] == "Yes") {
                            $fNetTotal = $fNetTotal - $fDeliveryCharge;
                            $fDeliveryCharge = 0;
                        }
                        $discountValue = $getCouponCode[0]['fDiscount'];
                        $discountValueType = $getCouponCode[0]['eType'];
                        $discountApplied = "Yes";
                    } else {
                        if ($getCouponCode[0]['iCompanyId'] == $iCompanyId) {
                            if ($getCouponCode[0]['eFreeDelivery'] == "Yes") {
                                $fNetTotal = $fNetTotal - $fDeliveryCharge;
                                $fDeliveryCharge = 0;
                            }
                            $discountValue = $getCouponCode[0]['fDiscount'];
                            $discountValueType = $getCouponCode[0]['eType'];
                            $discountApplied = "Yes";
                        }
                    }
                }
                if ($MODULES_OBJ->isEnableLocationWisePromoCode() && $getCouponCode[0]['iLocationId'] > 0) {
                    $discountApplied = "Yes";
                    if ($data_order[0]['eTakeaway'] == 'No') {
                        if (in_array($getCouponCode[0]['iLocationId'], $iLocationIdUser) && in_array($getCouponCode[0]['iLocationId'], $iLocationIdRest)) {
                            $discountValue = $getCouponCode[0]['fDiscount'];
                            $discountValueType = $getCouponCode[0]['eType'];
                        } else {
                            $discountValue = 0;
                            $discountValueType = "cash";
                        }
                    } else {
                        if (in_array($getCouponCode[0]['iLocationId'], $iLocationIdRest)) {
                            $discountValue = $getCouponCode[0]['fDiscount'];
                            $discountValueType = $getCouponCode[0]['eType'];
                        } else {
                            $discountValue = 0;
                            $discountValueType = "cash";
                        }
                    }
                }
            }
            if ($MODULES_OBJ->isEnableLocationWisePromoCode() && $getCouponCode[0]['iLocationId'] > 0 && $discountApplied == "No") {
                if (in_array($getCouponCode[0]['iLocationId'], $iLocationIdUser) && in_array($getCouponCode[0]['iLocationId'], $iLocationIdRest)) {
                    $discountValue = $getCouponCode[0]['fDiscount'];
                    $discountValueType = $getCouponCode[0]['eType'];
                    $discountApplied = "Yes";
                }
            }
            if (!($MODULES_OBJ->isEnableFreeDeliveryOrStoreSpecificPromoCode() && $MODULES_OBJ->isEnableLocationWisePromoCode())) {
                $discountValue = $getCouponCode[0]['fDiscount'];
                $discountValueType = $getCouponCode[0]['eType'];
            }
        }
        //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data End
        //$discountValue = get_value('coupon', 'fDiscount', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
        //$discountValueType = get_value('coupon', 'eType', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
    }
    if ($couponCode != '' && $discountValue != 0) {
        if ($discountValueType == "percentage") {
            $discountApplyOn = $fNetTotal - ($fDeliveryCharge + $fTax); // Added By sunita On 25-01-2020 As Per Discuss With chirag sir // Tax Minus From Coupon Code As Per Discuss With CD sir and KS Sir On 31-01-2020
            $vDiscount = round($discountValue, 1) . ' ' . "%";
            $discountValue = round(($discountApplyOn * $discountValue), 1) / 100;
        } else {
            //Added By HJ On 20-07-2020 For Optimization currency Table Query Start
            if (!empty($vSystemDefaultCurrencySymbol)) {
                $curr_sym = $vSystemDefaultCurrencySymbol;
            } else {
                $curr_sym = get_value('currency', 'vSymbol', 'eDefault', 'Yes', '', 'true');
            }
            //Added By HJ On 20-07-2020 For Optimization currency Table Query End
            if ($discountValue > $fNetTotal) {
                $vDiscount = round($fNetTotal, 1) . ' ' . $curr_sym;
            } else {
                $vDiscount = round($discountValue, 1) . ' ' . $curr_sym;
            }
        }
        $fNetTotal = $fNetTotal - $discountValue;
        if ($fNetTotal < 0) {
            $fNetTotal = 0;
            // $discountValue = $fNetTotal;
        }
        $Order_data[0]['fDiscount'] = $discountValue;
        $Order_data[0]['vDiscount'] = $vDiscount;
    }
    /* Checking For Passenger Outstanding Amount */
    $fOutStandingAmount = GetPassengerOutstandingAmount($iUserId);
    if ($data_order[0]['eOrderplaced_by'] == "Kiosk") {
        $fOutStandingAmount = 0;
    }
    if ($fOutStandingAmount > 0) {
        $fNetTotal += $fOutStandingAmount;
        $fTotalGenerateFare += $fOutStandingAmount;
    }
    /* Checking For Passenger Outstanding Amount */
    /* Check Coupon Code Total Fare  End */
    $fNetTotal = $fNetTotal + $fTipAmount;
    $fTotalGenerateFare = $fTotalGenerateFare + $fTipAmount;
    /* Check debit wallet For Count Total Fare  Start */
    $CheckUserWallet = $data_order[0]['eCheckUserWallet'];
    $user_wallet_debit_amount = 0;
    if ($ePaymentOption == "Cash" && $CheckUserWallet == "Yes" && $data_order[0]['eBuyAnyService'] == "No") {
        $user_available_balance = $WALLET_OBJ->FetchMemberWalletBalance($iUserId, "Rider");
        if ($fNetTotal > $user_available_balance) {
            $fNetTotal = $fNetTotal - $user_available_balance;
            $user_wallet_debit_amount = $user_available_balance;
        } else {
            $user_wallet_debit_amount = ($fNetTotal > 0) ? $fNetTotal : 0;
            $fNetTotal = 0;
        }
        // Update User Wallet
        if ($user_wallet_debit_amount > 0) {
            $vRideNo = $data_order[0]['vOrderNo'];
            $data_wallet['iUserId'] = $iUserId;
            $data_wallet['eUserType'] = "Rider";
            $data_wallet['iBalance'] = $user_wallet_debit_amount;
            $data_wallet['eType'] = "Debit";
            $data_wallet['dDate'] = date("Y-m-d H:i:s");
            $data_wallet['iTripId'] = $iTripId;
            $data_wallet['iOrderId'] = $iOrderId;
            $data_wallet['eFor'] = "Booking";
            $data_wallet['ePaymentStatus'] = "Unsettelled";
            $data_wallet['tDescription'] = "#LBL_DEBITED_BOOKING_DL#" . " " . $vRideNo;
 
            $WALLET_OBJ->PerformWalletTransaction($data_wallet['iUserId'], $data_wallet['eUserType'], $data_wallet['iBalance'], $data_wallet['eType'], $data_wallet['iTripId'], $data_wallet['eFor'], $data_wallet['tDescription'], $data_wallet['ePaymentStatus'], $data_wallet['dDate'], $iOrderId);
        }
    }
    /*     * ***** Checking wallet balance When method-2/method-3 ******* */
    // if (($SYSTEM_PAYMENT_FLOW == 'Method-2' || $SYSTEM_PAYMENT_FLOW == 'Method-3') && $ePaymentOption != 'Cash') {
    if ($ePaymentOption == 'Wallet') {
        $user_available_balance_wallet = $WALLET_OBJ->FetchMemberWalletBalance($iUserId, "Rider", true);
        //Added By Hj On 07-08-2019 For Check User Authorized Amount As Per Discuss with KS Sir Start
        if (is_array($user_available_balance_wallet)) {
            $walletDataArr = $user_available_balance_wallet;
            $user_available_balance_wallet = $walletDataArr['CurrentBalance'];
        }
        //Added By Hj On 07-08-2019 For Check User Authorized Amount As Per Discuss with KS Sir End
        $user_wallet_debit_amount = 0;
        if ($fNetTotal > $user_available_balance_wallet) {
            if ($eWalletIgnore == 'Yes') {
                $fNetTotal = $fNetTotal - $user_available_balance_wallet;
                $user_wallet_debit_amount = $user_available_balance_wallet;
                $Data_update_order_new['ePaymentOption'] = "Cash";
                $ePaymentOption = "Cash";
            }
        } else {
            $user_wallet_debit_amount = ($fNetTotal > 0) ? $fNetTotal : 0;
            $fNetTotal = 0;
        }
        // Update User Wallet
        if ($user_wallet_debit_amount > 0) {
            $vRideNo = $data_order[0]['vOrderNo'];
            $data_wallet['iUserId'] = $iUserId;
            $data_wallet['eUserType'] = "Rider";
            $data_wallet['iBalance'] = $user_wallet_debit_amount;
            $data_wallet['eType'] = "Debit";
            $data_wallet['dDate'] = date("Y-m-d H:i:s");
            $data_wallet['iTripId'] = $iTripId;
            $data_wallet['iOrderId'] = $iOrderId;
            $data_wallet['eFor'] = "Booking";
            $data_wallet['ePaymentStatus'] = "Unsettelled";
            $data_wallet['tDescription'] = "#LBL_DEBITED_BOOKING_DL#" . " " . $vRideNo;
            $WALLET_OBJ->PerformWalletTransaction($data_wallet['iUserId'], $data_wallet['eUserType'], $data_wallet['iBalance'], $data_wallet['eType'], $data_wallet['iTripId'], $data_wallet['eFor'], $data_wallet['tDescription'], $data_wallet['ePaymentStatus'], $data_wallet['dDate'], $iOrderId);
        }
        $where = " iOrderId = '" . $iOrderId . "'";
        $Data_update_order_new['iStatusCode'] = 1;
        $Order_Update_Id = $obj->MySQLQueryPerform("orders", $Data_update_order_new, 'update', $where);
        $OrderLogId = createOrderLog($iOrderId, $Data_update_order_new['iStatusCode']);
    }
    /*     * ***** Checking wallet balance When method-2/method-3 ******* */ /* Check debit wallet For Count Total Fare  End */
    /*--------------------- wallet and card payment   --------------------*/
    if ($ePaymentOption == 'Card') {
        $user_available_balance = $WALLET_OBJ->FetchMemberWalletBalance($iUserId, "Rider");
        if ($fNetTotal > $user_available_balance) {
            if ($CheckUserWallet == 'Yes') {
                $fNetTotal = $fNetTotal - $user_available_balance;
                $user_wallet_debit_amount = $user_available_balance;
            }
        } else {
            if ($CheckUserWallet == 'Yes') {
                $user_wallet_debit_amount = ($fNetTotal > 0) ? $fNetTotal : 0;
                $fNetTotal = 0;
            }
        }
    }
    /*--------------------- wallet and card payment   --------------------*/
    if ($fNetTotal < 0) {
        $fNetTotal = 0;
        $fTotalGenerateFare = 0;
    }
    $finalFareData['fSubTotal'] = $fSubTotal;
    $finalFareData['fOffersDiscount'] = $fOffersDiscount;
    $finalFareData['fPackingCharge'] = $fPackingCharge;
    $finalFareData['fDeliveryCharge'] = $fDeliveryCharge;
    $finalFareData['fCustomDeliveryCharge'] = $fCustomDeliveryCharge;
    $finalFareData['fTipAmount'] = $fTipAmount;
    $finalFareData['fTax'] = $fTax;
    $fDiscount = 0;
    $vDiscount = "";
    if (isset($Order_data[0]['fDiscount'])) {
        $fDiscount = $Order_data[0]['fDiscount'];
    }
    if (isset($Order_data[0]['vDiscount'])) {
        $vDiscount = $Order_data[0]['vDiscount']; //added by SP here changed from fDiscount to vDsiccount on 17-10-2019
    }
    $finalFareData['fDiscount'] = $fDiscount;
    $finalFareData['vDiscount'] = $vDiscount;
    $finalFareData['fCommision'] = $fCommision;
    $finalFareData['fNetTotal'] = $fNetTotal;
    $finalFareData['fTotalGenerateFare'] = $fTotalGenerateFare;
    $finalFareData['fOutStandingAmount'] = $fOutStandingAmount;
    $finalFareData['fWalletDebit'] = $user_wallet_debit_amount;
    $finalFareData['iStatusCode'] = $iStatusCode;
    $finalFareData['ePaymentOption'] = $ePaymentOption;
    return $finalFareData;
}

function GetOrderDetailsForReorder($iOrderDetailId, $iMemberId, $eUserType = "Passenger", $iCompanyId, $iServiceId = "")
{
    global $obj, $MODULES_OBJ, $tconfig;
    $returnArr = array();
    $ssql = "";
    if ($eUserType == "Passenger") {
        $UserDetailsArr = getUserCurrencyLanguageDetails($iMemberId);
    } else if ($eUserType == "Driver") {
        $UserDetailsArr = getDriverCurrencyLanguageDetails($iMemberId);
    } else {
        $UserDetailsArr = getCompanyCurrencyLanguageDetails($iMemberId);
    }
    $currencySymbol = $UserDetailsArr['currencySymbol'];
    $currencycode = $UserDetailsArr['currencycode'];
    $Ratio = $UserDetailsArr['Ratio'];
    $vLang = $UserDetailsArr['vLang'];
    $sql = "select od.*,mi.vItemType_" . $vLang . " as MenuItem,mi.vImage,mi.eFoodType, mi.vItemTypeBuyAnyService, mi.eBuyAnyService, mi.vSKU  from `order_details` as od LEFT JOIN  `menu_items` as mi ON od.iMenuItemId=mi.iMenuItemId where od.iOrderDetailId='" . $iOrderDetailId . "'";
    $data_order_detail = $obj->MySQLSelect($sql);
    $MenuItem = $data_order_detail[0]['MenuItem'];
    $iMenuItemId = $data_order_detail[0]['iMenuItemId'];
    // $fPrice = GetFoodMenuItemBasicPrice($data_order_detail[0]['iMenuItemId']);
    $fPrice = FoodMenuItemBasicPrice($data_order_detail[0]['iMenuItemId']);
    $eAvailable = $data_order_detail[0]['eAvailable'];
    $fPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $fPrice);
    $fPrice = $fPriceArr['fPrice'];
    $vsymbol = $fPriceArr['currencySymbol'];
    $fpriceCurrencyCode = $fPriceArr['currencycode'];
    $fPricewithoutsymbol = $fPriceArr['fPrice'];
    $fTotalprice = $fPricewithoutsymbol * $data_order_detail[0]['iQty'];
    $returnArr['iQty'] = $data_order_detail[0]['iQty'];
    $returnArr['MenuItem'] = $MenuItem;
    $returnArr['iMenuItemId'] = $data_order_detail[0]['iMenuItemId'];
    $returnArr['eFoodType'] = $data_order_detail[0]['eFoodType'];
    $returnArr['iFoodMenuId'] = $data_order_detail[0]['iFoodMenuId'];
    $returnArr['fPrice'] = $fPrice;
    $returnArr['vSKU'] = $MODULES_OBJ->isEnableRequireMenuItemSKU() ? $data_order_detail[0]['vSKU'] : "";
    //$returnArr['fTotPrice'] = $vsymbol . " " . $fTotalprice;
    $returnArr['fTotPrice'] = formateNumAsPerCurrency($fTotalprice, $fpriceCurrencyCode);
    //added by SP for offer amount
    //$StrikeoutPrice = setTwoDecimalPoint($MenuItemPriceArr['fOriginalPrice'] * $Ratio, 2);
    //$returnArr['fToppingStrikeoutPrice'] = $fPrice;
    //$returnArr['fToppingStrikeoutPricewithsymbol'] = $fPriceArr['fPricewithsymbol'];
    //$MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, $data_order_detail[0]['iQty'], '', "Display", "", "", $iServiceId);
    $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, 1, '', "Display", "", "", $iServiceId);
    $fOfferAmt = round($MenuItemPriceArr['fOfferAmt'], 2);
    $returnArr['fDiscountPrice'] = "";
    $returnArr['fDiscountPricewithsymbol'] = "";
    $returnArr['isShownDiscountPrice'] = "No";
    if ($fOfferAmt > 0) {
        $fDiscountPrice = ($MenuItemPriceArr['fPrice'] * $Ratio);
        //$fDiscountPrice = $fPrice - (($fPrice * $fOfferAmt) / 100);
        //$fDiscountPrice = $fDiscountPrice * $Ratio;
        if (!empty($fDiscountPrice)) {
            $returnArr['isShownDiscountPrice'] = "Yes";
            $fDiscountPrice = setTwoDecimalPoint($fDiscountPrice, 2);
            $returnArr['fDiscountPrice'] = $fDiscountPrice;
            $returnArr['fDiscountPricewithsymbol'] = $currencySymbol . " " . $fDiscountPrice;
        }
    }
    $returnArr['eAvailable'] = $eAvailable;
    $returnArr['iOrderDetailId'] = $iOrderDetailId;
    $returnArr['vImage'] = "";
    if ($data_order_detail[0]['vImage'] != "") {
        $returnArr['vImage'] = $tconfig["tsite_upload_images_menu_item"] . "/" . $data_order_detail[0]['vImage'];
    }
    $vOptionId = $data_order_detail[0]['vOptionId'];
    if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
        if ($vOptionId != "") {
            $OptionidArr = array();
            $OptionDetailArr = explode(",", $vOptionId);
            $OptionPrice_Total = 0;
            for ($i = 0; $i < count($OptionDetailArr); $i++) {
                $OptionStrArr = explode("#", $OptionDetailArr[$i]);
                $OptionId = $OptionStrArr[0];
                $OptionPrice = GetFoodMenuItemAddOnPrice($OptionId);
                $OptionPrice_Total = $OptionPrice_Total + $OptionPrice;
                $OptionPriceArr_Total = getPriceUserCurrency($iMemberId, $eUserType, $OptionPrice_Total);
                $OptionPrice_Total = $OptionPriceArr_Total['fPrice'];
                $OptionName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $OptionId, '', 'true');
                $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $OptionId, '', 'true');
                if (!empty($tOptionNameLang)) {
                    $tOptionNameLang = json_decode($tOptionNameLang, true);
                    if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                        $OptionName = $tOptionNameLang['tOptionNameLang_' . $vLang];
                    }
                }
                $OptionsArr[$i]['vOptionId'] = $OptionId;
                $OptionsArr[$i]['vOptionName'] = $OptionName;
                $OptionsArr[$i]['vOptionPrice'] = $OptionPrice_Total;
            }
            $returnArr['OptionsArr'] = $OptionsArr;
        } else {
            $returnArr['OptionsArr'] = array();
        }
    } else {
        if ($vOptionId != "") {
            $vOptionName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $vOptionId, '', 'true');
            $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $vOptionId, '', 'true');
            if (!empty($tOptionNameLang)) {
                $tOptionNameLang = json_decode(trim($tOptionNameLang, '"'), true);
                if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                    $vOptionName = $tOptionNameLang['tOptionNameLang_' . $vLang];
                }
            }
            $vOptionPrice = GetFoodMenuItemOptionPrice($vOptionId);
            $vOptionPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $vOptionPrice);
            $vOptionPrice = $vOptionPriceArr['fPrice'];
            $returnArr['vOptionId'] = $vOptionId;
            $returnArr['vOptionName'] = $vOptionName;
            $returnArr['vOptionPrice'] = $vOptionPrice;
        } else {
            $returnArr['vOptionId'] = "";
            $returnArr['vOptionName'] = "";
            $returnArr['vOptionPrice'] = "";
        }
    }
    $tAddOnIdOrigPrice = $data_order_detail[0]['tAddOnIdOrigPrice'];
    if ($tAddOnIdOrigPrice != "") {
        $AddonItemsArr = array();
        $AddonItemsDetailArr = explode(",", $tAddOnIdOrigPrice);
        $AddonItemPrice_Total = 0;
        for ($i = 0; $i < count($AddonItemsDetailArr); $i++) {
            $AddonItemsStrArr = explode("#", $AddonItemsDetailArr[$i]);
            $AddonItemsId = $AddonItemsStrArr[0];
            $AddonItemsPrice = GetFoodMenuItemAddOnPrice($AddonItemsId);
            $AddonItemPrice_Total = $AddonItemPrice_Total + $AddonItemsPrice;
            $AddonItemsPriceArr_Total = getPriceUserCurrency($iMemberId, $eUserType, $AddonItemPrice_Total);
            $AddonItemPrice_Total = $AddonItemsPriceArr_Total['fPrice'];
            $AddonItemName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $AddonItemsId, '', 'true');
            $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $AddonItemsId, '', 'true');
            if (!empty($tOptionNameLang)) {
                $tOptionNameLang = json_decode(trim($tOptionNameLang, '"'), true);
                if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                    $AddonItemName = $tOptionNameLang['tOptionNameLang_' . $vLang];
                }
            }
            $AddonItemsArr[$i]['vAddonId'] = $AddonItemsId;
            $AddonItemsArr[$i]['vAddOnItemName'] = $AddonItemName;
            $AddonItemsArr[$i]['AddonItemPrice'] = $AddonItemPrice_Total;
        }
        $returnArr['AddOnItemArr'] = $AddonItemsArr;
    } else {
        $returnArr['AddOnItemArr'] = array();
    }
    ## Get Menu Items Array ##
    $returnArr['menu_items'] = array();
    $sqlf = "SELECT iMenuItemId,iFoodMenuId,vItemType_" . $vLang . " as vItemType,vItemDesc_" . $vLang . " as vItemDesc,fPrice,eFoodType,fOfferAmt,vImage,iDisplayOrder FROM menu_items WHERE iMenuItemId = '" . $iMenuItemId . "'";
    $db_item_data = $obj->MySQLSelect($sqlf);
    if (count($db_item_data) > 0) {
        $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, 1, $iMemberId, "Display", "", "", $iServiceId);
        $fPrice = round($MenuItemPriceArr['fPrice'] * $Ratio, 2);
        $db_item_data[0]['fPrice'] = setTwoDecimalPoint($fPrice);
        $fOfferAmt = round($MenuItemPriceArr['fOfferAmt'], 2);
        $db_item_data[0]['fOfferAmt'] = $fOfferAmt;
        if ($fOfferAmt > 0) {
            $fDiscountPrice = round($MenuItemPriceArr['fPrice'] * $Ratio, 2);
            $StrikeoutPrice = round($MenuItemPriceArr['fOriginalPrice'] * $Ratio, 2);
            $db_item_data[0]['StrikeoutPrice'] = formateNumAsPerCurrency($StrikeoutPrice, $currencycode);
            $db_item_data[0]['fDiscountPrice'] = $fDiscountPrice;
            $db_item_data[0]['fDiscountPricewithsymbol'] = formateNumAsPerCurrency($fDiscountPrice, $currencycode);
            $db_item_data[0]['currencySymbol'] = $currencySymbol;
        } else {
            $db_item_data[0]['StrikeoutPrice'] = formateNumAsPerCurrency($fPrice, $currencycode);
            $db_item_data[0]['fDiscountPrice'] = $fPrice;
            $db_item_data[0]['fDiscountPricewithsymbol'] = formateNumAsPerCurrency($fPrice, $currencycode);
            $db_item_data[0]['currencySymbol'] = $currencySymbol;
        }
        if ($db_item_data[0]['vImage'] != "") {
            $db_item_data[0]['vImage'] = $tconfig["tsite_upload_images_menu_item"] . "/" . $db_item_data[0]['vImage'];
        }
        $iMenuItemId = $db_item_data[0]['iMenuItemId'];
        $MenuItemOptionToppingArr = GetMenuItemOptionsTopping($db_item_data[0]['iMenuItemId'], $currencySymbol, $Ratio, $vLang, $iServiceId, $iCompanyId);
        //$MenuItemOptionToppingArr = array();
        if (isset($MenuItemOptionToppingArr[$iMenuItemId])) {
            $MenuItemOptionToppingArr = $MenuItemOptionToppingArr[$iMenuItemId];
        }
        //echo "<pre>";print_r($MenuItemOptionToppingArr);die;
        $db_item_data[0]['MenuItemOptionToppingArr'] = $MenuItemOptionToppingArr;
        // echo "<pre>";print_r($MenuItemOptionToppingArr);exit;
        $returnArr['menu_items'] = $db_item_data[0];
    }
    ## Get Menu Items Array ##
    return $returnArr;
}

function GetUserGeoLocationId($Address_Array)
{
    global $obj, $orderDetailsArr;
    // $iLocationId = "0";
    $iLocationId = array();
    if (!empty($Address_Array)) {
        //Added By HJ On 15-07-2020 For Optimize location_master Table Query Start
        $allowed_data = array();
        if (isset($orderDetailsArr['location_master'])) {
            $locationMasterData = $orderDetailsArr['location_master'];
        } else {
            $locationMasterData = $obj->MySQLSelect("SELECT * FROM location_master WHERE eStatus =  'Active'");
            $orderDetailsArr['location_master'] = $locationMasterData;
        }
        //echo "<pre>";print_r($locationMasterData);die;
        for ($l = 0; $l < count($locationMasterData); $l++) {
            if (strtoupper($locationMasterData[$l]['eFor']) == "USERDELIVERYCHARGE") {
                $allowed_data[] = $locationMasterData[$l];
            }
        }
        //Added By HJ On 15-07-2020 For Optimize location_master Table Query End
        //$allowed_data = $obj->MySQLSelect("SELECT * FROM location_master WHERE eStatus='Active' AND eFor = 'UserDeliveryCharge'");
        if (!empty($allowed_data)) {
            $polygon = array();
            foreach ($allowed_data as $key => $val) {
                $latitude = explode(",", $val['tLatitude']);
                $longitude = explode(",", $val['tLongitude']);
                for ($x = 0; $x < count($latitude); $x++) {
                    if (!empty($latitude[$x]) || !empty($longitude[$x])) {
                        $polygon[$key][] = array($latitude[$x], $longitude[$x]);
                    }
                }
                // print_r($polygon[$key]);
                if ($polygon[$key]) {
                    $address = contains($Address_Array, $polygon[$key]) ? 'IN' : 'OUT';
                    if ($address == 'IN') {
                        $iLocationId[] = $val['iLocationId'];
                        // break;
                    }
                }
            }
        }
    }
    return $iLocationId;
}

function getOrderCostDetails($iOrderId, $eUserType = "Passenger", $IS_FROM_HISTORY = "No")
{
    global $MODULES_OBJ, $obj, $orderDetailsArr, $languageLabelDataArr, $LANG_OBJ;
    $OrderFareDetailsArr = $OrderFareDetailsArrNew = array();
    //$sql = "select * from orders where iOrderId='" . $iOrderId . "'";
    //$data_order = $obj->MySQLSelect($sql);
    //Added By HJ On 13-07-2020 For Optimize Order Table Query Start
    if (isset($orderDetailsArr['orders_' . $iOrderId])) {
        $data_order = $orderDetailsArr['orders_' . $iOrderId];
    } else {
        $data_order = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");
        $orderDetailsArr['orders_' . $iOrderId] = $data_order;
    }
    //Added By HJ On 13-07-2020 For Optimize Order Table Query End
    if ($eUserType == "Passenger") {
        $UserDetailsArr = getUserCurrencyLanguageDetails($data_order[0]['iUserId'], $iOrderId);
    } else if ($eUserType == "Driver") {
        $UserDetailsArr = getDriverCurrencyLanguageDetails($data_order[0]['iDriverId'], $iOrderId);
    } else {
        $UserDetailsArr = getCompanyCurrencyLanguageDetails($data_order[0]['iCompanyId'], $iOrderId);
    }
    $vSymbol = $UserDetailsArr['currencySymbol'];
    $currencycode = $UserDetailsArr['currencycode'];
    $priceRatio = $UserDetailsArr['Ratio'];
    $vLang = $UserDetailsArr['vLang'];
    $iServiceId = $data_order[0]['iServiceId'];
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query Start
    if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId])) {
        $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId];
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
        $languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId] = $languageLabelsArr;
    }
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query End
    $returnArr['subtotal'] = $data_order[0]['fSubTotal'] * $priceRatio;
    $returnArr['fOffersDiscount'] = $data_order[0]['fOffersDiscount'] * $priceRatio;
    $returnArr['fPackingCharge'] = $data_order[0]['fPackingCharge'] * $priceRatio;
    $returnArr['fDeliveryCharge'] = $data_order[0]['fDeliveryCharge'] * $priceRatio;
    $returnArr['fTax'] = $data_order[0]['fTax'] * $priceRatio;
    $returnArr['fTotalGenerateFare'] = $data_order[0]['fTotalGenerateFare'] * $priceRatio;
    $returnArr['fDiscount'] = $data_order[0]['fDiscount'] * $priceRatio;
    $returnArr['fCommision'] = $data_order[0]['fCommision'] * $priceRatio;
    $returnArr['fNetTotal'] = $data_order[0]['fNetTotal'] * $priceRatio;
    $returnArr['fWalletDebit'] = $data_order[0]['fWalletDebit'] * $priceRatio;
    $returnArr['fOutStandingAmount'] = $data_order[0]['fOutStandingAmount'] * $priceRatio;
    $returnArr['fDriverPaidAmount'] = $data_order[0]['fDriverPaidAmount'] * $priceRatio;
    $returnArr['fTipAmount'] = $data_order[0]['fTipAmount'] * $priceRatio;
    $subtotal = formatNum($returnArr['subtotal']);
    $fOffersDiscount = formatNum($returnArr['fOffersDiscount']);
    $fPackingCharge = formatNum($returnArr['fPackingCharge']);
    $fDeliveryCharge = formatNum($returnArr['fDeliveryCharge']);
    $fTax = formatNum($returnArr['fTax']);
    $fTotalGenerateFare = formatNum($returnArr['fTotalGenerateFare']);
    $fDiscount = formatNum($returnArr['fDiscount']);
    $fCommision = formatNum($returnArr['fCommision']);
    $fWalletDebit = formatNum($returnArr['fWalletDebit']);
    $fOutStandingAmount = formatNum($returnArr['fOutStandingAmount']);
    $fTipAmount = formatNum($returnArr['fTipAmount']);
    $returnArr['fNetTotal'] = $returnArr['fNetTotal'];
    $fNetTotal = formatNum($returnArr['fNetTotal']);
    $payment_str = "";
    $EarningAmount = $returnArr['fTotalGenerateFare'] - ($returnArr['fOffersDiscount'] + $returnArr['fDeliveryCharge'] + $returnArr['fCommision'] + $returnArr['fOutStandingAmount']) - $returnArr['fTipAmount'];
    $eBuyAnyService = $data_order[0]['eBuyAnyService'];
    if ($eBuyAnyService == "Yes") {
        $order_buy_anything = $obj->MySQLSelect("SELECT * FROM order_items_buy_anything WHERE iOrderId = '" . $iOrderId . "'");
        if (count($order_buy_anything) > 0) {
            $subtotal = 0;
            foreach ($order_buy_anything as $oItem) {
                if ($oItem['eConfirm'] == "Yes") {
                    $subtotal += $oItem['fItemPrice'];
                }
            }
            $data_order[0]['fSubTotal'] = $subtotal;
        }
        if ($data_order[0]['genieUserApproved'] == "No" && $data_order[0]['eCheckUserWallet'] == "Yes") {
            $fNetTotal = $data_order[0]['fDeliveryCharge'] + $data_order[0]['fTax'] + $data_order[0]['fOutStandingAmount'];
            $fNetTotal = $fNetTotal - $data_order[0]['fWalletDebit'];
            $returnArr['fNetTotal'] = $fNetTotal * $priceRatio;
            $fNetTotal = setTwoDecimalPoint($returnArr['fNetTotal']);
        } elseif ($data_order[0]['genieUserApproved'] == "Yes" && $data_order[0]['eCheckUserWallet'] == "Yes") {
            $fNetTotal = $data_order[0]['fTotalGenerateFare'] - $data_order[0]['fWalletDebit'];
            $returnArr['fNetTotal'] = $fNetTotal * $priceRatio;
            $fNetTotal = setTwoDecimalPoint($returnArr['fNetTotal']);
        } elseif ($data_order[0]['genieUserApproved'] == "No" && $data_order[0]['eCheckUserWallet'] == "No") {
            $fNetTotal = $data_order[0]['fDeliveryCharge'] + $data_order[0]['fTax'] + $data_order[0]['fOutStandingAmount'];
            $returnArr['fNetTotal'] = $fNetTotal * $priceRatio;
            $fNetTotal = formatNum($returnArr['fNetTotal']);
        }
    }
    $arrindex = $arrindexNew = 0;
    $type = "";
    if (isset($_REQUEST['type']) && $_REQUEST['type'] != "") {
        $type = $_REQUEST['type'];
    }
    if ($eUserType == "Driver") {
        $tripsql = "SELECT fDeliveryCharge,eDriverPaymentStatus FROM trips WHERE iOrderId='" . $iOrderId . "' ORDER BY iTripId DESC ";
        $DataTrips = $obj->MySQLSelect($tripsql);
        if ($data_order[0]['iStatusCode'] == '7' || $data_order[0]['iStatusCode'] == '8') {
            if ($DataTrips[0]['eDriverPaymentStatus'] == 'Settelled') {
                $fDeliveryChargeDriver = $returnArr['fDriverPaidAmount'];
            } else {
                $fDeliveryChargeDriver = $DataTrips[0]['fDeliveryCharge'];
            }
        } else {
            $fDeliveryChargeDriver = $DataTrips[0]['fDeliveryCharge'];
        }
        if ($data_order[0]['fTipAmount'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TIP_AMOUNT']] = formateNumAsPerCurrency($fTipAmount, $currencycode);
            $arrindex++;
        }
        if ($DataTrips[0]['eDriverPaymentStatus'] == 'Settelled') {
            $totalEarning = $fDeliveryChargeDriver + $data_order[0]['fTipAmount'];
        } else {
            $totalEarning = $fDeliveryChargeDriver + $data_order[0]['fTipAmount'];
        }
        if ($eBuyAnyService == "Yes" && $data_order[0]['ePaymentOption'] == "Card") {
            $totalEarning += $subtotal;
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_BILL_SUB_TOTAL']] = formateNumAsPerCurrency($subtotal * $priceRatio, $currencycode);
            $arrindex++;
            $subtotal = $subtotal * $priceRatio;
        } elseif ($eBuyAnyService == "Yes" && $data_order[0]['ePaymentOption'] == "Cash") {
            $subtotal = $subtotal * $priceRatio;
        }
        $returnArr['fDeliveryChargeDriver'] = $fDeliveryChargeDriver * $priceRatio;
        $fDeliveryChargesDriver = formatNum($returnArr['fDeliveryChargeDriver']);
        $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_DELIVERY_EARNING_APP']] = formateNumAsPerCurrency($fDeliveryChargesDriver, $currencycode);
        if ($data_order[0]['eBuyAnyService'] == "Yes") {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_DELIVERY_EARNING_APP']] = formateNumAsPerCurrency($fDeliveryChargesDriver + $fCommision, $currencycode);
            $arrindex++;
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_SITE_COMMISION']] = "-" . formateNumAsPerCurrency($fCommision, $currencycode);
            $arrindex++;
        } else {
            $arrindex++;
        }
        $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TOTAL_EARNINGS_FRONT']] = formateNumAsPerCurrency(($totalEarning * $priceRatio), $currencycode);
        $arrindex++;
        //added by SP for cubex design on 15-10-2019
        if ($data_order[0]['fSubTotal'] > 0) {
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_BILL_SUB_TOTAL']] = formateNumAsPerCurrency($subtotal, $currencycode);
            $arrindexNew++;
        }
        if ($data_order[0]['fOffersDiscount'] > 0) {
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_OFFERS_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fOffersDiscount, $currencycode);
            $arrindexNew++;
        }
        if ($data_order[0]['fPackingCharge'] > 0) {
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_PACKING_CHARGE']] = formateNumAsPerCurrency($fPackingCharge, $currencycode);
            $arrindexNew++;
        }
        if ($IS_FROM_HISTORY == "No") {
            if ($data_order[0]['fDeliveryCharge'] > 0) {
                $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_DELIVERY_CHARGES_TXT']] = formateNumAsPerCurrency($fDeliveryCharge, $currencycode);
                $arrindexNew++;
            }
        }
        if ($data_order[0]['fOutStandingAmount'] > 0 && $type == "GetOrderDetailsRestaurant") {
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = formateNumAsPerCurrency($fOutStandingAmount, $currencycode);
            $arrindexNew++;
        }
        if ($data_order[0]['fTax'] > 0) {
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_TOTAL_TAX_TXT']] = formateNumAsPerCurrency($fTax, $currencycode);
            $arrindexNew++;
        }
        if ($data_order[0]['fDiscount'] > 0) {
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fDiscount, $currencycode);
            $arrindexNew++;
        }
        if ($data_order[0]['fTipAmount'] > 0) {
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_TIP_AMOUNT']] = formateNumAsPerCurrency($fTipAmount, $currencycode);
            $arrindexNew++;
        }
        //added for rounding off currency
        $tripsql = "SELECT vCurrencyDriver,vCurrencyPassenger,fRoundingAmount,eRoundingType,eRoundingTypeDriver,fRoundingAmountDriver FROM trips WHERE iOrderId='" . $iOrderId . "'";
        $DataTrips = $obj->MySQLSelect($tripsql);
        $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver, cu.ratio FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $data_order[0]['iDriverId'] . "'";
        $currData = $obj->MySQLSelect($sqlp);
        $vCurrency = $currData[0]['vName'];
        $samecur = ($DataTrips[0]['vCurrencyDriver'] == $currData[0]['vCurrencyDriver'] && $DataTrips[0]['vCurrencyDriver'] == $DataTrips[0]['vCurrencyPassenger']) ? 1 : 0;
        if (isset($data_order[0]['fRoundingAmount']) && !empty($data_order[0]['fRoundingAmount']) && $data_order[0]['fRoundingAmount'] != 0 && $samecur == 1 && $currData[0]['eRoundingOffEnable'] == "Yes" && $MODULES_OBJ->isEnableRoundingMethod()) {
            $roundingOffTotal_fare_amountArr['method'] = $data_order[0]['eRoundingType'];
            $roundingOffTotal_fare_amountArr['differenceValue'] = $data_order[0]['fRoundingAmount'];
            $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($fNetTotal, $data_order[0]['fRoundingAmount'], $data_order[0]['eRoundingType']); ////start
            if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                $roundingMethod = "";
            } else {
                $roundingMethod = "-";
            }
            $fNetTotal = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
            $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode);
            $arrindexNew++;
        }
        // new for rounding data
        if ($DataTrips[0]['vCurrencyDriver'] == $currData[0]['vCurrencyDriver'] && $currData[0]['eRoundingOffEnable'] == "Yes" && $DataTrips[0]['vCurrencyDriver'] != $DataTrips[0]['vCurrencyPassenger'] && $MODULES_OBJ->isEnableRoundingMethod()) {
            if (isset($DataTrips[0]['fRoundingAmountDriver']) && !empty($DataTrips[0]['fRoundingAmountDriver']) && $DataTrips[0]['fRoundingAmountDriver'] != 0) {
                $roundingOffTotal_fare_amountArr['method'] = $DataTrips[0]['eRoundingTypeDriver'];
                $roundingOffTotal_fare_amountArr['differenceValue'] = $DataTrips[0]['fRoundingAmountDriver'];
                $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($fNetTotal, $DataTrips[0]['fRoundingAmountDriver'], $DataTrips[0]['eRoundingTypeDriver']); ////start
                if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                    $roundingMethod = "";
                } else {
                    $roundingMethod = "-";
                }
                $fNetTotal = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
                $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";
                $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode);
                $arrindexNew++;
            }
        }
        //added for rounding off currency
        if ($IS_FROM_HISTORY == "No") {
            // if($data_order[0]['fTotalGenerateFare'] > 0){
            // $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT']." ".$payment_str] = $vSymbol." ".$fTotalGenerateFare;
            if ($data_order[0]['fWalletDebit'] > 0) {
                $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "-" . formateNumAsPerCurrency($fWalletDebit, $currencycode);
                $arrindexNew++;
            }
            /*elseif ($data_order[0]['eBuyAnyService'] == "Yes" && $data_order[0]['eCheckUserWallet'] == "Yes") {

                $user_available_balance = $WALLET_OBJ->FetchMemberWalletBalance($data_order[0]['iUserId'], "Rider");



                $fNetTotal = $data_order[0]['fNetTotal'];

                if ($fNetTotal > $user_available_balance) {

                    $fNetTotal = $fNetTotal - $user_available_balance;

                    $user_wallet_debit_amount = $user_available_balance;

                } else {

                    $user_wallet_debit_amount = ($fNetTotal > 0) ? $fNetTotal : 0;

                    $fNetTotal = 0;

                }



                $fWalletDebit = setTwoDecimalPoint($fNetTotal * $priceRatio);

                $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "-" . formateNumAsPerCurrency($fWalletDebit,$currencycode);

                $arrindexNew++;

            }*/
            $OrderFareDetailsArrNew[$arrindexNew][$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT'] . " " . $payment_str] = formateNumAsPerCurrency($fNetTotal, $currencycode);
            $arrindexNew++;
            // }
        }
        //print_R($OrderFareDetailsArrNew); exit;
    } else if ($eUserType == "Company") {
        if ($data_order[0]['fSubTotal'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_BILL_SUB_TOTAL']] = formateNumAsPerCurrency($subtotal, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fOffersDiscount'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_OFFERS_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fOffersDiscount, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fPackingCharge'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_PACKING_CHARGE']] = formateNumAsPerCurrency($fPackingCharge, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fTax'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TOTAL_TAX_TXT']] = formateNumAsPerCurrency($fTax, $currencycode);
            $arrindex++;
        }
        if ($IS_FROM_HISTORY == "No") {
            // if($data_order[0]['fTotalGenerateFare'] > 0){
            // $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT']." ".$payment_str] = $vSymbol." ".$fTotalGenerateFare;
            $TotalDisplayAmount = $returnArr['subtotal'] - $returnArr['fOffersDiscount'] + $returnArr['fPackingCharge'] + $returnArr['fTax'];
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT'] . " " . $payment_str] = formateNumAsPerCurrency($TotalDisplayAmount, $currencycode);
            $arrindex++;
            // }
        } else {
            if ($data_order[0]['fCommision'] > 0) {
                $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_Commision']] = "-" . formateNumAsPerCurrency($fCommision, $currencycode);
                $arrindex++;
            }
            //added by SP on 08-09-2020 because solving mantis bugs 0013929 - wrong calculation
            $EarningAmount = $returnArr['fTotalGenerateFare'] - ($returnArr['fDeliveryCharge'] + $returnArr['fCommision'] + $returnArr['fOutStandingAmount'] + $returnArr['fOffersDiscount']) - $returnArr['fTipAmount'];
            if ($EarningAmount > 0) {
                $EarningAmount = formatNum($EarningAmount);
                if ($data_order[0]['iStatusCode'] == '7' || $data_order[0]['iStatusCode'] == '8') {
                    $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_EXPECTED_EARNING'] . " " . $payment_str] = formateNumAsPerCurrency($EarningAmount, $currencycode);
                } else {
                    $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_AMT_EARNED'] . " " . $payment_str] = formateNumAsPerCurrency($EarningAmount, $currencycode);
                }
                $arrindex++;
            }
        }
        /* if ($fNetTotal > 0) {

          $OrderFareDetailsArr[$arrindex]['SubTotal'] = $vSymbol.$fNetTotal;

          $arrindex++;

      } */
    } else {
        if ($eBuyAnyService == "Yes") {
            $subtotal = $subtotal * $priceRatio;
        }
        if ($data_order[0]['fSubTotal'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_BILL_SUB_TOTAL']] = formateNumAsPerCurrency($subtotal, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fOffersDiscount'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_OFFERS_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fOffersDiscount, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fPackingCharge'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_PACKING_CHARGE']] = formateNumAsPerCurrency($fPackingCharge, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fDeliveryCharge'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_DELIVERY_CHARGES_TXT']] = formateNumAsPerCurrency($fDeliveryCharge, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fOutStandingAmount'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = formateNumAsPerCurrency($fOutStandingAmount, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fTax'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TOTAL_TAX_TXT']] = formateNumAsPerCurrency($fTax, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fDiscount'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fDiscount, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fTipAmount'] > 0 && $data_order[0]['eTipIncludedAtOrderRequest'] == 'Yes') {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TIP_AMOUNT']] = formateNumAsPerCurrency($fTipAmount, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fWalletDebit'] > 0) {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "-" . formateNumAsPerCurrency($fWalletDebit, $currencycode);
            $arrindex++;
        }
        if ($data_order[0]['fTipAmount'] > 0 && $data_order[0]['eTipIncludedAtOrderRequest'] == 'No') {
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TIP_AMOUNT']] = formateNumAsPerCurrency($fTipAmount, $currencycode);
            $arrindex++;
        }
        //added by SP for rounding off currency wise on 19-11-2019 start
        $tripsql = "SELECT vCurrencyPassenger FROM trips WHERE iOrderId='" . $iOrderId . "' AND iActive != 'Canceled'";
        $DataTrips = $obj->MySQLSelect($tripsql);
        $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger, cu.ratio FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $data_order[0]['iUserId'] . "'";
        $currData = $obj->MySQLSelect($sqlp);
        // echo "<pre>"; print_r($currData); print_r($DataTrips); print_r($data_order);exit();
        $vCurrency = $currData[0]['vName'];
        //count($DataTrips) > 0 &&
        if (count($DataTrips) > 0 && isset($DataTrips[0]['vCurrencyPassenger']) && !empty($DataTrips[0]['vCurrencyPassenger'])) {
            $samecur = ($DataTrips[0]['vCurrencyPassenger'] == $currData[0]['vCurrencyPassenger']) ? 1 : 0;
        } else {
            $samecur = 1;
        }
        if (isset($data_order[0]['fRoundingAmount']) && !empty($data_order[0]['fRoundingAmount']) && $data_order[0]['fRoundingAmount'] != 0 && $samecur == 1 && $currData[0]['eRoundingOffEnable'] == "Yes" && $MODULES_OBJ->isEnableRoundingMethod()) {
            $roundingOffTotal_fare_amountArr['method'] = $data_order[0]['eRoundingType'];
            $roundingOffTotal_fare_amountArr['differenceValue'] = $data_order[0]['fRoundingAmount'];
            $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($fNetTotal, $data_order[0]['fRoundingAmount'], $data_order[0]['eRoundingType']); ////start
            // echo "<pre>"; print_r($fNetTotal);die;
            if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                $roundingMethod = "";
            } else {
                $roundingMethod = "-";
            }
            $fNetTotal = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
            $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode);
            $arrindex++;
        }
        //added by SP for rounding off currency wise on 19-11-2019 end
        if ($IS_FROM_HISTORY == "No") {
            // if($data_order[0]['fTotalGenerateFare'] > 0){
            // $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT']." ".$payment_str] = $vSymbol." ".$fTotalGenerateFare;
            $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT'] . " " . $payment_str] = formateNumAsPerCurrency($fNetTotal, $currencycode);
            $arrindex++;
            // }
        } else {
            if ($data_order[0]['fCommision'] > 0) {
                $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_Commision']] = "-" . formateNumAsPerCurrency($fCommision, $currencycode);
                $arrindex++;
            }
            if ($EarningAmount > 0) {
                $EarningAmount = formatNum($EarningAmount);
                $OrderFareDetailsArr[$arrindex][$languageLabelsArr['LBL_AMT_EARNED'] . " " . $payment_str] = formateNumAsPerCurrency($EarningAmount, $currencycode);
                $arrindex++;
            }
        }
        /* if ($fNetTotal > 0) {

          $OrderFareDetailsArr[$arrindex]['SubTotal'] = $vSymbol.$fNetTotal;

          $arrindex++;

      } */
    }
    $arr[0] = $OrderFareDetailsArr;
    $arr[1] = $OrderFareDetailsArrNew;
    $arr[2] = !empty($TotalDisplayAmount) ? formateNumAsPerCurrency($TotalDisplayAmount, $currencycode) : formateNumAsPerCurrency(0, $currencycode);
    return $arr;
}

function GetOrderDetails($iOrderId, $vTimeZone = 'Asia/Kolkata', $UserType = "Company", $IS_FROM_HISTORY = "No")
{
    global $obj, $WALLET_OBJ, $MODULES_OBJ, $tconfig, $userDetailsArr, $languageLabelDataArr, $userAddressDataArr, $serviceCatDataArr, $currencyAssociateArr, $LANG_OBJ;
    $returnArr = array();
    $sql = "SELECT o.iOrderId,o.vOrderNo,o.fNetTotal,o.iCompanyId,o.iServiceId,o.iDriverId,o.iUserId,o.tOrderRequestDate,o.iStatusCode,o.ePaid,o.ePaymentOption,o.iUserAddressId,concat(ru.vName,' ',ru.vLastName) as UserName,ru.vPhone,ru.vPhoneCode,o.vInstruction,o.fRoundingAmount,o.eRoundingType,o.fTipAmount,o.eBuyAnyService,o.eCheckUserWallet,o.fTotalGenerateFare,o.fOffersDiscount,o.fDiscount,o.fWalletDebit,o.eOrderplaced_by,o.vName,o.vLastName FROM orders as o LEFT JOIN register_user as ru on ru.iUserId = o.iUserId WHERE o.iOrderId = '" . $iOrderId . "'";
    $db_order = $obj->MySQLSelect($sql);
    if ($UserType == "Passenger") {
        $tableName = "register_user";
        $fieldName = "iUserId";
        //$lang = get_value("register_user",'vLang', 'iUserId',$db_order[0]['iUserId'],'','true');
    } else if ($UserType == "Driver") {
        $tableName = "register_driver";
        $fieldName = "iDriverId";
        //$lang = get_value("register_driver",'vLang', 'iDriverId',$db_order[0]['iDriverId'],'','true');
    } else if ($UserType == "Company") {
        $tableName = "company";
        $fieldName = "iCompanyId";
        //$lang = get_value("company",'vLang', 'iCompanyId',$db_order[0]['iCompanyId'],'','true');
    }
    //Added By HJ On 13-07-2020 For Optimization register_driver/user/company Table Query Start
    $lang = "";
    if (isset($db_order[0]['iCompanyId']) && $db_order[0]['iCompanyId'] > 0 && $tableName != "" && $UserType == "Company") {
        $memberId = $db_order[0]['iCompanyId'];
        if (isset($userDetailsArr[$tableName . "_" . $memberId])) {
            $memberData = $userDetailsArr[$tableName . "_" . $memberId];
        } else {
            $memberData = $obj->MySQLSelect("SELECT *,$fieldName AS iMemberId FROM " . $tableName . " WHERE $fieldName='" . $memberId . "' ");
            $userDetailsArr[$tableName . "_" . $memberId] = $memberData;
        }
        $lang = $memberData[0]['vLang'];
    } else {
        //added by SP this whole section because company data shown of above section so use this one.
        $memberId = $db_order[0][$fieldName];
        if (isset($userDetailsArr[$tableName . "_" . $memberId])) {
            $memberData = $userDetailsArr[$tableName . "_" . $memberId];
        } else {
            $memberData = $obj->MySQLSelect("SELECT *,$fieldName AS iMemberId FROM " . $tableName . " WHERE $fieldName='" . $memberId . "' ");
            $userDetailsArr[$tableName . "_" . $memberId] = $memberData;
        }
        $lang = $memberData[0]['vLang'];
    }
    if ($lang == "" || $lang == NULL) {
        //Added By HJ On 13-07-2020 For Optimize language_master Table Query Start
        $lang = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 13-07-2020 For Optimize language_master Table Query End
    }
    //Added By HJ On 13-07-2020 For Optimization register_driver/user/company Table Query End
    // echo "<pre>";print_r($db_order);exit;
    $ssql1 = "";
    if ($UserType == "Driver") {
        $query = "SELECT vImage,eImgSkip,iVehicleTypeId, vCurrencyDriver, vCurrencyPassenger, eRoundingTypeDriver,fRoundingAmountDriver FROM `trips` WHERE iOrderId = '" . $iOrderId . "'";
        $TripsData = $obj->MySQLSelect($query);
        $Vehiclefields = "iVehicleTypeId,vVehicleType";
        $VehicleTypeDataDriver = get_value('vehicle_type', $Vehiclefields, 'iVehicleTypeId', $TripsData[0]['iVehicleTypeId']);
        $ssql1 .= "AND eAvailable = 'Yes'";
    }
    //echo "<pre>";print_r($db_order);die;x
    $StatusDisplay = getOrderStatus($iOrderId, $lang);
    $eConfirm = checkOrderStatus($iOrderId, "2");
    $eDecline = checkOrderStatus($iOrderId, "9");
    //$query = "SELECT iOrderDetailId FROM order_details WHERE iOrderId = '" . $iOrderId . "' $ssql1";
    $orderDetailId = $obj->MySQLSelect("SELECT iOrderDetailId FROM order_details WHERE iOrderId = '" . $iOrderId . "' $ssql1");
    //Added By HJ On 13-07-2020 For Optimize service_categories Table Query Start
    $serviceCatArr = array();
    if (count($serviceCatDataArr) > 0) {
        $serviceData = $serviceCatDataArr;
    } else {
        $serviceData = $serviceCatDataArr = $obj->MySQLSelect("SELECT * FROM service_categories");
    }
    for ($h = 0; $h < count($serviceData); $h++) {
        $serviceCatArr[$serviceData[$h]['iServiceId']] = $serviceData[$h];
    }
    //echo "<pre>";print_r($serviceCatArr);die;
    //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
    //Added By HJ On 13-07-2020 For Optimize company Table Query Start
    $storeIdArr = $userAddressIdArr = array();
    for ($j = 0; $j < count($db_order); $j++) {
        $storeIdArr[] = $db_order[$j]['iCompanyId'];
        $userAddressIdArr[] = $db_order[$j]['iUserAddressId'];
    }
    if (count($storeIdArr) > 0) {
        $storeIdArr = array_unique($storeIdArr, SORT_REGULAR);
        $storeIds = implode(",", $storeIdArr);
        if (count($storeIdArr) > 1) {
            $companyData = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId IN ($storeIds)");
            for ($m = 0; $m < count($companyData); $m++) {
                $userDetailsArr['company_' . $companyData[$m]['iCompanyId']] = array();
                $userDetailsArr['company_' . $companyData[$m]['iCompanyId']][] = $companyData[$m];
            }
        } else {
            if (isset($userDetailsArr['company_' . $storeIds])) {
                $companyData = $userDetailsArr['company_' . $storeIds];
            } else {
                $companyData = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId='" . $storeIds . "'");
                $userDetailsArr['company_' . $storeIds] = $companyData;
            }
        }
        //echo "<pre>";print_r($userDetailsArr);die;
    }
    //Added By HJ On 13-07-2020 For Optimize company Table Query End
    //Added By HJ On 13-07-2020 For Optimize user_address Table Query Start
    if (count($userAddressIdArr) > 0) {
        $addressIdArr = array_unique($userAddressIdArr, SORT_REGULAR);
        $addressIds = implode(",", $addressIdArr);
        $addressData = $obj->MySQLSelect("SELECT * FROM user_address WHERE iUserAddressId IN ($addressIds)");
        for ($a = 0; $a < count($addressData); $a++) {
            $userAddressDataArr[$addressData[$a]['iUserAddressId']] = array();
            $userAddressDataArr[$addressData[$a]['iUserAddressId']][] = $addressData[$a];
        }
        //echo "<pre>";print_r($userAddressDataArr);die;
    }
    //Added By HJ On 13-07-2020 For Optimize user_address Table Query End
    //echo "<pre>";print_r($db_order);die;
    foreach ($db_order as $key => $value) {
        $ssql1 = $whereCond = $vUserImage = $vDriverImage = '';
        $userId = $value['iUserId'];
        $driverId = $value['iDriverId'];
        if ($UserType == "Passenger") {
            $iMemberId = $value['iUserId'];
            $UserDetailsArr = getUserCurrencyLanguageDetails($iMemberId, $iOrderId);
        } else if ($UserType == "Driver") {
            $iMemberId = $value['iDriverId'];
            $ssql1 .= "AND eAvailable = 'Yes'";
            $UserDetailsArr = getDriverCurrencyLanguageDetails($iMemberId, $iOrderId);
        } else {
            $iMemberId = $value['iCompanyId'];
            $UserDetailsArr = getCompanyCurrencyLanguageDetails($iMemberId, $iOrderId);
        }
        //echo "<pre>";print_r($UserDetailsArr);die;
        //Added By HJ On 28-12-2018 For Get User and Driver Image Name Start
        if ($userId > 0) {
            //Added By HJ On 13-07-2020 For Optimize register_user Table Query Start
            if (isset($userDetailsArr['register_user_' . $userId])) {
                $getUserImage = $userDetailsArr['register_user_' . $userId];
            } else {
                $getUserImage = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM register_user WHERE iUserId='" . $userId . "'");
                $userDetailsArr['register_user_' . $userId] = $getUserImage;
            }
            //Added By HJ On 13-07-2020 For Optimize register_user Table Query End
            /*echo "<pre>";print_r($getUserImage);die;

            $whereCond = "iUserId='" . $userId . "'";

            $tableName = "register_user";

            $fieldName = "vImgName AS vUserImage";

            $getUserImage = $obj->MySQLSelect("SELECT $fieldName FROM " . $tableName . " WHERE $whereCond");*/
            if (count($getUserImage) > 0) {
                $vUserImage = $getUserImage[0]['vImgName'];
            }
        }
        $returnArr[$key]['DriverName'] = "";
        if ($driverId > 0) {
            //Added By HJ On 13-07-2020 For Optimize register_driver Table Query Start
            if (isset($userDetailsArr['register_driver_' . $driverId])) {
                $getDriverImage = $userDetailsArr['register_driver_' . $driverId];
            } else {
                $getDriverImage = $obj->MySQLSelect("SELECT *,iDriverId as iMemberId FROM register_driver WHERE iDriverId='" . $driverId . "'");
                $userDetailsArr['register_driver_' . $driverId] = $getDriverImage;
            }
            //Added By HJ On 13-07-2020 For Optimize register_driver Table Query End
            ///echo "<pre>";print_r($getDriverImage);die;
            /*$whereCond = "iDriverId='" . $driverId . "'";

            $tableName = "register_driver";

            $fieldName = "vImage AS vDriverImage,vName,vLastName";

            $getDriverImage = $obj->MySQLSelect("SELECT $fieldName FROM " . $tableName . " WHERE $whereCond");*/
            if (count($getDriverImage) > 0) {
                $DriverName = $getDriverImage[0]['vName'] . " " . $getDriverImage[0]['vLastName'];
                $vDriverImage = $getDriverImage[0]['vImage'];
                $returnArr[$key]['DriverName'] = $DriverName;
            }
        }
        //Added By HJ On 28-12-2018 For Get User and Driver Image Name End
        //echo "<pre>";
        $vcurSymbol = $UserDetailsArr['currencySymbol'];
        $currencycode = $UserDetailsArr['currencycode'];
        $curpriceRatio = $UserDetailsArr['Ratio'];
        $vLangu = $UserDetailsArr['vLang'];
        $iServiceId = $db_order[0]['iServiceId'];
        //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query Start
        if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLangu . "_" . $iServiceId])) {
            $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLangu . "_" . $iServiceId];
        } else {
            $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLangu, "1", $iServiceId);
            $languageLabelDataArr['language_label_union_other_food_' . $vLangu . "_" . $iServiceId] = $languageLabelsArr;
        }
        //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query End
        //echo "<pre>";print_r($languageLabelsArr);die;
        $returnArr[$key]['iOrderId'] = $iOrderId;
        $returnArr[$key]['iServiceId'] = $value['iServiceId'];
        $returnArr[$key]['iUserId'] = $value['iUserId'];
        $returnArr[$key]['iCompanyId'] = $value['iCompanyId'];
        $returnArr[$key]['vOrderNo'] = $value['vOrderNo'];
        $returnArr[$key]['iStatusCode'] = $value['iStatusCode'];
        $returnArr[$key]['vUserImage'] = $vUserImage;
        $returnArr[$key]['vDriverImage'] = $vDriverImage;
        $returnArr[$key]['vInstruction'] = trim($value['vInstruction']);
        if ($StatusDisplay == 'Refunded') {
            $StatusDisplay = 'Cancelled';
        }
        //Added By HJ On 13-07-2020 For Optimize service_categories Table Query Start
        $ServiceCategoryData = array();
        if (isset($serviceCatArr[$value['iServiceId']])) {
            $ServiceCategoryData[] = $serviceCatArr[$value['iServiceId']];
        }
        //echo "<pre>";print_r($ServiceCategoryData);die;
        //$servFields = 'iServiceId,vServiceName_' . $vLangu . ' as vServiceName';
        //$ServiceCategoryData = get_value('service_categories', $servFields, 'iServiceId', $value['iServiceId']);
        //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
        if (!empty($ServiceCategoryData)) {
            if (!empty($ServiceCategoryData[0]['vServiceName_' . $vLangu])) {
                $returnArr[$key]['vServiceCategoryName'] = '';
            } else {
                $returnArr[$key]['vServiceCategoryName'] = $ServiceCategoryData[0]['vServiceName_' . $vLangu];
            }
        } else {
            $returnArr[$key]['vServiceCategoryName'] = '';
        }
        $returnArr[$key]['vStatus'] = $StatusDisplay;
        $returnArr[$key]['UserName'] = $value['UserName'];
        if ($value['eOrderplaced_by'] == "Kiosk") {
            $returnArr[$key]['UserName'] = $value['vName'];
        }
        $returnArr[$key]['UserPhone'] = '+' . $value['vPhoneCode'] . $value['vPhone'];
        $returnArr[$key]['ePaid'] = $value['ePaid'];
        $returnArr[$key]['ePaymentOption'] = $value['ePaymentOption'];
        $returnArr[$key]['eConfirm'] = $eConfirm;
        $returnArr[$key]['eDecline'] = $eDecline;
        $returnArr[$key]['vCompany'] = $returnArr[$key]['RestuarantPhone'] = $returnArr[$key]['vRestuarantLocation'] = $returnArr[$key]['vRestuarantImage'] = $returnArr[$key]['RestuarantLat'] = $returnArr[$key]['RestuarantLong'] = "";
        if (isset($value['iCompanyId']) && $value['iCompanyId'] > 0) {
            //$restFields = 'vCompany,vCaddress,vRestuarantLocation ,vPhone,vImage,vCode,vRestuarantLocationLat,vRestuarantLocationLong';
            //$CompanyData = get_value('company', $restFields, 'iCompanyId', $value['iCompanyId']);
            if (isset($userDetailsArr['company_' . $value['iCompanyId']])) {
                $CompanyData = $userDetailsArr['company_' . $value['iCompanyId']];
            } else {
                $CompanyData = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId='" . $value['iCompanyId'] . "'");
                $userDetailsArr['company_' . $value['iCompanyId']] = $CompanyData;
            }
            //echo "<pre>";print_r($CompanyData);die;
            $returnArr[$key]['vCompany'] = $CompanyData[0]['vCompany'];
            if ($UserType == 'Driver') {
                $returnArr[$key]['RestuarantLat'] = $CompanyData[0]['vRestuarantLocationLat'];
                $returnArr[$key]['RestuarantLong'] = $CompanyData[0]['vRestuarantLocationLong'];
                $returnArr[$key]['RestuarantPhone'] = '+' . $CompanyData[0]['vCode'] . $CompanyData[0]['vPhone'];
            }
            $returnArr[$key]['vRestuarantLocation'] = $CompanyData[0]['vCaddress'];
            $returnArr[$key]['vRestuarantImage'] = $CompanyData[0]['vImage'];
        }
        $UserAddressArr = FetchMemberAddressData($value['iUserId'], "Passenger", $value['iUserAddressId']);
        $returnArr[$key]['DeliveryAddress'] = $UserAddressArr['UserAddress'];
        //$UserType = "Driver";
        if ($UserType == 'Driver') {
            $returnArr[$key]['UserAddress'] = $UserAddressArr['UserAddress'];
            $userFields = 'vLatitude,vLongitude';
            //Added By HJ On 13-07-2020 For Optimize user_address Table Query Start
            if (isset($userAddressDataArr[$value['iUserAddressId']])) {
                $userData = $userAddressDataArr[$value['iUserAddressId']];
            } else {
                $userData = get_value('user_address', $userFields, 'iUserAddressId', $value['iUserAddressId']);
            }
            //echo "<pre>";print_r($userData);die;
            //Added By HJ On 13-07-2020 For Optimize user_address Table Query End
            $returnArr[$key]['UserLatitude'] = $userData[0]['vLatitude'];
            $returnArr[$key]['UserLongitude'] = $userData[0]['vLongitude'];
            $isPhotoUploaded = 'No';
            if (!empty($TripsData)) {
                if ($returnArr[$key]['iStatusCode'] == '5' && $TripsData[0]['eImgSkip'] == 'None') {
                    $isPhotoUploaded = 'No';
                } else if ($returnArr[$key]['iStatusCode'] == '5' && $TripsData[0]['eImgSkip'] == 'No') {
                    $isPhotoUploaded = 'Yes';
                } else if ($returnArr[$key]['iStatusCode'] == '5' && $TripsData[0]['eImgSkip'] == 'Yes') {
                    $isPhotoUploaded = 'Yes';
                } else {
                    $isPhotoUploaded = 'No';
                }
                if ($returnArr[$key]['iStatusCode'] == '5') {
                    $returnArr[$key]['PickedFromRes'] = 'Yes';
                } else {
                    $returnArr[$key]['PickedFromRes'] = 'No';
                }
                $SelectdVehicleTypeId = ($VehicleTypeDataDriver[0]['iVehicleTypeId'] != '') ? $VehicleTypeDataDriver[0]['iVehicleTypeId'] : "";
                $SelectdVehicleType = ($VehicleTypeDataDriver[0]['vVehicleType'] != '') ? $VehicleTypeDataDriver[0]['vVehicleType'] : "";
                $returnArr[$key]['iVehicleTypeId'] = $SelectdVehicleTypeId;
                $returnArr[$key]['vVehicleType'] = $SelectdVehicleType;
            }
            $returnArr[$key]['isPhotoUploaded'] = $isPhotoUploaded;
            $eUnit = getMemberCountryUnit($value['iDriverId'], "Driver");
            if ($eUnit == 'KMs') {
                $fDistance = distanceByLocation($userData[0]['vLatitude'], $userData[0]['vLongitude'], $CompanyData[0]['vRestuarantLocationLat'], $CompanyData[0]['vRestuarantLocationLong'], "K");
            } else {
                $fDistance = distanceByLocation($userData[0]['vLatitude'], $userData[0]['vLongitude'], $CompanyData[0]['vRestuarantLocationLat'], $CompanyData[0]['vRestuarantLocationLong'], "");
            }
            $returnArr[$key]['UserDistance'] = round($fDistance, 2) . " " . $eUnit;
        }
        $serverTimeZone = date_default_timezone_get();
        $date = converToTz($value['tOrderRequestDate'], $vTimeZone, $serverTimeZone, "Y-m-d H:i:s");
        $OrderTime = date('d M, Y h:i A', strtotime($date));
        $returnArr[$key]['tOrderRequestDate_Org'] = $date;
        $returnArr[$key]['tOrderRequestDate'] = $OrderTime;
        if ($value['iDriverId'] == '0') {
            $returnArr[$key]['DriverAssign'] = 'No';
        } else {
            $returnArr[$key]['DriverAssign'] = 'Yes';
        }
        //$query = "SELECT iOrderDetailId FROM order_details WHERE iOrderId = '" . $iOrderId . "' $ssql1";
        //$orderDetailId = $obj->MySQLSelect($query);
        $returnArr[$key]['TotalItems'] = strval(count($orderDetailId));
        $eBuyAnyService = $db_order[0]['eBuyAnyService'];
        if ($UserType == 'Driver') {
            $ePaid = $value['ePaid'];
            $ePaymentOption = $value['ePaymentOption'];
            $returnArr[$key]['vSymbol'] = $vcurSymbol;
            if ($db_order[0]['iStatusCode'] == "4") {
                $value['fNetTotal'] = $db_order[0]['fTotalGenerateFare'] - ($db_order[0]['fOffersDiscount'] + $db_order[0]['fDiscount']);
                $value['fNetTotal'] = ($value['fNetTotal'] <= 0) ? 0 : $value['fNetTotal'];
            }
            if ($ePaid == 'Yes' && $ePaymentOption == 'Card') {
                $returnArr[$key]['originalTotal'] = formatNum($value['fNetTotal'] * $curpriceRatio);
                // $CardNetTotal = 0;
                if ($eBuyAnyService == "Yes") {
                    $value['fNetTotal'] = $value['fTotalGenerateFare'] - $value['fWalletDebit'];
                    if (in_array($db_order[0]['iStatusCode'], [4, 13, 14])) {
                        $value['fNetTotal'] = $db_order[0]['fTotalGenerateFare'];
                    }
                }
                $CardNetTotal = $value['fNetTotal'] * $curpriceRatio;
                $returnArr[$key]['SubTotal'] = formateNumAsPerCurrency($CardNetTotal, $currencycode); // $languageLabelsArr['LBL_SUBTOTAL_APP_TXT']
            } else {
                $returnArr[$key]['SubTotal'] = formateNumAsPerCurrency(($value['fNetTotal'] * $curpriceRatio), $currencycode);
                if ($eBuyAnyService == "Yes" && $db_order[0]['eCheckUserWallet'] == "Yes") {
                    $user_available_balance = $WALLET_OBJ->FetchMemberWalletBalance($db_order[0]['iUserId'], "Rider");
                    //$fNetTotal = $db_order[0]['fNetTotal'];
            $fNetTotal = $db_order[0]['fTotalGenerateFare'] - $db_order[0]['fWalletDebit'];
                    /*if ($fNetTotal > $user_available_balance) {

                        $fNetTotal = $fNetTotal - $user_available_balance;

                        $user_wallet_debit_amount = $user_available_balance;

                    } else {

                        $user_wallet_debit_amount = ($fNetTotal > 0) ? $fNetTotal : 0;

                        $fNetTotal = 0;

                    }*/
                    if (in_array($db_order[0]['iStatusCode'], [4, 13, 14])) {
             $fNetTotal = $db_order[0]['fTotalGenerateFare'];
                        // $fNetTotal = $db_order[0]['fNetTotal'] + $db_order[0]['fWalletDebit'];
                    }
                    $returnArr[$key]['SubTotal'] = formateNumAsPerCurrency(($fNetTotal * $curpriceRatio), $currencycode);
                }
                //added by SP for rounding off currency wise on 19-11-2019 start
                //Added By HJ On 13-07-2020 For Optimize company Table Query Start
                if (isset($userDetailsArr['register_driver_' . $iMemberId])) {
                    $currData = $userDetailsArr['register_driver_' . $iMemberId];
                } else {
                    $currData = $obj->MySQLSelect("SELECT *,iDriverId as iMemberId FROM register_driver WHERE iDriverId='" . $iMemberId . "'");
                    $userDetailsArr['register_driver_' . $iMemberId] = $currData;
                }
                //Added By HJ On 13-07-2020 For Optimize company Table Query End
                //Added By HJ On 13-07-2020 For Optimize currency Table Query Start
                $vCurrencyDriver = $currData[0]['vCurrencyDriver'];
                if (isset($currencyAssociateArr[$vCurrencyDriver])) {
                    $currencyData = array();
                    $currencyData[] = $currencyAssociateArr[$vCurrencyDriver];
                } else {
                    $currencyData = $obj->MySQLSelect("SELECT * FROM currency WHERE vName='" . $vCurrencyDriver . "'");
                }
                $currData[0]['vName'] = $currencyData[0]['vName'];
                $currData[0]['iCurrencyId'] = $currencyData[0]['iCurrencyId'];
                $currData[0]['eRoundingOffEnable'] = $currencyData[0]['eRoundingOffEnable'];
                $currData[0]['ratio'] = $currencyData[0]['Ratio'];
                //$sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver, cu.ratio FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";
                //$currData = $obj->MySQLSelect($sqlp);
                //Added By HJ On 13-07-2020 For Optimize currency Table Query End
                $vCurrency = $currData[0]['vName'];
                $samecur = ($TripsData[0]['vCurrencyDriver'] == $currData[0]['vCurrencyDriver'] && $TripsData[0]['vCurrencyDriver'] == $TripsData[0]['vCurrencyPassenger']) ? 1 : 0;
                if (isset($db_order[0]['fRoundingAmount']) && !empty($db_order[0]['fRoundingAmount']) && $db_order[0]['fRoundingAmount'] != 0 && $samecur == 1 && $currData[0]['eRoundingOffEnable'] == "Yes" && $MODULES_OBJ->isEnableRoundingMethod()) {
                    $roundingOffTotal_fare_amountArr['method'] = $db_order[0]['eRoundingType'];
                    $roundingOffTotal_fare_amountArr['differenceValue'] = $db_order[0]['fRoundingAmount'];
                    $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($value['fNetTotal'] * $curpriceRatio, $db_order[0]['fRoundingAmount'], $db_order[0]['eRoundingType']); ////start
                    if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                        $roundingMethod = "";
                    } else {
                        $roundingMethod = "-";
                    }
                    $fNetTotal = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
                    $returnArr[$key]['SubTotal'] = formateNumAsPerCurrency($fNetTotal, $currencycode);
                }
                // new for rounding data
                if ($TripsData[0]['vCurrencyDriver'] == $currData[0]['vCurrencyDriver'] && $currData[0]['eRoundingOffEnable'] == "Yes" && $TripsData[0]['vCurrencyDriver'] != $TripsData[0]['vCurrencyPassenger'] && $MODULES_OBJ->isEnableRoundingMethod()) {
                    if (isset($TripsData[0]['fRoundingAmountDriver']) && !empty($TripsData[0]['fRoundingAmountDriver']) && $TripsData[0]['fRoundingAmountDriver'] != 0) {
                        $roundingOffTotal_fare_amountArr['method'] = $TripsData[0]['eRoundingTypeDriver'];
                        $roundingOffTotal_fare_amountArr['differenceValue'] = $TripsData[0]['fRoundingAmountDriver'];
                        $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($value['fNetTotal'] * $curpriceRatio, $TripsData[0]['fRoundingAmountDriver'], $TripsData[0]['eRoundingTypeDriver']); ////start
                        if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                            $roundingMethod = "";
                        } else {
                            $roundingMethod = "-";
                        }
                        $fNetTotal = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
                        $returnArr[$key]['SubTotal'] = formateNumAsPerCurrency($fNetTotal, $currencycode);
                    }
                }
                //added by SP for rounding off currency wise on 19-11-2019 end
            }
        }
        foreach ($orderDetailId as $k => $val) {
            $ItemLists[] = DisplayOrderDetailItemList($val['iOrderDetailId'], $iMemberId, $UserType, $iOrderId);
        }
        // echo "<pre>"; print_r($ItemLists); exit;
        $all_data_new = array();
        if ($ItemLists != '') {
            foreach ($ItemLists as $k => $item) {
                if ($item['iQty'] == 0) continue;
                $iQty = ($item['iQty'] != '') ? $item['iQty'] : '';
                $MenuItem = ($item['MenuItem'] != '') ? $item['MenuItem'] : '';
                $fTotPrice = ($item['fTotPrice'] != '') ? $item['fTotPrice'] : '';
                $TotalDiscountPrice = ($item['TotalDiscountPrice'] != '') ? $item['TotalDiscountPrice'] : '';
                $eAvailable = ($item['eAvailable'] != '') ? $item['eAvailable'] : '';
                $AddOnItemArr = ($item['AddOnItemArr'] != '') ? $item['AddOnItemArr'] : '';
                if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
                    $OptionsArr = ($item['OptionsArr'] != '') ? $item['OptionsArr'] : '';
                }
                //echo "<pre>";print_r($AddOnItemArr);die;
                $iOrderDetailId = ($item['iOrderDetailId'] != '') ? $item['iOrderDetailId'] : '';
                $vImage = ($item['vImage'] != '') ? $item['vImage'] : '';
                $all_data_new[$k]['iOrderDetailId'] = $iOrderDetailId;
                $all_data_new[$k]['iQty'] = $iQty;
                $all_data_new[$k]['MenuItem'] = $MenuItem;
                $all_data_new[$k]['fTotPrice'] = $fTotPrice;
                $all_data_new[$k]['vImage'] = $vImage;
                $all_data_new[$k]['TotalDiscountPrice'] = $TotalDiscountPrice;
                $all_data_new[$k]['eAvailable'] = $eAvailable;
                $vOptionName = (!empty($item['vOptionName'])) ? $item['vOptionName'] : '';
                $addonTitleArr = array();
                $addonTitle = '';
                if (!empty($AddOnItemArr)) {
                    $addonTitleArr = array();
                    foreach ($AddOnItemArr as $addonkey => $addonvalue) {
                        $addonTitleArr[] = $addonvalue['vAddOnItemName'];
                    }
                    $addonTitle = implode(",", $addonTitleArr);
                }
                if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
                    $optionTitleArr = array();
                    $optionTitle = "";
                    if (!empty($OptionsArr)) {
                        foreach ($OptionsArr as $optionkey => $optionvalue) {
                            $optionTitleArr[] = $optionvalue['vOptionName'];
                        }
                        $optionTitle = implode(",", $optionTitleArr);
                    }
                    if ($optionTitle != '' && $addonTitle == '') {
                        $all_data_new[$k]['SubTitle'] = $optionTitle;
                    } else if ($optionTitle == '' && $addonTitle != '') {
                        $all_data_new[$k]['SubTitle'] = $addonTitle;
                    } else if ($optionTitle != '' && $addonTitle != '') {
                        $all_data_new[$k]['SubTitle'] = $optionTitle . ", " . $addonTitle;
                    } else {
                        $all_data_new[$k]['SubTitle'] = '';
                    }
                    $all_data_new[$k]['MenuItemOptions'] = $optionTitle;
                } else {
                    if ($vOptionName != '' && $addonTitle == '') {
                        $all_data_new[$k]['SubTitle'] = $vOptionName;
                    } else if ($vOptionName == '' && $addonTitle != '') {
                        $all_data_new[$k]['SubTitle'] = $addonTitle;
                    } else if ($vOptionName != '' && $addonTitle != '') {
                        $all_data_new[$k]['SubTitle'] = $vOptionName . ", " . $addonTitle;
                    } else {
                        $all_data_new[$k]['SubTitle'] = '';
                    }
                    //Added By HJ On 05-02-2020 For Get Options and Topping Data Start
                    $all_data_new[$k]['MenuItemOptions'] = $vOptionName;
                }
                $all_data_new[$k]['SubTitle'] = trim($all_data_new[$k]['SubTitle'], ",");
                $all_data_new[$k]['MenuItemToppings'] = $addonTitle;
                $all_data_new[$k]['MenuItemOptions'] = $vOptionName;
                $all_data_new[$k]['vSKU'] = $MODULES_OBJ->isEnableRequireMenuItemSKU() ? $item['vSKU'] : "";
                //Added By HJ On 05-02-2020 For Get Options and Topping Data End
                if ($db_order[0]['eBuyAnyService'] == "Yes") {
                    if ($item['eDecline'] == "Yes" || ($UserType == "Passenger" && $item['eConfirm'] == "No") || ($UserType == "Driver" && $item['vImageUploaded'] == "No")) {
                        $all_data_new[$k]['fTotPriceWithoutSymbol'] = "0";
                        $all_data_new[$k]['fTotPrice'] = "--";
                    } else {
                        $all_data_new[$k]['fTotPriceWithoutSymbol'] = (isset($item['fTotPriceWithoutSymbol']) && $item['fTotPriceWithoutSymbol'] > 0) ? $item['fTotPriceWithoutSymbol'] : 0;
                    }
                    $all_data_new[$k]['itemDetailsUpdated'] = "No";
                    if ($item['vImageUploaded'] == "Yes" || $item['eItemAvailable'] == "No") {
                        $all_data_new[$k]['itemDetailsUpdated'] = "Yes";
                    }
                    $all_data_new[$k]['eConfirm'] = $item['eConfirm'];
                    $all_data_new[$k]['eDecline'] = $item['eDecline'];
                    $all_data_new[$k]['vImageUploaded'] = $item['vImageUploaded'];
                    $all_data_new[$k]['eItemAvailable'] = $item['eItemAvailable'];
                    $all_data_new[$k]['eExtraPayment'] = $item['eExtraPayment'];
                }
            }
        }
        $returnArr[$key]['itemlist'] = $all_data_new;
        $returnArr[$key]['fTipAmount'] = $value['fTipAmount'];
        $returnArr[$key]['iDriverId'] = $value['iDriverId'];
    }
    $orderData = getOrderCostDetails($iOrderId, $UserType, $IS_FROM_HISTORY);
    $returnArr[$key]['FareDetailsArr'] = $orderData[0];
    $returnArr[$key]['FareDetailsNewArr'] = $orderData[1]; //added by SP for cubex design on 15-10-2019
    $returnArr[$key]['FareTotal'] = $orderData[2];
    return $returnArr;
}

function DisplayOrderDetailItemList($iOrderDetailId, $iMemberId, $eUserType = "Passenger", $iOrderId = 0)
{
    global $obj, $MODULES_OBJ, $tconfig, $orderDetailsArr, $LANG_OBJ, $MENU_ITEM_MEDIA_OBJ;
    $returnArr = array();
    $ssql = "";
    if ($eUserType == "Passenger") {
        $UserDetailsArr = getUserCurrencyLanguageDetails($iMemberId, $iOrderId);
    } else if ($eUserType == "Driver") {
        $UserDetailsArr = getDriverCurrencyLanguageDetails($iMemberId, $iOrderId);
    } else {
        $UserDetailsArr = getCompanyCurrencyLanguageDetails($iMemberId, $iOrderId);
    }
    $currencySymbol = $UserDetailsArr['currencySymbol'];
    $currencycode = $UserDetailsArr['currencycode'];
    $Ratio = $UserDetailsArr['Ratio'];
    $vLang = $UserDetailsArr['vLang'];
    //Added By HJ On 13-07-2020 For Optimize language_master Table Query Start
    $def_lang = $LANG_OBJ->FetchDefaultLangData("vCode");
    //Added By HJ On 13-07-2020 For Optimize language_master Table Query End
    $sql = "select od.*, IFNULL(NULLIF(mi.vItemType_" . $vLang . ", ''),mi.vItemType_" . $def_lang . ") as MenuItem,mi.iMenuItemId, mi.vImage, mi.vItemTypeBuyAnyService, mi.eBuyAnyService, mi.vSKU, mi.eFoodType from `order_details` as od LEFT JOIN  `menu_items` as mi ON od.iMenuItemId=mi.iMenuItemId where od.iOrderDetailId='" . $iOrderDetailId . "'";
    //$sql = "select od.*,mi.vItemType_" . $vLang . " as MenuItem,mi.vImage from `order_details` as od LEFT JOIN  `menu_items` as mi ON od.iMenuItemId=mi.iMenuItemId where od.iOrderDetailId='" . $iOrderDetailId . "'";
    $data_order_detail = $obj->MySQLSelect($sql);
    $MenuItem = $data_order_detail[0]['MenuItem'];
    $iMenuItemId = $data_order_detail[0]['iMenuItemId'];
    $fPrice = $data_order_detail[0]['fOriginalPrice'];
    $vImage = $data_order_detail[0]['vImage'];
    $vSKU = $data_order_detail[0]['vSKU'];
    $returnArr['eFoodType'] = $data_order_detail[0]['eFoodType'];
    $returnArr['fPriceOrig'] = $fPrice;
    $itemImgUrl = $tconfig["tsite_upload_images_menu_item"];
    // $fPrice = $data_order_detail[0]['fOriginalPrice']+$data_order_detail[0]['vOptionPrice']+$data_order_detail[0]['vAddonPrice'];
    $eAvailable = $data_order_detail[0]['eAvailable'];
    $fPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $fPrice, $iOrderId);
    $fPrice = $fPriceArr['fPricewithsymbol'];
    $vsymbol = $fPriceArr['currencySymbol'];
    $fpricecurrencycode = $fPriceArr['currencycode'];
    $fPricewithoutsymbol = $fPriceArr['fPrice'];
    $fTotalprice = $fPricewithoutsymbol * $data_order_detail[0]['iQty'];
    $returnArr['iQty'] = $data_order_detail[0]['iQty'];
    $returnArr['MenuItem'] = ($data_order_detail[0]['eBuyAnyService'] == "No") ? $MenuItem : $data_order_detail[0]['vItemTypeBuyAnyService'];
    $returnArr['fPrice'] = $fPrice;
    $returnArr['vSKU'] = $MODULES_OBJ->isEnableRequireMenuItemSKU() ? $vSKU : "";
    //added by SP for default image on 15-10-2019
    if ($MODULES_OBJ->isEnableItemMultipleImageVideoUpload()) {
        $ItemMedia = $MENU_ITEM_MEDIA_OBJ->getItemMedia($iMenuItemId);
        $MenuItemMediaArr = $ItemMedia['MenuItemMedia'];
        if (isset($MenuItemMediaArr) && !empty($MenuItemMediaArr)) {
            if ($MenuItemMediaArr[0]['eFileType'] == 'Video') {
                $vImage = $MenuItemMediaArr[0]['ThumbImage'];
            } else {
                $vImage = $MenuItemMediaArr[0]['vImage'];
            }
        }
    }
    if (!empty($vImage)) {
        $returnArr['vImage'] = $itemImgUrl . "/" . $vImage;
        if ($MODULES_OBJ->isEnableItemMultipleImageVideoUpload()) {
            $returnArr['vImage'] = $vImage;
        }
        $returnArr['vImageUploaded'] = "Yes";
    } else {
        $returnArr['vImage'] = $tconfig["tsite_url"] . "webimages/upload/DefaultImg/items.png";
        $returnArr['vImageUploaded'] = "No";
    }
    //$returnArr['fTotPrice'] = $vsymbol . " " . formatnum($fTotalprice);
    $returnArr['fTotPrice'] = formateNumAsPerCurrency($fTotalprice, $fpricecurrencycode);
    $returnArr['eAvailable'] = $eAvailable;
    $returnArr['iOrderDetailId'] = $iOrderDetailId;
    $order_buy_anything = $obj->MySQLSelect("SELECT * FROM order_items_buy_anything WHERE iOrderId = " . $data_order_detail[0]['iOrderId'] . " AND iOrderDetailId = " . $data_order_detail[0]['iOrderDetailId']);
    $eBuyAnyServiceOrd = get_value('orders', 'eBuyAnyService', 'iOrderId', $iOrderId, '', 'true');
    if ($eBuyAnyServiceOrd == "Yes") {
        if (count($order_buy_anything) > 0) {
            $fTotalprice = $order_buy_anything[0]['fItemPrice'];
            $fTotalprice = setTwoDecimalPoint($fTotalprice * $Ratio);
            $returnArr['fTotPriceWithoutSymbol'] = $fTotalprice;
            $returnArr['fTotPrice'] = formateNumAsPerCurrency($fTotalprice, $fpricecurrencycode);
            $returnArr['fPriceOrig'] = $order_buy_anything[0]['fItemPrice'];
            $itemImgUrl = $tconfig['tsite_upload_order_buy_anything'];
            if (!empty($order_buy_anything[0]['vItemImage'])) {
                $returnArr['vImage'] = $itemImgUrl . $order_buy_anything[0]['vItemImage'];
                $returnArr['vImageUploaded'] = "Yes";
            } else {
                // $returnArr['vImage'] = $tconfig["tsite_url"] . "webimages/upload/DefaultImg/items.png";
                $returnArr['vImage'] = "";
                $returnArr['vImageUploaded'] = "No";
            }
            $returnArr['eConfirm'] = $order_buy_anything[0]['eConfirm'];
            $returnArr['eDecline'] = $order_buy_anything[0]['eDecline'];
            $returnArr['eItemAvailable'] = $order_buy_anything[0]['eItemAvailable'];
            $returnArr['eExtraPayment'] = $order_buy_anything[0]['eExtraPayment'];
        } else {
            $returnArr['eConfirm'] = "No";
            $returnArr['eDecline'] = "No";
            $returnArr['eItemAvailable'] = "Yes";
            $returnArr['vImageUploaded'] = "No";
            $returnArr['vImage'] = "";
            $returnArr['eExtraPayment'] = $data_order_detail[0]['eExtraPayment'];
        }
    }
    //echo $iOrderId;die;
    if ($iOrderId > 0) {
        //Added By HJ On 13-07-2020 For Optimize Order Table Query Start
        if (isset($orderDetailsArr['orders_' . $iOrderId])) {
            $db_orderdata = $orderDetailsArr['orders_' . $iOrderId];
        } else {
            $db_orderdata = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");
            $orderDetailsArr['orders_' . $iOrderId] = $db_orderdata;
        }
        //echo "<pre>";print_r($CurrencyData);die;
        //Added By HJ On 13-07-2020 For Optimize Order Table Query End
        //$sqlo = "select fOfferType,fOfferAppyType from `orders` where iOrderId = '" . $iOrderId . "'";
        //$db_orderdata = $obj->MySQLSelect($sqlo);
        $fOfferType = $db_orderdata[0]['fOfferType'];
        $fOfferAppyType = $db_orderdata[0]['fOfferAppyType'];
        $TotalDiscountPrice = "";
        if (($fOfferAppyType == "None" && ($fOfferType == "Flat" || $fOfferType == "")) || $fOfferType == "Percentage") {
            $fTotalDiscountPrice = $data_order_detail[0]['fTotalDiscountPrice'];
            $TotalPrice = $data_order_detail[0]['fTotalPrice'];
            if ($fTotalDiscountPrice > 0) {
                $Strikeprice = ($TotalPrice - $fTotalDiscountPrice) * $Ratio;
                //$TotalDiscountPrice = $vsymbol . " " . formatnum($Strikeprice);
                $TotalDiscountPrice = formateNumAsPerCurrency($Strikeprice, $fpricecurrencycode);
            }
        }
        $returnArr['TotalDiscountPrice'] = $TotalDiscountPrice;
    }
    $vOptionId = $data_order_detail[0]['vOptionId'];
    if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
        if ($vOptionId != "") {
            $OptionidArr = array();
            $OptionDetailArr = explode(",", $vOptionId);
            $OptionPrice_Total = 0;
            for ($i = 0; $i < count($OptionDetailArr); $i++) {
                $OptionStrArr = explode("#", $OptionDetailArr[$i]);
                $OptionId = $OptionStrArr[0];
                $OptionPrice = GetFoodMenuItemAddOnPrice($OptionId);
                $OptionPrice_Total = $OptionPrice_Total + $OptionPrice;
                $OptionPriceArr_Total = getPriceUserCurrency($iMemberId, $eUserType, $OptionPrice_Total);
                $OptionPrice_Total = $OptionPriceArr_Total['fPrice'];
                $OptionName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $OptionId, '', 'true');
                $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $OptionId, '', 'true');
                if (!empty($tOptionNameLang)) {
                    $tOptionNameLang = json_decode($tOptionNameLang, true);
                    if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                        $OptionName = $tOptionNameLang['tOptionNameLang_' . $vLang];
                    }
                }
                $OptionsArr[$i]['vOptionId'] = $OptionId;
                $OptionsArr[$i]['vOptionName'] = $OptionName;
                $OptionsArr[$i]['vOptionPrice'] = $OptionPrice_Total;
            }
            $returnArr['OptionsArr'] = $OptionsArr;
        } else {
            $returnArr['OptionsArr'] = array();
        }
    } else {
        if ($vOptionId != "") {
            $vOptionName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $vOptionId, '', 'true');
            $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $vOptionId, '', 'true');
            if (!empty($tOptionNameLang)) {
                $tOptionNameLang = json_decode(trim($tOptionNameLang, '"'), true);
                if (!empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                    $vOptionName = $tOptionNameLang['tOptionNameLang_' . $vLang];
                }
            }
            $vOptionPrice = $data_order_detail[0]['vOptionPrice'];
            $vOptionPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $vOptionPrice, $iOrderId);
            $vOptionPrice = $vOptionPriceArr['fPricewithsymbol'];
            $returnArr['vOptionName'] = $vOptionName;
            $returnArr['vOptionPrice'] = $vOptionPrice;
        } else {
            $returnArr['vOptionName'] = "";
            $returnArr['vOptionPrice'] = "";
        }
    }
    $tAddOnIdOrigPrice = $data_order_detail[0]['tAddOnIdOrigPrice'];
    if ($tAddOnIdOrigPrice != "") {
        $AddonItemsArr = array();
        $AddonItemsDetailArr = explode(",", $tAddOnIdOrigPrice);
        for ($i = 0; $i < count($AddonItemsDetailArr); $i++) {
            $AddonItemsStrArr = explode("#", $AddonItemsDetailArr[$i]);
            $AddonItemsId = $AddonItemsStrArr[0];
            $AddonItemsPrice = $AddonItemsStrArr[1];
            $AddonItemsPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $AddonItemsPrice, $iOrderId);
            $AddonItemPrice = $AddonItemsPriceArr['fPricewithsymbol'];
            $AddonItemName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $AddonItemsId, '', 'true');
            $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $AddonItemsId, '', 'true');
            if (!empty($tOptionNameLang)) {
                $tOptionNameLang = json_decode(trim($tOptionNameLang, '"'), true);
                if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                    $AddonItemName = $tOptionNameLang['tOptionNameLang_' . $vLang];
                }
            }
            $AddonItemsArr[$i]['vAddOnItemName'] = $AddonItemName;
            $AddonItemsArr[$i]['AddonItemPrice'] = $AddonItemPrice;
        }
        $returnArr['AddOnItemArr'] = $AddonItemsArr;
    } else {
        $returnArr['AddOnItemArr'] = array();
    }
    return $returnArr;
}

function getOrderStatus($iOrderId, $lang = "EN")
{
    global $obj;
    $sql = "SELECT os.vStatus_Track_$lang as vStatus_Track FROM order_status as os LEFT JOIN orders as ord ON os.iStatusCode = ord.iStatusCode WHERE ord.iOrderId = '" . $iOrderId . "' AND IF(ord.iStatusCode IN (1,4), os.eBuyAnyService = 'Yes', os.eBuyAnyService = 'No')";
    $OrderStatus = $obj->MySQLSelect($sql);
    $vStatus = $OrderStatus[0]['vStatus_Track'];
    return $vStatus;
}

function createOrderLog($iOrderId, $iStatusCode)
{
    global $obj;
    $sql = "SELECT * FROM order_status_logs WHERE iOrderId = '" . $iOrderId . "' AND iStatusCode = '" . $iStatusCode . "'";
    $OrderStatuslog = $obj->MySQLSelect($sql);
    if (count($OrderStatuslog) == 0) {
        $data['iOrderId'] = $iOrderId;
        $data['iStatusCode'] = $iStatusCode;
        $data['dDate'] = @date("Y-m-d H:i:s");
        $data['vIP'] = get_client_ip();
        $id = $obj->MySQLQueryPerform("order_status_logs", $data, 'insert');
    } else {
        $id = $OrderStatuslog[0]['iOrderLogId'];
    }
    return $id;
}

function checkOrderStatus($iOrderId, $iStatusCode)
{
    global $obj;
    $orderexist = "No";
    //Added By HJ On 12-06-2020 For Optimization Query Start
    if (is_array($iOrderId)) {
        $orderIdArr = $iOrderId;
        $iOrderIds = implode(",", $iOrderId);
        $db_status = $obj->MySQLSelect("SELECT count(iOrderLogId) as TotOrderLogId,iOrderId from order_status_logs WHERE iOrderId IN ($iOrderIds) AND iStatusCode IN($iStatusCode) GROUP BY iOrderId");
        $statusArr = array();
        for ($g = 0; $g < count($db_status); $g++) {
            $statusArr[$db_status[$g]['iOrderId']] = $db_status[$g]['TotOrderLogId'];
        }
        return $statusArr;
    } else {
        $db_status = $obj->MySQLSelect("SELECT count(iOrderLogId) as TotOrderLogId from order_status_logs WHERE iOrderId ='" . $iOrderId . "' AND iStatusCode IN($iStatusCode)");
        $TotOrderLogId = $db_status[0]['TotOrderLogId'];
        if ($TotOrderLogId > 0) {
            $orderexist = "Yes";
        }
        return $orderexist;
    }
}

function checkOrderRequestStatus($iOrderId)
{
    global $obj, $PROVIDER_BOOKING_ACCEPT_TIME_INTERVAL, $orderDetailsArr, $RIDER_REQUEST_ACCEPT_TIME;
    $sql = "SELECT * from driver_request WHERE iOrderId ='" . $iOrderId . "'";
    $db_driver_request = $obj->MySQLSelect($sql);
    if (count($db_driver_request) > 0) {
        //$sql = "SELECT iDriverId from orders WHERE iOrderId ='" . $iOrderId . "'";
        //$db_order_driver = $obj->MySQLSelect($sql);
        //Added By HJ On 13-07-2020 For Optimize Order Table Query Start
        if (isset($orderDetailsArr['orders_' . $iOrderId])) {
            $db_order_driver = $orderDetailsArr['orders_' . $iOrderId];
        } else {
            $db_order_driver = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");
            $orderDetailsArr['orders_' . $iOrderId] = $db_order_driver;
        }
        //Added By HJ On 13-07-2020 For Optimize Order Table Query End
        $iDriverId = $db_order_driver[0]['iDriverId'];
        if ($iDriverId > 0) {
            $returnArr['Action'] = "1";
            $returnArr["message"] = "LBL_REQUEST_FAILED_TXT";
            $returnArr["message1"] = "DRIVER_ASSIGN";
        } else {
            // $PROVIDER_BOOKING_ACCEPT_TIME_INTERVAL = $PROVIDER_BOOKING_ACCEPT_TIME_INTERVAL + 5;
            $RIDER_REQUEST_ACCEPT_TIME = $RIDER_REQUEST_ACCEPT_TIME + 5;
            $currentdate = @date("Y-m-d H:i:s");
            // $checkdate = date('Y-m-d H:i:s', strtotime("+" . $PROVIDER_BOOKING_ACCEPT_TIME_INTERVAL . " seconds", strtotime($currentdate)));
            // $checkdate1 = date('Y-m-d H:i:s', strtotime("-" . $PROVIDER_BOOKING_ACCEPT_TIME_INTERVAL . " seconds", strtotime($currentdate)));
            $checkdate = date('Y-m-d H:i:s', strtotime("+" . $RIDER_REQUEST_ACCEPT_TIME . " seconds", strtotime($currentdate)));
            $checkdate1 = date('Y-m-d H:i:s', strtotime("-" . $RIDER_REQUEST_ACCEPT_TIME . " seconds", strtotime($currentdate)));
            $sql = "SELECT iDriverRequestId from driver_request WHERE iOrderId ='" . $iOrderId . "' AND ( dAddedDate > '" . $checkdate1 . "' AND dAddedDate < '" . $checkdate . "')";
            $db_status = $obj->MySQLSelect($sql);
            if (count($db_status) > 0) {
                $returnArr['Action'] = "0";
                $returnArr["message"] = "LBL_REQUEST_INPROCESS_TXT";
                $returnArr["message1"] = "REQ_PROCESS";
            } else {
                $returnArr['Action'] = "1";
                $returnArr["message"] = "LBL_REQUEST_FAILED_TXT";
                $returnArr["message1"] = "REQ_FAILED";
            }
        }
    } else {
        $returnArr['Action'] = "1";
        $returnArr["message"] = "LBL_REQUEST_INPROCESS_TXT";
        $returnArr["message1"] = "REQ_NOT_FOUND";
    }
    return $returnArr;
}

function get_day_name($timestamp)
{
    $date = date('d M Y', $timestamp);
    if ($date == date('d M Y')) {
        $date = 'Today';
    } else if ($date == date('d M Y', strtotime("-1 days"))) {
        $date = 'Yesterday';
    }
    return $date;
}

function getremainingtimeorderrequest($iOrderId)
{
    global $obj, $PROVIDER_BOOKING_ACCEPT_TIME_INTERVAL, $RIDER_REQUEST_ACCEPT_TIME;
    $sql = "SELECT * from driver_request WHERE iOrderId ='" . $iOrderId . "' ORDER BY iDriverRequestId DESC LIMIT 0,1";
    $db_driver_request = $obj->MySQLSelect($sql);
    $datedifference = 0;
    if (count($db_driver_request) > 0) {
        $currentdate = @date("Y-m-d H:i:s");
        $currentdate = strtotime($currentdate);
        $dAddedDate = $db_driver_request[0]['dAddedDate'];
        $dAddedDate = strtotime($dAddedDate);
        $datedifference = $currentdate - $dAddedDate;
    }
    // $Remaining_Time_In_Seconds = $PROVIDER_BOOKING_ACCEPT_TIME_INTERVAL - $datedifference;
    $Remaining_Time_In_Seconds = $RIDER_REQUEST_ACCEPT_TIME - $datedifference;
    $Remaining_Time_In_Seconds = $Remaining_Time_In_Seconds + 10;
    if ($datedifference > 30) {
        $Remaining_Time_In_Seconds = 0;
    }
    return $Remaining_Time_In_Seconds;
}

function getTotalOrderDetailItemsCount($iOrderId)
{
    global $obj, $tconfig;
    $sql = "SELECT count(iOrderDetailId) as TotalOrderItems FROM order_details WHERE iOrderId = '" . $iOrderId . "'";
    $data = $obj->MySQLSelect($sql);
    $TotalOrderItems = $data[0]['TotalOrderItems'];
    if ($TotalOrderItems == "" || $TotalOrderItems == NULL) {
        $TotalOrderItems = 0;
    }
    return $TotalOrderItems;
}

function TotalOrderPaymentForStore($iGeneralUserId, $vConvertFromDate, $vConvertToDate, $UserType = 'Company', $vTimeZone, $vSubFilterParam = '')
{
    global $MODULES_OBJ, $obj;
    $systemTimeZone = date_default_timezone_get();
    $vConvertFromDatec = converToTz($vConvertFromDate, $systemTimeZone, $vTimeZone, "Y-m-d");
    if (!empty($vConvertToDate)) {
        $vConvertToDate = converToTz($vConvertToDate, $systemTimeZone, $vTimeZone, "Y-m-d");
    }
    $whereFilter = "";
    if ($vConvertFromDate != "") {
        $whereFilter = "DATE(tOrderRequestDate) = '" . $vConvertFromDate . "' AND ";
    }
    if ($vConvertFromDate != "" && $vConvertToDate != "") {
        $whereFilter = "(DATE(tOrderRequestDate) BETWEEN '$vConvertFromDatec' AND '$vConvertToDate') AND ";
    }
    $conditonalFields = 'iCompanyId';
    $UserDetailsArr = getCompanyCurrencyLanguageDetails($iGeneralUserId);
    $currencycode = $UserDetailsArr['currencycode'];
    $vSymbol = $UserDetailsArr['currencySymbol'];
    // $priceRatio = $UserDetailsArr['Ratio'];
    // Total earning calulated according to filter
    $enable_takeaway = 0;
    if ($MODULES_OBJ->isTakeAwayEnable() && $UserType != 'Driver') {
        $enable_takeaway = 1;
    }
    $whereStatusCode = "AND  `iStatusCode` IN (6, 7, 8, 11)";
    if ($vSubFilterParam != "") {
        if ($vSubFilterParam == '6-1' && $enable_takeaway == 1) {
            $whereStatusCode = " AND ord.iStatusCode IN (6) AND ord.eTakeaway = 'Yes'";
        } else if ($vSubFilterParam == '6' && $enable_takeaway == 1) {
            $whereStatusCode = " AND ord.iStatusCode IN ($vSubFilterParam) AND ord.eTakeaway = 'No'";
        } else if ($vSubFilterParam == 8) {
            $whereStatusCode = "AND  `iStatusCode` IN (7, 8)";
        } else {
            $whereStatusCode = "AND  `iStatusCode` IN ($vSubFilterParam)";
        }
    }
    $sql2 = "SELECT vOrderNo, iOrderId, tOrderRequestDate, iUserId, fTotalGenerateFare, fCommision, iStatusCode, fNetTotal, fOffersDiscount, fRatio_" . $currencycode . " as Ratio,fRestaurantPaidAmount,fDeliveryCharge,fTipAmount,fOutStandingAmount FROM `orders` as ord WHERE $whereFilter $conditonalFields='$iGeneralUserId' $whereStatusCode";
    $OrderData = $obj->MySQLSelect($sql2);
    $ToTalEarning = 0;
    $TotalEarningFare = 0;
    foreach ($OrderData as $key => $value) {
        $orderStatusAll = $obj->MySQLSelect('SELECT * FROM order_status_logs WHERE iOrderId = ' . $value['iOrderId'] . ' AND iStatusCode = 2');
        if (count($orderStatusAll) == 0) {
            continue;
        }
        $priceRatio = $value['Ratio'];
        $iStatusCode = $value['iStatusCode'];
        $fRestaurantPaidAmount = $value['fRestaurantPaidAmount'];
        if ($iStatusCode == '7' || $iStatusCode == '8') {
            $EarningFare = $fRestaurantPaidAmount;
        } else {
            $EarningFare = $value['fTotalGenerateFare'] - ($value['fCommision'] + $value['fOffersDiscount'] + $value['fDeliveryCharge'] + $value['fTipAmount'] + $value['fOutStandingAmount']);
        }
        $EarningFare = $EarningFare;
        $EarningFare = $EarningFare * $priceRatio;
        $ToTalEarning += $EarningFare;
        $TotalEarningFare = setTwoDecimalPoint($ToTalEarning);
        // $TotalEarningFare = $ToTalEarning * $priceRatio;
    }
    return $TotalEarningFare;
}

function TotalOrderPaymentForDriver($iGeneralUserId, $vConvertFromDate, $vConvertToDate, $UserType = 'Company', $vTimeZone, $vSubFilterParam = '')
{
    global $MODULES_OBJ, $obj;
    $systemTimeZone = date_default_timezone_get();
    $vConvertFromDatec = converToTz($vConvertFromDate, $vTimeZone, $systemTimeZone, "Y-m-d");
    if (!empty($vConvertToDate)) {
        $vConvertToDate = converToTz($vConvertToDate, $vTimeZone, $systemTimeZone, "Y-m-d");
    }
    $whereFilter = "";
    if ($vConvertFromDate != "") {
        $whereFilter = "DATE(tOrderRequestDate) = '" . $vConvertFromDate . "' AND ";
    }
    if ($vConvertFromDate != "" && $vConvertToDate != "") {
        $whereFilter = "(DATE(tOrderRequestDate) BETWEEN '$vConvertFromDatec' AND '$vConvertToDate') AND ";
    }
    $conditonalFields = 'iDriverId';
    $UserDetailsArr = getDriverCurrencyLanguageDetails($iGeneralUserId);
    $currencycode = $UserDetailsArr['currencycode'];
    $vSymbol = $UserDetailsArr['currencySymbol'];
    // $priceRatio = $UserDetailsArr['Ratio'];
    // Total earning calulated according to filter
    $enable_takeaway = 0;
    if ($MODULES_OBJ->isTakeAwayEnable() && $UserType != 'Driver') {
        $enable_takeaway = 1;
    }
    $whereStatusCode = "AND  `iStatusCode` IN (6, 7, 8, 11)";
    if ($vSubFilterParam != "") {
        if ($vSubFilterParam == '6-1' && $enable_takeaway == 1) {
            $whereStatusCode = " AND ord.iStatusCode IN (6) AND ord.eTakeaway = 'Yes'";
        } else if ($vSubFilterParam == '6' && $enable_takeaway == 1) {
            $whereStatusCode = " AND ord.iStatusCode IN ($vSubFilterParam) AND ord.eTakeaway = 'No'";
        } else if ($vSubFilterParam == 8) {
            $whereStatusCode = "AND  `iStatusCode` IN (7, 8)";
        } else {
            $whereStatusCode = "AND  `iStatusCode` IN ($vSubFilterParam)";
        }
    }
    $sql2 = "SELECT vOrderNo, iOrderId, tOrderRequestDate, iUserId, fTotalGenerateFare, fNetTotal, fCommision, iStatusCode, fRatio_" . $currencycode . " as Ratio,fDriverPaidAmount,fTipAmount,eBuyAnyService,ePaymentOption FROM `orders` WHERE $whereFilter $conditonalFields='$iGeneralUserId' $whereStatusCode";
    $OrderData = $obj->MySQLSelect($sql2);
    $ToTalEarning = 0;
    foreach ($OrderData as $key => $value) {
        $priceRatio = $value['Ratio'];
        $OrderId = $value['iOrderId'];
        $iStatusCode = $value['iStatusCode'];
        $fDriverPaidAmount = $value['fDriverPaidAmount'];
        $subquery = "SELECT t.fDeliveryCharge,odcd.fDeliveryCharge as fCustomDeliveryCharge,vt.fDeliveryCharge as fDeliveryChargeVehicle FROM trips as t LEFT JOIN order_delivery_charge_details as odcd ON odcd.iOrderId = t.iOrderId LEFT JOIN vehicle_type as vt ON vt.iVehicleTypeId = t.iVehicleTypeId WHERE t.iOrderId = '" . $OrderId . "' AND t.iActive != 'Canceled'";
        $DriverCharge = $obj->MySQLSelect($subquery);
        if ($iStatusCode == '7' || $iStatusCode == '8') {
            $EarningFare = $fDriverPaidAmount;
        } else {
            $EarningFare = $DriverCharge[0]['fDeliveryCharge'];
            $genie_items_subtotal = 0;
            if ($value['eBuyAnyService'] == "Yes" && $value['ePaymentOption'] == "Card") {
                $order_buy_anything = $obj->MySQLSelect("SELECT * FROM order_items_buy_anything WHERE iOrderId = '" . $iOrderId . "'");
                if (count($order_buy_anything) > 0) {
                    foreach ($order_buy_anything as $oItem) {
                        if ($oItem['eConfirm'] == "Yes") {
                            $genie_items_subtotal += $oItem['fItemPrice'];
                        }
                    }
                }
            }
            $EarningFare = $EarningFare + $value['fTipAmount'] + $genie_items_subtotal;
        }
        $EarningFare = $EarningFare * $priceRatio;
        $ToTalEarning += $EarningFare;
        $TotalEarningFare = setTwoDecimalPoint($ToTalEarning);
    }
    return $TotalEarningFare;
}

function TotalOrderPaymentForUser($iGeneralUserId, $vConvertFromDate, $vConvertToDate, $UserType = 'Company', $vTimeZone)
{
    global $obj;
    $systemTimeZone = date_default_timezone_get();
    $vConvertFromDatec = converToTz($vConvertFromDate, $vTimeZone, $systemTimeZone, "Y-m-d");
    if (!empty($vConvertToDate)) {
        $vConvertToDate = converToTz($vConvertToDate, $vTimeZone, $systemTimeZone, "Y-m-d");
    }
    $whereFilter = "";
    if ($vConvertFromDate != "") {
        $whereFilter = "DATE(tOrderRequestDate) = '" . $vConvertFromDate . "' AND ";
    }
    if ($vConvertFromDate != "" && $vConvertToDate != "") {
        $whereFilter = "(DATE(tOrderRequestDate) BETWEEN '$vConvertFromDatec' AND '$vConvertToDate') AND ";
    }
    $conditonalFields = 'iUserId';
    $UserDetailsArr = getUserCurrencyLanguageDetails($iGeneralUserId);
    $currencycode = $UserDetailsArr['currencycode'];
    $vSymbol = $UserDetailsArr['currencySymbol'];
    // $priceRatio = $UserDetailsArr['Ratio'];
    $sql2 = "SELECT vOrderNo, iOrderId, tOrderRequestDate, iUserId, fTotalGenerateFare, fCommision, fNetTotal, iStatusCode, fRatio_" . $currencycode . " as Ratio FROM `orders` WHERE $whereFilter $conditonalFields='$iGeneralUserId' AND  `iStatusCode` IN (6, 7, 8, 11, 9)";
    $OrderData = $obj->MySQLSelect($sql2);
    $ToTalEarning = 0;
    foreach ($OrderData as $key => $value) {
        $priceRatio = $value['Ratio'];
        $EarningFare = $value['fNetTotal'];
        $EarningFare = $EarningFare * $priceRatio;
        $ToTalEarning += $EarningFare;
        $TotalEarningFare = setTwoDecimalPoint($ToTalEarning);
    }
    return $TotalEarningFare;
}

function CalculateOrderTotalDiscount($iOrderId)
{
    global $obj, $tconfig;
    $sql = "SELECT SUM( `fTotalDiscountPrice` ) AS TotalDiscountPrice FROM order_details WHERE iOrderId = '" . $iOrderId . "' AND eAvailable = 'Yes'";
    $data = $obj->MySQLSelect($sql);
    $TotalDiscountPrice = $data[0]['TotalDiscountPrice'];
    if ($TotalDiscountPrice == "" || $TotalDiscountPrice == NULL) {
        $TotalDiscountPrice = 0;
    }
    return $TotalDiscountPrice;
}

function CalculateOrderSubTotalCost($iOrderId)
{
    global $obj, $tconfig;
    // $sql = "SELECT SUM( `fOriginalPrice` * `iQty` ) AS TotalOriginalPrice FROM order_details WHERE iOrderId = '".$iOrderId."' AND eAvailable = 'Yes'";
    $sql = "SELECT SUM( `fTotalPrice` ) AS TotalPrice FROM order_details WHERE iOrderId = '" . $iOrderId . "' AND eAvailable = 'Yes'";
    $data = $obj->MySQLSelect($sql);
    $TotalPrice = $data[0]['TotalPrice'];
    if ($TotalPrice == "" || $TotalPrice == NULL) {
        $TotalPrice = 0;
    }
    return $TotalPrice;
}

function CalculateOrderDiscountPrice($iOrderId)
{
    global $obj, $tconfig, $orderDetailsArr, $userDetailsArr;
    //Added By HJ On 20-07-2020 For Optimize Order Table Query Start
    if (isset($orderDetailsArr['orders_' . $iOrderId])) {
        $data_order = $orderDetailsArr['orders_' . $iOrderId];
    } else {
        $data_order = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");
        $orderDetailsArr['orders_' . $iOrderId] = $data_order;
    }
    //Added By HJ On 20-07-2020 For Optimize Order Table Query End
    //$data_order = $obj->MySQLSelect("select * from orders where iOrderId='" . $iOrderId . "'");
    $iCompanyId = $data_order[0]['iCompanyId'];
    // $fSubTotal = $data_order[0]['fSubTotal'];
    $fSubTotal = CalculateOrderSubTotalCost($iOrderId);
    $iUserId = $data_order[0]['iUserId'];
    $TotOrders = 1;
    if ($iUserId > 0) {
        $sql = "select count(iOrderId) as TotOrders from orders where iUserId ='" . $iUserId . "' AND iCompanyId = '" . $iCompanyId . "' AND iStatusCode NOT IN(12,11,9)";
        $db_order = $obj->MySQLSelect($sql);
        $TotOrders = $db_order[0]['TotOrders'];
    }
    //Added By HJ On 20-07-2020 For Optimize company Table Query Start
    if (isset($userDetailsArr['company_' . $iCompanyId])) {
        $DataCompany = $userDetailsArr['company_' . $iCompanyId];
    } else {
        $DataCompany = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId='" . $iCompanyId . "'");
        $userDetailsArr['company_' . $iCompanyId] = $DataCompany;
    }
    //Added By HJ On 20-07-2020 For Optimize company Table Query End
    //$DataCompany = $obj->MySQLSelect("SELECT * FROM `company` WHERE iCompanyId = '" . $iCompanyId . "'");
    $fMinOrderValue = $DataCompany[0]['fMinOrderValue'];
    $fOfferAppyType = $DataCompany[0]['fOfferAppyType'];
    $fOfferType = $DataCompany[0]['fOfferType'];
    $fMaxOfferAmt = $DataCompany[0]['fMaxOfferAmt'];
    $fTargetAmt = $DataCompany[0]['fTargetAmt'];
    $fOfferAmt = $DataCompany[0]['fOfferAmt'];
   
    if ($fOfferAppyType == "None") {
        $TotalDiscountPrice = CalculateOrderTotalDiscount($iOrderId);
    } else if ($fOfferAppyType == "All") {
        if ($fOfferType == "Percentage") {
            $fDiscount = (($fSubTotal * $fOfferAmt) / 100);
            $fDiscount = setTwoDecimalPoint($fDiscount);
            $fDiscount = (($fDiscount > $fMaxOfferAmt) && ($fMaxOfferAmt > 0)) ? $fMaxOfferAmt : $fDiscount;
            $TotalDiscountPrice = $fDiscount;
        } else {
            $fDiscount = $fOfferAmt;
            $fDiscount = setTwoDecimalPoint($fDiscount);
            //Added By HJ On 29-02-2020 For Solved 141 Mantis Issue #3793 Start
            if ($fDiscount > $fSubTotal) {
                $fDiscount = $fSubTotal;
            }
            //Added By HJ On 29-02-2020 For Solved 141 Mantis Issue #3793 End
            $TotalDiscountPrice = $fDiscount;
        }
    } else {
        if ($TotOrders <= 1) {
            if ($fOfferType == "Percentage") {
                $fDiscount = (($fSubTotal * $fOfferAmt) / 100);
                $fDiscount = setTwoDecimalPoint($fDiscount);
                $fDiscount = (($fDiscount > $fMaxOfferAmt) && ($fMaxOfferAmt > 0)) ? $fMaxOfferAmt : $fDiscount;
                $TotalDiscountPrice = $fDiscount;
            } else {
                $fDiscount = $fOfferAmt;
                $fDiscount = setTwoDecimalPoint($fDiscount);
                //Added By HJ On 29-02-2020 For Solved 141 Mantis Issue #3793 Start
                if ($fDiscount > $fSubTotal) {
                    $fDiscount = $fSubTotal;
                }
                //Added By HJ On 29-02-2020 For Solved 141 Mantis Issue #3793 End
                $TotalDiscountPrice = $fDiscount;
            }
        } else {
            $TotalDiscountPrice = CalculateOrderTotalDiscount($iOrderId);
        }
    }
    if ($fSubTotal <= $fTargetAmt && $fOfferAppyType != "None" && $fOfferType == "Flat") {
        $TotalDiscountPrice = 0;
    }

    return setTwoDecimalPoint($TotalDiscountPrice);
}

function FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, $iQty = 1, $iUserId = 0, $eFor = "Display", $vOptionId = "", $vAddonId = "", $iServiceId = "")
{
    global $obj, $tconfig, $serviceCatDataArr, $orderDetailsArr, $userDetailsArr;
    $TotOrders = $fPrice = 0;
    if ($iUserId > 0) {
        //Added By HJ On 15-07-2020 For Optimize Order Table Query Start
        if (isset($orderDetailsArr['orders_' . $iUserId . "_" . $iCompanyId . "_12"])) {
            $db_order = $orderDetailsArr['orders_' . $iUserId . "_" . $iCompanyId . "_12"];
        } else {
            $db_order = $obj->MySQLSelect("select count(iOrderId) as TotOrders from orders where iUserId ='" . $iUserId . "' AND iCompanyId = '" . $iCompanyId . "' AND iStatusCode NOT IN(12,11,9)");
            $orderDetailsArr['orders_' . $iUserId . "_" . $iCompanyId . "_12"] = $db_order;
        }
        //Added By HJ On 15-07-2020 For Optimize Order Table Query End
        $TotOrders = $db_order[0]['TotOrders'];
    }
    $ispriceshow = '';
    if (isset($iServiceId) && !empty($iServiceId)) {
        //Added By HJ On 13-07-2020 For Optimize service_categories Table Query Start
        if (count($serviceCatDataArr) > 0) {
        } else {
            $serviceCatDataArr = $obj->MySQLSelect("SELECT * FROM service_categories");
        }
        $serviceCatArr = array();
        for ($h = 0; $h < count($serviceCatDataArr); $h++) {
            $serviceCatArr[$serviceCatDataArr[$h]['iServiceId']] = $serviceCatDataArr[$h];
        }
        if (isset($serviceCatArr[$iServiceId])) {
            $ServiceCategoryData = array();
            $ServiceCategoryData[] = $serviceCatArr[$iServiceId];
        } else {
            $servFields = 'eType';
            $ServiceCategoryData = get_value('service_categories', $servFields, 'iServiceId', $iServiceId);
        }
        //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
        if (!empty($ServiceCategoryData)) {
            if (!empty($ServiceCategoryData[0]['eType']) && $ServiceCategoryData[0]['eType'] == 'separate') {
                $ispriceshow = $ServiceCategoryData[0]['eType'];
            }
        }
    }
    //Added By HJ On 13-07-2020 For Optimize menu_items Table Query Start
    if (isset($orderDetailsArr['menu_items_' . $iMenuItemId])) {
        $db_price = array();
        $db_price = $orderDetailsArr['menu_items_' . $iMenuItemId];
        //echo "<pre>";print_r($db_price);die;
    } else {
        $db_price = $obj->MySQLSelect("select * from menu_items where iMenuItemId ='" . $iMenuItemId . "'");
        if (count($db_price) > 0) {
            $orderDetailsArr['menu_items_' . $iMenuItemId] = $db_price;
        }
    }
    //$db_price = $obj->MySQLSelect("select * from menu_items where iMenuItemId ='" . $iMenuItemId . "'");
    //Added By HJ On 13-07-2020 For Optimize menu_items Table Query End
    if (isset($db_price[0]['fPrice']) && $db_price[0]['fPrice'] > 0) {
        $fPrice = $db_price[0]['fPrice'];
    }
    if (isset($ispriceshow) && !empty($ispriceshow)) {
        $fPrice = 0;
        $vOptionPrice = GetFoodMenuItemOptionPrice($vOptionId);
        if ($vOptionPrice == 0) {
            $fPrice = $db_price[0]['fPrice'];
        }
    }
    if ($vOptionId != "") {
        $vOptionPrice = GetFoodMenuItemOptionPrice($vOptionId);
        $fPrice += $vOptionPrice;
    }
    if ($vAddonId != "") {
        $vAddonPrice = GetFoodMenuItemAddOnPrice($vAddonId);
        $fPrice += $vAddonPrice;
    }
    $fPrice = $fPrice * $iQty;
    $fOriginalPrice = $fPrice;
    //Added By HJ On 13-07-2020 For Optimize company Table Query Start
    if (isset($userDetailsArr['company_' . $iCompanyId])) {
        $DataCompany = $userDetailsArr['company_' . $iCompanyId];
    } else {
        $DataCompany = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId='" . $iCompanyId . "'");
        $userDetailsArr['company_' . $iCompanyId] = $DataCompany;
    }
    //Added By HJ On 13-07-2020 For Optimize company Table Query End
    //$sql = "SELECT * FROM `company` WHERE iCompanyId = '" . $iCompanyId . "'";
    //$DataCompany = $obj->MySQLSelect($sql);
    $fOfferAppyType = $DataCompany[0]['fOfferAppyType'];
    $fOfferType = $DataCompany[0]['fOfferType'];
    $fMaxOfferAmt = $DataCompany[0]['fMaxOfferAmt'];
    $fTargetAmt = $DataCompany[0]['fTargetAmt'];
    if ($fOfferAppyType == "None") {
        $fOfferAmt = $db_price[0]['fOfferAmt'];
        if ($fOfferAmt > 0) {
            $fDiscountPrice = (($fPrice * $fOfferAmt * $iQty) / 100);
            $fDiscountPrice = round($fDiscountPrice, 2);
            $fPrice = $fPrice - $fDiscountPrice;
        } else {
            $fOfferAmt = 0;
            $fDiscountPrice = 0;
        }
        $returnArr['fOriginalPrice'] = $fOriginalPrice;
        $returnArr['fDiscountPrice'] = $fDiscountPrice;
        $returnArr['fPrice'] = $fPrice;
        $returnArr['fOfferAmt'] = $fOfferAmt;
        $returnArr['TotOrders'] = $TotOrders;
    } else if ($fOfferAppyType == "All") {
        $fOfferAmt = $DataCompany[0]['fOfferAmt'];
        if ((($fTargetAmt == 0 || $fTargetAmt == "") && $eFor == "Display") || $eFor == "Calculate") {
            if ($fOfferType == "Percentage") {
                if ($fOfferAmt > 0) {
                    $fDiscountPrice = (($fPrice * $fOfferAmt * $iQty) / 100);
                    $fDiscountPrice = round($fDiscountPrice, 2);
                    $fDiscountPrice = (($fDiscountPrice > $fMaxOfferAmt) && ($fMaxOfferAmt > 0)) ? $fMaxOfferAmt : $fDiscountPrice;
                    $fPrice = $fOriginalPrice - $fDiscountPrice;
                } else {
                    $fOfferAmt = 0;
                    $fDiscountPrice = 0;
                }
            } else {
                if ($eFor == "Calculate") {
                    if ($fOfferAmt > 0) {
                        $fDiscountPrice = $fOfferAmt * $iQty;
                        $fDiscountPrice = ($fDiscountPrice < 0) ? 0 : $fDiscountPrice;
                        $fPrice = $fOriginalPrice;
                    } else {
                        $fOfferAmt = 0;
                        $fDiscountPrice = 0;
                    }
                } else {
                    $fOfferAmt = 0;
                    $fDiscountPrice = 0;
                }
            }
        } else {
            $fOfferAmt = 0;
            $fDiscountPrice = 0;
        }
        $returnArr['fOriginalPrice'] = $fOriginalPrice;
        $returnArr['fDiscountPrice'] = $fDiscountPrice;
        $returnArr['fPrice'] = $fPrice;
        $returnArr['fOfferAmt'] = $fOfferAmt;
        $returnArr['TotOrders'] = $TotOrders;
    } else {
        if ($TotOrders == 0) {
            $fOfferAmt = $DataCompany[0]['fOfferAmt'];
            if ((($fTargetAmt == 0 || $fTargetAmt == "") && $eFor == "Display") || $eFor == "Calculate") {
                if ($fOfferType == "Percentage") {
                    if ($fOfferAmt > 0) {
                        $fDiscountPrice = (($fPrice * $fOfferAmt * $iQty) / 100);
                        $fDiscountPrice = round($fDiscountPrice, 2);
                        // $fDiscountPrice = (($fDiscountPrice > $fMaxOfferAmt) && ($fMaxOfferAmt > 0))?$fMaxOfferAmt:$fDiscountPrice;
                        $fPrice = $fOriginalPrice - $fDiscountPrice;
                    } else {
                        $fOfferAmt = 0;
                        $fDiscountPrice = 0;
                    }
                } else {
                    if ($eFor == "Calculate") {
                        if ($fOfferAmt > 0) {
                            $fDiscountPrice = $fOfferAmt;
                            $fDiscountPrice = ($fDiscountPrice < 0) ? 0 : $fDiscountPrice;
                            $fPrice = $fOriginalPrice;
                        } else {
                            $fOfferAmt = 0;
                            $fDiscountPrice = 0;
                        }
                    } else {
                        $fOfferAmt = 0;
                        $fDiscountPrice = 0;
                    }
                }
            } else {
                $fOfferAmt = 0;
                $fDiscountPrice = 0;
            }
        } else {
            /*$fOfferAmt = $db_price[0]['fOfferAmt'];

            if ($fOfferAmt > 0) {

                $fDiscountPrice = (($fPrice * $fOfferAmt * $iQty) / 100);

                $fDiscountPrice = round($fDiscountPrice, 2);

                $fPrice = $fOriginalPrice - $fDiscountPrice;

            } else {

                $fOfferAmt = 0;

                $fDiscountPrice = 0;

            }*/
            $fOfferAmt = 0;
            $fDiscountPrice = 0;
        }
        $returnArr['fOriginalPrice'] = $fOriginalPrice;
        $returnArr['fDiscountPrice'] = $fDiscountPrice;
        $returnArr['fPrice'] = $fPrice;
        $returnArr['fOfferAmt'] = $fOfferAmt;
        $returnArr['TotOrders'] = $TotOrders;
    }
    //echo "<pre>";print_r($returnArr);exit;
    return $returnArr;
}

function GetMenuItemOptionsToppingName($iOptionId = "", $vLang = "")
{
    global $obj, $tconfig, $LANG_OBJ;
    $vOptionName = "";
    if (empty($vLang)) {
        $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
    }
    if ($iOptionId != "") {
        $str = "select vOptionName,tOptionNameLang from `menuitem_options` where iOptionId IN(" . $iOptionId . ")";
        $db_options_data = $obj->MySQLSelect($str);
        if (count($db_options_data) > 0) {
            for ($i = 0; $i < count($db_options_data); $i++) {
                if (!empty($db_options_data[$i]['tOptionNameLang'])) {
                    $tOptionNameLang = json_decode(trim($db_options_data[$i]['tOptionNameLang'], '"'), true);
                    if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                        $db_options_data[$i]['vOptionName'] = $tOptionNameLang['tOptionNameLang_' . $vLang];
                    }
                }
                $vOptionName .= $db_options_data[$i]['vOptionName'] . ", ";
            }
        }
    }
    return trim($vOptionName, ",");
}

function GetOrderStatusLogText($iOrderId, $UserType = "Passenger", $eRemoveDate = "No")
{
    global $obj, $tconfig, $languageLabelDataArr, $orderDetailsArr, $LANG_OBJ;
    $sql = "SELECT ord.iUserId,ord.iDriverId,ord.iCompanyId,ord.iStatusCode,ord.iServiceId,os.vStatus_Track,os.vStatus,osl.dDate FROM order_status as os LEFT JOIN orders as ord ON os.iStatusCode = ord.iStatusCode LEFT JOIN order_status_logs as osl ON osl.iStatusCode = ord.iStatusCode WHERE ord.iOrderId = '" . $iOrderId . "' ORDER BY osl.dDate DESC LIMIT 0,1";
    $data_order = $obj->MySQLSelect($sql);
    //Added By HJ On 13-07-2020 For Optimize Order Table Query Start
    /*if(isset($orderDetailsArr['orders_'.$iOrderId])){

        $data_order = $orderDetailsArr['orders_'.$iOrderId];

    }else{

        $data_order = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");

        $orderDetailsArr['orders_'.$iOrderId] = $data_order;

    }*/ //Added By HJ On 13-07-2020 For Optimize Order Table Query End
    //Added By HJ On 13-07-2020 For Optimize order_status Table Query Start
    $iStatusCode = $data_order[0]['iStatusCode'];
    /*if(isset($orderDetailsArr['order_status_'.$iStatusCode])){

        $orderStatusData = $orderDetailsArr['order_status_'.$iStatusCode];

    }else{

        $orderStatusData = $obj->MySQLSelect("SELECT * FROM order_status WHERE iStatusCode = '" . $iStatusCode . "'");

        $orderDetailsArr['order_status_'.$iStatusCode] = $orderStatusData;

    }*/
    //Added By HJ On 13-07-2020 For Optimize order_status Table Query End
    $iCompanyId = $data_order[0]['iCompanyId'];
    $iUserId = $data_order[0]['iUserId'];
    $iDriverId = $data_order[0]['iDriverId'];
    $drivername = "";
    if ($iDriverId > 0) {
        $Data_vehicle = $obj->MySQLSelect("SELECT CONCAT(vName,' ',vLastName) AS driverName FROM `register_driver` WHERE iDriverId = '$iDriverId'");
        $drivername = $Data_vehicle[0]['driverName'];
    }
    $dDate = $data_order[0]['dDate'];
    $vStatus = $data_order[0]['vStatus'];
    $iServiceId = $data_order[0]['iServiceId'];
    // $StatusDate = date('l, dS M Y',strtotime($dDate));
    $StatusDate = date('F d, Y h:iA', strtotime($dDate)); //h:iA
    if ($UserType == "Passenger") {
        $UserDetailsArr = getUserCurrencyLanguageDetails($iUserId, $iOrderId);
    } else if ($UserType == "Driver") {
        $UserDetailsArr = getDriverCurrencyLanguageDetails($iDriverId, $iOrderId);
    } else {
        $UserDetailsArr = getCompanyCurrencyLanguageDetails($iCompanyId, $iOrderId);
    }
    $vLang = $UserDetailsArr['vLang'];
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query Start
    if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId])) {
        $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId];
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
        $languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId] = $languageLabelsArr;
    }
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query End
    $Displaytext = "";
    if ($iStatusCode == "8") {
        $Displaytext = $languageLabelsArr['LBL_CANCELLED_ON'] . " " . $StatusDate;
        if ($eRemoveDate == "Yes") {
            $Displaytext = $languageLabelsArr['LBL_CANCELLED_ON'];
        }
    }
    if ($iStatusCode == "6") {
        $Displaytext = $languageLabelsArr['LBL_ORDER_DELIVERED_ON'] . " " . $StatusDate . " " . $languageLabelsArr['LBL_BY'] . " " . $drivername;
        if ($eRemoveDate == "Yes") {
            $Displaytext = $languageLabelsArr['LBL_ORDER_DELIVERED_ON'] . " " . $languageLabelsArr['LBL_BY'] . " " . $drivername;
        }
    }
    return $Displaytext;
}

function isStoreItemAvailable($OrderDetails = array(), $isSingle = 0)
{
    global $obj, $tconfig, $orderDetailsArr;
    $orderItemAvailabilityArr = $itemAvailableArr = $optionAvailabelArr = $addonAvailableArr = array();
    $isAllItemAvailable = $isAllItemOptionsAvailable = $isAllItemToppingssAvailable = "Yes";
    //Added By HJ On 20-07-2020 For Optimize menu_items Table Query Start
    $orderItemIdArr = array_column($OrderDetails, "iMenuItemId");
    if (count($orderItemIdArr) > 0) {
        $implodeIds = implode(",", $orderItemIdArr);
        $menuItemData = $obj->MySQLSelect("select * from menu_items where iMenuItemId IN ($implodeIds)");
        for ($b = 0; $b < count($menuItemData); $b++) {
            $orderDetailsArr['menu_items_' . $menuItemData[$b]['iMenuItemId']][] = $menuItemData[$b];
        }
    }
    //Added By HJ On 20-07-2020 For Optimize menu_items Table Query End
    if (count($OrderDetails) > 0) {
        for ($i = 0; $i < count($OrderDetails); $i++) {
            $iMenuItemId = $OrderDetails[$i]['iMenuItemId'];
            $isAllItemAvailable = "Yes";
            //Added By HJ On 20-07-2020 For Optimize menu_items Table Query Start
            $db_menu_item = array();
            if (isset($orderDetailsArr['menu_items_' . $iMenuItemId])) {
                $db_menu_item = $orderDetailsArr['menu_items_' . $iMenuItemId];
            } else {
                $db_menu_item = $obj->MySQLSelect("select eAvailable,eStatus from menu_items where iMenuItemId ='" . $iMenuItemId . "'");
                $orderDetailsArr['menu_items_' . $iMenuItemId] = $db_menu_item;
            }
            //Added By HJ On 20-07-2020 For Optimize menu_items Table Query End
            $eStatus = $db_menu_item[0]['eStatus'];
            $eAvailable = $db_menu_item[0]['eAvailable'];
            if ($eAvailable == "No" || $eStatus != "Active") {
                $isAllItemAvailable = "No";
                if ($isSingle > 0) {
                    // For Check Single Item
                } else {
                    break;
                }
            }
            $itemAvailableArr[$iMenuItemId] = $isAllItemAvailable;
        }
        for ($j = 0; $j < count($OrderDetails); $j++) {
            $vOptionId = $OrderDetails[$j]['vOptionId'];
            $isAllItemOptionsAvailable = "Yes";
            if ($vOptionId != "") {
                $str = "select eStatus from menuitem_options where iOptionId IN(" . $vOptionId . ")";
                $db_menu_item_option = $obj->MySQLSelect($str);
                $eStatus1 = $db_menu_item_option[0]['eStatus'];
                if ($eStatus1 != "Active") {
                    $isAllItemOptionsAvailable = "No";
                    if ($isSingle > 0) {
                        // For Check Single Item
                    } else {
                        break;
                    }
                }
                $optionAvailabelArr[$vOptionId] = $isAllItemOptionsAvailable;
            }
        }
        for ($k = 0; $k < count($OrderDetails); $k++) {
            $vAddonId = $OrderDetails[$k]['vAddonId'];
            $isAllItemToppingssAvailable = "Yes";
            if ($vAddonId != "") {
                $str = "select eStatus from menuitem_options where iOptionId IN(" . $vAddonId . ")";
                $db_menu_item_Addon = $obj->MySQLSelect($str);
                $eStatus2 = $db_menu_item_Addon[0]['eStatus'];
                if ($eStatus2 != "Active") {
                    $isAllItemToppingssAvailable = "No";
                    if ($isSingle > 0) {
                        // For Check Single Item
                    } else {
                        break;
                    }
                }
                $addonAvailableArr[$vAddonId] = $isAllItemToppingssAvailable;
            }
        }
    }
    if ($isSingle > 0) {
        $returnArr['item'] = $itemAvailableArr;
        $returnArr['option'] = $optionAvailabelArr;
        $returnArr['addon'] = $addonAvailableArr;
    } else {
        $returnArr['isAllItemAvailable'] = $isAllItemAvailable;
        $returnArr['isAllItemOptionsAvailable'] = $isAllItemOptionsAvailable;
        $returnArr['isAllItemToppingssAvailable'] = $isAllItemToppingssAvailable;
    }
    return $returnArr;
}

function GetOrderStatusLogTextForCancelled($iOrderId, $UserType = "Passenger")
{
    global $obj, $tconfig, $languageLabelDataArr, $LANG_OBJ;
    $sql = "SELECT ord.iUserId,ord.iDriverId,ord.iCompanyId,ord.fRefundAmount,ord.iStatusCode,ord.iServiceId,os.vStatus_Track,os.vStatus,osl.dDate,ord.fCancellationCharge,ord.fRestaurantPaidAmount,ord.fDriverPaidAmount,ord.eRestaurantPaymentStatus,ord.eBuyAnyService,ord.fDeliveryChargeCancelled FROM order_status as os LEFT JOIN orders as ord ON os.iStatusCode = ord.iStatusCode LEFT JOIN order_status_logs as osl ON osl.iStatusCode = ord.iStatusCode WHERE ord.iOrderId = '" . $iOrderId . "' ORDER BY osl.dDate DESC LIMIT 0,1";
    $data_order = $obj->MySQLSelect($sql);
    $iCompanyId = $data_order[0]['iCompanyId'];
    $iUserId = $data_order[0]['iUserId'];
    $iDriverId = $data_order[0]['iDriverId'];
    $iStatusCode = $data_order[0]['iStatusCode'];
    $dDate = $data_order[0]['dDate'];
    $vStatus = $data_order[0]['vStatus'];
    $fRefundAmount = $data_order[0]['fRefundAmount'];
    $fCancellationCharge = $data_order[0]['fCancellationCharge'];
    $fRestaurantPaidAmount = $data_order[0]['fRestaurantPaidAmount'];
    $eRestaurantPaymentStatus = $data_order[0]['eRestaurantPaymentStatus'];
    $fDriverPaidAmount = $data_order[0]['fDriverPaidAmount'];
    $iServiceId = $data_order[0]['iServiceId'];
    // $StatusDate = date('l, dS M Y',strtotime($dDate));
    $StatusDate = date('F d, Y h:iA', strtotime($dDate)); //h:iA
    if ($UserType == "Passenger") {
        $UserDetailsArr = getUserCurrencyLanguageDetails($iUserId, $iOrderId);
    } else if ($UserType == "Driver") {
        $UserDetailsArr = getDriverCurrencyLanguageDetails($iDriverId, $iOrderId);
    } else {
        $UserDetailsArr = getCompanyCurrencyLanguageDetails($iCompanyId, $iOrderId);
    }
    $Ratio = $UserDetailsArr['Ratio'];
    $currencycode = $UserDetailsArr['currencycode'];
    $currencySymbol = $UserDetailsArr['currencySymbol'];
    $vLang = $UserDetailsArr['vLang'];
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query Start
    if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId])) {
        $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId];
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
        $languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId] = $languageLabelsArr;
    }
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query End
    $Displaytext = "";
    if ($UserType == "Passenger") {
        if ($iStatusCode == "8") {
            $fCancellationChargeNew = $fCancellationCharge * $Ratio;
            if ($data_order[0]['eBuyAnyService'] == "Yes" && $data_order[0]['fDeliveryChargeCancelled'] > 0) {
                $fCancellationChargeNew = $data_order[0]['fDeliveryChargeCancelled'] * $Ratio;
            }
            $fCancellationCharge = formatNum($fCancellationChargeNew);
            // $CancellationCharge = $currencySymbol . $fCancellationCharge;
            $CancellationCharge = formateNumAsPerCurrency($fCancellationCharge, $currencycode);
            $CancellationChargeTxt = $languageLabelsArr["LBL_CANCELLATION_CHARGE"] . ": " . $CancellationCharge;
            $Displaytext = $languageLabelsArr["LBL_ORDER_CANCEL_TEXT"] . "\n" . $CancellationChargeTxt;
        }
        if ($iStatusCode == "7") {
            // $Displaytext = $languageLabelsArr["LBL_ORDER_REFUND_TEXT"];
            $fCancellationChargeNew = $fCancellationCharge * $Ratio;
            $fCancellationCharge = formatNum($fCancellationChargeNew);
            //$CancellationCharge = $currencySymbol . $fCancellationCharge;
            $CancellationCharge = formateNumAsPerCurrency($fCancellationCharge, $currencycode);
            $CancellationChargeTxt = $languageLabelsArr["LBL_CANCELLATION_CHARGE"] . ": " . $CancellationCharge;
            $fRefundAmountnew = $fRefundAmount * $Ratio;
            $fRefundAmount = formatNum($fRefundAmountnew);
            //$RefundAmount = $currencySymbol . $fRefundAmount;
            $RefundAmount = formateNumAsPerCurrency($fRefundAmount, $currencycode);
            $RefundAmountTxt = $languageLabelsArr["LBL_REFUND_APP_TXT"] . ": " . $RefundAmount;
            $Displaytext = $languageLabelsArr["LBL_ORDER_REFUND_TEXT"] . "\n" . $CancellationChargeTxt . "\n" . $RefundAmountTxt;
        }
    } else if ($UserType == "Company") {
        if ($iStatusCode == "8" || $iStatusCode == "7") {
            $fRestaurantPaidAmountNew = $fRestaurantPaidAmount * $Ratio;
            $fRestaurantPaidAmount = formatNum($fRestaurantPaidAmountNew);
            //$fRestaurantPaidAmount = $currencySymbol . $fRestaurantPaidAmount;
            $fRestaurantPaidAmount = formateNumAsPerCurrency($fRestaurantPaidAmount, $currencycode);
            if ($data_order[0]['fRestaurantPaidAmount'] > 0 || $eRestaurantPaymentStatus == "Settled") {
                $fRestaurantPaidAmountTxt = $languageLabelsArr["LBL_ADJUSTMENT_AMOUNT_MESSAGE"] . ": " . $fRestaurantPaidAmount;
            } else {
                $fRestaurantPaidAmountTxt = $languageLabelsArr["LBL_AMT_GENERATE_PENDING"];
            }
            if ($iStatusCode == "8") {
                $Displaytext = $languageLabelsArr["LBL_ORDER_CANCEL_TEXT"] . "\n" . $fRestaurantPaidAmountTxt;
            } else if ($iStatusCode == "7") {
                $Displaytext = $languageLabelsArr["LBL_ORDER_REFUND_TEXT"] . "\n" . $fRestaurantPaidAmountTxt;
            }
        }
    } else {
        if ($iStatusCode == "8" || $iStatusCode == "7") {
            $fDriverPaidAmountNew = $fDriverPaidAmount * $Ratio;
            $fDriverPaidAmount = formatNum($fDriverPaidAmount);
            //$fDriverPaidAmount = $currencySymbol . $fDriverPaidAmount;
            $fDriverPaidAmount = formateNumAsPerCurrency($fDriverPaidAmount, $currencycode);
            $eDriverPaymentStatus = get_value('trips', 'eDriverPaymentStatus', 'iOrderId', $iOrderId, '', 'true');
            if ($data_order[0]['fDriverPaidAmount'] > 0 || $eDriverPaymentStatus == "Settled" || $eDriverPaymentStatus == "Settelled") {
                $fDriverPaidAmountTxt = $languageLabelsArr["LBL_ADJUSTMENT_AMOUNT_MESSAGE"] . ": " . $fDriverPaidAmount;
            } else {
                $fDriverPaidAmountTxt = $languageLabelsArr["LBL_AMT_GENERATE_PENDING"];
            }
            if ($iStatusCode == "8") {
                $Displaytext = $languageLabelsArr["LBL_ORDER_CANCEL_TEXT"] . "\n" . $fDriverPaidAmountTxt;
            } else if ($iStatusCode == "7") {
                $Displaytext = $languageLabelsArr["LBL_ORDER_REFUND_TEXT"] . "\n" . $fDriverPaidAmountTxt;
            }
        }
    }
    // $returnArr['Displaytext'] = $Displaytext;
    return $Displaytext;
}

function FetchRecommendedStoreItems($iCompanyId, $iUserId, $DisplayType = "Recommended", $CheckNonVegFoodType = "No", $searchword, $iServiceId = "", $vLanguage = "")
{
    global $obj, $MODULES_OBJ, $tconfig, $orderDetailsArr, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $currencyAssociateArr, $Data_ALL_currency_Arr, $languageLabelDataArr, $userDetailsArr, $LANG_OBJ, $MENU_ITEM_MEDIA_OBJ;
    $returnArr = array();
    //Added By HJ On 23-01-2020 For Solved Currency Related Issues Start
    $currencySymbol = "";
    if ($iUserId > 0) {
        $UserDetailsArr = getUserCurrencyLanguageDetails($iUserId, 0);
        if ($vLanguage == "") {
            $vLanguage = $UserDetailsArr['vLang'];
        }
        $currencySymbol = $UserDetailsArr['currencySymbol'];
        $currencycode = $UserDetailsArr['currencycode'];
        $Ratio = $UserDetailsArr['Ratio'];

        if(isset($_SESSION['MANUAL_ORDER_STORE']) && $_SESSION['MANUAL_ORDER_STORE'] == 'store' && isset($_SESSION['sess_currency'])){
            $sqlp = "SELECT vName,vSymbol,Ratio FROM currency WHERE vName = '".$_SESSION['sess_currency']."'";
            $currencyData = $obj->MySQLSelect($sqlp);
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        }
        
    } else {
        //Added By HJ On 23-01-2020 For Get Currency Data Start
        $currencycode = isset($_REQUEST["vGeneralCurrency"]) ? $_REQUEST["vGeneralCurrency"] : ''; // Added By HJ On 23-01-2020 When User Not Logged In Get Curren cy Code
        if (($currencySymbol == "" || $currencySymbol == NULL) && $currencycode != "") {
            //Added By HJ On 15-07-2020 For Optimization currency Table Query Start
            if (isset($currencyAssociateArr[$currencycode])) {
                $currencyData = array();
                $currencyData[] = $currencyAssociateArr[$currencycode];
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE vName = '" . $currencycode . "'");
            }
            //Added By HJ On 15-07-2020 For Optimization currency Table Query End
            //$currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE vName = '" . $currencycode . "'");
        } else {
            //Added By HJ On 15-07-2020 For Optimization currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencyData = array();
                $currencyData[0]['vName'] = $vSystemDefaultCurrencyName;
                $currencyData[0]['vSymbol'] = $vSystemDefaultCurrencySymbol;
                $currencyData[0]['Ratio'] = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
                $currencycode = $currencyData[0]['vName'];
                $currencySymbol = $currencyData[0]['vSymbol'];
                $Ratio = $currencyData[0]['Ratio'];
            }
            //Added By HJ On 15-07-2020 For Optimization currency Table Query End
            //$currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
        }
        if (count($currencyData) > 0) {
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        } else {
            $currencycode = "USD";
            $currencySymbol = "$";
            $Ratio = 1.0000;
        }
        // Recomendation Arr 0.00 price issue Resolved START
        $UserDetailsArr = getUserCurrencyLanguageDetails($iUserId, 0);
        if ($vLanguage == "") {
            $vLanguage = $UserDetailsArr['vLang'];
        }
        // Recomendation Arr 0.00 price issue Resolved END
        //Added By HJ On 23-01-2020 For Get Currency Data End
    }
    //Added By HJ On 23-01-2020 For Solved Currency Related Issues End
    $ssql1 = "";
    if ($DisplayType == "Recommended") {
        $ssql1 .= " AND eRecommended = 'Yes' ";
    } else {
        $ssql1 .= " AND eBestSeller = 'Yes' ";
    }
    //Added By HJ On 15-07-2020 For Optimization currency Table Query Start
    if (isset($userDetailsArr['company_' . $iCompanyId])) {
        $companyData = $userDetailsArr['company_' . $iCompanyId];
    } else {
        $companyData = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId='" . $iCompanyId . "'");
        $userDetailsArr['company_' . $iCompanyId] = $companyData;
    }
    if (count($companyData) > 0) {
        $store_currency = $companyData[0]['vCurrencyCompany'];
    } else {
        $store_currency = get_value('company', 'vCurrencyCompany', 'iCompanyId', $iCompanyId, '', 'true');
    }
    //Added By HJ On 15-07-2020 For Optimization currency Table Query Start
    //Added By HJ On 04-02-2019 For Convert All Amount In Store Wise Currency Ration Start
    $currencyArr = $currencySymbolArr = array();
    //Added By HJ On 15-07-2020 For Optimization currency Table Query Start
    if (count($Data_ALL_currency_Arr) > 0) {
        $getCurrencyRation = $Data_ALL_currency_Arr;
    } else {
        $getCurrencyRation = $obj->MySQLSelect("SELECT * FROM currency WHERE eStatus='Active'");
    }
    //Added By HJ On 15-07-2020 For Optimization currency Table Query End
    for ($c = 0; $c < count($getCurrencyRation); $c++) {
        if (strtoupper($getCurrencyRation[$c]['Ratio']) == "ACTIVE") {
            $currencyArr[$getCurrencyRation[$c]['iCurrencyId']] = $getCurrencyRation[$c]['Ratio'];
            $currencySymbolArr[$getCurrencyRation[$c]['iCurrencyId']] = $getCurrencyRation[$c]['vSymbol'];
        }
    }
    if (isset($currencyArr[$store_currency])) {
        $Ratio = $currencyArr[$store_currency];
        $currencySymbol = $currencySymbolArr[$store_currency];
    }
    //Added By HJ On 04-02-2019 For Convert All Amount In Store Wise Currency Ration End
    //Added By HJ On 15-07-2020 For Optimize food_menu Table Query Start
    $fsql = "";
    if ($MODULES_OBJ->isEnableStoreMultiServiceCategories()) {
        $fsql = " AND iServiceId = '" . $iServiceId . "'";
    }
    if (isset($orderDetailsArr['food_menu_' . $iCompanyId])) {
        $db_food_data = $orderDetailsArr['food_menu_' . $iCompanyId];
    } else {
        $db_food_data = $obj->MySQLSelect("SELECT * FROM food_menu WHERE iCompanyId='" . $iCompanyId . "' AND eStatus='Active' $fsql ORDER BY iDisplayOrder ASC");
        $orderDetailsArr['food_menu_' . $iCompanyId] = $db_food_data;
    }
    //$db_food_data = $obj->MySQLSelect("SELECT fm.* FROM food_menu as fm WHERE fm.iCompanyId = '" . $iCompanyId . "' AND fm.eStatus='Active' ORDER BY fm.iDisplayOrder ASC");
    //Added By HJ On 15-07-2020 For Optimize food_menu Table Query Start
    $MenuItemsDataArr = array();
    $itemimimgUrl = $tconfig["tsite_upload_images_menu_item"];
    if (count($db_food_data) > 0) {
        $ssql = "";
        //added by SP on 21-10-2019 for cubex design
        if ($CheckNonVegFoodType == 'Yes') {
            $ssql .= " AND (eFoodType = 'Veg' OR eFoodType = '') ";
        } else if ($CheckNonVegFoodType == 'No') {
            $ssql .= " AND (eFoodType = 'NonVeg' OR eFoodType = 'Veg' OR eFoodType = '') ";
        }
        if ($CheckNonVegFoodType == "Veg") {
            $ssql .= " AND eFoodType = 'Veg' ";
        } else if ($CheckNonVegFoodType == "NonVeg") {
            $ssql .= " AND eFoodType = 'NonVeg' ";
        } else if ($CheckNonVegFoodType == "VegNonVeg") {
            $ssql .= " AND (eFoodType = 'NonVeg' OR eFoodType = 'Veg') ";
        } else if ($CheckNonVegFoodType == "NonVegVeg") {
            $ssql .= " AND (eFoodType = 'NonVeg' OR eFoodType = 'Veg') ";
        }
        if ($searchword != "") {
            $ssql .= " AND LOWER(vItemType_" . $vLanguage . ") LIKE '%" . $searchword . "%' ";
        }
        $foodMenuIteIds = "";
        for ($h = 0; $h < count($db_food_data); $h++) {
            $foodMenuIteIds .= ",'" . $db_food_data[$h]['iFoodMenuId'] . "'";
        }
        $foodItemArr = $menuItemArr = $topingArr = $itemPriceArr = array();
        if ($foodMenuIteIds != "") {
            //Added By HJ On 15-07-2020 For langauge labele and Other Union Table Query Start
            if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId])) {
                $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId];
            } else {
                $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $iServiceId);
                $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId] = $languageLabelsArr;
            }
            //Added By HJ On 15-07-2020 For langauge labele and Other Union Table Query End
            //echo "<pre>";print_r($languageLabelsArr);die;
            $foodItems = trim($foodMenuIteIds, ",");
            //$sqlf = "SELECT mi.iMenuItemId,mi.iFoodMenuId,mi.vItemType_" . $vLanguage . " as vItemType,mi.vItemDesc_" . $vLanguage . " as vItemDesc, mi.fPrice, mi.eFoodType, mi.fOfferAmt,mi.vImage, mi.iDisplayOrder, mi.vHighlightName FROM menu_items as mi WHERE mi.iFoodMenuId IN ($foodItems) AND mi.eStatus='Active' AND mi.eAvailable = 'Yes' $ssql $ssql1 ORDER BY iDisplayOrder ASC";
            //$sqlf = "SELECT eRecommended,iMenuItemId,iFoodMenuId,vItemType_" . $vLanguage . " as vItemType,vItemDesc_" . $vLanguage . " as vItemDesc,fPrice,eFoodType,fOfferAmt,vImage,iDisplayOrder,vHighlightName,prescription_required FROM menu_items WHERE iFoodMenuId IN ($foodItems) AND eStatus='Active' AND eAvailable = 'Yes' $ssql $ssql1 ORDER BY iDisplayOrder ASC"; //prescription_required added by SP
            //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
            $def_lang = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
            $sqlf = "SELECT eRecommended,iMenuItemId,iFoodMenuId,IFNULL(NULLIF(vItemType_" . $vLanguage . ", ''),vItemType_" . $def_lang . ") as vItemType, vItemDesc_" . $vLanguage . " as vItemDesc,fPrice,eFoodType,fOfferAmt,vImage,iDisplayOrder,vHighlightName,prescription_required FROM menu_items WHERE iFoodMenuId IN ($foodItems) AND eStatus='Active' AND eAvailable = 'Yes' $ssql $ssql1 ORDER BY iDisplayOrder ASC"; //prescription_required added by SP
            $dbItemData = $obj->MySQLSelect($sqlf);
            //echo "<pre>";print_r($dbItemData);die;
            for ($d = 0; $d < count($dbItemData); $d++) {
                //Added By HJ On 17-10-2019 For Get Highlight Label Value Start
                $vHighlightNameLBL = $dbItemData[$d]['vHighlightName'];
                if (isset($languageLabelsArr[$dbItemData[$d]['vHighlightName']]) && $dbItemData[$d]['vHighlightName'] != "" && $dbItemData[$d]['vHighlightName'] != null) {
                    $vHighlightNameLBL = $languageLabelsArr[$dbItemData[$d]['vHighlightName']];
                }
                $dbItemData[$d]['vHighlightNameLBL'] = $dbItemData[$d]['vHighlightName'];
                //Added By HJ On 17-10-2019 For Get Highlight Label Value End
                if ($MODULES_OBJ->isEnableItemMultipleImageVideoUpload()) {
                    $dbItemData[$d]['MenuItemMedia'] = array();
                    $menu_item_media = $obj->MySQLSelect("SELECT * FROM menu_item_media WHERE iMenuItemId = '" . $dbItemData[$d]['iMenuItemId'] . "'");
                    if (!empty($menu_item_media)) {
                        $mCount = 0;
                        foreach ($menu_item_media as $media) {
                            $tmp = explode(".", $media['vImage']);
                            for ($i = 0; $i < count($tmp) - 1; $i++) {
                                $tmp1[] = $tmp[$i];
                            }
                            $file = implode("_", $tmp1);
                            $ext = $tmp[count($tmp) - 1];
                            $videoExt_arr = array('MP4', 'MOV', 'WMV', 'AVI', 'FLV', 'MKV', 'WEBM');
                            $dbItemData[$d]['MenuItemMedia'][$mCount]['vImage'] = $itemimimgUrl . '/' . $media['vImage'];
                            $dbItemData[$d]['MenuItemMedia'][$mCount]['eFileType'] = 'Image';
                            $dbItemData[$d]['MenuItemMedia'][$mCount]['ThumbImage'] = '';
                            if (in_array(strtoupper($ext), $videoExt_arr)) {
                                $dbItemData[$d]['MenuItemMedia'][$mCount]['vImage'] = $MENU_ITEM_MEDIA_OBJ->videoConvertTomp4($media['vImage']);
                                $dbItemData[$d]['MenuItemMedia'][$mCount]['eFileType'] = 'Video';
                                $dbItemData[$d]['MenuItemMedia'][$mCount]['ThumbImage'] = $MENU_ITEM_MEDIA_OBJ->getVideoThumbImage($media['vImage']);
                            }
                            $mCount++;
                        }
                    }
                    if (empty($dbItemData[$d]['MenuItemMedia'])) {
                        $dbItemData[$d]['MenuItemMedia'] = "";
                    }
                }
                $foodItemArr[$dbItemData[$d]['iFoodMenuId']][] = $dbItemData[$d];
                $menuItemArr[] = $dbItemData[$d]['iMenuItemId'];
            }
        }
        //echo "<pre>";print_r($menuItemArr);die;
        //echo "das<br>";
        if (count($menuItemArr) > 0) {
            $itemIds = implode(",", $menuItemArr);
            $topingArr = GetMenuItemOptionsTopping($itemIds, $currencySymbol, $Ratio, $vLanguage, $iServiceId, $iCompanyId, $currencycode);
            //$itemPriceArr = FetchMenuItemCostByStoreOffer($itemIds, $iCompanyId, 1, $iUserId, "Display", "", "");
            //echo "<pre>";print_r($itemPriceArr);die;
        }
        //echo "das<br>";
        $itemimimgUrl = $tconfig["tsite_upload_images_menu_item"];
        for ($i = 0; $i < count($db_food_data); $i++) {
            $iFoodMenuId = $db_food_data[$i]['iFoodMenuId'];
            $vMenu = $db_food_data[$i]['vMenu_' . $vLanguage];
            //$sqlf = "SELECT mi.eRecommended,mi.iMenuItemId,mi.iFoodMenuId,mi.vItemType_" . $vLanguage . " as vItemType,mi.vItemDesc_" . $vLanguage . " as vItemDesc, mi.fPrice, mi.eFoodType, mi.fOfferAmt,mi.vImage, mi.iDisplayOrder, mi.vHighlightName FROM menu_items as mi WHERE mi.iFoodMenuId = '" . $iFoodMenuId . "' AND mi.eStatus='Active' AND mi.eAvailable = 'Yes' $ssql $ssql1 ORDER BY iDisplayOrder ASC";
            //$db_item_data = $obj->MySQLSelect($sqlf);
            if (isset($foodItemArr[$iFoodMenuId])) {
                $db_item_data = $foodItemArr[$iFoodMenuId];
                for ($j = 0; $j < count($db_item_data); $j++) {
                    $db_item_data[$j]['vCategoryName'] = '';
                    if (!empty($vMenu)) {
                        $db_item_data[$j]['vCategoryName'] = $vMenu;
                    }
                    $iMenuItemId = $db_item_data[$j]['iMenuItemId'];
                    $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, 1, $iUserId, "Display", "", "", $iServiceId);
                    $fPrice = round($MenuItemPriceArr['fPrice'] * $Ratio, 2);
                    $fOfferAmt = round($MenuItemPriceArr['fOfferAmt'], 2);
                    $db_item_data[$j]['fOfferAmt'] = $fOfferAmt;
                    $db_item_data[$j]['fPrice'] = round($db_item_data[$j]['fPrice'] * $Ratio, 2);
                    $db_item_data[$j]['isShownDiscountPrice'] = "No";
                    if ($fOfferAmt > 0) {
                        $db_item_data[$j]['isShownDiscountPrice'] = "Yes";
                        $fDiscountPrice = round($MenuItemPriceArr['fPrice'] * $Ratio, 2);
                        $StrikeoutPrice = round($MenuItemPriceArr['fOriginalPrice'] * $Ratio, 2);
                        $db_item_data[$j]['StrikeoutPrice'] = formateNumAsPerCurrency($StrikeoutPrice, $currencycode);
                        $db_item_data[$j]['fDiscountPrice'] = $fDiscountPrice;
                        $db_item_data[$j]['fDiscountPricewithsymbol'] = formateNumAsPerCurrency($fDiscountPrice, $currencycode);
                        $db_item_data[$j]['currencySymbol'] = $currencySymbol;
                    } else {
                        $db_item_data[$j]['StrikeoutPrice'] = formateNumAsPerCurrency($fPrice, $currencycode);
                        $db_item_data[$j]['fDiscountPrice'] = $fPrice;
                        $db_item_data[$j]['fDiscountPricewithsymbol'] = formateNumAsPerCurrency($fPrice, $currencycode);
                        $db_item_data[$j]['currencySymbol'] = $currencySymbol;
                    }
                    $itemimgpth = $tconfig["tsite_upload_images_menu_item_path"] . '/' . $db_item_data[$j]['vImage'];
                    if ($db_item_data[$j]['vImage'] != "" && file_exists($itemimgpth)) {
                        $db_item_data[$j]['vImageName'] = $db_item_data[$j]['vImage'];
                        $db_item_data[$j]['vImage'] = $itemimimgUrl . '/' . $db_item_data[$j]['vImage'];
                    } else {
                        $db_item_data[$j]['vImageName'] = '';
                        $db_item_data[$j]['vImage'] = $itemimimgUrl . '/sample_image.png';
                    }
                    if ($MODULES_OBJ->isEnableItemMultipleImageVideoUpload()) {
                        $MenuItemMediaArr = $db_item_data[$j]['MenuItemMedia'];
                        $db_item_data[$j]['vImage'] = '';
                        if ($MenuItemMediaArr[0]['eFileType'] == 'Video') {
                            $db_item_data[$j]['vImage'] = $MenuItemMediaArr[0]['ThumbImage'];
                        } else {
                            $db_item_data[$j]['vImage'] = $MenuItemMediaArr[0]['vImage'];
                        }
                    }
                    if ($iServiceId != '1') {
                        $db_item_data[$j]['eFoodType'] = '';
                    }
                    //$MenuItemOptionToppingArr = GetMenuItemOptionsTopping($iMenuItemId, $currencySymbol, $Ratio, $vLanguage, $iServiceId);
                    $MenuItemOptionToppingArr = $customeToppings = array();
                    if (isset($topingArr[$iMenuItemId])) {
                        $MenuItemOptionToppingArr = $topingArr[$iMenuItemId];
                    }
                    $db_item_data[$j]['MenuItemOptionToppingArr'] = $MenuItemOptionToppingArr;
                    array_push($MenuItemsDataArr, $db_item_data[$j]);
                }
            }
        }
    }
    /*   $sqlf = "SELECT mi.iMenuItemId,mi.iFoodMenuId,mi.vItemType_".$vLanguage." as vItemType,mi.vItemDesc_".$vLanguage." as vItemDesc,mi.fPrice,mi.eFoodType,mi.fOfferAmt,mi.vImage,mi.iDisplayOrder FROM menu_items as mi LEFT JOIN food_menu as f on f.iFoodMenuId=mi.iFoodMenuId LEFT JOIN company as c on c.iCompanyId=f.iCompanyId WHERE mi.eStatus='Active' AND mi.eAvailable = 'Yes' AND f.iCompanyId = '".$restaId."'  $ssql ORDER BY RAND()";

      $db_item_data = $obj->MySQLSelect($sqlf);

      for($j=0;$j<count($db_item_data);$j++){

      $fPrice= round($db_item_data[$j]['fPrice']*$Ratio,2);

      $db_item_data[$j]['fPrice'] = formatNum($fPrice);

      if($db_item_data[$j]['vImage'] != ""){

      $db_item_data[$j]['vImage'] = $tconfig["tsite_upload_images_menu_item"]."/".$db_item_data[$j]['vImage'];

      }

  } */ // $returnArr['Recomendation_Arr'] = $MenuItemsDataArr;
    // echo "<pre>";print_r($returnArr);exit;
    return $MenuItemsDataArr;
}

function CheckUserSmsLimit($iMemberId, $UserType = "Passenger")
{
    global $obj, $tconfig, $VERIFICATION_CODE_RESEND_COUNT, $VERIFICATION_CODE_RESEND_TIME_IN_SECONDS, $iServiceId, $LANG_OBJ;
    if ($UserType == "Passenger") {
        $tblname = "register_user";
        $fields = 'vVerificationCount,dSendverificationDate,vLang';
        $condfield = 'iUserId';
    } else if ($UserType == "Company") {
        $tblname = "company";
        $fields = 'vVerificationCount,dSendverificationDate,vLang';
        $condfield = 'iCompanyId';
    } else {
        $tblname = "register_driver";
        $fields = 'vVerificationCount,dSendverificationDate,vLang';
        $condfield = 'iDriverId';
    }
    $sql = "select $fields from $tblname where $condfield='" . $iMemberId . "'";
    $db_user = $obj->MySQLSelect($sql);
    $vVerificationCount = $db_user[0]['vVerificationCount'];
    $dSendverificationDate = $db_user[0]['dSendverificationDate'];
    if (($dSendverificationDate < $currentdate) && $dSendverificationDate != "0000-00-00 00:00:00") {
        $updateQuery = "UPDATE $tblname set dSendverificationDate='0000-00-00 00:00:00',vVerificationCount = 0 WHERE $condfield = " . $iMemberId;
        $obj->sql_query($updateQuery);
        $vVerificationCount = 0;
        $dSendverificationDate = "0000-00-00 00:00:00";
    }
    $vLang = $db_user[0]['vLang'];
    if ($vLang == "" || $vLang == NULL) {
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
        $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
    $currentdate = @date("Y-m-d H:i:s");
    $totalMinute = @round(abs(strtotime($dSendverificationDate) - strtotime($currentdate)) / 60);
    $totalSeconds = @round(abs(strtotime($dSendverificationDate) - strtotime($currentdate)));
    $hours = floor($totalSeconds / 3600);
    $mins = floor(($totalSeconds / 60) % 60);
    $seconds = $totalSeconds % 60;
    /*  $hours = floor($totalMinute / 60); // No. of mins/60 to get the hours and round down

    $mins = $totalMinute % 60; // No. of mins/60 - remainder (modulus) is the minutes*/
    $LBL_HOURS_TXT = ($hours > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
    // $LBL_MINUTES_TXT = ($mins > 1)? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
    $LBL_MINUTES_TXT = ($mins > 1) ? $languageLabelsArr['LBL_MINS_SMALL'] : $languageLabelsArr['LBL_MINUTE'];
    $LBL_SECONDS_TXT = $languageLabelsArr['LBL_SECONDS_TXT'];
    /*if ($hours >= 1) {

        $timeDurationDisplay = $hours . " " . $LBL_HOURS_TXT . " " . $mins . " " . $LBL_MINUTES_TXT;

    } else {

        $timeDurationDisplay = $mins . " " . $LBL_MINUTES_TXT;

    }*/
    if ($hours >= 1) {
        $timeDurationDisplay = $hours . " " . $LBL_HOURS_TXT . " " . $mins . " " . $LBL_MINUTES_TXT . " " . $seconds . " " . $LBL_SECONDS_TXT;
    } else if ($mins > 0) {
        $timeDurationDisplay = $mins . " " . $LBL_MINUTES_TXT . " " . $seconds . " " . $LBL_SECONDS_TXT;
    } else {
        $timeDurationDisplay = $seconds . " " . $LBL_SECONDS_TXT;
    }
    $message = $languageLabelsArr['LBL_SMS_MAXIMAM_LIMIT_TXT'] . " " . $timeDurationDisplay;
    if (($dSendverificationDate < $currentdate) && $dSendverificationDate != "0000-00-00 00:00:00") {
        $updateQuery = "UPDATE $tblname set dSendverificationDate='0000-00-00 00:00:00',vVerificationCount = 0 WHERE $condfield = " . $iMemberId;
        $obj->sql_query($updateQuery);
        $vVerificationCount = 0;
        $dSendverificationDate = "0000-00-00 00:00:00";
    }
    if ($vVerificationCount == $VERIFICATION_CODE_RESEND_COUNT) {
        $returnArr['Action'] = "0";
        $returnArr['message'] = $message;
        setDataResponse($returnArr);
    }
    return $iMemberId;
}

function UpdateUserSmsLimit($iMemberId, $UserType = "Passenger")
{
    global $obj, $tconfig, $VERIFICATION_CODE_RESEND_COUNT, $VERIFICATION_CODE_RESEND_COUNT_RESTRICTION;
    if ($UserType == "Passenger") {
        $tblname = "register_user";
        $fields = 'vVerificationCount,dSendverificationDate';
        $condfield = 'iUserId';
    } else if ($UserType == "Company") {
        $tblname = "company";
        $fields = 'vVerificationCount,dSendverificationDate';
        $condfield = 'iCompanyId';
    } else {
        $tblname = "register_driver";
        $fields = 'vVerificationCount,dSendverificationDate';
        $condfield = 'iDriverId';
    }
    $sql = "select $fields from $tblname where $condfield='" . $iMemberId . "'";
    $db_user = $obj->MySQLSelect($sql);
    $vVerificationCount = $db_user[0]['vVerificationCount'];
    $dSendverificationDate = $db_user[0]['dSendverificationDate'];
    $currentdate = @date("Y-m-d H:i:s");
    $checklastcount = $VERIFICATION_CODE_RESEND_COUNT - 1;
    if ($vVerificationCount == $checklastcount) {
        $minutes = $VERIFICATION_CODE_RESEND_COUNT_RESTRICTION;
        $expire_stamp = date('Y-m-d H:i:s', strtotime("+" . $minutes . " minute"));
        $updateQuery = "UPDATE $tblname set dSendverificationDate='" . $expire_stamp . "',vVerificationCount = vVerificationCount+1 WHERE $condfield = " . $iMemberId;
        $obj->sql_query($updateQuery);
    } else {
        $vVerificationCount = $vVerificationCount + 1;
        if ($vVerificationCount > $VERIFICATION_CODE_RESEND_COUNT) {
            $vVerificationCount = $VERIFICATION_CODE_RESEND_COUNT;
        }
        $updateQuery = "UPDATE $tblname set vVerificationCount = '" . $vVerificationCount . "' WHERE $condfield = " . $iMemberId;
        $obj->sql_query($updateQuery);
    }
    return $iMemberId;
}

function CheckUserSmsLimitForEmergency($iMemberId, $UserType = "Passenger")
{
    global $obj, $tconfig, $VERIFICATION_CODE_RESEND_COUNT_EMERGENCY, $VERIFICATION_CODE_RESEND_TIME_IN_SECONDS_EMERGENCY, $LANG_OBJ;
    if ($UserType == "Passenger") {
        $tblname = "register_user";
        $fields = 'vVerificationCountEmergency,dSendverificationDateEmergency,vLang';
        $condfield = 'iUserId';
    } else {
        $tblname = "register_driver";
        $fields = 'vVerificationCountEmergency,dSendverificationDateEmergency,vLang';
        $condfield = 'iDriverId';
    }
    $sql = "SELECT * FROM user_emergency_contact WHERE iUserId = '" . $iMemberId . "' AND eUserType='" . $UserType . "'";
    $dataArr = $obj->MySQLSelect($sql);
    if (count($dataArr) == 0) {
        $returnArr['Action'] = "0";
        $returnArr['message'] = "LBL_ADD_EME_CONTACTS";
        $returnArr['message1'] = "ContactError";
        setDataResponse($returnArr);
    }
    $sql = "select $fields from $tblname where $condfield='" . $iMemberId . "'";
    $db_user = $obj->MySQLSelect($sql);
    $vVerificationCount = $db_user[0]['vVerificationCountEmergency'];
    $dSendverificationDate = $db_user[0]['dSendverificationDateEmergency'];
    $vLang = $db_user[0]['vLang'];
    if ($vLang == "" || $vLang == NULL) {
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
        $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1");
    $currentdate = @date("Y-m-d H:i:s");
    $totalMinute = @round(abs(strtotime($dSendverificationDate) - strtotime($currentdate)) / 60);
    $totalSeconds = abs(strtotime($dSendverificationDate) - strtotime($currentdate));
    $hours = floor($totalMinute / 60); // No. of mins/60 to get the hours and round down
    $mins = $totalMinute % 60; // No. of mins/60 - remainder (modulus) is the minutes
    $LBL_HOURS_TXT = ($hours > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
    //$LBL_MINUTES_TXT = ($mins > 1)? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
    $LBL_MINUTES_TXT = ($mins > 1) ? $languageLabelsArr['LBL_MINS_SMALL'] : $languageLabelsArr['LBL_MINUTE'];
    if ($hours >= 1) {
        $timeDurationDisplay = $hours . " " . $LBL_HOURS_TXT . " " . $mins . " " . $LBL_MINUTES_TXT;
    } else {
        if ($mins > 1) {
            $timeDurationDisplay = $mins . " " . $LBL_MINUTES_TXT;
        } else {
            $timeDurationDisplay = $totalSeconds . " " . $languageLabelsArr['LBL_SECONDS_TXT'];
        }
    }
    $message = $languageLabelsArr['LBL_SMS_MAXIMAM_LIMIT_TXT'] . " " . $timeDurationDisplay;
    if (($dSendverificationDate < $currentdate) && $dSendverificationDate != "0000-00-00 00:00:00") {
        $updateQuery = "UPDATE $tblname set dSendverificationDateEmergency='0000-00-00 00:00:00',vVerificationCountEmergency = 0 WHERE $condfield = " . $iMemberId;
        $obj->sql_query($updateQuery);
        $vVerificationCount = 0;
        $dSendverificationDate = "0000-00-00 00:00:00";
    }
    $totalSeconds1 = abs(strtotime($dSendverificationDate) - strtotime($currentdate));
    if ($totalSeconds1 < $VERIFICATION_CODE_RESEND_TIME_IN_SECONDS_EMERGENCY) {
        $returnArr['Action'] = "0";
        $returnArr['message'] = $message;
        $returnArr['message1'] = "SmsError";
        setDataResponse($returnArr);
    }
    if ($vVerificationCount == $VERIFICATION_CODE_RESEND_COUNT_EMERGENCY) {
        $returnArr['Action'] = "0";
        $returnArr['message'] = $message;
        $returnArr['message1'] = "SmsError";
        setDataResponse($returnArr);
    }
    return $iMemberId;
}

function ChangeDriverVehicleRideDeliveryFeatureDisable($iDriverId)
{
    global $obj, $APP_TYPE;
    $eShowRideVehicles = "Yes";
    $eShowDeliveryVehicles = "Yes";
    $sqldata = "SELECT iTripId FROM `trips` WHERE ( iActive='On Going Trip' OR iActive='Active' ) AND iDriverId='" . $iDriverId . "'";
    $TripData = $obj->MySQLSelect($sqldata);
    $TripRunCount = count($TripData);
    if ($APP_TYPE == "Ride-Delivery-UberX" && $TripRunCount == 0) {
        $RideDeliveryIconArr = getGeneralVarAll_IconBanner();
        for ($i = 0; $i < count($RideDeliveryIconArr); $i++) {
            $vName = $RideDeliveryIconArr[$i]['vName'];
            $vValue = $RideDeliveryIconArr[$i]['vValue'];
            $$vName = $vValue;
            $Data[0][$vName] = $$vName;
        }
        $checkridedelivery = CheckRideDeliveryFeatureDisable();
        $eShowRideVehicles = $checkridedelivery['eShowRideVehicles'];
        $eShowDeliveryVehicles = $checkridedelivery['eShowDeliveryVehicles'];
        $sql = "SELECT eType,dv.vCarType FROM `driver_vehicle` as dv LEFT JOIN register_driver as rd ON dv.iDriverVehicleId=rd.iDriverVehicleId WHERE rd.iDriverId='" . $iDriverId . "'";
        $DriverVehicleType = $obj->MySQLSelect($sql);
        $vCarType = $DriverVehicleType[0]['vCarType'];
        $sql1 = "SELECT eType,iVehicleTypeId FROM  `vehicle_type` WHERE iVehicleTypeId IN (" . $vCarType . ")";
        $VehicleTypeData = $obj->MySQLSelect($sql1);
        $vehiclearray = array();
        foreach ($VehicleTypeData as $key => $value) {
            $vehiclearray[] = $value['eType'];
        }
        if ($eShowRideVehicles == 'No' && (count(array_unique($vehiclearray)) === 1 && end($vehiclearray) === 'Ride')) {
            $sql = "UPDATE register_driver set iDriverVehicleId='0' WHERE iDriverId='" . $iDriverId . "'";
            $obj->sql_query($sql);
        }
        if ($eShowDeliveryVehicles == 'No' && (count(array_unique($vehiclearray)) === 1 && end($vehiclearray) === 'Deliver')) {
            $sql = "UPDATE register_driver set iDriverVehicleId='0' WHERE iDriverId='" . $iDriverId . "'";
            $obj->sql_query($sql);
        }
    }
    return $iDriverId;
}

function GetSessionMemberType()
{
    if ((isset($_SESSION['sess_iUserId']) && !empty($_SESSION['sess_iUserId'])) || (isset($_SESSION['sess_iAdminUserId']) && !empty($_SESSION['sess_iAdminUserId']))) {
        if ((isset($_SESSION['sess_iAdminUserId']) && !empty($_SESSION['sess_iAdminUserId']))) {
            return "admin";
        } elseif ((isset($_SESSION['sess_user']) && !empty($_SESSION['sess_user']) && $_SESSION['sess_user'] == 'rider')) {
            return "user";
        } elseif ((isset($_SESSION['postDetail']) && !empty($_SESSION['postDetail']) && $_SESSION['postDetail']['user_type'] == 'company' && $_SESSION['sess_eSystem'] == 'DeliverAll')) {
            return "store";
        } else {
            return "guest";
        }
    } else {
        return "guest";
    }
}

function GetPagewiseSessionMemberType($page_name_mr)
{
    global $obj, $userObj, $tconfig;
    $user_type = GetSessionMemberType();
    $fromOrder = $loggedInUserType = "guest";

    if($_REQUEST['order'] == "restaurant"){
        $_REQUEST['order'] = "store";
    }
    
    if (isset($_REQUEST['order']) && $_REQUEST['order'] != "") {
        $fromOrder = $_REQUEST['order'];
    }


    checkCartItemStatus($fromOrder); // Added By HJ On 18-01-2020 For Check Cart's Item Status 141 Mantis Bug - #2367
    $userSession = "MANUAL_ORDER_" . strtoupper($fromOrder);
    $orderServiceSession = "MAUAL_ORDER_SERVICE_" . strtoupper($fromOrder);
    $orderUserIdSession = "MANUAL_ORDER_USERID_" . strtoupper($fromOrder);
    $orderAddressIdSession = "MANUAL_ORDER_ADDRESSID_" . strtoupper($fromOrder);
    $orderAddressSession = "MANUAL_ORDER_ADDRESS_" . strtoupper($fromOrder);
    $orderLatitudeSession = "MANUAL_ORDER_LATITUDE_" . strtoupper($fromOrder);
    $orderLongitudeSession = "MANUAL_ORDER_LONGITUDE_" . strtoupper($fromOrder);
    $orderUserSession = "MANUAL_ORDER_USER_" . strtoupper($fromOrder);
    $orderUserNameSession = "MANUAL_ORDER_USER_NAME_" . strtoupper($fromOrder);
    $orderCompanyNameSession = "MANUAL_ORDER_COMPANY_NAME_" . strtoupper($fromOrder);
    $orderUserEmailSession = "MANUAL_ORDER_USER_EMAIL_" . strtoupper($fromOrder);
    getCurrencyUserWiseMr($fromOrder);
    $_SESSION[$userSession] = $fromOrder;
    $extraParameter = "?order=" . $fromOrder;
    $loggedInUserId = 0;
    $screenName = "store-listing";
    if ($page_name_mr == "customer_info") {
        $screenName = "user-order-information";
    } else if ($page_name_mr == "restaurant_place-order") {
        $screenName = "store-order";
    } else if ($page_name_mr == "restaurant_menu") {
        $screenName = "store-items";
    } else if ($page_name_mr == "restaurant_listing") {
        $screenName = "store-listing";
    }
    
    
    $changedUser = "";
    if (isset($_SESSION['sess_iUserId'])) {
        $loggedInUserId = $_SESSION['sess_iUserId'];
    }
    if (isset($_SESSION['sess_user'])) {
        $loggedInUserType = strtolower($_SESSION['sess_user']);
    }
    if (isset($_SESSION['sess_iUserId']) && $_SESSION['sess_iUserId'] != "" && $fromOrder == "guest" && $loggedInUserType != "driver" && $loggedInUserType != "organization") {
        $changedUser = "user";
        changeManualOrderSession($fromOrder, $changedUser);
        header('Location: ' . $tconfig['tsite_url'] . $screenName . "?order=" . $changedUser);
        exit;
    }
    if ($loggedInUserId > 0 && $fromOrder != "user" && $user_type == "user") {
        $changedUser = "user";
        changeManualOrderSession($fromOrder, $changedUser);
    } else if ($loggedInUserId == 0 && $fromOrder == "user") {
        $changedUser = "guest";
        changeManualOrderSession($fromOrder, $changedUser);
    }

    if ($changedUser != "") {
        header('Location:' . $tconfig['tsite_url'] . $screenName . "?order=" . $changedUser);
    }
    if (isset($_SESSION['sess_iAdminUserId']) && $_SESSION['sess_iAdminUserId'] > 0 && $fromOrder == 'admin') {
        $_SESSION[$orderUserSession] = $_SESSION['sess_iAdminUserId'];
        $page_name_mr_array = array('customer_info', 'service_listing', 'restaurant_listing', 'restaurant_menu', 'restaurant_place-order');
        if (!isset($userObj) || empty($userObj)) {
            include_once($tconfig['tpanel_path'] . "/" . SITE_ADMIN_URL . "/library/common_include.php");
            $userObj = new Admin\library\User();
        }
        if (!$userObj->hasPermission('manage-restaurant-order')) {
            $userObj->redirect();
        }
        if (in_array($page_name_mr, $page_name_mr_array)) {
            if ($page_name_mr != 'customer_info') {
                if (empty($_SESSION[$orderAddressIdSession]) && empty($_SESSION[$userSession]) && $_SESSION[$userSession] == 'admin') {
                    header('Location:user-order-information' . $extraParameter);
                }
            }
        } else {
            if ($page_name_mr != 'customer_info') {
                if (!empty($_SESSION[$orderAddressIdSession]) && !empty($_SESSION[$userSession]) && $_SESSION[$userSession] == 'admin' && !empty($_SESSION[$orderServiceSession])) {
                    header('Location:store-listing' . $extraParameter);
                } else {
                    header('Location:user-order-information' . $extraParameter);
                }
            }
        }
    } else if (isset($_SESSION['sess_iUserId']) && $_SESSION['sess_iUserId'] > 0 && ($fromOrder == 'store') && $_SESSION['sess_user'] != "driver") {
        $_SESSION[$orderUserSession] = $_SESSION['sess_iUserId'];
        $page_name_mr_array = array('customer_info', 'restaurant_menu', 'restaurant_place-order');
        if (in_array($page_name_mr, $page_name_mr_array)) {
            if ($page_name_mr != 'customer_info') {
                if (empty($_SESSION[$orderAddressIdSession]) && empty($_SESSION[$userSession]) && $_SESSION[$userSession] == 'store') {
                    header('Location:user-order-information' . $extraParameter);
                }
            }
        } else {
            if ($page_name_mr != 'customer_info') {
                if (!empty($_SESSION[$orderAddressIdSession]) && !empty($_SESSION[$userSession]) && $_SESSION[$userSession] == 'store') {
                    header('Location:store-items?id=' . $_SESSION['sess_iUserId'] . "&order=" . $fromOrder);
                    exit;
                } else {
                    header('Location:user-order-information' . $extraParameter);
                }
            }
        }
    } else if ($fromOrder == 'user') {
        if ($_SESSION['sess_user'] == "driver" || $_SESSION['sess_user'] == "company") {
            header('Location:profile');
        }
        $_SESSION[$orderUserSession] = 0;
        $page_name_mr_array = array('user_info', 'service_listing', 'restaurant_listing', 'restaurant_menu', 'restaurant_place-order', 'thank_you');
        if (in_array($page_name_mr, $page_name_mr_array)) {
            if (!empty($_SESSION[$orderLatitudeSession]) && !empty($_SESSION[$orderLongitudeSession]) && empty($_SESSION[$orderUserIdSession])) {
                $_SESSION[$orderUserIdSession] = $_SESSION['sess_iUserId'];
                $_SESSION[$orderUserNameSession] = $_SESSION['sess_vName'];
                $_SESSION[$orderCompanyNameSession] = "";
                $_SESSION[$orderUserEmailSession] = $_SESSION['sess_vEmail'];
                $_SESSION[$orderAddressIdSession] = "";
                //$_SESSION["sess_user_mr"] = "rider";
                $maildata['EMAIL_mr'] = $_SESSION[$orderUserEmailSession];
                $maildata['NAME_mr'] = $_SESSION[$orderUserNameSession];
            }
            if (empty($_SESSION[$orderLatitudeSession]) && empty($_SESSION[$orderLongitudeSession]) && empty($_SESSION[$orderAddressSession]) && empty($_SESSION[$orderServiceSession]) && $page_name_mr != 'user_info') {
                header('Location:order-items' . $extraParameter);
            }
            // echo "<pre>"; print_r($_SESSION); echo $userSession; exit();
            if ($_SESSION['sess_user'] == 'company' && isset($_SESSION['MANUAL_ORDER_STORE']) && $_SESSION['MANUAL_ORDER_STORE'] == "store") {
                header('Location:user-order-information?order=store');
            }
            //if (!empty($_SESSION[$orderLatitudeSession]) && !empty($_SESSION[$orderLongitudeSession]) && !empty($_SESSION[$orderAddressSession]) && !empty($_SESSION[$orderServiceSession])) {
            //    header('Location:store-listing' . $extraParameter);exit;
            //} else {
            //
            //    if ($page_name_mr != 'restaurant_menu' && $page_name_mr != 'user_info') {
            //        header('Location:order-items' . $extraParameter);
            //    }
            //}
        } else {
            if (!empty($_SESSION[$orderLatitudeSession]) && !empty($_SESSION[$orderLongitudeSession]) && !empty($_SESSION[$orderAddressSession]) && !empty($_SESSION[$orderServiceSession])) {
                header('Location:store-listing' . $extraParameter);
            } else {
                //if ($page_name_mr != 'user_info' && $page_name_mr!='customer_info') {
                if ($page_name_mr != 'user_info') {
                    header('Location:order-items' . $extraParameter);
                }
            }
        }
    } else if ($fromOrder == 'guest') {
        if ($_SESSION['sess_user'] == "driver" || $_SESSION['sess_user'] == "company") {
            header('Location:profile');
        }
        $page_name_mr_array = array('user_info', 'service_listing', 'restaurant_listing', 'restaurant_menu', 'restaurant_place-order', 'thank_you');

        if (in_array($page_name_mr, $page_name_mr_array)) {
            //$_SESSION['sess_currentpage_url_mr'] = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            
            if (empty($_SESSION[$orderLatitudeSession]) && empty($_SESSION[$orderLongitudeSession]) && empty($_SESSION[$orderAddressSession]) && empty($_SESSION[$orderServiceSession]) && $page_name_mr != 'user_info') { 
                header('Location:order-items' . $extraParameter);
            }
             
        } else {
            if (!empty($_SESSION[$orderLatitudeSession]) && !empty($_SESSION[$orderLongitudeSession]) && !empty($_SESSION[$orderAddressSession]) && !empty($_SESSION[$orderServiceSession])) {
                header('Location:store-listing' . $extraParameter);
            } else {
                if ($page_name_mr != 'user_info') {
                    header('Location:order-items' . $extraParameter);
                }
            }
        }

    } else {

        $extraParameter = "?order=guest";
        header('Location:order-items' . $extraParameter);
    }
}

// Added By HJ On 18-01-2020 For Check Cart's Item Status 141 Mantis Bug - #2367 Start
function checkCartItemStatus($fromOrder)
{
    global $obj;
    $orderDetailsSession = "ORDER_DETAILS_" . strtoupper($fromOrder);
    //echo "<pre>";print_r($_SESSION[$orderDetailsSession]);die;
    $newItemArr = array();
    if (isset($_SESSION[$orderDetailsSession])) {
        $OrderDetails = json_encode($_SESSION[$orderDetailsSession]);
        $OrderDetails = json_decode(stripcslashes($OrderDetails), true);
        if (count($OrderDetails) > 0) {
            unset($_SESSION[$orderDetailsSession]);
            $getItemStatus = $obj->MySQLSelect("SELECT iMenuItemId,eStatus FROM menu_items");
            //echo "<pre>";print_r($_SESSION[$orderDetailsSession]);die;
            $itemStatusArr = array();
            for ($l = 0; $l < count($getItemStatus); $l++) {
                $itemStatusArr[$getItemStatus[$l]['iMenuItemId']] = $getItemStatus[$l]['eStatus'];
            }
            ///echo "<pre>";print_r($itemStatusArr);die;
            for ($j = 0; $j < count($OrderDetails); $j++) {
                $itemId = $OrderDetails[$j]['iMenuItemId'];
                $itemStatus = "Inactive";
                if (isset($itemStatusArr[$itemId])) {
                    $itemStatus = $itemStatusArr[$itemId];
                }
                if (strtolower(trim($itemStatus)) != "inactive") {
                    $newItemArr[] = $OrderDetails[$j];
                }
            }
        }
    }
    $_SESSION[$orderDetailsSession] = $newItemArr;
}

// Added By HJ On 18-01-2020 For Check Cart's Item Status 141 Mantis Bug - #2367 End
function getCurrencyUserWiseMr($user_type)
{
    //$user_type = GetSessionMemberType();
    $orderCurrencyNameSession = "MANUAL_ORDER_CURRENCY_NAME_" . strtoupper($user_type);
    if ($user_type == 'admin') {
        $_SESSION[$orderCurrencyNameSession] = $_SESSION["sess_currency"];
        $_SESSION["sess_vCurrency"] = $_SESSION["sess_currency"];
    } else if ($user_type == 'store' && $sess_eSystem = 'DeliverAll') {
        $_SESSION[$orderCurrencyNameSession] = $_SESSION["sess_currency"];
    } else if ($user_type == 'user') {
        $_SESSION[$orderCurrencyNameSession] = $_SESSION["sess_vCurrency"];
    }
}

function getMenuCustomeAllToppings($iMenuItemId, $currencySymbol, $Ratio, $vLanguage, $eFor, $currencycode = "")
{
    global $obj, $tconfig;
    $returnArr = array();
    $ssql = "";
    //echo $eFor;die
    if ($eFor == 1) {
        $ssql = "";
        $sql = "SELECT mo.*,fm.iFoodMenuId,co.iCompanyId FROM menuitem_options as mo LEFT JOIN menu_items as mi ON mo.iMenuItemId=mi.iMenuItemId LEFT JOIN food_menu as fm ON mi.iFoodMenuId=fm.iFoodMenuId LEFT JOIN company as co ON fm.iCompanyId=co.iCompanyId WHERE co.iCompanyId IN ($iMenuItemId) AND mi.eStatus = 'Active' AND `eOptionType` NOT IN ('Options',  'Addon') AND mo.eStatus='Active' AND mi.eAvailable = 'Yes'" . $ssql;
    } else {
        $sql = "SELECT mo.*,fm.iFoodMenuId FROM menuitem_options mo LEFT JOIN menu_items as mi ON mo.iMenuItemId=mi.iMenuItemId LEFT JOIN food_menu as fm ON mi.iFoodMenuId=fm.iFoodMenuId WHERE mo.iMenuItemId IN ($iMenuItemId) AND `eOptionType` NOT IN ('Options',  'Addon') AND mo.eStatus = 'Active'";
    }
    //echo $sql;die;
    $db_options_data = $obj->MySQLSelect($sql);
    //echo "<pre>";print_r($db_options_data);die;
    $menuItemArr = array();
    for ($i = 0; $i < count($db_options_data); $i++) {
        $iMenuItemId = $db_options_data[$i]['iMenuItemId'];
        $eOptionType = $db_options_data[$i]['eOptionType'];
        $eOptionInputType = $db_options_data[$i]['eOptionInputType'];
        $vOptionMinSelection = $db_options_data[$i]['vOptionMinSelection'];
        $vOptionMaxSelection = $db_options_data[$i]['vOptionMaxSelection'];
        $fPrice = $db_options_data[$i]['fPrice'];
        $fUserPrice = number_format($fPrice * $Ratio, 2);
        $fUserPriceWithSymbol = formateNumAsPerCurrency($fUserPrice, $currencycode);
        $db_options_data[$i]['fUserPrice'] = $fUserPrice;
        $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
        //$returnArr = array();
        if (!empty($db_options_data[$i]['vImage']) && file_exists($tconfig['tsite_upload_images_menu_item_options_path'] . $db_options_data[$i]['vImage'])) {
            $db_options_data[$i]['vImage'] = $tconfig['tsite_upload_images_menu_item_options'] . $db_options_data[$i]['vImage'];
        }
        if (isset($db_options_data[$i]['tOptionNameLang']) && !empty($db_options_data[$i]['tOptionNameLang'])) {
            $tOptionNameLang = json_decode(trim($db_options_data[$i]['tOptionNameLang'], '"'), true);
            if (isset($tOptionNameLang['tOptionNameLang_' . $vLanguage]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLanguage])) {
                $db_options_data[$i]['vOptionName'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
            }
            $db_options_data[$i]['tOptionNameLang'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
        }
        $returnArr[$iMenuItemId][$eOptionType]['eOptionType'] = $eOptionType;
        $returnArr[$iMenuItemId][$eOptionType]['iMenuItemId'] = $db_options_data[$i]['iMenuItemId'];
        $returnArr[$iMenuItemId][$eOptionType]['iFoodMenuId'] = $db_options_data[$i]['iFoodMenuId'];
        $returnArr[$iMenuItemId][$eOptionType]['eOptionInputType'] = $eOptionInputType;
        $returnArr[$iMenuItemId][$eOptionType]['vOptionMinSelection'] = $vOptionMinSelection;
        $returnArr[$iMenuItemId][$eOptionType]['vOptionMaxSelection'] = $vOptionMaxSelection;
        $returnArr[$iMenuItemId][$eOptionType]['subItemArr'][] = $db_options_data[$i];
        //$menuItemArr[$iMenuItemId][] =  $returnArr;
    }
    //echo "<pre>";print_r($returnArr);die;
    $finalReturnArr = array();
    foreach ($returnArr as $key => $val) {
        foreach ($val as $key1 => $val2) {
            //echo "<pre>";print_r($val2);die;
            $finalReturnArr[$key][] = $val2;
        }
    }
    //echo "<pre>";print_r($finalReturnArr);die;
    return $finalReturnArr;
}

function getAllOptionAddonPriceArr()
{
    global $obj;
    $optionPriceArr = array();
    $getAllMenuOptionPrice = $obj->MySQLSelect("select iMenuItemId,fPrice,iOptionId from `menuitem_options`");
    for ($r = 0; $r < count($getAllMenuOptionPrice); $r++) {
        if (isset($optionPriceArr[$getAllMenuOptionPrice[$r]['iOptionId']])) {
            $optionPriceArr[$getAllMenuOptionPrice[$r]['iOptionId']] += $getAllMenuOptionPrice[$r]['fPrice'];
        } else {
            $optionPriceArr[$getAllMenuOptionPrice[$r]['iOptionId']] = $getAllMenuOptionPrice[$r]['fPrice'];
        }
    }
    return $optionPriceArr;
}

function getAllMenuItemPriceArr()
{
    global $obj;
    $ordItemPriceArr = array();
    $getAllItemsPrice = $obj->MySQLSelect("select fPrice,iMenuItemId from menu_items");
    for ($ai = 0; $ai < count($getAllItemsPrice); $ai++) {
        $ordItemPriceArr[$getAllItemsPrice[$ai]['iMenuItemId']] = $getAllItemsPrice[$ai]['fPrice'];
    }
    return $ordItemPriceArr;
}

function changeManualOrderSession($existSession, $changeSession)
{
    $existSession = strtoupper($existSession);
    $changeSession = strtoupper($changeSession);
    $userSession = "MANUAL_ORDER_";
    $orderDetailsSession = "ORDER_DETAILS_";
    $orderServiceSession = "MAUAL_ORDER_SERVICE_";
    $orderUserIdSession = "MANUAL_ORDER_USERID_";
    $orderAddressIdSession = "MANUAL_ORDER_ADDRESSID_";
    $orderAddressSession = "MANUAL_ORDER_ADDRESS_";
    $orderCouponSession = "MANUAL_ORDER_PROMOCODE_";
    $orderCouponNameSession = "MANUAL_ORDER_PROMOCODE_NAME_";
    $orderCurrencyNameSession = "MANUAL_ORDER_CURRENCY_NAME_";
    $orderLatitudeSession = "MANUAL_ORDER_LATITUDE_";
    $orderLongitudeSession = "MANUAL_ORDER_LONGITUDE_";
    $orderServiceNameSession = "MANUAL_ORDER_SERVICE_NAME_";
    $orderDataSession = "MANUAL_ORDER_DATA_";
    $orderUserSession = "MANUAL_ORDER_USER_";
    $orderUserNameSession = "MANUAL_ORDER_USER_NAME_";
    $orderCompanyNameSession = "MANUAL_ORDER_COMPANY_NAME_";
    $orderUserEmailSession = "MANUAL_ORDER_USER_EMAIL_";
    $orderStoreIdSession = "MANUAL_ORDER_STORE_ID_";
    $_SESSION[$userSession . $changeSession] = $_SESSION[$userSession . $existSession];
    $_SESSION[$orderDetailsSession . $changeSession] = $_SESSION[$orderDetailsSession . $existSession];
    $_SESSION[$orderServiceSession . $changeSession] = $_SESSION[$orderServiceSession . $existSession];
    $_SESSION[$orderUserIdSession . $changeSession] = $_SESSION[$orderUserIdSession . $existSession];
    $_SESSION[$orderAddressIdSession . $changeSession] = $_SESSION[$orderAddressIdSession . $existSession];
    $_SESSION[$orderAddressSession . $changeSession] = $_SESSION[$orderAddressSession . $existSession];
    $_SESSION[$orderCouponSession . $changeSession] = $_SESSION[$orderCouponSession . $existSession];
    //$_SESSION[$orderCouponNameSession . $changeSession] = $_SESSION[$orderCouponNameSession . $existSession];
    //$_SESSION[$orderCouponSession . $changeSession] = $_SESSION[$orderCouponSession . $existSession];
    $_SESSION[$orderCouponNameSession . $changeSession] = "";
    $_SESSION[$orderCurrencyNameSession . $changeSession] = "";
    $_SESSION[$orderLatitudeSession . $changeSession] = $_SESSION[$orderLatitudeSession . $existSession];
    $_SESSION[$orderLongitudeSession . $changeSession] = $_SESSION[$orderLongitudeSession . $existSession];
    $_SESSION[$orderServiceNameSession . $changeSession] = $_SESSION[$orderServiceNameSession . $existSession];
    $_SESSION[$orderDataSession . $changeSession] = $_SESSION[$orderDataSession . $existSession];
    $_SESSION[$orderUserSession . $changeSession] = $_SESSION[$orderUserSession . $existSession];
    $_SESSION[$orderUserNameSession . $changeSession] = $_SESSION[$orderUserNameSession . $existSession];
    $_SESSION[$orderCompanyNameSession . $changeSession] = $_SESSION[$orderCompanyNameSession . $existSession];
    $_SESSION[$orderUserEmailSession . $changeSession] = $_SESSION[$orderUserEmailSession . $existSession];
    $_SESSION[$orderStoreIdSession . $changeSession] = $_SESSION[$orderStoreIdSession . $existSession];
    unset($_SESSION[$orderDetailsSession . $existSession]);
    unset($_SESSION[$userSession . $existSession]);
    unset($_SESSION[$orderUserSession . $existSession]);
    unset($_SESSION[$orderServiceSession . $existSession]);
    unset($_SESSION[$orderUserIdSession . $existSession]);
    unset($_SESSION[$orderAddressIdSession . $existSession]);
    unset($_SESSION[$orderCouponSession . $existSession]);
    unset($_SESSION[$orderCouponNameSession . $existSession]);
    unset($_SESSION[$orderCurrencyNameSession . $existSession]);
    //unset($_SESSION['sess_currentpage_url_mr']);
    unset($_SESSION[$orderLatitudeSession . $existSession]);
    unset($_SESSION[$orderLongitudeSession . $existSession]);
    unset($_SESSION[$orderAddressSession . $existSession]);
    unset($_SESSION[$orderDataSession . $existSession]);
    unset($_SESSION[$orderUserNameSession . $existSession]);
    unset($_SESSION[$orderCompanyNameSession . $existSession]);
    unset($_SESSION[$orderUserEmailSession . $existSession]);
    unset($_SESSION[$orderStoreIdSession . $existSession]);
    unset($_SESSION[$orderServiceNameSession . $existSession]);
}

function searchStoreCategoryTitle($title, $array)
{
    foreach ($array as $key => $val) {
        if ($val['vTitle'] === $title) {
            return $key;
        }
    }
    return null;
}

function FetchTripFareData($Fare_data, $surgePrice)
{
    global $obj, $ENABLE_WAITING_CHARGE_RENTAL, $ENABLE_WAITING_CHARGE_FLAT_TRIP, $SERVICE_PROVIDER_FLOW, $vehicleTypeDataArr;
    if (isset($tripDetailsArr['trips_' . $Fare_data[0]['iTripId']])) {
        $tripData = $tripDetailsArr['trips_' . $Fare_data[0]['iTripId']];
    } else {
        $tripData = get_value('trips', '*', 'iTripId', $Fare_data[0]['iTripId'], '', ''); //added by SP for fly stations on 20-08-2019
        $tripDetailsArr['trips_' . $Fare_data[0]['iTripId']] = $tripData;
    }
    //echo "<pre>";print_r($tripData);die;
    $iVehicleTypeId = $tripData[0]['iVehicleTypeId'];
    $eServiceLocation = $tripData[0]['eServiceLocation'];
    $eType = $tripData[0]['eType'];
    $sql_vehicle_category_table_name = getVehicleCategoryTblName();
    //Added By HJ On 22-06-2020 For Optimize vehicle_type Table Query Start
    if (isset($vehicleTypeDataArr['vehicle_type'])) {
        $vehicleTypeData = $vehicleTypeDataArr['vehicle_type'];
        $typeDataArr = array();
        for ($h = 0; $h < count($vehicleTypeData); $h++) {
            $typeDataArr[$vehicleTypeData[$h]['iVehicleTypeId']] = $vehicleTypeData[$h]['iVehicleCategoryId'];
        }
        if (isset($typeDataArr[$iVehicleTypeId])) {
            $iVehicleCategoryId = $typeDataArr[$iVehicleTypeId];
        } else {
            $iVehicleCategoryId = get_value('vehicle_type', 'iVehicleCategoryId', 'iVehicleTypeId', $iVehicleTypeId, '', 'true');
        }
    } else {
        $iVehicleCategoryId = get_value('vehicle_type', 'iVehicleCategoryId', 'iVehicleTypeId', $iVehicleTypeId, '', 'true');
    }
    //Added By HJ On 22-06-2020 For Optimize vehicle_type Table Query End
    $categoryData = get_value($sql_vehicle_category_table_name, 'iParentId,ePriceType,eMaterialCommision, fCommision', 'iVehicleCategoryId', $iVehicleCategoryId, '', '');
    $iParentId = $fMaterialCommisionPer = 0;
    $ePriceType = '';
    $eMaterialCommision = 'No';
    if(!empty($categoryData)) {
        $iParentId = $categoryData[0]['iParentId'];
        $ePriceType = $categoryData[0]['ePriceType'];
        $eMaterialCommision = $categoryData[0]['eMaterialCommision'];
        $fMaterialCommisionPer = $categoryData[0]['fCommision'];
    }
    
    $tVehicleTypeFareDataArr = array();
    if ($SERVICE_PROVIDER_FLOW == "Provider" && $eType == "UberX") {
        $orderDetails = $tripData[0]['tVehicleTypeData'];
        $passengerId = $tripData[0]['iUserId'];
        $tVehicleTypeFareDataArr = json_decode($tripData[0]['tVehicleTypeFareData'], true);
        $ePriceType = $tVehicleTypeFareDataArr['ParentPriceType'];
        $eMaterialCommision = $tVehicleTypeFareDataArr['ParentMaterialCommisionEnable'];
        $fMaterialCommisionPer = $tVehicleTypeFareDataArr['ParentCommision'];
        //$fareDetails = getVehicleTypeFareDetails($orderDetails, $passengerId);
        //$saveFareDetails = $fareDetails['tripFareDetailsSaveArr'];
    } else if ($iParentId > 0) {
        $categoryData = get_value($sql_vehicle_category_table_name, 'ePriceType,eMaterialCommision, fCommision', 'iVehicleCategoryId', $iParentId, '', '');
        $ePriceType = $categoryData[0]['ePriceType'];
        $eMaterialCommision = $categoryData[0]['eMaterialCommision'];
        $fMaterialCommisionPer = $categoryData[0]['fCommision'];
    }
    //,eServiceLocation,tVehicleTypeData
    $iRentalPackageId = $Fare_data[0]['iRentalPackageId'];
    $eHailTrip = $Fare_data[0]['eHailTrip'];
    $eFlatTrip = $Fare_data[0]['eFlatTrip'];
    $fFlatTripPrice = $Fare_data[0]['fFlatTripPrice'];
    $waitingTime = $Fare_data[0]['waitingTime'];
    $iWaitingFeeTimeLimit = $Fare_data[0]['iWaitingFeeTimeLimit'];
    $fWaitingFees = $Fare_data[0]['fWaitingFees'] * $waitingTime;
    $fWaitingFees = setTwoDecimalPoint($fWaitingFees);
    if ($waitingTime < $iWaitingFeeTimeLimit) {
        $fWaitingFees = 0;
    }
    if ($eFlatTrip == "Yes") {
        $Fare_data[0]['iBaseFare'] = $fFlatTripPrice;
        $Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerKM'] = 0;
    }
    if ($eHailTrip == "Yes" || ($iRentalPackageId > 0 && $ENABLE_WAITING_CHARGE_RENTAL != "Yes") || ($eFlatTrip == "Yes" && $ENABLE_WAITING_CHARGE_FLAT_TRIP != "Yes")) {
        $fWaitingFees = 0;
    }
    //$ePriceType=get_value($sql_vehicle_category_table_name, 'ePriceType', 'iVehicleCategoryId',$iVehicleCategoryId,'','true');
    $ALLOW_SERVICE_PROVIDER_AMOUNT = $ePriceType == "Provider" ? "Yes" : "No";
    $fAmount = 0;
    if ($ALLOW_SERVICE_PROVIDER_AMOUNT == "Yes") {
        $iDriverVehicleId = $tripData[0]['iDriverVehicleId'];
        $sqlServicePro = "SELECT * FROM `service_pro_amount` WHERE iDriverVehicleId='" . $iDriverVehicleId . "' AND iVehicleTypeId='" . $iVehicleTypeId . "'";
        $serviceProData = $obj->MySQLSelect($sqlServicePro);
        if (count($serviceProData) > 0) {
            $fAmount = $serviceProData[0]['fAmount'];
        }
    }
    if ($surgePrice >= 1) {
        if (isset($Fare_data[0]['iBaseFare'])) {
            $Fare_data[0]['iBaseFare'] = $Fare_data[0]['iBaseFare'] * $surgePrice;
        }
        if (isset($Fare_data[0]['fPricePerMin'])) {
            $Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerMin'] * $surgePrice;
        }
        if (isset($Fare_data[0]['fPricePerKM'])) {
            $Fare_data[0]['fPricePerKM'] = $Fare_data[0]['fPricePerKM'] * $surgePrice;
        }
        if (isset($Fare_data[0]['iMinFare'])) {
            $Fare_data[0]['iMinFare'] = $Fare_data[0]['iMinFare'] * $surgePrice;
        }
    }
    $ufx_totalCommission = 0;
    if ($Fare_data[0]['eFareType'] == 'Fixed') {
        $Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerKM'] = 0;
        if ($SERVICE_PROVIDER_FLOW == "Provider" && count($tVehicleTypeFareDataArr) > 0) {
            $Fare_data[0]['iBaseFare'] = $tVehicleTypeFareDataArr['originalFareTotal'];
            //$Fare_data[0]['iBaseFare'] = 100;
            $ufx_totalCommission = $tVehicleTypeFareDataArr['originalTotalCommissionOfServices'];
        } else {
            if ($ALLOW_SERVICE_PROVIDER_AMOUNT == "Yes" && $fAmount != 0) {
                $Fare_data[0]['iBaseFare'] = $fAmount * $Fare_data[0]['iQty'];
            } else {
                $Fare_data[0]['iBaseFare'] = $Fare_data[0]['fFixedFare'] * $Fare_data[0]['iQty'];
            }
        }
        //added by SP for fly stations on 20-08-2019 start
        if ($Fare_data[0]['eFly'] == 1) {
            include_once($tconfig["tpanel_path"] . "include/features/include_fly_stations.php");
            $Fare_data[0]['iBaseFare'] = getFareForFlyVehicles($iVehicleTypeId, $tripData[0]['iFromStationId'], $tripData[0]['iToStationId']);
        }
        //added by SP for fly stations on 20-08-2019 end
    } else if ($Fare_data[0]['eFareType'] == 'Hourly') {
        $Fare_data[0]['iBaseFare'] = $Fare_data[0]['fPricePerKM'] = 0;
        $Tripminutes = $Fare_data[0]['TripTimeMinutes'];
        $totalHour = $Fare_data[0]['TripTimeMinutes'] / 60;
        $Fare_data[0]['TripTimeMinutes'] = $totalHour;
        $fMinHour = $Fare_data[0]['fMinHour'];
        if ($ALLOW_SERVICE_PROVIDER_AMOUNT == "Yes" && $fAmount != 0) {
            if ($totalHour > $fMinHour) {
                /* $miniminutes = $fMinHour * 60;

                  $TripTimehours = $Tripminutes / 60;

                  $tothours = intval($TripTimehours);

                  $extrahours = $TripTimehours - $tothours;

                  $extraminutes = $extrahours * 60;

                  $fTimeSlot = $Fare_data[0]['fTimeSlot'];

                  $pricetimeslot = 60 / $fTimeSlot;

                  $pricepertimeslot = $fAmount / $pricetimeslot;

                  $fTimeSlotPrice = $pricepertimeslot;

                  $extratimeslot = ceil($extraminutes / $fTimeSlot);

                  $extraprice = $extratimeslot * $fTimeSlotPrice;

                  $Fare_data[0]['fPricePerMin'] = ($fAmount * $tothours) + $extraprice; */
                $Fare_data[0]['fPricePerMin'] = $fAmount * $totalHour;
            } else {
                $Fare_data[0]['fPricePerMin'] = $fAmount * $fMinHour;
            }
        } else {
            if ($totalHour > $fMinHour) {
                /* $miniminutes = $fMinHour * 60;

                  $TripTimehours = $Tripminutes / 60;

                  $tothours = intval($TripTimehours);

                  $extrahours = $TripTimehours - $tothours;

                  $extraminutes = $extrahours * 60;

                  $fTimeSlot = $Fare_data[0]['fTimeSlot'];

                  $pricetimeslot = 60 / $fTimeSlot;

                  $pricepertimeslot = $Fare_data[0]['fPricePerHour'] / $pricetimeslot;

                  $fTimeSlotPrice = $pricepertimeslot;

                  $extratimeslot = ceil($extraminutes / $fTimeSlot);

                  $extraprice = $extratimeslot * $fTimeSlotPrice;

                  $Fare_data[0]['fPricePerMin'] = ($Fare_data[0]['fPricePerHour'] * $tothours) + $extraprice; */
                $Fare_data[0]['fPricePerMin'] = ($Fare_data[0]['fPricePerHour'] * $totalHour);
            } else {
                $Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerHour'] * $fMinHour;
            }
            //$Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerHour'];
        }
    } else if ($Fare_data[0]['eFareType'] == 'Regular') {
        $Fare_data[0]['fPricePerMin'] = setTwoDecimalPoint($Fare_data[0]['fPricePerMin'] * $Fare_data[0]['TripTimeMinutes']);
    }
    /* Add For Rental */
    $Minute_Fare = setTwoDecimalPoint($Fare_data[0]['fPricePerMin']);
    $Distance_Fare = setTwoDecimalPoint($Fare_data[0]['fPricePerKM'] * $Fare_data[0]['TripDistance']);
    $iBaseFare = setTwoDecimalPoint($Fare_data[0]['iBaseFare']);
    if (strtoupper(PACKAGE_TYPE) != "STANDARD" && $Fare_data[0]['iRentalPackageId'] > 0) {
        $rentalFareDataArr = generateRentalFare($Fare_data, $Fare_data[0]['iRentalPackageId']);
        $Minute_Fare = $rentalFareDataArr['MINUTE_FARE'];
        $Distance_Fare = $rentalFareDataArr['DISTANCE_FARE'];
        $iBaseFare = $rentalFareDataArr['BASE_FARE'];
    }
    /* End Add For Rental */
    $fMaterialFee = setTwoDecimalPoint($Fare_data[0]['fMaterialFee']);
    $fMiscFee = setTwoDecimalPoint($Fare_data[0]['fMiscFee']);
    //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes Start
    $fOtherCharges = setTwoDecimalPoint($Fare_data[0]['fOtherCharges']);
    $fTollPrice = setTwoDecimalPoint($Fare_data[0]['fTollPrice']);
    //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes End
    $fDriverDiscount = setTwoDecimalPoint($Fare_data[0]['fDriverDiscount']);
    $fVisitFee = setTwoDecimalPoint($Fare_data[0]['fVisitFee']);
    //  print_r($Fare_data);
    if ($Fare_data[0]['eTollSkipped'] == "Yes" && $fTollPrice == 0) {
        $fTollPrice = 0;
    }
    $total_fare = ($iBaseFare + $Minute_Fare + $Distance_Fare + $fMaterialFee + $fMiscFee + $fVisitFee + $fOtherCharges + $fTollPrice) - $fDriverDiscount; //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes
    // addon changes point1
    $total_fare_for_commission_ufx = $iBaseFare + $Minute_Fare + $Distance_Fare;
    if ($SERVICE_PROVIDER_FLOW != "Provider") {
        $total_fare_for_commission_ufx = $total_fare_for_commission_ufx + $fMaterialFee + $fMiscFee;
    }
    $Commision_Fare = setTwoDecimalPoint((($total_fare_for_commission_ufx * $Fare_data[0]['fCommision']) / 100));
    $Material_Commision_Fare = 0;
    if ($ufx_totalCommission > 0) {
        $Commision_Fare = $ufx_totalCommission;
        $total_fare_for_commission_ufx = $ufx_totalCommission;
        if ($eMaterialCommision == 'Yes' && $fMaterialCommisionPer > 0) {
            //$Commision_Fare = $Commision_Fare + setTwoDecimalPoint(((($fMaterialFee + $fMiscFee - $fDriverDiscount) * $fMaterialCommisionPer) / 100));
            $Commision_Fare = $Commision_Fare + setTwoDecimalPoint(((($fMaterialFee + $fMiscFee) * $fMaterialCommisionPer) / 100));
        }
        $Fare_data[0]['fCommision'] = $Commision_Fare;
    } else if ($eMaterialCommision == 'Yes' && $fMaterialCommisionPer > 0) {
        //$Material_Commision_Fare = setTwoDecimalPoint(((($fMaterialFee + $fMiscFee - $fDriverDiscount) * $fMaterialCommisionPer) / 100));
        $Material_Commision_Fare = setTwoDecimalPoint(((($fMaterialFee + $fMiscFee) * $fMaterialCommisionPer) / 100));
        $Commision_Fare = $Commision_Fare + $Material_Commision_Fare;
    }
    $result['FareOfMinutes'] = $Minute_Fare;
    $result['FareOfDistance'] = $Distance_Fare;
    $result['MaterialFareOfCommision'] = $Material_Commision_Fare;
    $result['FareOfCommision'] = $Commision_Fare;
    // $result['iBaseFare'] = $iBaseFare;
    $result['fPricePerMin'] = $Fare_data[0]['fPricePerMin'];
    $result['fPricePerKM'] = $Fare_data[0]['fPricePerKM'];
    $result['fCommision'] = $Fare_data[0]['fCommision'];
    $result['FinalFare'] = $total_fare;
    $result['FinalFare_UFX_Commission'] = $total_fare_for_commission_ufx;
    //added by SP for fly stations on 20-08-2019 start
    if ($Fare_data[0]['eFly'] == 1) {
        include_once($tconfig["tpanel_path"] . "include/features/include_fly_stations.php");
        $result['iBaseFare'] = getFareForFlyVehicles($iVehicleTypeId, $tripData[0]['iFromStationId'], $tripData[0]['iToStationId']);
    } else {
        $result['iBaseFare'] = ($Fare_data[0]['eFareType'] == 'Fixed') ? 0 : $iBaseFare;
    }
    //$result['iBaseFare'] = ($Fare_data[0]['eFareType'] == 'Fixed') ? 0 : $iBaseFare;
    //added by SP for fly stations on 20-08-2019 end
    $result['fPricePerMin'] = $Fare_data[0]['fPricePerMin'];
    $result['fPricePerKM'] = $Fare_data[0]['fPricePerKM'];
    $result['iMinFare'] = $Fare_data[0]['iMinFare'];
    $result['fMaterialFee'] = $fMaterialFee;
    $result['fMiscFee'] = $fMiscFee;
    //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes Start
    $result['fOtherCharges'] = $fOtherCharges;
    $result['fTollPrice'] = $fTollPrice;
    //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes End
    $result['fVisitFee'] = $fVisitFee;
    $result['fWaitingFees'] = $fWaitingFees;
    //$result['tVehicleTypeFareData'] = json_encode($saveFareDetails);
    //print_r($result);die;
    return $result;
}

function calculateTripCost($totalTimeInMinutes_trip, $tripDistance, $vehicleTypeID, $iUserId, $priceRatio, $startDate = "", $endDate = "", $couponCode = "", $tripId, $fMaterialFee = 0, $fMiscFee = 0, $fDriverDiscount = 0, $waitingTime = 0, $totalHoldTimeInMinutes_trip = 0, $personData = array(), $onlyCommissionGet = 0)
{
    global $VIDEO_CONSULT_OBJ, $MODULES_OBJ, $WALLET_OBJ, $obj, $ENABLE_WAITING_CHARGE_RENTAL, $ENABLE_WAITING_CHARGE_FLAT_TRIP, $ENABLE_INTRANSIT_SHOPPING_SYSTEM, $ENABLE_AIRPORT_SURCHARGE_SECTION, $HOTEL_BOOKING_SERVICE_CHARGE, $SERVICE_PROVIDER_FLOW, $SYSTEM_PAYMENT_FLOW, $data_trips, $POOL_ENABLE, $vSystemDefaultCurrencyName;
    $Fare_data = getVehicleCostData("vehicle_type", $vehicleTypeID);
    // $defaultCurrency = ($obj->MySQLSelect("SELECT vName FROM currency WHERE eDefault='Yes'")[0]['vName']);
    //Added By HJ On 22-06-2020 For Optimization currency Table Query Start
    if (!empty($vSystemDefaultCurrencyName)) {
        $defaultCurrency = $vSystemDefaultCurrencyName;
    } else {
        $defaultCurrency = get_value('currency', 'vName', 'eDefault', 'Yes', '', 'true');
    }
    //Added By HJ On 22-06-2020 For Optimization currency Table Query End
    /* changes for rental */ //Added By HJ On 24-06-2020 For Optimization trips Table Query Start
    /*if(isset($tripDetailsArr['trips_'.$tripId])){

        $data_trips = $tripDetailsArr['trips_'.$tripId];

    }else{

        $data_trips = $obj->MySQLSelect("select * from trips where iTripId='" . $tripId . "'");

        $tripDetailsArr['trips_'.$tripId] = $data_trips;

    }*/
    // Commented by HV because of Airport surcharge issue
    $data_trips = $obj->MySQLSelect("select * from trips where iTripId='" . $tripId . "'");
    //Added By HJ On 24-06-2020 For Optimization currency Table Query End
    // echo "<pre>";print_r($data_trips);
    $eType = $data_trips[0]['eType'];
    $iDriverId = $data_trips[0]['iDriverId'];
    /* added for rental */
    $iRentalPackageId = $data_trips[0]['iRentalPackageId'];
    /* added for rental */
    //Added By HJ On 04-02-2019 For Get Vehicle Type Commission When Service Applied More Than One End
    $fPickUpPrice = $data_trips[0]['fPickUpPrice'];
    $fNightPrice = $data_trips[0]['fNightPrice'];
    $iQty = $data_trips[0]['iQty'];
    $eFareType = $data_trips[0]['eFareType'];
    $eFlatTrip = $data_trips[0]['eFlatTrip'];
    $fFlatTripPrice = $data_trips[0]['fFlatTripPrice'];
    $iWaitingFeeTimeLimit = $Fare_data[0]['iWaitingFeeTimeLimit'];
    $fWaitingFees = $Fare_data[0]['fWaitingFees'];
    $eHailTrip = $data_trips[0]['eHailTrip'];
    $eWalletDebitAllow = $data_trips[0]['eWalletDebitAllow'];
    $iOrganizationId = $data_trips[0]['iOrganizationId'];
    $ePaymentBy = $data_trips[0]['ePaymentBy'];
    $iHotelId = $data_trips[0]['iHotelId'];
    $fTripHoldPrice = $Commision_Fare_Hotel = 0;
    $fAirportPickupSurge = $data_trips[0]['fAirportPickupSurge'];
    $fAirportDropoffSurge = $data_trips[0]['fAirportDropoffSurge'];
    $tUserWalletBalance = $data_trips[0]['tUserWalletBalance'];
    $ePoolRide = $data_trips[0]['ePoolRide'];
    if (empty($tUserWalletBalance)) {
        $tUserWalletBalance = 0;
    }
    if ($eHailTrip == "Yes" || ($iRentalPackageId > 0 && $ENABLE_WAITING_CHARGE_RENTAL != "Yes") || ($eFlatTrip == "Yes" && $ENABLE_WAITING_CHARGE_FLAT_TRIP != "Yes")) {
        $fWaitingFees = 0;
    }
    // add for hotel web
    $eBookingFrom = $data_trips[0]['eBookingFrom'];
    $iHotelBookingId = $data_trips[0]['iHotelBookingId'];
    $surgePrice = $fPickUpPrice > 1 ? $fPickUpPrice : ($fNightPrice > 1 ? $fNightPrice : 1);
    if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
        $AirportSurgePickupPrice = $fAirportPickupSurge > 1 ? $fAirportPickupSurge : 1;
        $AirportSurgeDropoffPrice = $fAirportDropoffSurge > 1 ? $fAirportDropoffSurge : 1;
    }
    $fVisitFee = $data_trips[0]['fVisitFee'];
    $tripTimeInMinutes = ($totalTimeInMinutes_trip != '') ? $totalTimeInMinutes_trip : 0;
    $fPricePerKM = getVehicleCountryUnit_PricePerKm($vehicleTypeID, $Fare_data[0]['fPricePerKM']);
    $fTollPrice = $data_trips[0]['fTollPrice'];
    $fOtherCharges = $data_trips[0]['fOtherCharges'];
    $eTollSkipped = $data_trips[0]['eTollSkipped'];
    //$TaxArr = getMemberCountryTax($iUserId, "Passenger"); // Commented By HJ On 18-09-2019 Replace Of Below Line
    $TaxArr = getMemberCountryTax($iDriverId, "Driver"); // Added By HJ Get Driver Country Tax As Per Discuss With KS Sir On 18-09-2019
    $fTax1 = $TaxArr['fTax1'];
    $fTax2 = $TaxArr['fTax2'];
    //print_r($TaxArr);die;
    $Fare_data[0]['TripTimeMinutes'] = $tripTimeInMinutes;
    $Fare_data[0]['TripDistance'] = $tripDistance;
    $Fare_data[0]['eFlatTrip'] = $eFlatTrip;
    $Fare_data[0]['fFlatTripPrice'] = $fFlatTripPrice;
    $Fare_data[0]['iTripId'] = $tripId;
    $Fare_data[0]['eFareType'] = $eFareType;
    $Fare_data[0]['iQty'] = $iQty;
    $Fare_data[0]['fVisitFee'] = $fVisitFee;
    $Fare_data[0]['fMaterialFee'] = $fMaterialFee;
    $Fare_data[0]['fMiscFee'] = $fMiscFee;
    //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes Start
    if (isset($personData['fOtherCharges']) && $personData['fOtherCharges'] > 0) {
        $fOtherCharges = $personData['fOtherCharges'];
    }
    if (isset($personData['fTollPrice']) && $personData['fTollPrice'] > 0) {
        $fTollPrice = $personData['fTollPrice'];
    }
    $Fare_data[0]['fOtherCharges'] = $fOtherCharges;
    $Fare_data[0]['fTollPrice'] = $fTollPrice;
    //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes End
    $Fare_data[0]['fDriverDiscount'] = $fDriverDiscount;
    $Fare_data[0]['fPricePerKM'] = $fPricePerKM;
    $Fare_data[0]['waitingTime'] = $waitingTime;
    $Fare_data[0]['iWaitingFeeTimeLimit'] = $iWaitingFeeTimeLimit;
    $Fare_data[0]['fWaitingFees'] = $fWaitingFees;
    $Fare_data[0]['eHailTrip'] = $eHailTrip;
    $Fare_data[0]['tVehicleTypeData'] = $data_trips[0]['tVehicleTypeData'];
    $Fare_data[0]['eTollSkipped'] = $eTollSkipped;
    if ($eTollSkipped == "Yes" && $fTollPrice == 0) {
        $fTollPrice = 0;
    }
    //added for rental
    $Fare_data[0]['iRentalPackageId'] = $iRentalPackageId;
    $result = FetchTripFareData($Fare_data, "1");
    //echo "<pre>";print_r($result);die;
    $total_fare = $oneSeatCharge = $fTripGenerateFare = $result['FinalFare'];
    if ($onlyCommissionGet == 1) {
        $result['FinalFare'] = $result['FinalFare'] + $fDriverDiscount;
        $total_fare = $oneSeatCharge = $fTripGenerateFare = $result['FinalFare'];
    }
    //$fTripGenerateFare = $result['FinalFare'];
    //$fTripGenerateFare_For_Commission = $result['FinalFare'];
    $fTripGenerateFare_For_Commission = $result['FinalFare_UFX_Commission'];
    //$fSurgePriceDiff = round(($fTripGenerateFare * $surgePrice) - $fTripGenerateFare, 2);
    $fSurgePriceDiff = round(($fTripGenerateFare_For_Commission * $surgePrice) - $fTripGenerateFare_For_Commission, 2);
    $total_fare += $fSurgePriceDiff;
    $fTripGenerateFare += $fSurgePriceDiff;
    //$fTripGenerateFare_For_Commission = $fTripGenerateFare_For_Commission + $fSurgePriceDiff;
    $fAirportPickupSurgeAmount = $fAirportDropoffSurgeAmount = 0;
    if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
        /* Extra Airport Pickup surge */
        if ($AirportSurgePickupPrice > 1) {
            $fAirportPickupSurgeAmount = round(($fTripGenerateFare_For_Commission * $AirportSurgePickupPrice) - $fTripGenerateFare_For_Commission, 2);
            $total_fare += $fAirportPickupSurgeAmount;
            $fTripGenerateFare += $fAirportPickupSurgeAmount;
        }
        /* Extra Airport Dropoff surge */
        if ($AirportSurgeDropoffPrice > 1) {
            $fAirportDropoffSurgeAmount = round(($fTripGenerateFare_For_Commission * $AirportSurgeDropoffPrice) - $fTripGenerateFare_For_Commission, 2);
            $total_fare += $fAirportDropoffSurgeAmount;
            $fTripGenerateFare += $fAirportDropoffSurgeAmount;
        }
        /* Extra Airport Pickup surge */
    }
    $fTripGenerateFare_For_Commission += $fSurgePriceDiff;
    /* Waiting Fee  Calculation */
    //$fWaitingFees = $result['fWaitingFees'];
    $fWaitingFeesArrData = FetchTripWaitingCharges($tripId);
    $WaitingFeeCommission = 0;
    if (is_array($fWaitingFeesArrData)) {
        $fWaitingFees_tmp = $fWaitingFeesArrData['WaitingFee'];
        $WaitingFeeCommission = $fWaitingFeesArrData['WaitingFeeCommission'];
        $fWaitingFees = $fWaitingFees_tmp;
    } else {
        $fWaitingFees = $fWaitingFeesArrData;
    }
    if ($fWaitingFees > 0) {
        $total_fare += $fWaitingFees;
        $fTripGenerateFare += $fWaitingFees;
        $fTripGenerateFare_For_Commission += $fWaitingFees;
    }
    /* Waiting Fee  Calculation */
    $fTripHoldFees = $fTripHoldPrice = 0;
    /* Added By HJ On 28-12-2018 For Trip Hold Fee Calculation Start In Transit */
    if (strtoupper(PACKAGE_TYPE) == "SHARK") {
        if ($totalHoldTimeInMinutes_trip > 0 && $ENABLE_INTRANSIT_SHOPPING_SYSTEM == "Yes") {
            /* $fTripHoldFees = $Fare_data[0]['fTripHoldFees'];

            $fTripHoldPrice = round($Fare_data[0]['fTripHoldFees'] * $totalHoldTimeInMinutes_trip, 2); */
            $fTripHoldPrice = calculateTransitamount($Fare_data, $totalHoldTimeInMinutes_trip);
            $total_fare += $fTripHoldPrice;
            $fTripGenerateFare += $fTripHoldPrice;
            $fTripGenerateFare_For_Commission += $fTripHoldPrice;
        }
    }
    /* Added By HJ On 28-12-2018 For Trip Hold Fee Calculation End In Transit */
    $iMinFare = $result['iMinFare'];
    // make changes for rental
    if ($eFlatTrip == "No" && $iRentalPackageId == 0) {
        if ($iMinFare > $fTripGenerateFare) {
            $MinFareDiff = $iMinFare - $total_fare;
            $total_fare = $iMinFare;
            $fTripGenerateFare = $iMinFare;
            $fTripGenerateFare_For_Commission = $iMinFare;
        } else {
            $MinFareDiff = "0";
            if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
                if ($fAirportDropoffSurgeAmount > 0 || $fAirportPickupSurgeAmount > 0) {
                    $fTripGenerateFare_For_Commission = $fTripGenerateFare_For_Commission + $fAirportDropoffSurgeAmount + $fAirportPickupSurgeAmount;
                }
            }
        }
    } else {
        if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
            if ($fAirportDropoffSurgeAmount > 0 || $fAirportPickupSurgeAmount > 0) {
                $fTripGenerateFare_For_Commission = $fTripGenerateFare_For_Commission + $fAirportDropoffSurgeAmount + $fAirportPickupSurgeAmount;
            }
        }
    }
    //Added By HJ On 26-12-2018 For Calculate Extra Person Charge Amount Start
    $finalFare = $totalFare = 0;
    $fPoolPercentage = 1;
    if (strtoupper(PACKAGE_TYPE) == "SHARK") {
        $personData['finalFare'] = $finalFare;
        $personData['total_fare'] = $total_fare;
        $personData['fTripGenerateFare'] = $fTripGenerateFare;
        $personData['fTripGenerateFare_For_Commission'] = $fTripGenerateFare_For_Commission;
        $personData['vehicleTypeID'] = $vehicleTypeID;
        $fareDetailArray = calculateFareForShark($personData);
        if (count($fareDetailArray) > 0) {
            $fPoolPercentage = $fareDetailArray['fPoolPercentage'];
            $fTripGenerateFare = $fareDetailArray['fTripGenerateFare'];
            $total_fare = $fareDetailArray['total_fare'];
            $fTripGenerateFare_For_Commission = $fareDetailArray['fTripGenerateFare_For_Commission'];
            $totalFare = $fareDetailArray['totalFare'];
        }
    }
    //Added By HJ On 26-12-2018 For Calculate Extra Person Charge Amount End
    /* Toll Calculation */ /*if ($fTollPrice > 0) {

        $total_fare += $fTollPrice;

        $fTripGenerateFare += $fTollPrice;

    }*/
    /* Toll Calculation */
    if ($MODULES_OBJ->isEnableVideoConsultingService() && $data_trips[0]['isVideoCall'] == 'Yes') {
        $video_consult_data = $VIDEO_CONSULT_OBJ->getServiceDetails($iDriverId, $vehicleTypeID);
        $total_fare = $video_consult_data['eVideoConsultServiceCharge'];
        $fTripGenerateFare = $video_consult_data['eVideoConsultServiceCharge'];
        $result['fCommision'] = round(((($fTripGenerateFare) * $video_consult_data['fCommission']) / 100), 2);
    } else if ($SERVICE_PROVIDER_FLOW == "Provider" && $Fare_data[0]['eFareType'] == "Fixed" && $eType == "UberX") {
        $result['fCommision'] = $result['FareOfCommision'] + $WaitingFeeCommission;
    } else if ($SERVICE_PROVIDER_FLOW == "Provider" && $eType == "UberX") {
        $result['fCommision'] = round(((($fTripGenerateFare_For_Commission - $fWaitingFees) * $Fare_data[0]['fCommision']) / 100), 2);
        $result['fCommision'] = $result['fCommision'] + $result['MaterialFareOfCommision'] + $WaitingFeeCommission;
    } else {
        $result['fCommision'] = round((($fTripGenerateFare_For_Commission * $Fare_data[0]['fCommision']) / 100), 2);
    }
    //echo "Tot1:".$fTripGenerateFare_For_Commission;exit;
    ## Checking For Kiosk Hotel Commission ##
    if ($eBookingFrom == 'Kiosk') {
        $dataKiosk = $obj->MySQLSelect("SELECT a.fHotelServiceCharge FROM administrators as a LEFT JOIN hotel as h on h.iAdminId=a.iAdminId WHERE h.iHotelId = '" . $iHotelId . "'");
        $HOTEL_BOOKING_SERVICE_CHARGE = $dataKiosk[0]['fHotelServiceCharge'];
        if ($HOTEL_BOOKING_SERVICE_CHARGE > 0) {
            $iBaseFareFinal = $result['iBaseFare'];
            $Commision_Fare_Hotel = round((($iBaseFareFinal * $HOTEL_BOOKING_SERVICE_CHARGE) / 100), 2);
            $fTripGenerateFare += $Commision_Fare_Hotel;
            $total_fare += $Commision_Fare_Hotel;
        }
    }
    ## Checking For Kiosk Hotel Commission ##
    /* Check Coupon Code For Count Total Fare Start */
    $discountValue = 0;
    $discountValueType = "cash";
    if ($couponCode != '') {
        //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data Start
        $getCouponCode = $obj->MySQLSelect("SELECT fDiscount,eType,iLocationId FROM coupon WHERE vCouponCode='" . $couponCode . "' AND eStatus='Active'");
        if (count($getCouponCode) > 0) {
            $discountValue = $getCouponCode[0]['fDiscount'];
            $discountValueType = $getCouponCode[0]['eType'];
            if ($MODULES_OBJ->isEnableLocationWisePromoCode() && $getCouponCode[0]['iLocationId'] > 0) {
                $sourceLocationArr = array($data_trips[0]['tStartLat'], $data_trips[0]['tStartLong']);
                $destinationLocationArr = array($data_trips[0]['tEndLat'], $data_trips[0]['tEndLong']);
                $iLocationIdSource = GetUserGeoLocationIdPromoCode($sourceLocationArr);
                $iLocationIdDest = GetUserGeoLocationIdPromoCode($destinationLocationArr);
                // echo "<pre>"; print_r($data_trips); print_r($iLocationIdSource);die;
                if ((($eType == "Ride" || $eType == "Deliver") && (!in_array($getCouponCode[0]['iLocationId'], $iLocationIdSource) || !in_array($getCouponCode[0]['iLocationId'], $iLocationIdDest))) || ($eType == "UberX" && !in_array($getCouponCode[0]['iLocationId'], $iLocationIdDest))) {
                    $discountValue = 0;
                    $discountValueType = "cash";
                }
            } elseif ($eType == "Multi-Delivery" && $getCouponCode[0]['iLocationId'] > 0) {
                $tDeliveryLocations = $obj->MySQLSelect("SELECT vReceiverLatitude, vReceiverLongitude FROM trips_delivery_locations WHERE iTripId = '$tripId'");
                $tDeliveryLocationsArr = array();
                $tDeliveryLocationsArr[] = array('latitude' => $data_trips[0]['tStartLat'], 'longitude' => $data_trips[0]['tStartLong'],);
                foreach ($tDeliveryLocations as $location) {
                    $tDeliveryLocationsArr[] = array('latitude' => $location['vReceiverLatitude'], 'longitude' => $location['vReceiverLongitude'],);
                }
                $coupon_valid = "Yes";
                foreach ($tDeliveryLocationsArr as $loc) {
                    $Address_Array = array($loc['latitude'], $loc['longitude']);
                    $iLocationIdArr = GetUserGeoLocationIdPromoCode($Address_Array);
                    if (!in_array($getCouponCode[0]['iLocationId'], $iLocationIdArr)) {
                        $discountValue = 0;
                        $discountValueType = "cash";
                    }
                }
            }
        }
        //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data End
        //$discountValue = get_value('coupon', 'fDiscount', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
        //$discountValueType = get_value('coupon', 'eType', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
    }
    $Fare_data[0]['fDiscount'] = $Fare_data[0]['vDiscount'] = 0;
    if ($couponCode != '' && $discountValue != 0) {
        if ($discountValueType == "percentage") {
            $vDiscount = round($discountValue, 1) . ' ' . "%";
            $discountValue = round(($total_fare * $discountValue), 1) / 100;
        } else {
            $curr_sym = get_value('currency', 'vSymbol', 'eDefault', 'Yes', '', 'true');
            if ($discountValue > $total_fare) {
                $vDiscount = round($total_fare, 1) . ' ' . $curr_sym;
            } else {
                $vDiscount = round($discountValue, 1) . ' ' . $curr_sym;
            }
        }
        $fare = $total_fare - $discountValue;
        if ($fare < 0) {
            $fare = 0;
            $discountValue = $total_fare;
        }
        $total_fare = $fare;
        $Fare_data[0]['fDiscount'] = $discountValue;
        $Fare_data[0]['vDiscount'] = $vDiscount;
    }
    /* Check Coupon Code Total Fare  End */ // remove outstanding from here
    // add for hotel
    if ($eBookingFrom == 'Hotel') {
        $HOTEL_BOOKING_SERVICE_CHARGE = get_value('administrators', 'fHotelServiceCharge', 'iAdminId', $iHotelBookingId, '', 'true');
        if ($HOTEL_BOOKING_SERVICE_CHARGE > 0) {
            $iBaseFareFinal = $result['iBaseFare'];
            $Commision_Fare_Hotel = round((($iBaseFareFinal * $HOTEL_BOOKING_SERVICE_CHARGE) / 100), 2);
            $fTripGenerateFare += $Commision_Fare_Hotel;
            $total_fare += $Commision_Fare_Hotel;
        }
    }
    /* Tax Calculation */
    $result['fTax1'] = $result['fTax2'] = 0;
    $applyTaxOnToll = $MODULES_OBJ->isApplyTaxOnTollAndOtherCharges(); //Added By HJ On 20-10-2020 For Apply Tax on Toll and Other Charges
    if ($fTax1 > 0) {
        //Added By HJ On 20-10-2020 For Apply Tax on Toll and Other Charges Start
        if ($applyTaxOnToll > 0) {
            $fTaxAmount1 = round(((($fTripGenerateFare - $discountValue) * $fTax1) / 100), 2);
        } else {
            $fTaxAmount1 = round(((($fTripGenerateFare - $discountValue - $fTollPrice - $fOtherCharges) * $fTax1) / 100), 2);
        }
        //Added By HJ On 20-10-2020 For Apply Tax on Toll and Other Charges End
        $fTripGenerateFare += $fTaxAmount1;
        $total_fare += $fTaxAmount1;
        $result['fTax1'] = $fTaxAmount1;
    }
    if ($fTax2 > 0) {
        //Added By HJ On 20-10-2020 For Apply Tax on Toll and Other Charges Start
        if ($applyTaxOnToll > 0) {
            $total_fare_new = $fTripGenerateFare - $discountValue - $fTaxAmount1;
        } else {
            $total_fare_new = $fTripGenerateFare - $discountValue - $fTaxAmount1 - $fTollPrice - $fOtherCharges;
        }
        //Added By HJ On 20-10-2020 For Apply Tax on Toll and Other Charges End
        $fTaxAmount2 = round((($total_fare_new * $fTax2) / 100), 2);
        $fTripGenerateFare += $fTaxAmount2;
        $total_fare += $fTaxAmount2;
        $result['fTax2'] = $fTaxAmount2;
    }
    /* Tax Calculation */
    /* Checking For Passenger Outstanding Amount */
    $fOutStandingAmount = 0;
    if ($eType == "Multi-Delivery") {
        $fOutStandingAmount = $data_trips[0]['fOutStandingAmount'];
    } else {
        $fOutStandingAmount = GetPassengerOutstandingAmount($iUserId);
    }
    // if ($SYSTEM_PAYMENT_FLOW == 'Method-2' || $SYSTEM_PAYMENT_FLOW == 'Method-3') {
    if ($data_trips[0]['vTripPaymentMode'] == "Wallet") {
        $getUserOutstandingAmount = getUserOutstandingAmount($iUserId, "iTripId", $tripId);
        $fOutStandingAmount = $getUserOutstandingAmount['fPendingAmount'];
    }
    if ($fOutStandingAmount > 0) {
        $total_fare += $fOutStandingAmount;
        $fTripGenerateFare += $fOutStandingAmount;
    }
    /* Checking For Passenger Outstanding Amount */
    /* Check debit wallet For Count Total Fare  Start */
    $user_wallet_debit_amount = 0;
    //$eWalletAdjustment = get_value('register_user', 'eWalletAdjustment', 'iUserId', $iUserId, '', 'true');
    // echo $eWalletDebitAllow;die;
    if ($eWalletDebitAllow == "Yes" && $onlyCommissionGet == 0) {
        $user_available_balance = $WALLET_OBJ->FetchMemberWalletBalance($iUserId, "Rider");
        if ($user_available_balance > 0) {
            $totalCurrentActiveTripsArr = FetchTotalOngoingTrips($iUserId);
            $totalCurrentActiveTripsIdsArr = $totalCurrentActiveTripsArr['ActiveTripIds'];
            $totalCurrentActiveOrderIdsArr = $totalCurrentActiveTripsArr['ActiveOrderIds'];
            $totalCurrentActiveTripsCount = $totalCurrentActiveTripsArr['TotalCount'];
            /*             * ******** Replace current wallet balance of user when System payment flow is Method-2/Method-3 ***** */ // Charge an amount that is autorized when trip was initially requested in case when multiple jobs are going on.
            // if (($totalCurrentActiveTripsCount > 1 || in_array($tripId, $totalCurrentActiveTripsIdsArr) == false) && ($SYSTEM_PAYMENT_FLOW == "Method-2" || $SYSTEM_PAYMENT_FLOW == 'Method-3')) {
            if (($totalCurrentActiveTripsCount > 1 || in_array($tripId, $totalCurrentActiveTripsIdsArr) == false) && $data_trips[0]['vTripPaymentMode'] == "Wallet") {
                $user_available_balance = $tUserWalletBalance;
            }
            /*             * ******** Replace current wallet balance of user when System payment flow is Method-2/Method-3 ***** */
            //Added By HJ On 30-12-2018 For Calculate Pool Invoice As Per Discuss WIth QA Start
            $personData_wallet = array();
            $personData_wallet['ePoolRide'] = $personData['ePoolRide'];
            $personData_wallet['iPersonSize'] = $personData['iPersonSize'];
            $personData_wallet['POOL_ENABLE'] = $personData['POOL_ENABLE'];
            $personData_wallet['fPoolPercentage'] = $fPoolPercentage;
            $personData_wallet['fSurgePriceDiff'] = $fSurgePriceDiff;
            $personData_wallet['oneSeatCharge'] = $oneSeatCharge;
            $personData_wallet['iMinFare'] = $iMinFare;
            $personData_wallet['discountValue'] = $discountValue;
            $personData_wallet['fAirportPickupSurgeAmount'] = $fAirportPickupSurgeAmount;
            $personData_wallet['fAirportDropoffSurgeAmount'] = $fAirportDropoffSurgeAmount;
            $personData_wallet['fTax1'] = $fTax1;
            $personData_wallet['total_fare'] = $total_fare;
            $walletDeducted = 0;
            if (strtoupper(PACKAGE_TYPE) == "SHARK") {
                $wallet_fare = GetWalletAmountPool($personData_wallet);
                $walletDeducted = 1;
                $total_fare = $wallet_fare - $user_available_balance;
            } else {
                /* $total_fare = 0;

                $wallet_fare = $total_fare; */
                $wallet_fare = $total_fare; //it is done like this bc in standard package, wallet amount is not deducted
                $total_fare = 0;
            }
            /* if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {

              $totalOneSeatFare = $oneSeatCharge + $fSurgePriceDiff;

              if ($iPersonSize > 1) {

              $twoSeatCharge = ($oneSeatCharge + ($totalOneSeatFare * $fPoolPercentage / 100));

              $iMinFare = $iMinFare * $iPersonSize;

              if ($twoSeatCharge < $iMinFare) {

              $twoSeatCharge = $iMinFare;

              }

              $poolTaxAmount = (($twoSeatCharge - $discountValue) * $fTax1) / 100;

              $wallet_fare += $twoSeatCharge - $discountValue + $poolTaxAmount;

              } else {

              if ($totalOneSeatFare < $iMinFare) {

              $totalOneSeatFare = $iMinFare;

              }

              $poolTaxAmount = (($totalOneSeatFare - $discountValue) * $fTax1) / 100;

              $wallet_fare += $totalOneSeatFare - $discountValue + $poolTaxAmount;



              }

              } else {

              $wallet_fare = $total_fare;

          } */
            //Added By HJ On 30-12-2018 For Calculate Pool Invoice As Per Discuss WIth QA End
            if ($wallet_fare > $user_available_balance) {
                if ($walletDeducted == 0) {
                    $total_fare = $wallet_fare - $user_available_balance;
                }
                $user_wallet_debit_amount = $user_available_balance;
            } else {
                $user_wallet_debit_amount = $wallet_fare;
                $total_fare = 0;
            }
        }
        // Update User Wallet
        if ($user_wallet_debit_amount > 0) {
            $vRideNo = get_value('trips', 'vRideNo', 'iTripId', $tripId, '', 'true');
            $data_wallet['iUserId'] = $iUserId;
            $data_wallet['eUserType'] = "Rider";
            $data_wallet['iBalance'] = $user_wallet_debit_amount;
            $data_wallet['eType'] = "Debit";
            $data_wallet['dDate'] = date("Y-m-d H:i:s");
            $data_wallet['iTripId'] = $tripId;
            $data_wallet['eFor'] = "Booking";
            $data_wallet['ePaymentStatus'] = "Settelled";
            $data_wallet['tDescription'] = "#LBL_DEBITED_BOOKING# " . $vRideNo;
            $WALLET_OBJ->PerformWalletTransaction($data_wallet['iUserId'], $data_wallet['eUserType'], $data_wallet['iBalance'], $data_wallet['eType'], $data_wallet['iTripId'], $data_wallet['eFor'], $data_wallet['tDescription'], $data_wallet['ePaymentStatus'], $data_wallet['dDate']);
            //$obj->MySQLQueryPerform("user_wallet",$data_wallet,'insert');
        }
    }
    /* Check debit wallet For Count Total Fare  End */
    if ($Fare_data[0]['eFareType'] == 'Fixed') {
        $Fare_data[0]['iBaseFare'] = 0;
    } else {
        $Fare_data[0]['iBaseFare'] = $result['iBaseFare'];
    }
    $total_fare = round($total_fare, 2);
    $finalFareData['total_fare'] = $total_fare;
    $finalFareData['iBaseFare'] = $result['iBaseFare'];
    $finalFareData['fPricePerMin'] = $result['FareOfMinutes'];
    $finalFareData['fPricePerKM'] = $result['FareOfDistance'];
    //$finalFareData['fCommision'] = $result['FareOfCommision'];
    //$finalFareData['fCommision'] = round((($fTripGenerateFare*$result['fCommision'])/100),2);
    $finalFareData['fCommision'] = $result['fCommision'];
    $finalFareData['fDiscount'] = $Fare_data[0]['fDiscount'];
    $finalFareData['vDiscount'] = $Fare_data[0]['vDiscount'];
    $finalFareData['MinFareDiff'] = $MinFareDiff;
    $finalFareData['fSurgePriceDiff'] = $fSurgePriceDiff;
    $finalFareData['user_wallet_debit_amount'] = $user_wallet_debit_amount;
    $finalFareData['fTripGenerateFare'] = $fTripGenerateFare;
    $finalFareData['SurgePriceFactor'] = $surgePrice;
    $finalFareData['fTax1'] = $result['fTax1'];
    $finalFareData['fTax2'] = $result['fTax2'];
    $finalFareData['fTax1Percentage'] = $TaxArr['fTax1'];
    $finalFareData['fTax2Percentage'] = $TaxArr['fTax2'];
    $finalFareData['fWaitingFees'] = $fWaitingFees;
    $finalFareData['fTripHoldPrice'] = $fTripHoldPrice; // Added By HJ For Intransit Amount On 28-12-2018
    $finalFareData['fOutStandingAmount'] = $fOutStandingAmount;
    $finalFareData['Commision_Fare_Hotel'] = $Commision_Fare_Hotel;
    $finalFareData['fHotelBookingChargePercentage'] = $HOTEL_BOOKING_SERVICE_CHARGE;
    $finalFareData['fExtraPersonCharge'] = $totalFare; //Added By HJ On 26-12-2018 For Insert Extra Charge Amount
    $finalFareData['fAirportPickupSurgeAmount'] = $fAirportPickupSurgeAmount;
    $finalFareData['fAirportDropoffSurgeAmount'] = $fAirportDropoffSurgeAmount;
    $finalFareData['tVehicleTypeFareData'] = isset($result['tVehicleTypeFareData']) ? $result['tVehicleTypeFareData'] : "";
    $finalFareData['FinalFare_UFX_Commission'] = $result['FinalFare_UFX_Commission'];
    return $finalFareData;
}

function calculateApproximateFare($totalTimeInMinutes_trip, $tripDistance, $vehicleTypeID, $iUserId, $priceRatio, $startDate = "", $endDate = "", $surgePrice = 1)
{
    global $obj;
    $Fare_data = getVehicleCostData("vehicle_type", $vehicleTypeID);
    // $defaultCurrency = ($obj->MySQLSelect("SELECT vName FROM currency WHERE eDefault='Yes'")[0]['vName']);
    $defaultCurrency = get_value('currency', 'vName', 'eDefault', 'Yes', '', 'true');
    if ($surgePrice > 1) {
        $Fare_data[0]['iBaseFare'] = $Fare_data[0]['iBaseFare'] * $surgePrice;
        $Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerMin'] * $surgePrice;
        $Fare_data[0]['fPricePerKM'] = $Fare_data[0]['fPricePerKM'] * $surgePrice;
        $Fare_data[0]['iMinFare'] = $Fare_data[0]['iMinFare'] * $surgePrice;
    }
    if ($Fare_data[0]['eFareType'] == 'Fixed') {
        $Fare_data[0]['iBaseFare'] = $Fare_data[0]['fFixedFare'];
        $Fare_data[0]['fPricePerMin'] = 0;
        $Fare_data[0]['fPricePerKM'] = 0;
    }
    $resultArr = getFinalFare($Fare_data[0]['iBaseFare'], $Fare_data[0]['fPricePerMin'], $totalTimeInMinutes_trip, $Fare_data[0]['fPricePerKM'], $tripDistance, $Fare_data[0]['fCommision'], $priceRatio, $defaultCurrency, $startDate, $endDate);
    $resultArr['FinalFare'] = $resultArr['FinalFare'] - $resultArr['FareOfCommision']; // Temporary set: Remove addition of commision from above function
    $Fare_data[0]['total_fare'] = $resultArr['FinalFare'];
    if ($Fare_data[0]['iMinFare'] > $Fare_data[0]['total_fare']) {
        $Fare_data[0]['MinFareDiff'] = $Fare_data[0]['iMinFare'] - $Fare_data[0]['total_fare'];
        $Fare_data[0]['total_fare'] = $Fare_data[0]['iMinFare'];
    } else {
        $Fare_data[0]['MinFareDiff'] = "0";
    }
    if ($Fare_data[0]['eFareType'] == 'Fixed') {
        $Fare_data[0]['iBaseFare'] = 0;
    } else {
        $Fare_data[0]['iBaseFare'] = $resultArr['iBaseFare'];
    }
    $Fare_data[0]['fPricePerMin'] = $resultArr['FareOfMinutes'];
    $Fare_data[0]['fPricePerKM'] = $resultArr['FareOfDistance'];
    $Fare_data[0]['fCommision'] = $resultArr['FareOfCommision'];
    return $Fare_data;
}

function calculateApproximateFareGeneral($totalTimeInMinutes_trip, $tripDistance, $vehicleTypeID, $iUserId, $priceRatio, $startDate = "", $endDate = "", $couponCode = "", $surgePrice = 1, $fMaterialFee = 0, $fMiscFee = 0, $fDriverDiscount = 0, $DisplySingleVehicleFare = "", $eUserType = "Passenger", $iQty = 1, $SelectedCarTypeID = "", $isDestinationAdded = "Yes", $eFlatTrip = "No", $fFlatTripPrice = 0, $sourceLocationArr = array(), $destinationLocationArr = array(), $DisplayMultiDeliveryFare = "", $RideType = "Ride", $scheduleDate = "", $eFly = "", $iFromStationId = "", $iToStationId = "")
{


    //                                          1                   2               3            4           5           6                7               8                 9                   10             11                12                  13                             14                   15              16                   17                      18                  19                     20                     21
    //added by SP for fly stations on 19-08-2019 add last three parameter
    global $MODULES_OBJ, $obj, $tconfig, $APPLY_SURGE_ON_FLAT_FARE, $ENABLE_AIRPORT_SURCHARGE_SECTION, $countryCodeAdmin, $DisplayFrontEstimate, $langcodefront, $IS_RETURN_ARR_WITH_ORIG_AMT, $ePaymentModerounding, $vSystemDefaultCurrencyName, $currencyAssociateArr, $bookingHotelId, $eBookingFrom, $LANG_OBJ;
    $fpickupsurchargefare = $fdropoffsurchargefare = $fAirportPickupSurgeAmount = $fAirportDropoffSurgeAmount = $discountValue_orig = 0;
    $ePaymentModerounding = strtolower($ePaymentModerounding);
    if ($eUserType == 'Company') {
        $tableName = "company";
        $fiedls = "vCurrencyCompany AS currency,vLang";
        $userField = "iCompanyId";
        $eUnit = getMemberCountryUnit($iUserId, "Company");
        $TaxArr = getMemberCountryTax($iUserId, "Company");
    } else if ($eUserType == "Passenger") {
        $tableName = "register_user";
        $fiedls = "vCurrencyPassenger AS currency,vLang";
        $userField = "iUserId";
        $eUnit = getMemberCountryUnit($iUserId, "Passenger");
        $TaxArr = getMemberCountryTax($iUserId, "Passenger");
    } else {
        $tableName = "register_driver";
        $fiedls = "vCurrencyDriver AS currency,vLang";
        $userField = "iDriverId";
        $eUnit = getMemberCountryUnit($iUserId, "Driver");
        $TaxArr = getMemberCountryTax($iUserId, "Driver");
    }
    $sql_vehicle_category_table_name = getVehicleCategoryTblName();
    if ($eFly == 'Yes') {
        include_once($tconfig["tpanel_path"] . "include/features/include_fly_stations.php");
    }
    /* Added by HV on 17-02-2021 for  Multiple stopover points | Flat trip should not be applied */
    $stopoverpoint_arr = isset($_REQUEST['stopoverpoint_arr']) ? $_REQUEST['stopoverpoint_arr'] : '';
    $stopoverPointArr = array();
    $StopOverPointAdded = "No";
    if (!empty($stopoverpoint_arr) && $stopoverpoint_arr != "[]") {
        $stopoverPointArr = json_decode($stopoverpoint_arr, true);
        $StopOverPointAdded = "Yes";
    }
    /* Added by HV on 17-02-2021 for  Multiple stopover points | Flat trip should not be applied End */
    //print_r($tableName);die;
    $getUserData = $obj->MySQLSelect("SELECT $fiedls FROM " . $tableName . " WHERE $userField='" . $iUserId . "'");
    $vCurrencyPassenger = $userlangcode = "";
    if (count($getUserData) > 0) {
        $vCurrencyPassenger = $getUserData[0]['currency'];
        $userlangcode = $getUserData[0]['vLang'];
    }

    if ($vCurrencyPassenger == "" || $vCurrencyPassenger == NULL) {
        if (!empty($vSystemDefaultCurrencyName)) {
            $vCurrencyPassenger = isset($_REQUEST["vGeneralCurrency"]) ? $_REQUEST["vGeneralCurrency"] : $vSystemDefaultCurrencyName;
        } else {
            $vCurrencyPassenger = get_value('currency', 'vName', 'eDefault', 'Yes', '', 'true');
        }
    }


    //Added By HJ On 09-07-2020 For Optimize currency Table Query Start
    if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
        $priceRatio = $currencyAssociateArr[$vCurrencyPassenger]['Ratio'];
        $vSymbol = $currencyAssociateArr[$vCurrencyPassenger]['vSymbol'];
    } else {
        $userCurrencyData = $obj->MySQLSelect("SELECT vSymbol,vName,Ratio FROM currency WHERE vName='" . $vCurrencyPassenger . "'");
        $vSymbol = $userCurrencyData[0]['vSymbol'];
        $priceRatio = $userCurrencyData[0]['Ratio'];
    }
    //Added By HJ On 09-07-2020 For Optimize currency Table Query End
    //$priceRatio = get_value('currency', 'Ratio', 'vName', $vCurrencyPassenger, '', 'true');
    //$vSymbol = get_value('currency', 'vSymbol', 'vName', $vCurrencyPassenger, '', 'true');
    if ($userlangcode == "" || $userlangcode == NULL) {
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
        $userlangcode = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
    }
    if (isset($_SESSION['sess_lang']) && trim($_SESSION['sess_lang']) != "" && stripos($_SERVER['REQUEST_URI'], WEBSERVICE_API_FILE_NAME) === false) {
        $userlangcode = $_SESSION['sess_lang'];
    }
    //$eUnit = getMemberCountryUnit($iUserId,"Passenger");
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($userlangcode, "1");
    if ($DisplayFrontEstimate == "Yes") {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($langcodefront, "1");
    }
    //Added By HJ On 23-09-2019 For Get Hotel Service Charge Data Start
    $HOTEL_BOOKING_SERVICE_CHARGE = 0;
    if ($bookingHotelId > 0 && strtolower($eBookingFrom) == 'hotel') {
        $getHotelCharges = $obj->MySQLSelect("SELECT fHotelServiceCharge FROM administrators WHERE iAdminId='" . $bookingHotelId . "'");
        if (count($getHotelCharges) > 0) {
            $HOTEL_BOOKING_SERVICE_CHARGE = $getHotelCharges[0]['fHotelServiceCharge'];
        }
    }

    //Added By HJ On 23-09-2019 For Get Hotel Service Charge Data End
    if ($DisplySingleVehicleFare == "") {

        $ssql = " AND eStatus='Active'";
        if ($SelectedCarTypeID != "") {
            $ssql .= " AND iVehicleTypeId IN ($SelectedCarTypeID) ";
        }
        // 06-01-2020 in front panel estimate add
        if ($DisplayFrontEstimate == "Yes") {
            $ssql .= " AND eType = '" . $RideType . "'";
        }
        // 06-01-2020 in front panel estimate add
        $sql_vehicle_type = "SELECT * FROM vehicle_type WHERE 1 " . $ssql;
        $Fare_data = $obj->MySQLSelect($sql_vehicle_type);
        $result = array();
        for ($i = 0; $i < count($Fare_data); $i++) {


            $fPickUpPrice = $fNightPrice = 1;
            $data_surgePrice = checkSurgePrice($Fare_data[$i]['iVehicleTypeId'], $scheduleDate);
            if ($data_surgePrice['Action'] == "0") {
                if ($data_surgePrice['message'] == "LBL_PICK_SURGE_NOTE") {
                    $fPickUpPrice = $data_surgePrice['SurgePriceValue'];
                } else {
                    $fNightPrice = $data_surgePrice['SurgePriceValue'];
                }
            }
            $Fare_data[$i]['currencySymbol'] = $vSymbol;
            $Fare_data[$i]['TripTimeMinutes'] = $totalTimeInMinutes_trip;
            $Fare_data[$i]['TripDistance'] = $tripDistance;
            //$result = FetchTripFareData($Fare_data[$i], $surgePrice);
            //added by SP for fly stations on 19-08-2019 start
            if ($eFly == 'Yes') {
                //$Fare_data[$i]['iBaseFare'] = getFareForFlyVehicles($Fare_data[$i]['iVehicleTypeId'], $iFromStationId, $iToStationId) * $priceRatio; //commented bc iBaseFare at line 808 is calculated by ratio so two times calculated
                $Fare_data[$i]['iBaseFare'] = getFareForFlyVehicles($Fare_data[$i]['iVehicleTypeId'], $iFromStationId, $iToStationId);
            }
            //added by SP for fly stations on 19-08-2019 end
            /** calculate fare * */
            $Fare_data[$i]['iBaseFare'] = $Fare_data[$i]['iBaseFare'];
            $Fare_data[$i]['fPricePerMin'] = $Fare_data[$i]['fPricePerMin'];
            $Fare_data[$i]['fPricePerKM'] = getVehicleCountryUnit_PricePerKm($Fare_data[$i]['iVehicleTypeId'], $Fare_data[$i]['fPricePerKM']);
            $Fare_data[$i]['fPricePerKM'] = $Fare_data[$i]['fPricePerKM'];
            $Fare_data[$i]['iMinFare'] = $Fare_data[$i]['iMinFare'];
            $iBaseFare = $Fare_data[$i]['iBaseFare'];
            $fPricePerKM = $Fare_data[$i]['fPricePerKM'];
            $fPricePerMin = $Fare_data[$i]['fPricePerMin'];
            if ($Fare_data[$i]['eFareType'] == 'Fixed') {
                $Fare_data[$i]['fPricePerMin'] = 0;
                $Fare_data[$i]['fPricePerKM'] = 0;
                //$Fare_data[$i]['iBaseFare'] = $Fare_data[$i]['fFixedFare'] * $Fare_data[$i]['iQty'];
                if ($eFly == 'Yes') {
                    $Fare_data[$i]['iBaseFare'] = $Fare_data[$i]['iBaseFare'] * $iQty;
                    $iBaseFare = $Fare_data[$i]['iBaseFare'];
                } else {
                    $Fare_data[$i]['iBaseFare'] = $Fare_data[$i]['fFixedFare'] * $iQty;
                }
            } else if ($Fare_data[$i]['eFareType'] == 'Hourly') {
                $Fare_data[$i]['iBaseFare'] = $Fare_data[$i]['fPricePerKM'] = 0;
                $totalHour = $Fare_data[$i]['TripTimeMinutes'] / 60;
                $Fare_data[$i]['TripTimeMinutes'] = $totalHour;
                $Fare_data[$i]['fPricePerMin'] = $Fare_data[$i]['fPricePerHour'];
            }
            $Minute_Fare = round(($fPricePerMin * $totalTimeInMinutes_trip) * $priceRatio, 2);
            $Distance_Fare = round(($fPricePerKM * $tripDistance) * $priceRatio, 2);
            $iBaseFare_Ori = $iBaseFare;
            $iBaseFare = round($iBaseFare * $priceRatio, 2);
            $fVisitFee = round($Fare_data[$i]['fVisitFee'] * $priceRatio, 2);
            $eFlatTrip = "No";
            $fFlatTripPrice = 0;
            if ($isDestinationAdded == "Yes" && strtoupper(PACKAGE_TYPE) != "STANDARD") {
                $data_flattrip = checkFlatTripnew($sourceLocationArr, $destinationLocationArr, $Fare_data[$i]['iVehicleTypeId']);
                $eFlatTrip = $data_flattrip['eFlatTrip'];
                $fFlatTripPrice = $data_flattrip['Flatfare'];
            }
            $Fare_data[$i]['eFlatTrip'] = $eFlatTrip;
            $Fare_data[$i]['fFlatTripPrice'] = $fFlatTripPrice;
            if ($StopOverPointAdded == "Yes") {
                $eFlatTrip = "No";
            }
            if ($APPLY_SURGE_ON_FLAT_FARE == "No" && $eFlatTrip == "Yes") {
                $fPickUpPrice = 1;
                $fNightPrice = 1;
            }
            $surgePrice = $fPickUpPrice > 1 ? $fPickUpPrice : ($fNightPrice > 1 ? $fNightPrice : 1);
            $fAirportPickupSurgeAmount = $fAirportDropoffSurgeAmount = $fSurgePriceDiff = $SurgePriceFactor = $fpickupsurchargefare = 0;
            // add airport surge //
            if (strtoupper(PACKAGE_TYPE) == "SHARK") {
                if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
                    if ($MODULES_OBJ->checkSharkPackage()) {
                        $GetVehicleIdfromGeoLocation = CheckSurgeAirportFromGeoLocation($sourceLocationArr, $destinationLocationArr, $Fare_data[$i]['iVehicleTypeId']);
                        $fpickupsurchargefare = $GetVehicleIdfromGeoLocation['fpickupsurchargefare'];
                        $fdropoffsurchargefare = $GetVehicleIdfromGeoLocation['fdropoffsurchargefare'];
                    }
                }
            }
            // END AIRPORT SURGE //
            if ($eFlatTrip == "No") {
                $total_fare = ($iBaseFare + $Minute_Fare + $Distance_Fare + $fMaterialFee + $fMiscFee + $fVisitFee) - $fDriverDiscount;
                $fSurgePriceDiff = round(($total_fare * $surgePrice) - $total_fare, 2);
                $SurgePriceFactor = strval($surgePrice);
                if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
                    // airport pickup surge //
                    if ($fpickupsurchargefare > 1) {
                        $fAirportPickupSurgeAmount = round(($total_fare * $fpickupsurchargefare) - $total_fare, 2);
                        $pickupSurgePriceFactor = strval($fpickupsurchargefare);
                    }
                    // airport pickup surge //
                    // airport dropoff surge//
                    if ($fdropoffsurchargefare > 1) {
                        $fAirportDropoffSurgeAmount = round(($total_fare * $fdropoffsurchargefare) - $total_fare, 2);
                        $dropoffSurgePriceFactor = strval($fdropoffsurchargefare);
                    }
                    //airport dropoff surge//
                    $total_fare = $total_fare + $fSurgePriceDiff + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount;
                } else {
                    $total_fare = $total_fare + $fSurgePriceDiff;
                }
                $minimamfare = round($Fare_data[$i]['iMinFare'] * $priceRatio, 2);
                $fMinFareDiff = 0;
                //if ($minimamfare > $total_fare && isset($Fare_data[$i]['iRentalPackageId']) && $Fare_data[$i]['iRentalPackageId'] == 0) {
                if ($minimamfare > $total_fare && ((isset($Fare_data[0]['iRentalPackageId']) && $Fare_data[0]['iRentalPackageId'] == 0) || !isset($Fare_data[0]['iRentalPackageId']))) {
                    $fMinFareDiff = $minimamfare - $total_fare;
                    $total_fare = $minimamfare;
                    $Fare_data[$i]['FinalFare'] = $total_fare;
                }
                // }
            } else {
                $total_fare = round($fFlatTripPrice * $priceRatio, 2);
                $fSurgePriceDiff = round(($total_fare * $surgePrice) - $total_fare, 2);
                $SurgePriceFactor = strval($surgePrice);
                if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
                    // airport pickup surge //
                    if ($fpickupsurchargefare > 1) {
                        $fAirportPickupSurgeAmount = round(($total_fare * $fpickupsurchargefare) - $total_fare, 2);
                        $pickupSurgePriceFactor = strval($fpickupsurchargefare);
                    }
                    // airport pickup surge //
                    // airport dropoff surge//
                    if ($fdropoffsurchargefare > 1) {
                        $fAirportDropoffSurgeAmount = round(($total_fare * $fdropoffsurchargefare) - $total_fare, 2);
                        $dropoffSurgePriceFactor = strval($fdropoffsurchargefare);
                    }
                    //airport dropoff surge//
                    $total_fare = $total_fare + $fSurgePriceDiff + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount;
                } else {
                    $total_fare = $total_fare + $fSurgePriceDiff;
                }
                $Fare_data[$i]['FinalFare'] = $total_fare;
                $fMinFareDiff = $Minute_Fare = $Minute_Fare_Ori = $Distance_Fare = $Distance_Fare_Ori = 0;
                $iBaseFare_Ori = $fFlatTripPrice;
            }
            $Commision_Fare = round((($total_fare * $Fare_data[$i]['fCommision']) / 100), 2);
            $discountValue = $discountValue_orig = 0;
            $discountValueType = "cash";
            if ($couponCode != "") {
                //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data Start
                $getCouponCode = $obj->MySQLSelect("SELECT fDiscount,eType,iLocationId FROM coupon WHERE vCouponCode='" . $couponCode . "' AND eStatus='Active'");
                if (count($getCouponCode) > 0) {
                    $discountValue = $getCouponCode[0]['fDiscount'];
                    $discountValueType = $getCouponCode[0]['eType'];
                    $discountValue_orig = $discountValue;
                    if ($MODULES_OBJ->isEnableLocationWisePromoCode() && $getCouponCode[0]['iLocationId'] > 0) {
                        $iLocationIdSource = GetUserGeoLocationIdPromoCode($sourceLocationArr);
                        $iLocationIdDest = GetUserGeoLocationIdPromoCode($destinationLocationArr);
                        if (($RideType == "Ride" && (!in_array($getCouponCode[0]['iLocationId'], $iLocationIdSource) || !in_array($getCouponCode[0]['iLocationId'], $iLocationIdDest))) || ($RideType == "UberX" && !in_array($getCouponCode[0]['iLocationId'], $iLocationIdDest))) {
                            $discountValue = $discountValue_orig = 0;
                            $discountValueType = "cash";
                        } elseif ($eType == "Deliver" || $eType == "Multi-Delivery") {
                            $tDeliveryLocations = $_REQUEST['tDeliveryLocations'];
                            $tDeliveryLocations = json_decode($tDeliveryLocations, true);
                            $tDeliveryLocationsArr = array();
                            $tDeliveryLocationsArr[] = array('latitude' => $sourceLocationArr[0], 'longitude' => $sourceLocationArr[1],);
                            foreach ($tDeliveryLocations as $location) {
                                if (isset($location['vReceiverLatitude'])) {
                                    $tDeliveryLocationsArr[] = array('latitude' => $location['vReceiverLatitude'], 'longitude' => $location['vReceiverLongitude'],);
                                }
                            }
                            foreach ($tDeliveryLocationsArr as $loc) {
                                $Address_Array = array($loc['latitude'], $loc['longitude']);
                                $iLocationIdArr = GetUserGeoLocationIdPromoCode($Address_Array);
                                if (!in_array($getCouponCode[0]['iLocationId'], $iLocationIdArr)) {
                                    $discountValue = $discountValue_orig = 0;
                                    $discountValueType = "cash";
                                    break;
                                }
                            }
                        }
                    }
                }
                //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data End
                //$discountValue = get_value('coupon', 'fDiscount', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
                //$discountValue_orig = get_value('coupon', 'fDiscount', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
                //$discountValueType = get_value('coupon', 'eType', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
                if ($discountValueType == "percentage") {
                    $vDiscount = round($discountValue, 1) . ' ' . "%";
                    $discountValue = round(($total_fare * $discountValue), 1) / 100;
                } else {
                    $curr_sym = get_value('currency', 'vSymbol', 'eDefault', 'Yes', '', 'true');
                    $discountValue = round(($discountValue * $priceRatio), 2);
                    if ($discountValue > $total_fare) {
                        $vDiscount = round($total_fare, 1) . ' ' . $curr_sym;
                    } else {
                        $vDiscount = round($discountValue, 1) . ' ' . $curr_sym;
                    }
                }
                $total_fare = $total_fare - $discountValue;
                $Fare_data[0]['fDiscount_fixed'] = $discountValue;
                if ($total_fare < 0) {
                    $total_fare = 0;
                    //$discountValue = $total_fare;
                }
                if ($Fare_data[0]['eFareType'] == "Regular") {
                    $Fare_data[0]['fDiscount'] = $discountValue;
                    $Fare_data[0]['vDiscount'] = $vDiscount;
                } else {
                    $Fare_data[0]['fDiscount'] = $Fare_data[0]['fDiscount_fixed'];
                    $Fare_data[0]['vDiscount'] = $vDiscount;
                }
            }
            /* Tax Calculation */
            $fTax1 = $TaxArr['fTax1'];
            $fTax2 = $TaxArr['fTax2'];
            if ($fTax1 > 0) {
                $fTaxAmount1 = round((($total_fare * $fTax1) / 100), 2);
                $total_fare = $total_fare + $fTaxAmount1;
                // $Fare_data[$i]['fTax1'] = $vSymbol . " " . number_format($fTaxAmount1, 2);
                //$Fare_data[$i]['fTax1'] = formateNumAsPerCurrency(number_format($fTaxAmount1, 2),'');
                $Fare_data[$i]['fTax1'] = formateNumAsPerCurrency($fTaxAmount1, $vCurrencyPassenger);
            }
            if ($fTax2 > 0) {
                $total_fare_new = $total_fare - $fTaxAmount1;
                $fTaxAmount2 = round((($total_fare_new * $fTax2) / 100), 2);
                $total_fare = $total_fare + $fTaxAmount2;
                // $Fare_data[$i]['fTax2'] = $vSymbol . " " . number_format($fTaxAmount2, 2);
                //$Fare_data[$i]['fTax2'] = formateNumAsPerCurrency(number_format($fTaxAmount2, 2),'');
                $Fare_data[$i]['fTax2'] = formateNumAsPerCurrency($fTaxAmount2, $vCurrencyPassenger);
            }
            /* Tax Calculation */
            // Added By HJ On 23-09-2019 For Calculate Hotel Service Charge Start Sheet Bug - 339
            $fHotelCommision = 0;
            if (strtolower($eBookingFrom) == 'hotel' && $HOTEL_BOOKING_SERVICE_CHARGE > 0) {
                $fHotelCommision = setTwoDecimalPoint((($iBaseFare * $HOTEL_BOOKING_SERVICE_CHARGE) / 100));
                $total_fare += $fHotelCommision;
            }
            // Added By HJ On 23-09-2019 For Calculate Hotel Service Charge End Sheet Bug - 339
            /** calculate fare * */
            $Fare_data[$i]['FareOfMinutes'] = $Minute_Fare;
            $Fare_data[$i]['FareOfDistance'] = $Distance_Fare;
            $Fare_data[$i]['FareOfCommision'] = $Commision_Fare;
            $Fare_data[$i]['fPricePerMin'] = $Fare_data[$i]['fPricePerMin'];
            $Fare_data[$i]['fPricePerKM'] = $Fare_data[$i]['fPricePerKM'];
            $Fare_data[$i]['fCommision'] = $Fare_data[$i]['fCommision'];
            $Fare_data[$i]['FinalFare'] = $total_fare;
            if ($Fare_data[$i]['ePoolStatus'] == "Yes") {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iUserId . "'";
                $currData = $obj->MySQLSelect($sqlp);
                $vCurrency = $currData[0]['vName'];
                $fPoolPercentage = $Fare_data[$i]['fPoolPercentage'];
                $currData[0]['eRoundingOffEnable'] = "No";
                if ($currData[0]['eRoundingOffEnable'] == "Yes" && $ePaymentModerounding == 'cash' && $MODULES_OBJ->isEnableRoundingMethod()) {
                    $poolrounding1 = getRoundingOffAmount($total_fare, $vCurrencyPassenger);
                    $Fare_data[$i]['poolPrice1'] = formateNumAsPerCurrency($poolrounding1['finalFareValue'], $vCurrencyPassenger);
                } else {
                    $Fare_data[$i]['poolPrice1'] = formateNumAsPerCurrency($total_fare, $vCurrencyPassenger);
                }
                $poolPrice2 = ($total_fare / 100) * $fPoolPercentage;
                $totalpoolpricesheet2 = $total_fare + $poolPrice2;
                if ($currData[0]['eRoundingOffEnable'] == "Yes" && $ePaymentModerounding == 'cash' && $MODULES_OBJ->isEnableRoundingMethod()) {
                    $poolrounding2 = getRoundingOffAmount($totalpoolpricesheet2, $vCurrencyPassenger);
                    $Fare_data[$i]['poolPrice2'] = formateNumAsPerCurrency($poolrounding2['finalFareValue'], $vCurrencyPassenger);
                } else {
                    $Fare_data[$i]['poolPrice2'] = formateNumAsPerCurrency($totalpoolpricesheet2, $vCurrencyPassenger);
                }
            }
            if ($eFly == 'Yes') {
                $Fare_data[$i]['iBaseFare'] = $iBaseFare;
            } else {
                $Fare_data[$i]['iBaseFare'] = ($Fare_data[$i]['eFareType'] == 'Fixed') ? 0 : $iBaseFare_Ori;
            }
            //$Fare_data[$i]['iBaseFare'] = ($Fare_data[$i]['eFareType'] == 'Fixed') ? 0 : $iBaseFare;
            $Fare_data[$i]['iMinFare'] = round($Fare_data[$i]['iMinFare'] * $priceRatio, 2);
            if ($Fare_data[$i]['eFareType'] == "Regular") {
                //$Fare_data[$i]['total_fare'] = $vSymbol." ".number_format($total_fare,2);
                // $Fare_data[$i]['total_fare'] = $vSymbol . " " . number_format($total_fare, 2);
                //$Fare_data[$i]['total_fare'] = formateNumAsPerCurrency(number_format($total_fare, 2),'');
                $Fare_data[$i]['total_fare'] = formateNumAsPerCurrency($total_fare, $vCurrencyPassenger);
            } else {
                // $Fare_data[$i]['total_fare'] = $vSymbol . " " . number_format($Fare_data[$i]['FinalFare'], 2);
                //$Fare_data[$i]['total_fare'] = formateNumAsPerCurrency(number_format($Fare_data[$i]['FinalFare'], 2),'');
                $Fare_data[$i]['total_fare'] = formateNumAsPerCurrency($Fare_data[$i]['FinalFare'], $vCurrencyPassenger);
            }
            // For calculation for rental vehiclefare
            $Fare_data[$i]['eRental'] = 'No';
            $Fare_data[$i]['eRental_total_fare'] = "";
            $Fare_data[$i]['eRental_total_fare_value'] = 0;
            if (strtoupper(PACKAGE_TYPE) != "STANDARD" && ENABLE_RENTAL_OPTION == 'Yes') {
                $data_calculation_arr = array();
                $data_calculation_arr['iVehicleTypeId'] = $Fare_data[$i]['iVehicleTypeId'];
                $data_calculation_arr['userlangcode'] = $userlangcode;
                $data_calculation_arr['couponCode'] = $couponCode;
                $data_calculation_arr['discountValue_orig'] = $discountValue_orig;
                $data_calculation_arr['discountValueType'] = $discountValueType;
                $data_calculation_arr['priceRatio'] = $priceRatio;
                $data_calculation_arr['vSymbol'] = $vSymbol;
                $data_calculation_arr['vCurrencyPassenger'] = $vCurrencyPassenger;
                $rentalFareDataArr = generateEstimatedRentalFare($data_calculation_arr);
                $Fare_data[$i]['eRental'] = $rentalFareDataArr['eRental'];
                $Fare_data[$i]['eRental_total_fare'] = $rentalFareDataArr['eRental_total_fare'];
                $Fare_data[$i]['eRental_total_fare_value'] = $rentalFareDataArr['eRental_total_fare_value'];
            }
            // For calculation for rental vehiclefare
            // for kiosk
            $priceperkmnew = getVehiclePrice_ByUSerCountry($iUserId, $fPricePerKM);
            // $Fare_data[$i]['iBaseFare'] = $vSymbol . " " . number_format($Fare_data[$i]['iBaseFare'], 2);
            // $Fare_data[$i]['fPricePerMin'] = $vSymbol . " " . number_format(round($Fare_data[$i]['fPricePerMin'] * $priceRatio, 1), 2);
            // $Fare_data[$i]['fPricePerKM'] = $vSymbol . " " . number_format(round($Fare_data[$i]['fPricePerKM'] * $priceRatio, 1), 2);
            // $Fare_data[$i]['fCommision'] = $vSymbol . " " . number_format(round($Fare_data[$i]['fCommision'] * $priceRatio, 1), 2);
            $Fare_data[$i]['iBaseFare'] = formateNumAsPerCurrency($Fare_data[$i]['iBaseFare'], $vCurrencyPassenger);
            $fPricePerMinRound = round($Fare_data[$i]['fPricePerMin'] * $priceRatio, 1);
            $Fare_data[$i]['fPricePerMin'] = formateNumAsPerCurrency($fPricePerMinRound, $vCurrencyPassenger);
            $fPricePerKMRound = round($Fare_data[$i]['fPricePerKM'] * $priceRatio, 1);
            $Fare_data[$i]['fPricePerKM'] = formateNumAsPerCurrency($fPricePerKMRound, $vCurrencyPassenger);
            $fCommisionRound = round($Fare_data[$i]['fCommision'] * $priceRatio, 1);
            $Fare_data[$i]['fCommision'] = formateNumAsPerCurrency($fCommisionRound, $vCurrencyPassenger);
            // for kisok
            if ($eUnit == "Miles") {
                $DisplayDistanceTxt = $languageLabelsArr['LBL_ONE_MILE_TXT'];
            } else {
                $DisplayDistanceTxt = $languageLabelsArr['LBL_KM_DISTANCE_TXT'];
            }
            // $Fare_data[$i]['fPricePerKMKiosk'] = $vSymbol . " " . number_format(round($priceperkmnew * $priceRatio, 2), 2);
            $priceperkmnewRound = round($priceperkmnew * $priceRatio, 2);
            $Fare_data[$i]['fPricePerKMKiosk'] = formateNumAsPerCurrency($priceperkmnewRound, $vCurrencyPassenger);
            $Fare_data[$i]['fPricePerKMUnit'] = $DisplayDistanceTxt;
            if ($eUserType == "Driver") {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iUserId . "'";
                $currData = $obj->MySQLSelect($sqlp);
                $vCurrency = $currData[0]['vName'];
            } else {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iUserId . "'";
                $currData = $obj->MySQLSelect($sqlp);
                $vCurrency = $currData[0]['vName'];
            }

            if ($eUserType == "Company") {
                $iUserCompanyId = "";
            }
            if (empty($iUserId) || empty($iUserCompanyId)) { // for manual booking fare estimation
                $vCurrency = $vCurrencyPassenger;
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM currency AS cu WHERE cu.vName = '" . $vCurrency . "'";
                $currData = $obj->MySQLSelect($sqlp);
            }

            // $currData[0]['eRoundingOffEnable'] = "No";
            if ($currData[0]['eRoundingOffEnable'] == "Yes" && $ePaymentModerounding == "cash" && $MODULES_OBJ->isEnableRoundingMethod()) {
                $roundingOffTotal_fare_amountArr = getRoundingOffAmount($Fare_data[$i]['FinalFare'], $vCurrency);
                $roundingOffTotal_fare_amount = $roundingOffTotal_fare_amountArr['finalFareValue'];
                if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                    $roundingMethod = "";
                } else {
                    $roundingMethod = "-";
                }
                if ($Fare_data[$i]['eFareType'] == "Regular") {
                    //$Fare_data[$i]['total_fare'] = $vSymbol." ".number_format($total_fare,2);
                    // $Fare_data[$i]['total_fare'] = $vSymbol . " " . number_format($roundingOffTotal_fare_amount, 2);
                    $Fare_data[$i]['total_fare'] = formateNumAsPerCurrency($roundingOffTotal_fare_amount, $vCurrencyPassenger);
                } else {
                    $Fare_data[$i]['total_fare'] = formateNumAsPerCurrency($roundingOffTotal_fare_amount, $vCurrencyPassenger);
                    // $Fare_data[$i]['total_fare'] = $vSymbol . " " . number_format($roundingOffTotal_fare_amount, 2);
                }
                //$Fare_data[$i]['total_rounding_fare_amount'] = $vSymbol . " " .setTwoDecimalPoint($roundingOffTotal_fare_amount / $priceRatio);
                //$Fare_data[$i]['rounding_diff'] = $roundingMethod.' '.$vSymbol . " " .setTwoDecimalPoint($roundingOffTotal_fare_amountArr['differenceValue'] / $priceRatio);
                // $Fare_data[$i]['total_rounding_fare_amount'] = $vSymbol . " " . setTwoDecimalPoint($roundingOffTotal_fare_amount);
                $Fare_data[$i]['total_rounding_fare_amount'] = formateNumAsPerCurrency($roundingOffTotal_fare_amount, $vCurrencyPassenger);
                // $Fare_data[$i]['rounding_diff'] = $roundingMethod . ' ' . $vSymbol . " " . setTwoDecimalPoint($roundingOffTotal_fare_amountArr['differenceValue']);
                $Fare_data[$i]['rounding_diff'] = $roundingMethod . ' ' . formateNumAsPerCurrency($roundingOffTotal_fare_amountArr['differenceValue'], $vCurrencyPassenger);
            }
            //added by SP for rounding off currency wise on 26-8-2019 end
            // Added by HV on 16-10-2020 for Restrict Passenger Limit
            $db_label = $obj->MySQLSelect("SELECT vValue FROM `language_label` WHERE vLabel = 'LBL_CURRENT_PERSON_LIMIT' AND vCode = '" . $userlangcode . "'");
            $Fare_data[$i]['RESTRICT_PASSENGER_LIMIT_NOTE'] = str_replace('#PERSON_LIMIT#', $Fare_data[$i]['iPersonSize'], $db_label[0]['vValue']);

            $Fare_data[$i]['tDeliveryHelperNoteUser'] = str_replace( ['<ul>','</ul>'] , ['',''] ,$Fare_data[$i]['tDeliveryHelperNoteUser']);
            $Fare_data[$i]['tDeliveryHelperNoteUser'] = preg_replace('~<ul[^>]*>~Uis', '', $Fare_data[$i]['tDeliveryHelperNoteUser']);

        }
    } else {
        $Fare_data = getVehicleCostData("vehicle_type", $vehicleTypeID);
        //echo "<pre>";print_r($Fare_data);die;
        $fPickUpPrice = $fNightPrice = 1;
        $data_surgePrice = checkSurgePrice($Fare_data[0]['iVehicleTypeId'], $scheduleDate);
        if ($data_surgePrice['Action'] == "0") {
            if ($data_surgePrice['message'] == "LBL_PICK_SURGE_NOTE") {
                $fPickUpPrice = $data_surgePrice['SurgePriceValue'];
            } else {
                $fNightPrice = $data_surgePrice['SurgePriceValue'];
            }
        }
        if ($APPLY_SURGE_ON_FLAT_FARE == "No" && $eFlatTrip == "Yes") {
            $fPickUpPrice = $fNightPrice = 1;
        }
        $surgePrice = $fPickUpPrice > 1 ? $fPickUpPrice : ($fNightPrice > 1 ? $fNightPrice : 1);
        // add airport surge //
        if (strtoupper(PACKAGE_TYPE) == "SHARK" && $ENABLE_AIRPORT_SURCHARGE_SECTION == "Yes") {
            if ($MODULES_OBJ->checkSharkPackage()) {
                $GetVehicleIdfromGeoLocation = CheckSurgeAirportFromGeoLocation($sourceLocationArr, $destinationLocationArr, $Fare_data[0]['iVehicleTypeId']);
                $fpickupsurchargefare = $GetVehicleIdfromGeoLocation['fpickupsurchargefare'];
                $fdropoffsurchargefare = $GetVehicleIdfromGeoLocation['fdropoffsurchargefare'];
            }
        }
        // End airport surge //
        $totalTimeInMinutes_trip = setTwoDecimalPoint($totalTimeInMinutes_trip); //Added By HJ On 06-12-2019 For Solved Issue Of Sheet = #577 and #585
        $Fare_data[0]['currencySymbol'] = $vSymbol;
        $Fare_data[0]['TripTimeMinutes'] = $totalTimeInMinutes_trip;
        $Fare_data[0]['TripDistance'] = $tripDistance;
        //$result = FetchTripFareData($Fare_data[0], $surgePrice); /** calculate fare * */
        //added by SP for fly stations on 19-08-2019 start
        if ($eFly == 'Yes') {
            //$Fare_data[0]['iBaseFare'] = getFareForFlyVehicles($Fare_data[0]['iVehicleTypeId'], $iFromStationId, $iToStationId) * $priceRatio;//commented bc iBaseFare at line 1125 is calculated by ratio so two times calculated
            $Fare_data[0]['iBaseFare'] = getFareForFlyVehicles($Fare_data[0]['iVehicleTypeId'], $iFromStationId, $iToStationId);
        }
        //added by SP for fly stations on 19-08-2019 end
        $Fare_data[0]['iBaseFare'] = $Fare_data[0]['iBaseFare'];
        $Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerMin'];
        $Fare_data[0]['fPricePerKM'] = getVehicleCountryUnit_PricePerKm($Fare_data[0]['iVehicleTypeId'], $Fare_data[0]['fPricePerKM']);
        $Fare_data[0]['fPricePerKM'] = $Fare_data[0]['fPricePerKM'];
        $Fare_data[0]['iMinFare'] = $Fare_data[0]['iMinFare'];
        $iBaseFare = $Fare_data[0]['iBaseFare'];
        $fPricePerKM = $Fare_data[0]['fPricePerKM'];
        $fPricePerMin = $Fare_data[0]['fPricePerMin'];
        if ($Fare_data[0]['eFareType'] == 'Fixed') {
            $Fare_data[0]['fPricePerMin'] = 0;
            $Fare_data[0]['fPricePerKM'] = 0;
            //$Fare_data[0]['iBaseFare'] = $Fare_data[0]['fFixedFare'] * $Fare_data[0]['iQty'];
            $Fare_data[0]['iBaseFare'] = $Fare_data[0]['fFixedFare'] * $iQty;
        } else if ($Fare_data[0]['eFareType'] == 'Hourly') {
            $Fare_data[0]['iBaseFare'] = 0;
            $Fare_data[0]['fPricePerKM'] = 0;
            $totalHour = $Fare_data[0]['TripTimeMinutes'] / 60;
            $Fare_data[0]['TripTimeMinutes'] = $totalHour;
            $Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerHour'];
        }
        $Minute_Fare = round(($fPricePerMin * $totalTimeInMinutes_trip) * $priceRatio, 2);
        $Distance_Fare = round(($fPricePerKM * $tripDistance) * $priceRatio, 2);
        $iBaseFare_Ori = $iBaseFare;
        $Minute_Fare_Ori = round(($fPricePerMin * $totalTimeInMinutes_trip), 2);
        $Distance_Fare_Ori = round(($fPricePerKM * $tripDistance), 2);
        $iBaseFare = round($iBaseFare * $priceRatio, 2);
        $fMaterialFee = $fMiscFee = $fDriverDiscount = 0;
        if (isset($Fare_data[0]['fMaterialFee'])) {
            $fMaterialFee = round($Fare_data[0]['fMaterialFee'] * $priceRatio, 2);
        }
        if (isset($Fare_data[0]['fMiscFee'])) {
            $fMiscFee = round($Fare_data[0]['fMiscFee'] * $priceRatio, 2);
        }
        if (isset($Fare_data[0]['fDriverDiscount'])) {
            $fDriverDiscount = round($Fare_data[0]['fDriverDiscount'] * $priceRatio, 2);
        }
        $fVisitFee = round($Fare_data[0]['fVisitFee'] * $priceRatio, 2);
        if ($eFlatTrip == "No") {
            $total_fare = ($iBaseFare + $Minute_Fare + $Distance_Fare + $fMaterialFee + $fMiscFee + $fVisitFee) - $fDriverDiscount;
            $fSurgePriceDiff = round(($total_fare * $surgePrice) - $total_fare, 2);
            $SurgePriceFactor = strval($surgePrice);
            if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
                // airport pickup surge //
                if ($fpickupsurchargefare > 1) {
                    $fAirportPickupSurgeAmount = round(($total_fare * $fpickupsurchargefare) - $total_fare, 2);
                    $pickupSurgePriceFactor = strval($fpickupsurchargefare);
                }
                // airport pickup surge //
                // airport dropoff surge//
                if ($fdropoffsurchargefare > 1) {
                    $fAirportDropoffSurgeAmount = round(($total_fare * $fdropoffsurchargefare) - $total_fare, 2);
                    $dropoffSurgePriceFactor = strval($fdropoffsurchargefare);
                }
                //airport dropoff surge//
                $total_fare = $total_fare + $fSurgePriceDiff + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount;
            } else {
                $total_fare = $total_fare + $fSurgePriceDiff;
            }
            $minimamfare = round($Fare_data[0]['iMinFare'] * $priceRatio, 2);
            $fMinFareDiff = 0;
            // if ($minimamfare > $total_fare && isset($Fare_data[0]['iRentalPackageId']) && $Fare_data[0]['iRentalPackageId'] == 0) {
            if ($minimamfare > $total_fare && ((isset($Fare_data[0]['iRentalPackageId']) && $Fare_data[0]['iRentalPackageId'] == 0) || !isset($Fare_data[0]['iRentalPackageId']))) {
                $fMinFareDiff = $minimamfare - $total_fare;
                $total_fare = $minimamfare;
                $Fare_data[0]['FinalFare'] = $total_fare;
            }
        } else {
            $total_fare = round($fFlatTripPrice * $priceRatio, 2);
            $fSurgePriceDiff = round(($total_fare * $surgePrice) - $total_fare, 2);
            $SurgePriceFactor = strval($surgePrice);
            // airport surge //
            if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
                // airport pickup surge //
                if ($fpickupsurchargefare > 1) {
                    $fAirportPickupSurgeAmount = round(($total_fare * $fpickupsurchargefare) - $total_fare, 2);
                    $pickupSurgePriceFactor = strval($fpickupsurchargefare);
                }
                // airport pickup surge //
                // airport dropoff surge//
                if ($fdropoffsurchargefare > 1) {
                    $fAirportDropoffSurgeAmount = round(($total_fare * $fdropoffsurchargefare) - $total_fare, 2);
                    $dropoffSurgePriceFactor = strval($fdropoffsurchargefare);
                }
                //airport dropoff surge//
                $total_fare = $total_fare + $fSurgePriceDiff + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount;
            } else {
                $total_fare = $total_fare + $fSurgePriceDiff;
            }
            // airport surge //
            $Fare_data[0]['FinalFare'] = $total_fare;
            $fMinFareDiff = $Minute_Fare = $Minute_Fare_Ori = $Distance_Fare = $Distance_Fare_Ori = 0;
            $iBaseFare_Ori = $fFlatTripPrice;
        }
        $Commision_Fare = round((($total_fare * $Fare_data[0]['fCommision']) / 100), 2);
        $Commision_Fare_Ori = round($Commision_Fare / $priceRatio, 2);
        ## Calculate for Discount ##
        //$fSurgePriceDiff = $farewithsurcharge - $minimamfare;
        $Generated_Fare = $total_fare;
        $discountValue = $discountValue_Ori = 0;
        $discountValueType = "cash";
        $Fare_data[0]['fDiscount_Ori'] = 0;
        if ($couponCode != "") {
            //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data Start
            $getCouponCode = $obj->MySQLSelect("SELECT fDiscount,eType,iLocationId FROM coupon WHERE vCouponCode='" . $couponCode . "' AND eStatus='Active'");
            if (count($getCouponCode) > 0) {
                $discountValue = $getCouponCode[0]['fDiscount'];
                $discountValueType = $getCouponCode[0]['eType'];
                if ($MODULES_OBJ->isEnableLocationWisePromoCode() && $getCouponCode[0]['iLocationId'] > 0) {
                    $iLocationIdSource = GetUserGeoLocationIdPromoCode($sourceLocationArr);
                    $iLocationIdDest = GetUserGeoLocationIdPromoCode($destinationLocationArr);
                    if (($RideType == "Ride" && (!in_array($getCouponCode[0]['iLocationId'], $iLocationIdSource) || !in_array($getCouponCode[0]['iLocationId'], $iLocationIdDest))) || ($RideType == "UberX" && !in_array($getCouponCode[0]['iLocationId'], $iLocationIdDest))) {
                        $discountValue = $discountValue_orig = 0;
                        $discountValueType = "cash";
                    } elseif ($eType == "Deliver" || $eType == "Multi-Delivery") {
                        $tDeliveryLocations = $_REQUEST['tDeliveryLocations'];
                        $tDeliveryLocations = json_decode($tDeliveryLocations, true);
                        $tDeliveryLocationsArr = array();
                        $tDeliveryLocationsArr[] = array('latitude' => $sourceLocationArr[0], 'longitude' => $sourceLocationArr[1],);
                        foreach ($tDeliveryLocations as $location) {
                            if (isset($location['vReceiverLatitude'])) {
                                $tDeliveryLocationsArr[] = array('latitude' => $location['vReceiverLatitude'], 'longitude' => $location['vReceiverLongitude'],);
                            }
                        }
                        foreach ($tDeliveryLocationsArr as $loc) {
                            $Address_Array = array($loc['latitude'], $loc['longitude']);
                            $iLocationIdArr = GetUserGeoLocationIdPromoCode($Address_Array);
                            if (!in_array($getCouponCode[0]['iLocationId'], $iLocationIdArr)) {
                                $discountValue = $discountValue_orig = 0;
                                $discountValueType = "cash";
                                break;
                            }
                        }
                    }
                }
            }
            //Added By HJ On 18-01-2019 For Check and Get Active Coupon Data End
            //$discountValue = get_value('coupon', 'fDiscount', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
            //$discountValueType = get_value('coupon', 'eType', 'vCouponCode', $couponCode, '', 'true'); //Commented By HJ On 18-01-2019
            if ($discountValueType == "percentage") {
                $vDiscount = round($discountValue, 1) . ' ' . "%";
                $discountValue = round(($total_fare * $discountValue), 1) / 100;
                $discountValue_Ori = round((round($total_fare / $priceRatio, 2) * $discountValue), 1) / 100;
            } else {
                $curr_sym = get_value('currency', 'vSymbol', 'eDefault', 'Yes', '', 'true');
                $discountValue = round(($discountValue * $priceRatio), 2);
                if ($discountValue > $total_fare) {
                    $vDiscount = round($total_fare, 1) . ' ' . $curr_sym;
                } else {
                    $vDiscount = round($discountValue, 1) . ' ' . $curr_sym;
                }
                $discountValue_Ori = $discountValue;
            }
            $total_fare = $total_fare - $discountValue;
            $Fare_data[0]['fDiscount_fixed'] = $discountValue;
            if ($total_fare < 0) {
                $total_fare = 0;
                //$discountValue = $total_fare;
            }
            if ($Fare_data[0]['eFareType'] == "Regular") {
                $Fare_data[0]['fDiscount'] = $discountValue;
                $Fare_data[0]['vDiscount'] = $vDiscount;
            } else {
                $Fare_data[0]['fDiscount'] = $Fare_data[0]['fDiscount_fixed'];
                $Fare_data[0]['vDiscount'] = $vDiscount;
            }
            $Fare_data[0]['fDiscount_Ori'] = round($discountValue_Ori, 2);
        }
        ## Calculate for Discount ##
        /* Tax Calculation */
        $fTax1 = $TaxArr['fTax1'];
        $fTax2 = $TaxArr['fTax2'];
        if ($fTax1 > 0) {
            $fTaxAmount1 = round((($total_fare * $fTax1) / 100), 2);
            $total_fare = $total_fare + $fTaxAmount1;
            // $Fare_data[0]['fTax1'] = $vSymbol . " " . setTwoDecimalPoint($fTaxAmount1);
            $Fare_data[0]['fTax1'] = formateNumAsPerCurrency($fTaxAmount1, $vCurrencyPassenger);
            $Fare_data[0]['fTax1_Display'] = formateNumAsPerCurrency($fTaxAmount1, $vCurrencyPassenger);
            // $Fare_data[0]['fTax1_Display'] = $vSymbol . " " . setTwoDecimalPoint($fTaxAmount1);
        }
        if ($fTax2 > 0) {
            $total_fare_new = $total_fare - $fTaxAmount1;
            $fTaxAmount2 = round((($total_fare_new * $fTax2) / 100), 2);
            $total_fare = $total_fare + $fTaxAmount2;
            // $Fare_data[0]['fTax2'] = $vSymbol . " " . setTwoDecimalPoint($fTaxAmount2);
            $Fare_data[0]['fTax2'] = formateNumAsPerCurrency($fTaxAmount2, $vCurrencyPassenger);
            // $Fare_data[0]['fTax2_Display'] = $vSymbol . " " . setTwoDecimalPoint($fTaxAmount2);
            $Fare_data[0]['fTax2_Display'] = formateNumAsPerCurrency($fTaxAmount2, $vCurrencyPassenger);
        }
        /* Tax Calculation */
        // Added By HJ On 23-09-2019 For Calculate Hotel Service Charge Start Sheet Bug - 339
        $fHotelCommision = 0;
        if (strtolower($eBookingFrom) == 'hotel' && $HOTEL_BOOKING_SERVICE_CHARGE > 0) {
            $fHotelCommision = setTwoDecimalPoint((($iBaseFare * $HOTEL_BOOKING_SERVICE_CHARGE) / 100));
            $total_fare += $fHotelCommision;
        }
        // Added By HJ On 23-09-2019 For Calculate Hotel Service Charge End Sheet Bug - 339
        /** calculate fare * */
        $Fare_data[0]['FareOfMinutes'] = $Minute_Fare;
        $Fare_data[0]['FareOfDistance'] = $Distance_Fare;
        $Fare_data[0]['FareOfCommision'] = $Commision_Fare;
        $Fare_data[0]['fPricePerMin'] = $Fare_data[0]['fPricePerMin'];
        $Fare_data[0]['fPricePerKM'] = $Fare_data[0]['fPricePerKM'];
        $Fare_data[0]['fCommision'] = $Fare_data[0]['fCommision'];
        $Fare_data[0]['FinalFare'] = $total_fare;
        //added by SP for fly stations on 20-08-2019 start
        /* if($eFly=='Yes') {

          $Fare_data[0]['iBaseFare'] = $iBaseFare;

          } else {

          $Fare_data[0]['iBaseFare'] = ($Fare_data[0]['eFareType'] == 'Fixed') ? 0 : $iBaseFare;

        } */
        //added by SP for fly stations on 20-08-2019 end
        $Fare_data[0]['iBaseFare'] = ($Fare_data[0]['eFareType'] == 'Fixed') ? 0 : $iBaseFare;
        $Fare_data[0]['iMinFare'] = setTwoDecimalPoint($Fare_data[0]['iMinFare'] * $priceRatio);
        $Fare_data[0]['total_fare_amount'] = $tripTotalAmount = setTwoDecimalPoint($total_fare);

        if ($Fare_data[0]['eFareType'] == "Regular") {
            //$Fare_data[0]['total_fare'] = $vSymbol." ".number_format($total_fare,2);
            // $Fare_data[0]['total_fare'] = $vSymbol . " " . setTwoDecimalPoint($total_fare);
            $Fare_data[0]['total_fare'] = formateNumAsPerCurrency($total_fare, $vCurrencyPassenger);
        }
        $Fare_data[0]['eRental'] = 'No';
        $Fare_data[0]['eRental_total_fare'] = "";
        $Fare_data[0]['eRental_total_fare_value'] = 0;
        if (strtoupper(PACKAGE_TYPE) != "STANDARD" && ENABLE_RENTAL_OPTION == 'Yes') {
            $data_calculation_arr = array();
            $data_calculation_arr['iVehicleTypeId'] = $Fare_data[0]['iVehicleTypeId'];
            $data_calculation_arr['userlangcode'] = $userlangcode;
            $data_calculation_arr['couponCode'] = $couponCode;
            $data_calculation_arr['discountValue_orig'] = $discountValue_orig;
            $data_calculation_arr['discountValueType'] = $discountValueType;
            $data_calculation_arr['priceRatio'] = $priceRatio;
            $data_calculation_arr['vSymbol'] = $vSymbol;
            $data_calculation_arr['vCurrencyPassenger'] = $vCurrencyPassenger;
            $rentalFareDataArr = generateEstimatedRentalFare($data_calculation_arr);
            $Fare_data[0]['eRental'] = $rentalFareDataArr['eRental'];
            $Fare_data[0]['eRental_total_fare'] = $rentalFareDataArr['eRental_total_fare'];
            $Fare_data[0]['eRental_total_fare_value'] = $rentalFareDataArr['eRental_total_fare_value'];
        }
        $TotalGenratedFare = $Generated_Fare;
        $Fare_data[0]['fMinFareDiff'] = $fMinFareDiff;
        $Fare_data[0]['fTax1'] = $fTax1;
        $Fare_data[0]['fTax2'] = $fTax2;
        $Fare_data[0]['fSurgePriceDiff'] = $fSurgePriceDiff;
        $Fare_data[0]['TotalGenratedFare'] = setTwoDecimalPoint($TotalGenratedFare / $priceRatio);
        $Fare_data[0]['iFare_Ori'] = setTwoDecimalPoint($total_fare / $priceRatio);
        //added by SP for fly stations on 20-08-2019 start
        /* if($eFly=='Yes') {

          $Fare_data[0]['iBaseFare_AMT'] = $iBaseFare_Ori;

          } else {

          $Fare_data[0]['iBaseFare_AMT'] = ($Fare_data[0]['eFareType'] == 'Fixed') ? 0 : $iBaseFare_Ori;

        } */
        //added by SP for fly stations on 20-08-2019 end
        $Fare_data[0]['iBaseFare_AMT'] = ($Fare_data[0]['eFareType'] == 'Fixed') ? 0 : $iBaseFare_Ori;
        $Fare_data[0]['FareOfMinutes_Ori'] = $Minute_Fare_Ori;
        $Fare_data[0]['FareOfDistance_Ori'] = $Distance_Fare_Ori;
        $Fare_data[0]['fCommision_AMT'] = $Commision_Fare_Ori;
        $Fare_data[0]['fSurgePriceDiff_Ori'] = setTwoDecimalPoint($fSurgePriceDiff / $priceRatio);
        $Fare_data[0]['fTax1_Ori'] = setTwoDecimalPoint($fTax1 / $priceRatio);
        $Fare_data[0]['fTax2_Ori'] = setTwoDecimalPoint($fTax2 / $priceRatio);
        $Fare_data[0]['fTax1Percentage'] = $TaxArr['fTax1'];
        $Fare_data[0]['fTax2Percentage'] = $TaxArr['fTax2'];
        $Fare_data[0]['fMinFareDiff_Ori'] = setTwoDecimalPoint($fMinFareDiff / $priceRatio);
        $Fare_data[0]['fDiscount_Ori'] = ($Fare_data[0]['fDiscount_Ori'] > $Fare_data[0]['TotalGenratedFare']) ? $Fare_data[0]['TotalGenratedFare'] : $Fare_data[0]['fDiscount_Ori'];
        // $Fare_data[0]['iBaseFare'] = $vSymbol . " " . number_format($Fare_data[0]['iBaseFare'], 2);
        // $Fare_data[0]['fPricePerMin'] = $vSymbol . " " . number_format(round($Fare_data[0]['fPricePerMin'] * $priceRatio, 1), 2);
        // $Fare_data[0]['fPricePerKM'] = $vSymbol . " " . number_format(round($Fare_data[0]['fPricePerKM'] * $priceRatio, 1), 2);
        // $Fare_data[0]['fCommision'] = $vSymbol . " " . number_format(round($Fare_data[0]['fCommision'] * $priceRatio, 1), 2);
        $Fare_data[0]['iBaseFare'] = formateNumAsPerCurrency($Fare_data[0]['iBaseFare'], $vCurrencyPassenger);
        $fPricePerMinRound = round($Fare_data[0]['fPricePerMin'] * $priceRatio, 1);
        $Fare_data[0]['fPricePerMin'] = formateNumAsPerCurrency($fPricePerMinRound, $vCurrencyPassenger);
        $fPricePerKMRound = round($Fare_data[0]['fPricePerKM'] * $priceRatio, 1);
        $Fare_data[0]['fPricePerKM'] = formateNumAsPerCurrency($fPricePerKMRound, $vCurrencyPassenger);
        $fCommisionRound = round($Fare_data[0]['fCommision'] * $priceRatio, 1);
        $Fare_data[0]['fCommision'] = formateNumAsPerCurrency($fCommisionRound, $vCurrencyPassenger);
        //Commented By HJ On 07-08-2019 For Merged Query For Get Vehicle Type Data Start
        //$vVehicleType = get_value('vehicle_type', "vVehicleType_" . $userlangcode, 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        //$vVehicleTypeLogo = get_value('vehicle_type', "vLogo", 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        //$iVehicleCategoryId = get_value('vehicle_type', 'iVehicleCategoryId', 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        //$vVehicleFare = get_value('vehicle_type', 'fFixedFare', 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        //Commented By HJ On 07-08-2019 For Merged Query For Get Vehicle Type Data End
        //Added By HJ On 07-08-2019 For Merged Query For Get Vehicle Type Data Start
        //echo $vVehicleType."===".$vVehicleTypeLogo."==".$iVehicleCategoryId."==".$vVehicleFare."<br>";
        $getVehicleData = $obj->MySQLSelect("SELECT vVehicleType_" . $userlangcode . ",vLogo,iVehicleCategoryId,fFixedFare FROM vehicle_type WHERE iVehicleTypeId='" . $vehicleTypeID . "'");
        //echo "<pre>";print_r($getVehicleData);die;
        $vVehicleFare = $iVehicleCategoryId = 0;
        $vVehicleTypeLogo = $vVehicleType = "";
        if (count($getVehicleData) > 0) {
            $vVehicleType = $getVehicleData[0]['vVehicleType_' . $userlangcode];
            $vVehicleTypeLogo = $getVehicleData[0]['vLogo'];
            $iVehicleCategoryId = $getVehicleData[0]['iVehicleCategoryId'];
            $vVehicleFare = $getVehicleData[0]['fFixedFare'];
        }
        //Added By HJ On 07-08-2019 For Merged Query For Get Vehicle Type Data End
        $vVehicleCategoryData = get_value($sql_vehicle_category_table_name, 'vLogo,vCategory_' . $userlangcode . ' as vCategory', 'iVehicleCategoryId', $iVehicleCategoryId);
        $Fare_data[0]['vVehicleCategory'] = !empty($vVehicleCategoryData[0]['vCategory']) ? $vVehicleCategoryData[0]['vCategory'] : "";
        $eType = $Fare_data[0]['eFareType'];
        $Fare_data_amounts = $Fare_data;
        $tripFareDetailsArr = array();
        //added by SP for rounding off currency wise on 26-8-2019 start
        //if($eUserType == "Driver"){
        //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_driver as rd LEFT JOIN country as co ON rd.vCountry = co.vCountryCode  WHERE rd.iDriverId = '" . $iUserId . "'";
        //    $countryData = $obj->MySQLSelect($sqlp);
        //    $vCountry = $countryData[0]['vCountryCode'];
        //}else{
        //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_user as ru LEFT JOIN country as co ON ru.vCountry = co.vCountryCode WHERE ru.iUserId = '" . $iUserId . "'";
        //    $countryData = $obj->MySQLSelect($sqlp);
        //    $vCountry = $countryData[0]['vCountryCode'];
        //}
        if ($eUserType == "Driver") {
            $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iUserId . "'";
            $currData = $obj->MySQLSelect($sqlp);
            $vCurrency = $currData[0]['vName'];
        } else {
            $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iUserId . "'";
            $currData = $obj->MySQLSelect($sqlp);
            $vCurrency = $currData[0]['vName'];
        }
        if ($eUserType == "Company") {
            $iUserCompanyId = "";
        }
        if (empty($iUserId) || empty($iUserCompanyId)) { // for manual booking fare estimation
            $vCurrency = $vCurrencyPassenger;
            $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM currency AS cu WHERE cu.vName = '" . $vCurrency . "'";
            $currData = $obj->MySQLSelect($sqlp);
        }
        $eRoundingOffEnableFlag = "No";

        // $currData[0]['eRoundingOffEnable'] = "No";
        if ($currData[0]['eRoundingOffEnable'] == "Yes" && $ePaymentModerounding == "cash" && $MODULES_OBJ->isEnableRoundingMethod()) {
            $roundingOffTotal_fare_amountArr = getRoundingOffAmount($Fare_data[0]['total_fare_amount'], $vCurrency);
            //$returnArr['roundingOffAmountArr'] = $roundingOffTotal_fare_amount;
            $roundingOffTotal_fare_amount = $roundingOffTotal_fare_amountArr['finalFareValue'];
            //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;
            /* if ($Fare_data[0]['eFareType'] == "Regular") {

              $Fare_data[0]['total_fare'] = $vSymbol . " " . setTwoDecimalPoint($roundingOffTotal_fare_amount);

            } */
            if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                $roundingMethod = "";
            } else {
                $roundingMethod = "-";
            }
            $Fare_data[0]['total_rounding_fare_amount'] = formateNumAsPerCurrency($roundingOffTotal_fare_amount, $vCurrencyPassenger);
            $Fare_data[0]['rounding_diff'] = $roundingMethod . ' ' . formateNumAsPerCurrency($roundingOffTotal_fare_amountArr['differenceValue'], $vCurrencyPassenger);
            if ($roundingOffTotal_fare_amountArr['differenceValue'] > 0) {
                $eRoundingOffEnableFlag = "Yes";
            }
        }
        //added by SP for rounding off currency wise on 26-8-2019 end
        if ($eFlatTrip == "Yes") {
            $i = 0;
            $displayfare = round($fFlatTripPrice * $priceRatio, 2);
            // $displayfare = $vSymbol . " " . number_format($displayfare, 2);
            $displayfare = formateNumAsPerCurrency($displayfare, $vCurrencyPassenger);
            $tripFareDetailsArr[$i][$languageLabelsArr['LBL_FLAT_TRIP_FARE_TXT']] = $displayfare;
            $i++;
            if ($fSurgePriceDiff > 0) {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = formateNumAsPerCurrency($fSurgePriceDiff, $vCurrencyPassenger);
                $i++;
            }
            // airport surge
            if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
                if ($fAirportPickupSurgeAmount > 0) {
                    // $tripFareDetailsArr[$i][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $pickupSurgePriceFactor] = $vSymbol . " " . formatNum($fAirportPickupSurgeAmount);
                    $tripFareDetailsArr[$i][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $pickupSurgePriceFactor] = formateNumAsPerCurrency($fAirportPickupSurgeAmount, $vCurrencyPassenger);
                    $i++;
                }
                if ($fAirportDropoffSurgeAmount > 0) {
                    // $tripFareDetailsArr[$i][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $dropoffSurgePriceFactor] = $vSymbol . " " . formatNum($fAirportDropoffSurgeAmount);
                    $tripFareDetailsArr[$i][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $dropoffSurgePriceFactor] = formateNumAsPerCurrency($fAirportDropoffSurgeAmount, $vCurrencyPassenger);
                    $i++;
                }
            }
            // airport surge
            // add for kiosk
            if ($fTax1 > 0) {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fTax1 . " % "] = $Fare_data[0]['fTax1_Display'];
                $i++;
            }
            if ($fTax2 > 0) {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fTax2 . " % "] = $Fare_data[0]['fTax2_Display'];
                $i++;
            }
            if ($fHotelCommision > 0) {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = formateNumAsPerCurrency($fHotelCommision, $vCurrencyPassenger);
                // $tripFareDetailsArr[$i][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = $vSymbol . $fHotelCommision;
                $i++;
            }
            if ($discountValue > 0) {
                // $farediscount = $vSymbol . " " . formatNum($Fare_data[0]['fDiscount']);
                $farediscount = formateNumAsPerCurrency($Fare_data[0]['fDiscount'], $vCurrencyPassenger);
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_DISCOUNT']] = "- " . $farediscount;
                $i++;
            }
            $tripFareDetailsArr[$i++]['eDisplaySeperator'] = "Yes";
            $tripFareDetailsArr[$i++][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = $Fare_data[0]['total_fare'];
            if ($eRoundingOffEnableFlag == "Yes") {
                $tripFareDetailsArr[$i++][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = $Fare_data[0]['rounding_diff']; //added by SP for rounding off currency wise on 26-8-2019
                $tripFareDetailsArr[$i++]['eDisplaySeperator'] = "Yes";
                $tripFareDetailsArr[$i++][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = $Fare_data[0]['total_rounding_fare_amount']; //added by SP for rounding off currency wise on 09-11-2019
            }
            if ($eRoundingOffEnableFlag == "Yes") {
                $tripTotalAmount = $Fare_data[0]['total_rounding_fare_amount'];
                // $tripFareDetailsArr[$i]['total_fare_amount'] = formateNumAsPerCurrency($Fare_data[0]['total_rounding_fare_amount'], $vCurrencyPassenger);
            } else {
                $tripTotalAmount = $Fare_data[0]['total_fare_amount'];
                //$tripFareDetailsArr[$i + 1]['total_fare_amount'] = setTwoDecimalPoint($Fare_data[0]['total_fare_amount']);   //commented bc after format number it set to 2 decimal point then it converted with value b4 comma
                // $tripFareDetailsArr[$i]['total_fare_amount'] = formateNumAsPerCurrency($Fare_data[0]['total_fare_amount'], $vCurrencyPassenger);
            }
            //$tripFareDetailsArr[$i]['total_fare_amount'] = $Fare_data[0]['total_fare_amount'];
            $Fare_data = $tripFareDetailsArr;
        } else {
            $i = 0;
            $countUfx = 0;
            // echo $eType;exit;
            if ($eType == "UberX") {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $Fare_data[0]['vVehicleCategory'] . "-" . $vVehicleType;
                $countUfx = 1;
            } else if ($RideType == "Multi-Delivery") {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $vVehicleType;
                $countUfx = 1;
            }
            if ($eType == "Regular") {
                // $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = $vSymbol . " " . formatNum($iBaseFare);
                $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = formateNumAsPerCurrency($iBaseFare, $vCurrencyPassenger);
                if ($countUfx == 1) {
                    $i++;
                }
                if ($eUnit == "Miles") {
                    $tripDistanceDisplay = $tripDistance * 0.621371;
                    $tripDistanceDisplay = round($tripDistanceDisplay, 2);
                    //$DisplayDistanceTxt = $languageLabelsArr['LBL_MILE_DISTANCE_TXT'];
                    $LBL_MILE_DISTANCE_TXT = ($tripDistanceDisplay > 1) ? $languageLabelsArr['LBL_MILE_DISTANCE_TXT'] : $languageLabelsArr['LBL_ONE_MILE_TXT'];
                    $DisplayDistanceTxt = $LBL_MILE_DISTANCE_TXT;
                } else {
                    $tripDistanceDisplay = $tripDistance;
                    //$DisplayDistanceTxt = $languageLabelsArr['LBL_KM_DISTANCE_TXT'];
                    $LBL_KM_DISTANCE_TXT = ($tripDistanceDisplay > 1) ? $languageLabelsArr['LBL_DISPLAY_KMS'] : $languageLabelsArr['LBL_KM_DISTANCE_TXT'];
                    $DisplayDistanceTxt = $LBL_KM_DISTANCE_TXT;
                }
                $tripDistanceDisplay = formatNum($tripDistanceDisplay);
                if ($isDestinationAdded == "Yes") {
                    // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $tripDistanceDisplay . " " . $DisplayDistanceTxt . ")"] = $vSymbol . " " . formatNum($Fare_data[0]['FareOfDistance']);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $tripDistanceDisplay . " " . $DisplayDistanceTxt . ")"] = formateNumAsPerCurrency($Fare_data[0]['FareOfDistance'], $vCurrencyPassenger);
                } else {
                    $priceperkm = getVehiclePrice_ByUSerCountry($iUserId, $fPricePerKM);
                    // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT']] = $vSymbol . " " . formatNum(round($priceperkm * $priceRatio, 2)) . "/" . strtolower($DisplayDistanceTxt);
                    // issue for format currency
                    //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT']] = formateNumAsPerCurrency((formatNum(round($priceperkm * $priceRatio, 2)) . "/" . strtolower($DisplayDistanceTxt)),'');
                    $priceperkmRound = round($priceperkm * $priceRatio, 2);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT']] = formateNumAsPerCurrency($priceperkmRound, $vCurrencyPassenger) . "/" . strtolower($DisplayDistanceTxt);
                }
                $i++;
                //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $totalTimeInMinutes_trip . ")"] = $vSymbol . formatNum($Fare_data[0]['FareOfMinutes']);
                $hours = floor($totalTimeInMinutes_trip / 60); // No. of mins/60 to get the hours and round down
                $mins = $totalTimeInMinutes_trip % 60; // No. of mins/60 - remainder (modulus) is the minutes
                $LBL_HOURS_TXT = ($hours > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
                $LBL_MINUTES_TXT = ($mins > 1) ? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
                if ($hours >= 1) {
                    $tripDurationDisplay = $hours . " " . $LBL_HOURS_TXT . ", " . $mins . " " . $LBL_MINUTES_TXT;
                } else {
                    $tripDurationDisplay = $totalTimeInMinutes_trip . " " . $LBL_MINUTES_TXT;
                    //$tripDurationDisplay = round($totalTimeInMinutes_trip) . " " . $LBL_MINUTES_TXT;
                }
                if ($isDestinationAdded == "Yes") {
                    // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $tripDurationDisplay . ")"] = $vSymbol . " " . formatNum($Fare_data[0]['FareOfMinutes']);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $tripDurationDisplay . ")"] = formateNumAsPerCurrency($Fare_data[0]['FareOfMinutes'], $vCurrencyPassenger);
                } else {
                    // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT']] = $vSymbol . " " . formatNum(round($fPricePerMin * $priceRatio, 2)) . "/" . $languageLabelsArr['LBL_MIN_SMALL_TXT'];
                    $fPricePerMinRound = round($fPricePerMin * $priceRatio, 2);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT']] = formateNumAsPerCurrency($fPricePerMinRound, $vCurrencyPassenger) . "/" . $languageLabelsArr['LBL_MIN_SMALL_TXT'];
                }
                $i++;
            } else if ($eType == "Fixed") {
                //added by SP for fly stations on 20-08-2019 start
                if ($eFly == 'Yes') {
                    $vVehicleFare = getFareForFlyVehicles($vehicleTypeID, $iFromStationId, $iToStationId) * $priceRatio;
                }
                //added by SP for fly stations on 20-08-2019 end
                // $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = ($Fare_data[0]['iQty'] > 1) ? $Fare_data[0]['iQty'] . ' X ' . $vSymbol . " " . formatNum($vVehicleFare) : $vSymbol . " " . formatNum($vVehicleFare);
                $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = ($Fare_data[0]['iQty'] > 1) ? $Fare_data[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $vCurrencyPassenger) : formateNumAsPerCurrency($vVehicleFare, $vCurrencyPassenger);
                if ($countUfx == 1) {
                    $i++;
                }
                //added by SP for fly stations on 20-08-2019 start
                if ($eFly == 'Yes') {
                    //$Fare_data[0]['total_fare'] = $vSymbol . " " . number_format(round($total_fare, 2), 2);
                    $Fare_data[0]['total_fare'] = formateNumAsPerCurrency($total_fare, $vCurrencyPassenger);
                    $Fare_data[0]['total_fare_amount'] = $tripTotalAmount = number_format(round($total_fare, 2), 2);
                } else {
                    $total_fare = $vVehicleFare + $Fare_data[0]['fVisitFee'] - $Fare_data[0]['fDiscount_fixed'];
                    //$Fare_data[0]['total_fare'] = $vSymbol . " " . number_format(round($total_fare * $priceRatio, 2), 2);
                    $totalfareamountratio = $total_fare * $priceRatio;
                    $Fare_data[0]['total_fare'] = formateNumAsPerCurrency($totalfareamountratio, $vCurrencyPassenger);
                    $Fare_data[0]['total_fare_amount'] = $tripTotalAmount = number_format(round($total_fare * $priceRatio, 2), 2);
                }
                //added by SP for fly stations on 20-08-2019 end
                //$total_fare = $vVehicleFare + $Fare_data[0]['fVisitFee'] - $Fare_data[0]['fDiscount_fixed'];
                // $Fare_data[0]['total_fare'] = $vSymbol . " " . number_format(round($total_fare * $priceRatio, 1), 2);
                // $Fare_data[0]['total_fare_amount'] = number_format(round($total_fare * $priceRatio, 1), 2);
                $totalfareround = round($total_fare * $priceRatio, 1);
                $Fare_data[0]['total_fare'] = formateNumAsPerCurrency($totalfareround, $vCurrencyPassenger);
                $Fare_data[0]['total_fare_amount'] = $tripTotalAmount = (number_format(round($total_fare * $priceRatio, 1), 2)); //here removed formateNumAsPerCurrency bc at end it already used so error when two time used..
            } else if ($eType == "Hourly") {
                // $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $totalTimeInMinutes_trip . ")"] = $vSymbol . " " . $Fare_data[0]['FareOfMinutes'];
                $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $totalTimeInMinutes_trip . ")"] = formateNumAsPerCurrency($Fare_data[0]['FareOfMinutes'], $vCurrencyPassenger);
                if ($countUfx == 1) {
                    $i++;
                }
            }
            $fVisitFee = $Fare_data[0]['fVisitFee'];
            if ($fVisitFee > 0) {
                // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_VISIT_FEE']] = $vSymbol . " " . $fVisitFee;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_VISIT_FEE']] = formateNumAsPerCurrency($fVisitFee, $vCurrencyPassenger);
                $i++;
            }
            if ($fMaterialFee > 0) {
                // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MATERIAL_FEE']] = $vSymbol . " " . $fMaterialFee;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MATERIAL_FEE']] = formateNumAsPerCurrency($fMaterialFee, $vCurrencyPassenger);
                $i++;
            }
            if ($fMiscFee > 0) {
                // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MISC_FEE']] = $vSymbol . " " . $fMiscFee;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MISC_FEE']] = formateNumAsPerCurrency($fMiscFee, $vCurrencyPassenger);
                $i++;
            }
            if ($fSurgePriceDiff > 0) {
                if ($isDestinationAdded == "Yes") {
                    //$normalfare = $total_fare-$fSurgePriceDiff+$discountValue-$fTaxAmount1-$fTaxAmount2;
                    //$normalfare = formatNum($normalfare * $priceRatio);
                    $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $normalfare = $iBaseFare + $Distance_Fare + $Minute_Fare;
                    $normalfare = formatNum($normalfare);
                    //added by SP for fly stations on 20-08-2019 start
                    if ($eFly != 'Yes') {
                        // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = $vSymbol . " " . $normalfare;
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = formateNumAsPerCurrency($normalfare, $vCurrencyPassenger);
                        $i++;
                    }
                    //added by SP for fly stations on 20-08-2019 end
                }
                if ($isDestinationAdded == "Yes") {
                    //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = $vSymbol." ".formatNum($fSurgePriceDiff * $priceRatio);
                    // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = $vSymbol . " " . formatNum($fSurgePriceDiff);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = formateNumAsPerCurrency($fSurgePriceDiff, $vCurrencyPassenger);
                    $i++;
                } else {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE']] = $SurgePriceFactor . " x";
                    $i++;
                }
            }
            // airport surge
            if ($ENABLE_AIRPORT_SURCHARGE_SECTION == 'Yes') {
                if ($fAirportPickupSurgeAmount > 0) {
                    // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $pickupSurgePriceFactor] = $vSymbol . " " . formatNum($fAirportPickupSurgeAmount);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $pickupSurgePriceFactor] = formateNumAsPerCurrency($fAirportPickupSurgeAmount, $vCurrencyPassenger);
                    $i++;
                }
                // dropoff
                if ($fAirportDropoffSurgeAmount > 0) {
                    // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $dropoffSurgePriceFactor] = $vSymbol . " " . formatNum($fAirportDropoffSurgeAmount);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $dropoffSurgePriceFactor] = formateNumAsPerCurrency($fAirportDropoffSurgeAmount, $vCurrencyPassenger);
                    $i++;
                }
            }
            // airport surge
            //if ($fMinFareDiff > 0 && $isDestinationAdded == "Yes") {
            if ($fMinFareDiff > 0 && $isDestinationAdded == "Yes") {
                //$minimamfare = $iBaseFare + $fPricePerKM + $fPricePerMin + $fMinFareDiff;
                $minimamfare = formatNum($minimamfare);
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MINIMUM'] . " (" . formateNumAsPerCurrency($minimamfare, $vCurrencyPassenger) . ")"] = $vSymbol . " " . formatNum($fMinFareDiff);
                $Fare_data[0]['TotalMinFare'] = $minimamfare;
                $i++;
            }
            if ($fDriverDiscount > 0) {
                // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = "- " . $vSymbol . " " . $fDriverDiscount;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = "- " . formateNumAsPerCurrency($fDriverDiscount, $vCurrencyPassenger);
                $i++;
            }
            if ($discountValue > 0) {
                //$farediscount = $vSymbol." ".number_format(round($Fare_data[0]['fDiscount'] * $priceRatio,1),2);
                // $farediscount = $vSymbol . " " . formatNum($Fare_data[0]['fDiscount']);
                $farediscount = formateNumAsPerCurrency($Fare_data[0]['fDiscount'], $vCurrencyPassenger);
                //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISCOUNT']] = "- " . $vSymbol . $Fare_data[0]['fDiscount'];
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISCOUNT']] = "- " . $farediscount;
                $i++;
            }
            if ($fTax1 > 0) {
                if ($isDestinationAdded == "Yes") {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fTax1 . " % "] = $Fare_data[0]['fTax1_Display'];
                    $i++;
                } else {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX1_TXT']] = " @ " . $fTax1 . " % ";
                    $i++;
                }
            }
            if ($fTax2 > 0) {
                if ($isDestinationAdded == "Yes") {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fTax2 . " % "] = $Fare_data[0]['fTax2_Display'];
                    $i++;
                } else {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX2_TXT']] = " @ " . $fTax2 . " % ";
                    $i++;
                }
            }
            if ($fHotelCommision > 0) {
                // $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = $vSymbol . $fHotelCommision;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = formateNumAsPerCurrency($fHotelCommision, $vCurrencyPassenger);
                $i++;
            }
            if ($Fare_data[0]['eFareType'] == "Regular") {
                //$Fare_data[0]['total_fare'] = $vSymbol." ".number_format($total_fare,2);
                // $Fare_data[0]['total_fare'] = $vSymbol . " " . setTwoDecimalPoint($total_fare);
                $Fare_data[0]['total_fare'] = formateNumAsPerCurrency($total_fare, $vCurrencyPassenger);
            }
            if ($isDestinationAdded == "Yes") {
                $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                $i++;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = $Fare_data[0]['total_fare'];
                $i++;
            }
            //added by SP for rounding off currency wise on 26-8-2019 start
            /* $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = $Fare_data[0]['rounding_diff'];

              $i++;

              $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";

              $i++;

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = $Fare_data[0]['total_rounding_fare_amount'];

              $i++; */ //if($eUserType == "Driver"){
            //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_driver as rd LEFT JOIN country as co ON rd.vCountry = co.vCountryCode  WHERE rd.iDriverId = '" . $iUserId . "'";
            //    $countryData = $obj->MySQLSelect($sqlp);
            //    $vCountry = $countryData[0]['vCountryCode'];
            //}else{
            //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_user as ru LEFT JOIN country as co ON ru.vCountry = co.vCountryCode WHERE ru.iUserId = '" . $iUserId . "'";
            //    $countryData = $obj->MySQLSelect($sqlp);
            //    $vCountry = $countryData[0]['vCountryCode'];
            //}
            if ($eUserType == "Driver") {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iUserId . "'";
                $currData = $obj->MySQLSelect($sqlp);
                $vCurrency = $currData[0]['vName'];
            } else {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iUserId . "'";
                $currData = $obj->MySQLSelect($sqlp);
                $vCurrency = $currData[0]['vName'];
            }
            if ($eUserType == "Company") {
                $iUserCompanyId = "";
            }
            if (empty($iUserId) || empty($iUserCompanyId)) { // for manual booking fare estimation
                $vCurrency = $vCurrencyPassenger;
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable FROM currency AS cu WHERE cu.vName = '" . $vCurrency . "'";
                $currData = $obj->MySQLSelect($sqlp);
            }

            $tripTotalAmount = $Fare_data[0]['total_fare_amount'];
            $tripFareDetailsArr[$i + 1]['total_fare_amount'] = formateNumAsPerCurrency($Fare_data[0]['total_fare_amount'], $vCurrencyPassenger);
            $i++;
            // $currData[0]['eRoundingOffEnable'] = "No";
            if ($currData[0]['eRoundingOffEnable'] == "Yes" && $isDestinationAdded == "Yes" && $ePaymentModerounding == "cash" && $MODULES_OBJ->isEnableRoundingMethod()) {
                //$roundingOffTotal_fare_amountArr = getRoundingOffAmount($Fare_data[0]['total_fare_amount'],$vCurrency);
                $roundingOffTotal_fare_amountArr = getRoundingOffAmount($total_fare, $vCurrency);
                // echo "<pre>"; print_r($roundingOffTotal_fare_amountArr); exit;
                
                //$returnArr['roundingOffAmountArr'] = $roundingOffTotal_fare_amount;
                $roundingOffTotal_fare_amount = $roundingOffTotal_fare_amountArr['finalFareValue'];
                //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;
                /* if ($Fare_data[0]['eFareType'] == "Regular") {

                  $Fare_data[0]['total_fare'] = $vSymbol . " " . setTwoDecimalPoint($roundingOffTotal_fare_amount);

              } */
                if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                    $roundingMethod = "";
                } else {
                    $roundingMethod = "-";
                }
                if ($Fare_data[0]['eFareType'] == "Regular") {
                    // $Fare_data[0]['total_fare'] = $vSymbol . " " . number_format($total_fare, 2);
                    $Fare_data[0]['total_fare'] = formateNumAsPerCurrency($total_fare, $vCurrencyPassenger);
                    //$Fare_data[0]['total_fare'] = $vSymbol . " " .setTwoDecimalPoint($roundingOffTotal_fare_amount);
                }
                //$Fare_data[0]['total_rounding_fare_amount'] = $vSymbol . " " .setTwoDecimalPoint($roundingOffTotal_fare_amount / $priceRatio);
                //$Fare_data[0]['rounding_diff'] = $roundingMethod.' '.$vSymbol . " " .setTwoDecimalPoint($roundingOffTotal_fare_amountArr['differenceValue'] / $priceRatio);
                // $Fare_data[0]['total_rounding_fare_amount'] = $vSymbol . " " . formatNum($roundingOffTotal_fare_amount);
                // $Fare_data[0]['rounding_diff'] = $roundingMethod . ' ' . $vSymbol . " " . setTwoDecimalPoint($roundingOffTotal_fare_amountArr['differenceValue']);
                $Fare_data[0]['total_rounding_fare_amount'] = formateNumAsPerCurrency($roundingOffTotal_fare_amount, $vCurrencyPassenger);
                $Fare_data[0]['rounding_diff'] = $roundingMethod . ' ' . formateNumAsPerCurrency($roundingOffTotal_fare_amountArr['differenceValue'], $vCurrencyPassenger);
                if ($roundingOffTotal_fare_amountArr['differenceValue'] > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = $Fare_data[0]['rounding_diff'];
                    $i++;
                    $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = $Fare_data[0]['total_rounding_fare_amount'];
                    $i++;
                }

                $tripTotalAmount = $roundingOffTotal_fare_amount;
                $tripFareDetailsArr[$i + 1]['total_fare_amount'] = formateNumAsPerCurrency($roundingOffTotal_fare_amount, $vCurrencyPassenger);
            }

            
            //added by SP for rounding off currency wise on 26-8-2019 end
            $Fare_data = $tripFareDetailsArr;
        }
    }
    //$Fare_data['fareamt'] = 35;

    //echo "<pre>";print_r($Fare_data);die;
    if ($DisplayMultiDeliveryFare == "Yes") {
        return $Fare_data_amounts;
    } else {
        //print_R($Fare_data); exit;
        //Added By HJ On 12-03-2020 For Get Origional Fare Amount For Use In app As Per Discuss with KS Sir Start
        if (strtoupper($IS_RETURN_ARR_WITH_ORIG_AMT) == "YES") {
            $retrunDataArr = array();
            $retrunDataArr['fare_data'] = $Fare_data;
            $retrunDataArr['org_fare_amount'] = $tripTotalAmount;
            return $retrunDataArr;
        }
        //Added By HJ On 12-03-2020 For Get Origional Fare Amount For Use In app As Per Discuss with KS Sir End
        return $Fare_data;
    }
}

function isMemberEmailPhoneVerified($iMemberId, $user_type = "Passenger")
{
    global $obj, $DRIVER_EMAIL_VERIFICATION, $DRIVER_PHONE_VERIFICATION, $RIDER_EMAIL_VERIFICATION, $RIDER_PHONE_VERIFICATION, $COMPANY_EMAIL_VERIFICATION, $COMPANY_PHONE_VERIFICATION, $ENABLE_EMAIL_OPTIONAL, $userDetailsArr, $THEME_OBJ;
    if ($user_type == "Driver") {
        $tableName = "register_driver";
        $fieldName = "iDriverId";
        $EMAIL_VERIFICATION = $DRIVER_EMAIL_VERIFICATION;
        $PHONE_VERIFICATION = $DRIVER_PHONE_VERIFICATION;
        //$driverData = $obj->MySQLSelect("SELECT eEmailVerified,ePhoneVerified,vEmail FROM register_driver WHERE iDriverId = '" . $iMemberId . "'");
        //$eEmailVerified = $driverData[0]['eEmailVerified'];
        //$ePhoneVerified = $driverData[0]['ePhoneVerified'];
    } else if ($user_type == "Company") {
        $tableName = "company";
        $fieldName = "iCompanyId";
        $EMAIL_VERIFICATION = $COMPANY_EMAIL_VERIFICATION;
        $PHONE_VERIFICATION = $COMPANY_PHONE_VERIFICATION;
        //$companyData = $obj->MySQLSelect("SELECT eEmailVerified,ePhoneVerified,vEmail FROM company WHERE iCompanyId = '" . $iMemberId . "'");
        //$eEmailVerified = $companyData[0]['eEmailVerified'];
        //$ePhoneVerified = $companyData[0]['ePhoneVerified'];
    } else {
        $tableName = "register_user";
        $fieldName = "iUserId";
        $EMAIL_VERIFICATION = $RIDER_EMAIL_VERIFICATION;
        $PHONE_VERIFICATION = $RIDER_PHONE_VERIFICATION;
        //$driverData = $obj->MySQLSelect("SELECT eEmailVerified,ePhoneVerified,vEmail FROM register_user WHERE iUserId = '" . $iMemberId . "'");
        //$eEmailVerified = $driverData[0]['eEmailVerified'];
        //$eEmailVerified = "Yes";
        //$ePhoneVerified = $driverData[0]['ePhoneVerified'];
    }
    //Added By HJ On 18-07-2020 For Optimize register_user Table Query Start
    if (isset($userDetailsArr[$tableName . '_' . $iMemberId])) {
        $memberData = $userDetailsArr[$tableName . '_' . $iMemberId];
    } else {
        $memberData = $obj->MySQLSelect("SELECT *,$fieldName as iMemberId FROM " . $tableName . " WHERE $fieldName='" . $iMemberId . "'");
        $userDetailsArr[$tableName . '_' . $iMemberId] = $memberData;
        $vEmail = $driverData[0]['vEmail'];
    }
    //echo '<pre>';print_r($memberData);die;
    $eEmailVerified = $memberData[0]['eEmailVerified'];
    $ePhoneVerified = $memberData[0]['ePhoneVerified'];
    //Added By HJ On 18-07-2020 For Optimize register_user Table Query End
    $email = $EMAIL_VERIFICATION == "Yes" ? ($eEmailVerified == "Yes" ? "true" : "false") : "true";
    $phone = $PHONE_VERIFICATION == "Yes" ? ($ePhoneVerified == "Yes" ? "true" : "false") : "true";
    // for email optional
    if (empty($vEmail) && $EMAIL_VERIFICATION == "Yes") {
        $email = "true";
    }
    // if ($THEME_OBJ->isXThemeActive() == "Yes") {
    //     if ($phone == "false") {
    //         $returnArr['Action'] = "0";
    //         $returnArr['message'] = "DO_PHONE_VERIFY";
    //         setDataResponse($returnArr);
    //     }
    // } else {
    if ($email == "false" && $phone == "false") {
        $returnArr['Action'] = "0";
        $returnArr['message'] = "DO_EMAIL_PHONE_VERIFY";
        setDataResponse($returnArr);
    } else if ($email == "true" && $phone == "false") {
        $returnArr['Action'] = "0";
        $returnArr['message'] = "DO_PHONE_VERIFY";
        setDataResponse($returnArr);
    } else if ($email == "false" && $phone == "true") {
        $returnArr['Action'] = "0";
        $returnArr['message'] = "DO_EMAIL_VERIFY";
        setDataResponse($returnArr);
    }
    // }
}

function UpdateDriverRequest2($iDriverId, $iUserId, $iTripId, $eStatus = "", $vMsgCode, $eAcceptAttempted = "No", $iOrderId = 0)
{
    if (isset($_REQUEST['eSystem']) && strtoupper($_REQUEST['eSystem']) == "DELIVERALL") {
        return UpdateDriverRequest2DeliverAll($iDriverId, $iUserId, $iTripId, $eStatus, $vMsgCode, $eAcceptAttempted, $iOrderId);
    } else {
        return UpdateDriverRequest2General($iDriverId, $iUserId, $iTripId, $eStatus, $vMsgCode, $eAcceptAttempted);
    }

}



function UpdateDriverRequest2DeliverAll($iDriverId, $iUserId, $iTripId, $eStatus = "", $vMsgCode, $eAcceptAttempted = "No", $iOrderId = 0){
    global $obj;
    $sql = "SELECT * FROM `driver_request` WHERE iDriverId = '" . $iDriverId . "' AND iOrderId = '" . $iOrderId . "' AND iTripId = '0' AND vMsgCode='" . $vMsgCode . "'";
    $db_sql = $obj->MySQLSelect($sql);
    $request_count = count($db_sql);
    if ($request_count > 0) {
        $where = " iDriverRequestId = '" . $db_sql[0]['iDriverRequestId'] . "'";
        if ($eStatus != "") {
            $Data_Update['eStatus'] = $eStatus;
        }
        $Data_Update['tDate'] = @date("Y-m-d H:i:s");
        $Data_Update['iTripId'] = $iTripId;
        $Data_Update['eAcceptAttempted'] = $eAcceptAttempted;
        $id = $obj->MySQLQueryPerform("driver_request", $Data_Update, 'update', $where);
    }
    return $request_count;
}
function UpdateDriverRequest2General($iDriverId, $iUserId, $iTripId, $eStatus = "", $vMsgCode, $eAcceptAttempted = "No"){

    global $obj;

    if (isset($tripDetailsArr['driver_request_' . $vMsgCode])) {
        $db_sql = $tripDetailsArr['driver_request_' . $vMsgCode];
    } else {
        $db_sql = $obj->MySQLSelect("SELECT * FROM `driver_request` WHERE iDriverId = '" . $iDriverId . "' AND iUserId = '" . $iUserId . "' AND iTripId = '0' AND vMsgCode='" . $vMsgCode . "'");
        $tripDetailsArr['driver_request_' . $vMsgCode] = $db_sql;
    }
    //Added By HJ On 02-07-2020 For optimize driver_request Table Query End
    $request_count = count($db_sql);
    if ($request_count > 0) {
        $where = " iDriverRequestId = '" . $db_sql[0]['iDriverRequestId'] . "'";
        if ($eStatus != "") {
            $Data_Update['eStatus'] = $eStatus;
        }
        $Data_Update['tDate'] = @date("Y-m-d H:i:s");
        $Data_Update['iTripId'] = $iTripId;
        $Data_Update['eAcceptAttempted'] = $eAcceptAttempted;
        $id = $obj->MySQLQueryPerform("driver_request", $Data_Update, 'update', $where);
    }
    return $request_count;
}

function checkimgexist($img, $type)
{
    global $tconfig;
    $country_temp = 'IN';
    $img_temp = $img;
    if (!file_exists($tconfig["tpanel_path"] . $img)) {
        if ($type == 1) {
            $img_temp = $tconfig["tsite_url"] . "webimages/icons/DefaultImg/" . strtolower($country_temp) . "_r.png";
        } else {
            $img_temp = $tconfig["tsite_url"] . "webimages/icons/DefaultImg/" . strtolower($country_temp) . "_s.png";
        }
    } else {
        $img_temp = $tconfig["tsite_url"] . $img;
    }
    return $img_temp;
}

function UpdateAppTerminateStatus($iMemberId, $MemberType, $eAppTerminate = "No")
{
    global $obj;
    if (!empty($iMemberId) && !empty($MemberType)) {
        if (strtolower($MemberType) == 'passenger') {
            $table = "register_user";
            $where = " iUserId = $iMemberId";
        } else if (strtolower($MemberType) == 'driver') {
            $table = "register_driver";
            $where = " iDriverId = $iMemberId";
        } else if (strtolower($MemberType) == 'company') {
            $table = "company";
            $where = " iCompanyId = $iMemberId";
        } else if (strtolower($MemberType) == "hotel" || strtolower($MemberType) == "kiosk") {
            $table = "hotel";
            $where = " iHotelId = $iMemberId";
        }
        $Data_update = array();
        $Data_update['eAppTerminate'] = $eAppTerminate;
        $obj->MySQLQueryPerform($table, $Data_update, 'update', $where);
    }
    return true;
}

function FetchUserAvgSafetyRating($iMemberId, $eUserType = "Passenger", $checkDeleted = "No")
{
    global $obj;
    if ($eUserType == "Passenger") {
        $iUserId = "iDriverId";
        $checkusertype = "Passenger";
    } else {
        $iUserId = "iUserId";
        $checkusertype = "Driver";
    }
    //$usertotaltrips = get_value("trips", "iTripId", $iUserId, $iMemberId);
    $sql = "SELECT iTripId from trips WHERE $iUserId = '" . $iMemberId . "' AND eHailTrip = 'No' AND (eBookingFrom != 'Hotel' OR eBookingFrom != 'Kiosk')";
    $usertotaltrips = $obj->MySQLSelect($sql);
    if (count($usertotaltrips) > 0) {
        for ($i = 0; $i < count($usertotaltrips); $i++) {
            $iTripId .= $usertotaltrips[$i]['iTripId'] . ",";
        }
        $iTripId_str = substr($iTripId, 0, -1);
        //echo  $iTripId_str;exit;
        $ssql = "";
        if (strtoupper($checkDeleted) == "YES") {
            $ssql .= " AND eStatus != 'Deleted' ";
        }
        $sql = "SELECT count(iRatingId) as ToTalTrips, SUM(vSafetyRating) as ToTalRatings from ratings_user_driver WHERE iTripId IN (" . $iTripId_str . ") AND eUserType = '" . $checkusertype . "' AND vSafetyRating != '' $ssql ";
        $result_ratings = $obj->MySQLSelect($sql);
        $ToTalTrips = $result_ratings[0]['ToTalTrips'];
        $ToTalRatings = !empty($result_ratings[0]['ToTalRatings']) ? $result_ratings[0]['ToTalRatings'] : 0;
        //$average_rating = round($ToTalRatings / $ToTalTrips, 2);
        $average_rating = !empty($ToTalRatings) ? round($ToTalRatings / $ToTalTrips, 1) : 0;
    } else {
        $average_rating = 0;
    }
    return $average_rating;
}

function GetUserGeoLocationIdBanner($Address_Array)
{
    global $obj, $orderDetailsArr;
    // $iLocationId = "0";
    $iLocationId = array();
    if (!empty($Address_Array)) {
        //Added By HJ On 15-07-2020 For Optimize location_master Table Query Start
        $allowed_data = array();
        if (isset($orderDetailsArr['location_master'])) {
            $locationMasterData = $orderDetailsArr['location_master'];
        } else {
            $locationMasterData = $obj->MySQLSelect("SELECT * FROM location_master WHERE eStatus =  'Active'");
            $orderDetailsArr['location_master'] = $locationMasterData;
        }
        for ($l = 0; $l < count($locationMasterData); $l++) {
            if (strtoupper($locationMasterData[$l]['eFor']) == "BANNER") {
                $allowed_data[] = $locationMasterData[$l];
            }
        }
        //Added By HJ On 15-07-2020 For Optimize location_master Table Query End
        //$allowed_data = $obj->MySQLSelect("SELECT * FROM location_master WHERE eStatus='Active' AND eFor = 'UserDeliveryCharge'");
        if (!empty($allowed_data)) {
            $polygon = array();
            foreach ($allowed_data as $key => $val) {
                $latitude = explode(",", $val['tLatitude']);
                $longitude = explode(",", $val['tLongitude']);
                for ($x = 0; $x < count($latitude); $x++) {
                    if (!empty($latitude[$x]) || !empty($longitude[$x])) {
                        $polygon[$key][] = array($latitude[$x], $longitude[$x]);
                    }
                }
                // print_r($polygon[$key]);
                if ($polygon[$key]) {
                    $address = contains($Address_Array, $polygon[$key]) ? 'IN' : 'OUT';
                    if ($address == 'IN') {
                        $iLocationId[] = $val['iLocationId'];
                        // break;
                    }
                }
            }
        }
    }
    return $iLocationId;
}

function FetchTripFareDetails($iTripId, $iMemberId, $eUserType = "Passenger", $PAGE_MODE = "HISTORY")
{
    global $obj, $MODULES_OBJ, $tconfig, $DELIVERY_VERIFICATION_METHOD, $POOL_ENABLE, $ENABLE_INTRANSIT_SHOPPING_SYSTEM, $SERVICE_PROVIDER_FLOW, $APP_TYPE, $ENABLE_FAVORITE_DRIVER_MODULE, $parent_ufx_catid, $UserCurrencyLanguageDetailsArr, $DriverCurrencyLanguageDetailsArr, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $currencyAssociateArr, $generalTripRatingDataArr, $driverVehicleDataArr, $type, $LANG_OBJ, $VIDEO_CONSULT_OBJ;
    $returnArr = array();
    $sql_vehicle_category_table_name = getVehicleCategoryTblName();
    if ($eUserType == "Passenger") {
        $tblname = "register_user";
        $vLang = "vLang";
        $iUserId = "iUserId";
        $vCurrency = "vCurrencyPassenger";
        $vPhoneCode = "vPhoneCode";
    } else {
        $tblname = "register_driver";
        $vLang = "vLang";
        $iUserId = "iDriverId";
        $vCurrency = "vCurrencyDriver";
        $vPhoneCode = "vCode";
    }
    //Added By HJ On 22-07-2020 For Optimize register_user/register_driver Table Query Start
    if (isset($userDetailsArr[$tblname . '_' . $iMemberId])) {
        $driverData = $userDetailsArr[$tblname . '_' . $iMemberId];
    } else {
        $driverData = $obj->MySQLSelect("SELECT *,$iUserId as iMemberId FROM " . $tblname . " WHERE $iUserId='" . $iMemberId . "'");
        $userDetailsArr[$tblname . '_' . $iMemberId] = $driverData;
    }
    $currencycode = $driverData[0][$vCurrency];
    if (isset($currencyAssociateArr[$currencycode])) {
        $driverData[0]['vSymbol'] = $currencyAssociateArr[$currencycode]['vSymbol'];
    }
    $userlangcode = $driverData[0]['vLang'];
    $currencySymbol = $driverData[0]['vSymbol'];
    //Added By HJ On 22-07-2020 For Optimize register_user/register_driver Table Query End
    //$userlangcode = get_value($tblname, $vLang, $iUserId, $iMemberId, '', 'true');
    if ($userlangcode == "" || $userlangcode == NULL) {
        //Added By HJ On 17-06-2020 For Optimize language_master Table Query Start
        $userlangcode = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 17-06-2020 For Optimize language_master Table Query End
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($userlangcode, "1");
    if ($currencycode == "" || $currencycode == NULL) {
        //Added By HJ On 09-06-2020 For Optimization Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol from currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
        }
        //Added By HJ On 09-06-2020 For Optimization End
    }
    $ssql_fav_q = "";
    if ($MODULES_OBJ->checkFavDriverModule() && $eUserType == "Passenger") {
        include_once('include/features/include_fav_driver.php');
        $ssql_fav_q = getFavSelectQueryDriver($iMemberId);
    }
    //$sql = "SELECT * from trips WHERE iTripId = '" . $iTripId . "'";
    if (strtoupper(APP_TYPE) != "RIDE") {
        $sql = "SELECT tr.*,vt.vVehicleType_" . $userlangcode . " as vVehicleType,vt.vRentalAlias_" . $userlangcode . " as vRentalVehicleTypeName,vt.fTripHoldFees,vt.vLogo,vt.iVehicleCategoryId,vt.iCancellationTimeLimit,vt.fFixedFare,vt.eIconType,COALESCE(vc.iParentId, '0') as iParentId,COALESCE(vc.ePriceType, '') as ePriceType,COALESCE(vc.vLogo, '') as vLogoVehicleCategory,COALESCE(vc.vCategory_" . $userlangcode . ", '') as vCategory " . $ssql_fav_q . " from trips as tr LEFT JOIN  vehicle_type as vt ON tr.iVehicleTypeId = vt.iVehicleTypeId  LEFT JOIN " . $sql_vehicle_category_table_name . " as vc ON vt.iVehicleCategoryId = vc.iVehicleCategoryId WHERE tr.iTripId = '" . $iTripId . "'";
    } else {
        $sql = "SELECT tr.*,vt.vVehicleType_" . $userlangcode . " as vVehicleType,vt.vRentalAlias_" . $userlangcode . " as vRentalVehicleTypeName,vt.fTripHoldFees,vt.vLogo,vt.iVehicleCategoryId,vt.iCancellationTimeLimit,vt.fFixedFare,vt.eIconType  " . $ssql_fav_q . "  from trips as tr LEFT JOIN  vehicle_type as vt ON tr.iVehicleTypeId = vt.iVehicleTypeId WHERE tr.iTripId = '" . $iTripId . "'";
    }
    $tripData = $obj->MySQLSelect($sql);
    if (strtoupper($tripData[0]['isVideoCall']) == "YES") {
        $tripData[0]['eFareType'] = "Fixed";
    }
    $tripData[0]['vOrderNoUnique'] = !empty($tripData[0]['vOrderNoUnique']) ? $tripData[0]['vOrderNoUnique'] : "";
    $priceRatio = $tripData[0]['fRatio_' . $currencycode];
    $iActive = $tripData[0]['iActive'];
    // Convert Into Timezone
    $tripTimeZone = $tripData[0]['vTimeZone'];
    $eType = $tripData[0]['eType'];
    if ($SERVICE_PROVIDER_FLOW == "Provider" && $tripData[0]['eType'] == "UberX" && $tripData[0]['eServiceLocation'] == "Driver") {
        $tripData[0]['tSaddress'] = $tripData[0]['vWorkLocation'];
    }
    $tripData[0]['vServiceTitle'] = $tripData[0]['vServiceDetailTitle'] = "";
    if (isset($tripData[0]['vVehicleType'])) {
        $tripData[0]['vServiceTitle'] = $tripData[0]['vVehicleType'];
    }
    if (isset($tripData[0]['vVehicleType'])) {
        $tripData[0]['vServiceDetailTitle'] = $tripData[0]['vVehicleType'];
    }
    if (isset($tripData[0]['eType']) && $tripData[0]['eType'] == "Ride") {
        if ($APP_TYPE != "Ride") {
            $tripData[0]['vServiceTitle'] = $eUserType == "Driver" ? $languageLabelsArr['LBL_RIDE'] : $tripData[0]['vVehicleType'];
            $tripData[0]['vServiceDetailTitle'] = $tripData[0]['vVehicleType'];
        }
        if ($tripData[0]['eHailTrip'] == "Yes") {
            $tripData[0]['vServiceTitle'] = $languageLabelsArr['LBL_HAIL'];
            $tripData[0]['vServiceDetailTitle'] = $languageLabelsArr['LBL_HAIL'] . " - " . $tripData[0]['vVehicleType'];
        }
        if ($tripData[0]['iRentalPackageId'] > 0) {
            $tripData[0]['vServiceTitle'] = $languageLabelsArr['LBL_RENTAL_CATEGORY_TXT'];
            $tripData[0]['vServiceDetailTitle'] = $languageLabelsArr['LBL_RENTAL_CATEGORY_TXT'] . " - " . $tripData[0]['vVehicleType'];
        }
    } else if ($tripData[0]['eType'] == "Delivery" || $tripData[0]['eType'] == "Deliver") {
        if ($APP_TYPE != "Delivery" || $APP_TYPE != "Deliver") {
            $tripData[0]['vServiceTitle'] = $eUserType == "Driver" ? $languageLabelsArr['LBL_DELIVERY'] : $tripData[0]['vVehicleType'];
            $tripData[0]['vServiceDetailTitle'] = $tripData[0]['vVehicleType'];
        }
    }
    if ($SERVICE_PROVIDER_FLOW == "Provider" && $tripData[0]['eType'] == "UberX" && !empty($tripData[0]['tVehicleTypeFareData'])) {
        $tVehicleTypeFareDataArr = json_decode($tripData[0]['tVehicleTypeFareData'], true);
        $ParentVehicleCategoryId = isset($tVehicleTypeFareDataArr['ParentVehicleCategoryId']) ? $tVehicleTypeFareDataArr['ParentVehicleCategoryId'] : 0;
        if ($ParentVehicleCategoryId == 0) {
            $tVehicleTypeFareDataArr_fareArr = $tVehicleTypeFareDataArr['FareData'];
            if (count($tVehicleTypeFareDataArr_fareArr) > 0) {
                $parent_data_arr = $obj->MySQLSelect("SELECT (SELECT vcs.vCategory_" . $userlangcode . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as vCategory FROM " . $sql_vehicle_category_table_name . " as vc, vehicle_type as vt WHERE vc.iVehicleCategoryId = vt.iVehicleCategoryId AND vt.iVehicleTypeId = '" . $tVehicleTypeFareDataArr_fareArr[0]['id'] . "'");
                $tripData[0]['vCategory'] = $parent_data_arr[0]['vCategory'];
            }
        } else {
            $tripData[0]['vCategory'] = get_value($sql_vehicle_category_table_name, "vCategory_" . $userlangcode, "iVehicleCategoryId", $ParentVehicleCategoryId, '', 'true');
        }
        $tripData[0]['vServiceTitle'] = $tripData[0]['vCategory'];
        if ($tVehicleTypeFareDataArr['eFareTypeServices'] == "Fixed") {
            $tripData[0]['vServiceDetailTitle'] = $tripData[0]['vCategory'];
        } else {
            $tripData[0]['vServiceDetailTitle'] = $tripData[0]['vCategory'] . " - " . $tripData[0]['vVehicleType'];
            if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
                $FareData = $tVehicleTypeFareDataArr['FareData'];
                $sql_CatName = "SELECT (SELECT vcs.vCategory_" . $userlangcode . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as ParentCategoryName FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = '" . $FareData[0]['id'] . "'";
                $CatName = $obj->MySQLSelect($sql_CatName);
                $tripData[0]['vServiceDetailTitle'] = $CatName[0]['ParentCategoryName'];
            }
        }
    } else if ($tripData[0]['eType'] == "UberX") {
        if (!empty($parent_ufx_catid) && $parent_ufx_catid > 0) {
            $sql_parent_id = "SELECT vc.vCategory_" . $userlangcode . " as vCategory FROM " . $sql_vehicle_category_table_name . " as vc, vehicle_type as vt WHERE vc.iVehicleCategoryId = vt.iVehicleCategoryId AND vt.iVehicleTypeId = '" . $tripData[0]['iVehicleTypeId'] . "'";
        } else {
            $sql_parent_id = "SELECT (SELECT vcs.vCategory_" . $userlangcode . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as vCategory FROM " . $sql_vehicle_category_table_name . " as vc, vehicle_type as vt WHERE vc.iVehicleCategoryId = vt.iVehicleCategoryId AND vt.iVehicleTypeId = '" . $tripData[0]['iVehicleTypeId'] . "'";
        }
        $parent_data_arr = $obj->MySQLSelect($sql_parent_id);
        $tripData[0]['vServiceTitle'] = $parent_data_arr[0]['vCategory'];
        $tripData[0]['vServiceDetailTitle'] = $parent_data_arr[0]['vCategory'] . " - " . $tripData[0]['vVehicleType'];
    }
    if ($tripData[0]['vTripPaymentMode'] == 'Cash' && $tripData[0]['ePayWallet'] == 'Yes') {
        $tripData[0]['ePayWallet'] = "No";
    }
    ## Get Trip Delivery Details ##
    $TripDeliveryData = $tripDeliveryFieldArr = array();
    if ($eType == "Multi-Delivery") {
        $returnArr['ePaymentByReceiverForDelivery'] = "No";
        // Added By HJ On 18-06-2020 For Optimize trips_delivery_locations Table Query Start
        $totalTripDeliveryCount = 0;
        if (isset($tripDetailsArr["trips_delivery_locations_" . $iTripId])) {
            $sqldeliverydata = $tripDetailsArr["trips_delivery_locations_" . $iTripId];
            $totalTripDeliveryCount = count($sqldeliverydata);
        } else {
            $sqldeliverydata = $obj->MySQLSelect("SELECT * FROM `trips_delivery_locations` WHERE iTripId='" . $iTripId . "' ORDER BY  iTripDeliveryLocationId ASC");
            $tripDetailsArr["trips_delivery_locations_" . $iTripId] = $sqldeliverydata;
            $totalTripDeliveryCount = count($sqldeliverydata);
        }
        if (count($sqldeliverydata) > 0) {
            $dataFound = 0;
            for ($d = 0; $d < count($sqldeliverydata); $d++) {
                $iActiveStatus = $sqldeliverydata[$d]['iActive'];
                if (((strtoupper($iActiveStatus) == "ACTIVE" || strtoupper($iActiveStatus) == "ON GOING TRIP") || (strtoupper($iActiveStatus) == "FINISHED" && $sqldeliverydata[$d]['eSignVerification'] == "No")) && $dataFound == 0) {
                    $dataFound = 1;
                    $TripDeliveryData[] = $sqldeliverydata[$d];
                }
            }
        }
        // Added By HJ On 18-06-2020 For Optimize trips_delivery_locations Table Query End
        // Added By HJ On 18-06-2020 For Optimize trip_delivery_fields Table Query Start
        if (isset($tripDetailsArr["trip_delivery_fields_" . $iTripId])) {
            $sqldeliveryFielddata = $tripDetailsArr["trip_delivery_fields_" . $iTripId];
        } else {
            $sqldeliveryFielddata = $obj->MySQLSelect("SELECT * FROM trip_delivery_fields WHERE iTripId='" . $iTripId . "'");
            $tripDetailsArr["trip_delivery_fields_" . $iTripId] = $sqldeliveryFielddata;
        }
        $tripDeliveryFieldArr = array();
        for ($f = 0; $f < count($sqldeliveryFielddata); $f++) {
            $iTripDeliveryLocationId = $sqldeliveryFielddata[$f]['iTripDeliveryLocationId'];
            $iDeliveryFieldId = $sqldeliveryFielddata[$f]['iDeliveryFieldId'];
            $tripDeliveryFieldArr[$iTripDeliveryLocationId][$iDeliveryFieldId] = $sqldeliveryFielddata[$f];
        }
        // Added By HJ On 18-06-2020 For Optimize trip_delivery_fields Table Query End
        if (count($TripDeliveryData) > 0) {
            $iTripDeliveryLocationId = $TripDeliveryData[0]['iTripDeliveryLocationId'];
            // Added By HJ On 18-06-2020 For Optimize register_driver Table Query Start
            if (isset($userDetailsArr[$tblname . "_" . $iMemberId])) {
                $vPhoneCode = $userDetailsArr[$tblname . "_" . $iMemberId][0][$vPhoneCode];
            } else {
                $vPhoneCode = get_value($tblname, $vPhoneCode, $iUserId, $iMemberId, '', 'true');
            }
            // Added By HJ On 18-06-2020 For Optimize register_driver Table Query End
            // Added By HJ On 18-06-2020 For Optimize trip_delivery_fields Table Query Start
            if (isset($tripDeliveryFieldArr[$iTripDeliveryLocationId][2])) {
                $vReceiverName = $tripDeliveryFieldArr[$iTripDeliveryLocationId][2]['vValue'];
            } else {
                $vReceiverName = get_value('trip_delivery_fields', 'vValue', 'iDeliveryFieldId', '2', " and iTripDeliveryLocationId ='" . $iTripDeliveryLocationId . "'", 'true');
            }
            if (isset($tripDeliveryFieldArr[$iTripDeliveryLocationId][2])) {
                $vReceiverMobile = $tripDeliveryFieldArr[$iTripDeliveryLocationId][3]['vValue'];
            } else {
                $vReceiverMobile = get_value('trip_delivery_fields', 'vValue', 'iDeliveryFieldId', '3', " and iTripDeliveryLocationId ='" . $iTripDeliveryLocationId . "'", 'true');
            }
            // Added By HJ On 18-06-2020 For Optimize trip_delivery_fields Table Query End
            $Data_Trip_Update = array();
            // Commented and added by HV on 28-01-2021 for multi-delivery "On going trip" not shown in listing "inprocess"
            // $Data_Trip_Update['iActive'] = $tripData[0]['iActive'] = $TripDeliveryData[0]['iActive'];
            $tripData[0]['iActive'] = $TripDeliveryData[0]['iActive'];
            if ($TripDeliveryData[0]['eSignVerification'] == "Yes") {
                $Data_Trip_Update['iActive'] = $TripDeliveryData[0]['iActive'];
            }
            // Commented and added by HV on 28-01-2021 for multi-delivery "On going trip" not shown in listing "inprocess"
            $Data_Trip_Update['tEndLat'] = $tripData[0]['tEndLat'] = $TripDeliveryData[0]['tEndLat'];
            $Data_Trip_Update['tEndLong'] = $tripData[0]['tEndLong'] = $TripDeliveryData[0]['tEndLong'];
            $Data_Trip_Update['tDaddress'] = $tripData[0]['tDaddress'] = $TripDeliveryData[0]['tDaddress'];
            $Data_Trip_Update['vDeliveryConfirmCode'] = $tripData[0]['vDeliveryConfirmCode'] = "";
            if (isset($TripDeliveryData[0]['vDeliveryConfirmCode'])) {
                $Data_Trip_Update['vDeliveryConfirmCode'] = $tripData[0]['vDeliveryConfirmCode'] = $TripDeliveryData[0]['vDeliveryConfirmCode'];
            }
            $Data_Trip_Update['vReceiverName'] = $tripData[0]['vReceiverName'] = $vReceiverName;
            $Data_Trip_Update['vReceiverMobile'] = $tripData[0]['vReceiverMobile'] = "+" . $vPhoneCode . $vReceiverMobile;
            //Added By HJ On 08-01-2019 For Removed Country Code As Per Discuss With DT Start
            if ($eType == "Multi-Delivery") {
                $Data_Trip_Update['vReceiverMobile'] = $tripData[0]['vReceiverMobile'] = $vReceiverMobile;
            }
            //Added By HJ On 08-01-2019 For Removed Country Code As Per Discuss With DT End
            //$Data_Trip_Update['ePaymentByReceiver'] = $TripDeliveryData[0]['ePaymentByReceiver'];
            $where = " iTripId = '" . $iTripId . "'";
            $Data_Trip_Update_id = $obj->MySQLQueryPerform("trips", $Data_Trip_Update, 'update', $where);
            $returnArr['iTripDeliveryLocationId'] = $iTripDeliveryLocationId;
            $returnArr['ePaymentByReceiverForDelivery'] = $TripDeliveryData[0]['ePaymentByReceiver'];
            $returnArr['TotalTripDeliveryData'] = $totalTripDeliveryCount; // Added By HJ On 18-06-2020 For Optimize trips_delivery_locations Table Query
        }
        //$sql = "SELECT tdl.ePaymentBy,tdl.ePaymentByReceiver,tdl.iTripDeliveryLocationId FROM trips_delivery_locations as tdl WHERE tdl.`iTripId`='" . $iTripId . "' order by tdl.iTripDeliveryLocationId ASC";
        //$Data_tripLocations = $obj->MySQLSelect($sql);
        $Data_tripLocations = $sqldeliverydata; // Added By HJ On 18-06-2020 For Optimize trips_delivery_locations Table Query
        for ($j = 0; $j < count($Data_tripLocations); $j++) {
            if ($Data_tripLocations[0]['ePaymentBy'] == "Sender") {
                $returnArr['PaymentPerson'] = "Sender";
                break;
            } else if ($Data_tripLocations[0]['ePaymentBy'] == "Individual") {
                $returnArr['PaymentPerson'] = $languageLabelsArr['LBL_EACH_RECIPIENT'];
                break;
            } else {
                if ($Data_tripLocations[$j]['ePaymentByReceiver'] == "Yes") {
                    $ReceNo = $j + 1;
                    // Added By HJ On 18-06-2020 For Optimize trip_delivery_fields Table Query Start
                    if (isset($tripDeliveryFieldArr[$Data_tripLocations[$j]['iTripDeliveryLocationId']][2])) {
                        $delFieldValue = $tripDeliveryFieldArr[$Data_tripLocations[$j]['iTripDeliveryLocationId']][3]['vValue'];
                    } else {
                        $db_trip_fields = $obj->MySQLSelect("select vValue from trip_delivery_fields where iTripId ='$iTripId' and iDeliveryFieldId = '2' and iTripDeliveryLocationId = '" . $Data_tripLocations[$j]['iTripDeliveryLocationId'] . "'");
                        $delFieldValue = $db_trip_fields[0]['vValue'];
                    }
                    // Added By HJ On 18-06-2020 For Optimize trip_delivery_fields Table Query End
                    $returnArr['PaymentPerson'] = $languageLabelsArr['LBL_RECEIPENT_TXT'] . $ReceNo . " (" . $delFieldValue . ")";
                    break;
                }
            }
        }
    }
    ## Get Trip Delivery Details end##
    if ($tripTimeZone != "") {
        $serverTimeZone = date_default_timezone_get();
        $tripData[0]['tTripRequestDate'] = converToTz($tripData[0]['tTripRequestDate'], $tripTimeZone, $serverTimeZone);
        $tripData[0]['tDriverArrivedDate'] = converToTz($tripData[0]['tDriverArrivedDate'], $tripTimeZone, $serverTimeZone);
        if ($tripData[0]['tStartDate'] != "0000-00-00 00:00:00") {
            $tripData[0]['tStartDate'] = converToTz($tripData[0]['tStartDate'], $tripTimeZone, $serverTimeZone);
        }
        $tripData[0]['tEndDate'] = converToTz($tripData[0]['tEndDate'], $tripTimeZone, $serverTimeZone);
    }
    // Convert Into Timezone
    if (count($TripDeliveryData) > 0) {
        $LBL_CURRENT_DELIVERY_NUMBER_TXT = $languageLabelsArr['LBL_CURRENT_DELIVERY_NUMBER'];
        $LBL_OUT_OF_TXT = $languageLabelsArr['LBL_OUT_OF_TXT'];
        $iRunningTripDeliveryNo = $tripData[0]['iRunningTripDeliveryNo'];
        $TotalTripDelivery = $totalTripDeliveryCount; // Added By HJ On 18-06-2020 For Optimize trips_delivery_locations Table Query
        if ($tripData[0]['iActive'] == "Active") {
            $iRunningTripDeliveryNo = $iRunningTripDeliveryNo + 1;
        }
        if ($iRunningTripDeliveryNo > $TotalTripDelivery) {
            $iRunningTripDeliveryNo = $TotalTripDelivery;
        }
        if ($TotalTripDelivery > 1) {
            $Running_Delivery_Txt = $LBL_CURRENT_DELIVERY_NUMBER_TXT . " " . $iRunningTripDeliveryNo . " " . $LBL_OUT_OF_TXT . " " . $TotalTripDelivery;
        } else {
            $Running_Delivery_Txt = $LBL_CURRENT_DELIVERY_NUMBER_TXT;
        }
        $returnArr['Running_Delivery_Txt'] = $Running_Delivery_Txt;
        $returnArr['Running_Receipent_Detail'] = $languageLabelsArr['LBL_CURRENT_DELIVERY_NUMBER'] . " " . $iRunningTripDeliveryNo . " ( " . $vReceiverName . " )";
    }
    ## Check for trip sign verification for multideleivery ##
    if ($eType == "Multi-Delivery") {
        $IS_OPEN_SIGN_VERIFY = $IS_OPEN_FOR_SENDER = "No";
        $vTripStatus = $tripData[0]['iActive'];
        // Added By HJ On 18-06-2020 For Optimize register_driver Table Query Start
        /*if (isset($userDetailsArr["register_driver_" . $tripData[0]['iDriverId']])) {

            $vDriverTripStatus = $userDetailsArr["register_driver_" . $tripData[0]['iDriverId']][0]['vTripStatus'];

            //echo "<pre>";print_r($vDriverTripStatus);die;

        }

        else {

            $vDriverTripStatus = get_value('register_driver', 'vTripStatus', 'iDriverId', $tripData[0]['iDriverId'], '', 'true');

        }*/
        $vDriverTripStatus = get_value('register_driver', 'vTripStatus', 'iDriverId', $tripData[0]['iDriverId'], '', 'true');
        // Added By HJ On 18-06-2020 For Optimize register_driver Table Query End
        $eSignVerification = $tripData[0]['eSignVerification'];
        if (($vTripStatus == "Active" && $vDriverTripStatus == "Arrived" && $eSignVerification == "No") || ($tripData[0]['ePaymentCollect_Delivery'] == "No" && $vDriverTripStatus == "Arrived")) {
            $IS_OPEN_SIGN_VERIFY = $IS_OPEN_FOR_SENDER = "Yes";
        }
        if ($IS_OPEN_SIGN_VERIFY == "No") {
            // Added By HJ On 18-06-2020 For Optimize trips_delivery_locations Table Query Start
            $TripDeliData = array();
            if (isset($tripDetailsArr["trips_delivery_locations_" . $iTripId])) {
                $sqldeliverydata = $tripDetailsArr["trips_delivery_locations_" . $iTripId];
                $dataFound = 0;
                for ($dj = 0; $dj < count($sqldeliverydata); $dj++) {
                    $iActiveStatus = $sqldeliverydata[$dj]['iActive'];
                    $eSignVerification = $sqldeliverydata[$dj]['eSignVerification'];
                    if ((strtoupper($iActiveStatus) == "CANCELED" || strtoupper($iActiveStatus) == "FINISHED") && $dataFound == 0 && strtoupper($eSignVerification) == "NO") {
                        $dataFound = 1;
                        $TripDeliData[] = $sqldeliverydata[$dj];
                    }
                }
            } else {
                $TripDeliData = $obj->MySQLSelect("SELECT eSignVerification FROM `trips_delivery_locations` WHERE ( iActive='Canceled' OR iActive='Finished')  AND eSignVerification = 'No' AND iTripId='" . $iTripId . "' ORDER BY iTripDeliveryLocationId ASC LIMIT 0,1");
            }
            // Added By HJ On 18-06-2020 For Optimize trips_delivery_locations Table Query End
            $eSignVerification = "Yes";
            if (count($TripDeliData) > 0) {
                $eSignVerification = $TripDeliData[0]['eSignVerification'];
            }
            //echo $DELIVERY_VERIFICATION_METHOD;die;
            if ($eSignVerification == "No" && $DELIVERY_VERIFICATION_METHOD != "None") {
                //echo $DELIVERY_VERIFICATION_METHOD;die;
                $IS_OPEN_SIGN_VERIFY = "Yes";
                $IS_OPEN_FOR_SENDER = "No";
            }
        }
        $returnArr['IS_OPEN_SIGN_VERIFY'] = $IS_OPEN_SIGN_VERIFY;
        $returnArr['IS_OPEN_FOR_SENDER'] = $IS_OPEN_FOR_SENDER;
        $vDeliveryConfirmCode = ($DELIVERY_VERIFICATION_METHOD == "Code") ? $tripData[0]['vDeliveryConfirmCode'] : "";
    } else {
        $returnArr['IS_OPEN_SIGN_VERIFY'] = $returnArr['IS_OPEN_FOR_SENDER'] = "No";
        $vDeliveryConfirmCode = "";
        if (isset($tripData[0]['vDeliveryConfirmCode'])) {
            $vDeliveryConfirmCode = $tripData[0]['vDeliveryConfirmCode'];
        }
    }
    ## Check for trip sign verification for multideleivery ##
    $tripData[0]['vDeliveryConfirmCode'] = $vDeliveryConfirmCode;
    // echo "<pre>";print_r($tripData);exit;
    $eTransit = "No";
    if (isset($tripData[0]['fTripHoldFees']) && $tripData[0]['fTripHoldFees'] > 0) {
        $eTransit = "Yes";
    }
    $tripData[0]['eTransit'] = $eTransit;
    $returnArr = array_merge($tripData[0], $returnArr);
    if ($tripData[0]['iUserPetId'] > 0) {
        $petDetails_arr = get_value('user_pets', 'iPetTypeId,vTitle as PetName,vWeight as PetWeight, tBreed as PetBreed, tDescription as PetDescription', 'iUserPetId', $tripData[0]['iUserPetId'], '', '');
    } else {
        $petDetails_arr = array();
    }
    /* Added For REntal */
    $iRentalPackageId = $tripData[0]['iRentalPackageId'];
    $returnArr['eRental'] = "";
    if ($iRentalPackageId > 0) {
        $returnArr['eRental'] = "Yes";
    }
    /* Added For REntal */
    $iPackageTypeId = $tripData[0]['iPackageTypeId'];
    if ($iPackageTypeId != 0) {
        $sqlnew = "SELECT vName_" . $userlangcode . " as vName FROM package_type WHERE iPackageTypeId='" . $iPackageTypeId . "'";
        $pkgdata = $obj->MySQLSelect($sqlnew);
        $returnArr['PackageType'] = $pkgdata[0]['vName'];
        // $returnArr['PackageType'] = get_value('package_type', 'vName', 'iPackageTypeId', $iPackageTypeId, '', 'true');
    }
    $returnArr['PetDetails']['PetName'] = $returnArr['PetDetails']['PetWeight'] = $returnArr['PetDetails']['PetBreed'] = $returnArr['PetDetails']['PetDescription'] = $returnArr['PetDetails']['PetTypeName'] = '';
    /* User Wallet Information */
    $returnArr['UserDebitAmount'] = strval($tripData[0]['fWalletDebit']);
    /* User Wallet Information */
    /* $vVehicleType = get_value('vehicle_type', "vVehicleType_" . $userlangcode, 'iVehicleTypeId', $tripData[0]['iVehicleTypeId'], '', 'true');

      $vVehicleTypeLogo = get_value('vehicle_type', "vLogo", 'iVehicleTypeId', $tripData[0]['iVehicleTypeId'], '', 'true');

      $iVehicleCategoryId = get_value('vehicle_type', 'iVehicleCategoryId', 'iVehicleTypeId', $tripData[0]['iVehicleTypeId'], '', 'true');

      $vVehicleCategoryData = get_value($sql_vehicle_category_table_name, 'iParentId,ePriceType,vLogo,vCategory_' . $userlangcode . ' as vCategory', 'iVehicleCategoryId', $iVehicleCategoryId);

      $vVehicleFare = get_value('vehicle_type','fFixedFare', 'iVehicleTypeId', $tripData[0]['iVehicleTypeId'], '', 'true');

      $iParentId = $vVehicleCategoryData[0]['iParentId']; */
    $iCancelReasonId = $tripData[0]['iCancelReasonId'];
    //echo $userlangcode."=======".$iCancelReasonId;exit;
    if (!empty($tripData[0]['vCancelComment'])) {
        $returnArr['vCancelReason'] = $tripData[0]['vCancelComment'];
    }
    if ($iCancelReasonId > 0) {
        //Added By HJ On 04-07-2020 For Optimize cancel_reason Table Query Start
        if (isset($tripDetailsArr['cancel_reason'])) {
            $getCancelReasons = $tripDetailsArr['cancel_reason'];
        } else {
            $getCancelReasons = $obj->MySQLSelect("SELECT * FROM cancel_reason");
            $tripDetailsArr['cancel_reason'] = $getCancelReasons;
        }
        $cancelReasonArr = array();
        for ($c = 0; $c < count($getCancelReasons); $c++) {
            $cancelReasonArr[$getCancelReasons[$c]['iCancelReasonId']] = $getCancelReasons[$c];
        }
        if (isset($cancelReasonArr[$iCancelReasonId])) {
            $vCancelReason = $cancelReasonArr[$iCancelReasonId]['vTitle_' . $userlangcode];
        } else {
            $vCancelReason = get_value('cancel_reason', "vTitle_" . $userlangcode, 'iCancelReasonId', $iCancelReasonId, '', 'true');
        }
        //Added By HJ On 04-07-2020 For Optimize cancel_reason Table Query End
        //$vCancelReason = get_value('cancel_reason', "vTitle_" . $userlangcode, 'iCancelReasonId', $iCancelReasonId, '', 'true');
        $returnArr['vCancelReason'] = $vCancelReason;
    }
    //Added By HJ On 08-02-2019 For Get Main Category Name When Multiple Service Selected Start
    // if (isset($tripData[0]['tVehicleTypeFareData']) && $tripData[0]['tVehicleTypeFareData'] != "") {
    // $decodeTypeData = json_decode($tripData[0]['tVehicleTypeFareData']);
    // $tripData[0]['vCategory'] = $tripData[0]['vVehicleType'] = $decodeTypeData[0]->vVehicleCategory;
    // }
    //Added By HJ On 08-02-2019 For Get Main Category Name When Multiple Service Selected End
    $vVehicleType = "";
    if (isset($tripData[0]['vVehicleType'])) {
        $vVehicleType = $tripData[0]['vVehicleType'];
    }
    $vRentalVehicleTypeName = $vVehicleTypeLogo = "";
    if (isset($tripData[0]['vRentalVehicleTypeName'])) {
        $vRentalVehicleTypeName = $tripData[0]['vRentalVehicleTypeName'];
    }
    if (isset($tripData[0]['vLogo'])) {
        $vVehicleTypeLogo = $tripData[0]['vLogo'];
    }
    $iVehicleCategoryId = $tripData[0]['iVehicleCategoryId'];
    $vVehicleCategoryData[0]['vLogo'] = $tripData[0]['vLogoVehicleCategory'];
    $vVehicleCategoryData[0]['vCategory'] = $tripData[0]['vCategory'];
    $vVehicleFare = $tripData[0]['fFixedFare'];
    $iParentId = $tripData[0]['iParentId'];
    $ePoolRide = $tripData[0]['ePoolRide'];
    if ($iParentId == 0) {
        $ePriceType = $tripData[0]['ePriceType'];
    } else {
        $ePriceType = get_value($sql_vehicle_category_table_name, 'ePriceType', 'iVehicleCategoryId', $iParentId, '', 'true');
    }
    //$eIconType = get_value('vehicle_type', "eIconType", 'iVehicleTypeId', $tripData[0]['iVehicleTypeId'], '', 'true');
    $eIconType = "";
    if (isset($tripData[0]['eIconType'])) {
        $eIconType = $tripData[0]['eIconType'];
    }
    $TripTime = date('h:iA', strtotime($tripData[0]['tTripRequestDate']));
    $tTripRequestDateOrig = "";
    if (isset($tripData[0]['tTripRequestDate'])) {
        $tTripRequestDateOrig = $tripData[0]['tTripRequestDate'];
    }
    $tTripRequestDate = date('dS M Y \a\t h:i a', strtotime($tripData[0]['tTripRequestDate']));
    $tStartDate = $tripData[0]['tStartDate'];
    $tEndDate = $tripData[0]['tEndDate'];
    $tDriverArrivedDate = $tripData[0]['tDriverArrivedDate'];
    $iCancellationTimeLimit = $tripData[0]['iCancellationTimeLimit'];
    ## Checking Minutes For Waiting Fee ##
    $scheduled_trip = $obj->MySQLSelect("SELECT dBooking_date FROM cab_booking WHERE iTripId = '$iTripId' ");
    $dBooking_date = "";
    if (!empty($scheduled_trip) && count($scheduled_trip) > 0) {
        $dBooking_date = $scheduled_trip[0]['dBooking_date'];
    }
    $Vehicle_WaitingFeeTimeLimit = $tripData[0]['iWaitingFeeTimeLimit'];
    if (!empty($tripData[0]['tVehicleTypeFareData']) && $tripData[0]['eType'] == "UberX") {
        $tVehicleTypeFareDataArr = json_decode($tripData[0]['tVehicleTypeFareData'], true);
        $Vehicle_WaitingFeeTimeLimit = $tVehicleTypeFareDataArr['ParentWaitingTimeLimit'];
    }
    //echo "Limit::".$tripData[0]['iWaitingFeeTimeLimit'];exit;
    $Vehicle_WaitingFeeTimeLimit = $Vehicle_WaitingFeeTimeLimit * 60;
    $waiting_time_diff = strtotime($tStartDate) - strtotime($tDriverArrivedDate) - $Vehicle_WaitingFeeTimeLimit;
    if (!empty($dBooking_date) && strtotime($tDriverArrivedDate) < strtotime($dBooking_date)) {
        $waiting_time_diff = strtotime($tStartDate) - strtotime($dBooking_date) - $Vehicle_WaitingFeeTimeLimit;
    }
    $waitingTime = ceil($waiting_time_diff / 60);
    //$waitingTime = $waitingTime - $iCancellationTimeLimit;
    if ($waitingTime > 1) {
        $waitingTime = $waitingTime . " " . $languageLabelsArr['LBL_MINUTES_TXT'];
    } else {
        $waitingTime = $waitingTime . " " . $languageLabelsArr['LBL_MINUTE'];
    }
    ## Checking Minutes For Waiting Fee ##
    $totalTime = $runQuery = 0;
    if (($tStartDate != '' && $tStartDate != '0000-00-00 00:00:00' && $tEndDate != '' && $tEndDate != '0000-00-00 00:00:00') || $tripData[0]['eType'] == "Multi-Delivery") {
        if ($tripData[0]['eFareType'] == "Hourly") {
            // $hours       =   0;
            // $minutes     =   0;
            $totalSec = 0;
            $sql22 = "SELECT * FROM `trip_times` WHERE iTripId='$iTripId'";
            $db_tripTimes = $obj->MySQLSelect($sql22);
            $runQuery = 1;
            foreach ($db_tripTimes as $dtT) {
                if ($dtT['dPauseTime'] != '' && $dtT['dPauseTime'] != '0000-00-00 00:00:00') {
                    $totalSec += strtotime($dtT['dPauseTime']) - strtotime($dtT['dResumeTime']);
                }
            }
            $years = floor($totalSec / (365 * 60 * 60 * 24));
            $months = floor(($totalSec - $years * 365 * 60 * 60 * 24) / (30 * 60 * 60 * 24));
            $days = floor(($totalSec - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24) / (60 * 60 * 24));
            $hours = floor(($totalSec - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24 - $days * 60 * 60 * 24) / (60 * 60));
            $minuts = floor(($totalSec - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24 - $days * 60 * 60 * 24 - $hours * 60 * 60) / 60);
            $seconds = floor(($totalSec - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24 - $days * 60 * 60 * 24 - $hours * 60 * 60 - $minuts * 60));
            if ($tripData[0]['eType'] == "Multi-Delivery") {
                $triprtotaltime = secondsToTime($tripData[0]['fDuration'] * 60);
                $days = $triprtotaltime['d'];
                $hours = $triprtotaltime['h'];
                $minuts = $triprtotaltime['m'];
                $seconds = $triprtotaltime['s'];
            }
            if ($days > 0) {
                $hours = ($days * 24) + $hours;
            }
            $LBL_HOURS_TXT = ($hours > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
            if ($hours > 0) {
                $totalTime = $hours . ':' . $minuts . ':' . $seconds;
            } else if ($minuts > 0) {
                $LBL_MINUTES_TXT = ($minuts > 1) ? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
                $LBL_HOURS_TXT = ($hours > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
                $totalTime = $minuts . ':' . $seconds . " " . $languageLabelsArr['LBL_MINUTES_TXT'];
            }
            if ($totalTime < 1) {
                $totalTime = $seconds . " " . $languageLabelsArr['LBL_SECONDS_TXT'];
            }
        } else {
            $days = dateDifference($tStartDate, $tEndDate, '%a');
            $hours = dateDifference($tStartDate, $tEndDate, '%h');
            $minutes = dateDifference($tStartDate, $tEndDate, '%i');
            $seconds = dateDifference($tStartDate, $tEndDate, '%s');
            if ($tripData[0]['eType'] == "Multi-Delivery") {
                $triprtotaltime = secondsToTime($tripData[0]['fDuration'] * 60);
                $days = $triprtotaltime['d'];
                $hours = $triprtotaltime['h'];
                $minutes = $triprtotaltime['m'];
                $seconds = $triprtotaltime['s'];
            }
            $LBL_HOURS_TXT = ($hours > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
            $LBL_MINUTES_TXT = ($minutes > 1) ? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
            $hours = str_pad($hours, 2, '0', STR_PAD_LEFT);
            $minutes = str_pad($minutes, 2, '0', STR_PAD_LEFT);
            $seconds = str_pad($seconds, 2, '0', STR_PAD_LEFT);
            if ($days > 0) {
                $hours = ($days * 24) + $hours;
            }
            if ($hours > 0) {
                //$totalTime = $hours * 60;
                //$totalTime = $hours.':'.$minutes.':'.$seconds." " .$languageLabelsArr['LBL_HOUR'] ;
                $totalTime = $hours . ':' . $minutes . ':' . $seconds . " " . $LBL_HOURS_TXT;
            } else if ($minutes > 0) {
                //$totalTime = $totalTime + $minutes;
                //$totalTime = $minutes.':'.$seconds. "           " . $languageLabelsArr['LBL_MINUTES_TXT'];
                $totalTime = $minutes . ':' . $seconds . " " . $LBL_MINUTES_TXT;
            }
            //$totalTime = $totalTime . ":" . $seconds . " " . $languageLabelsArr['LBL_MINUTES_TXT'];
            if ($totalTime < 1) {
                $totalTime = $seconds . " " . $languageLabelsArr['LBL_SECONDS_TXT'];
            }
        }
    }
    $totalTime_hold = "";
    //Added By HJ On 28-12-2018 For Calculate In Transite Hold Time Start
    //if ($ENABLE_INTRANSIT_SHOPPING_SYSTEM == "Yes" && $tripData[0]['eType'] == "Ride") { //Comment By Hasmukh Because Applied Time Not Display
    if ($tripData[0]['eType'] == "Ride") {
        $totalSecTransite = 0;
        if ($runQuery == 0) {
            //Added By HJ On 17-06-2020 For Optimize trip_times Table Query Start
            if (isset($tripDetailsArr["trip_times_" . $iTripId])) {
                $db_tripTimes = array();
                $db_tripTimes = $tripDetailsArr["trip_times_" . $iTripId];
            } else {
                $db_tripTimes = $obj->MySQLSelect("SELECT * FROM `trip_times` WHERE iTripId='" . $iTripId . "'");
                $tripDetailsArr["trip_times_" . $iTripId] = $db_tripTimes;
            }
            //Added By HJ On 17-06-2020 For Optimize trip_times Table Query End
        }
        foreach ($db_tripTimes as $dtT) {
            if ($dtT['dPauseTime'] != '' && $dtT['dPauseTime'] != '0000-00-00 00:00:00') {
                $totalSecTransite += strtotime($dtT['dPauseTime']) - strtotime($dtT['dResumeTime']);
            }
        }
        $yearsTransite = floor($totalSecTransite / (365 * 60 * 60 * 24));
        $monthsTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24) / (30 * 60 * 60 * 24));
        $daysTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24 - $monthsTransite * 30 * 60 * 60 * 24) / (60 * 60 * 24));
        $hoursTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24 - $monthsTransite * 30 * 60 * 60 * 24 - $daysTransite * 60 * 60 * 24) / (60 * 60));
        $minutsTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24 - $monthsTransite * 30 * 60 * 60 * 24 - $daysTransite * 60 * 60 * 24 - $hoursTransite * 60 * 60) / 60);
        $secondsTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24 - $monthsTransite * 30 * 60 * 60 * 24 - $daysTransite * 60 * 60 * 24 - $hoursTransite * 60 * 60 - $minutsTransite * 60));
        if ($daysTransite > 0) {
            $hoursTransite = ($daysTransite * 24) + $hoursTransite;
        }
        $hoursTransite = str_pad($hoursTransite, 2, '0', STR_PAD_LEFT);
        $minutsTransite = str_pad($minutsTransite, 2, '0', STR_PAD_LEFT);
        $secondsTransite = str_pad($secondsTransite, 2, '0', STR_PAD_LEFT);
        $LBL_HOURS_TXT = ($hoursTransite > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
        if ($hoursTransite > 0) {
            $totalTime_hold = $hoursTransite . ' ' . $LBL_HOURS_TXT;
        }
        if ($minutsTransite > 0) {
            $LBL_MINUTES_TXT = ($minutsTransite > 1) ? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
            $LBL_HOURS_TXT = ($hoursTransite > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
            $totalTime_hold = ($hoursTransite > 0) ? $hoursTransite . ":" . $minutsTransite . " " . $LBL_HOURS_TXT : $minutsTransite . " " . $LBL_MINUTES_TXT;
            if ($hoursTransite > 0) {
                $totalTime_hold = ($minutsTransite > 0) ? $hoursTransite . ":" . $minutsTransite . ":" . $secondsTransite . " " . $LBL_HOURS_TXT : $hoursTransite . " " . $LBL_HOURS_TXT;
            } else {
                $totalTime_hold = $minutsTransite . ":" . $secondsTransite . " " . $LBL_MINUTES_TXT;
            }
        }
        if ($totalTime_hold == "") {
            $totalTime_hold = "1 " . $languageLabelsArr['LBL_MINUTE'];
        }
    }
    //print_r($fTripHoldPrice);
    //die;
    //Added By HJ On 28-12-2018 For Calculate In Transite Hold Time End
    if ($iActive == "Canceled") {
        $totalTime = 0;
    }
    //Added By HJ On 17-07-2019 For Get Tiem and Distance For Display In Ride Pool Invocie Start
    if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
        $totalTime = $tripData[0]['fPoolDuration'] . " " . $languageLabelsArr['LBL_MINUTE'];
        $fDistance = $tripData[0]['fPoolDistance'];
    }
    //Added By HJ On 17-07-2019 For Get Tiem and Distance For Display In Ride Pool Invocie End
    if ($totalTime == 0) {
        $totalTime = "00.00 " . $languageLabelsArr['LBL_MINUTE'];
    }

    $returnArr['carTypeName'] = $vVehicleType;
    if ($tripData[0]['iRentalPackageId'] > 0) {
        $returnArr['carTypeName'] = $vRentalVehicleTypeName;
    }
    $returnArr['carImageLogo'] = $vVehicleTypeLogo;
    $iDriverId = $tripData[0]['iDriverId'];
    $driverDetails = array();
    //Added By HJ On 13-06-2020 For Optimization ratings_user_driver Table Query Start
    $TripRating = "0";
    if ($iTripId > 0) {
        if (isset($generalTripRatingDataArr['ratings_user_driver_' . $iTripId])) {
            $getTripRateData = $generalTripRatingDataArr['ratings_user_driver_' . $iTripId];
        } else {
            $generalTripRatingDataArr = array();
            $getTripRateData = $obj->MySQLSelect("SELECT * FROM `ratings_user_driver` WHERE iTripId='" . $iTripId . "' AND vRating1 != '' ");
            $generalTripRatingDataArr['ratings_user_driver_' . $iTripId] = $getTripRateData;
            //echo "<pre>";print_r($generalTripRatingDataArr);die;
        }
        for ($r = 0; $r < count($getTripRateData); $r++) {
            $rateUserType = $getTripRateData[$r]['eUserType'];
            if (strtoupper($rateUserType) == strtoupper($eUserType)) {
                $TripRating = $getTripRateData[$r]['vRating1'];
            }
        }
    }
    //Added By HJ On 13-06-2020 For Optimization ratings_user_driver Table Query End
    if ($eUserType == "Passenger") {
        //$TripRating = get_value('ratings_user_driver', 'vRating1', 'iTripId', $iTripId, ' AND eUserType="Driver"', 'true'); Commented By HJ On 13-06-2020 For Optimization Query
        //Added By HJ On 04-07-2020 For Optimize register_driver Table Query Start
        if (isset($userDetailsArr['register_driver_' . $iDriverId])) {
            $driverDetails = $userDetailsArr['register_driver_' . $iDriverId];
        } else {
            $driverDetails = $obj->MySQLSelect("SELECT *,iDriverId as iMemberId FROM `register_driver` WHERE iDriverId = '" . $iDriverId . "'");
            $userDetailsArr['register_driver_' . $iDriverId] = $driverDetails;
        }
        //Added By HJ On 04-07-2020 For Optimize register_driver Table Query End
        //$returnArr['vDriverImage'] = get_value('register_driver', 'vImage', 'iDriverId', $iDriverId, '', 'true');
        $returnArr['vDriverImage'] = $driverDetails[0]['vImage'];
        //$driverDetailArr = get_value('register_driver', '*', 'iDriverId', $iDriverId);
        $eUnit = $tripData[0]['vCountryUnitRider'];
    } else {
        //$TripRating = get_value('ratings_user_driver', 'vRating1', 'iTripId', $iTripId, ' AND eUserType="Passenger"', 'true'); Commented By HJ On 13-06-2020 For Optimization Query
        //$passgengerDetailArr = get_value('register_user', '*', 'iUserId', $tripData[0]['iUserId']);
        $eUnit = $tripData[0]['vCountryUnitDriver'];
        //$eUnit = $tripData[0]['vCountryUnitRider'];
    }
    $DisplayDistanceTxt = $languageLabelsArr['LBL_KM_DISTANCE_TXT'];
    if ($eUnit == "Miles") {
        $DisplayDistanceTxt = $languageLabelsArr['LBL_MILE_DISTANCE_TXT'];
    }
    if ($TripRating == "" || $TripRating == NULL) {
        $TripRating = "0";
    }
    $iFare = $tripData[0]['iFare'];
    //$iFare = $tripData[0]['iFare']+$tripData[0]['fTollPrice'];
    $fPricePerKM = $tripData[0]['fPricePerKM'] * $priceRatio;
    $iBaseFare = $tripData[0]['iBaseFare'] * $priceRatio;
    $fPricePerMin = $tripData[0]['fPricePerMin'] * $priceRatio;
    $fCommision = $tripData[0]['fCommision'];
    $fDistance = $tripData[0]['fDistance'];
    if ($eUnit == "Miles") {
        $fDistance = round($fDistance * 0.621371, 2);
    }
    $fDistance = ($iActive != 'Canceled') ? $fDistance : 0;
    $vDiscount = $tripData[0]['vDiscount']; // 50 $
    $fDiscount = $tripData[0]['fDiscount']; // 50
    $fMinFareDiff = $tripData[0]['fMinFareDiff'] * $priceRatio;
    $fWalletDebit = $tripData[0]['fWalletDebit'];
    $extraPersonCharge = $tripData[0]['fExtraPersonCharge'] * $priceRatio;
    $fSurgePriceDiff = $tripData[0]['fSurgePriceDiff'] * $priceRatio;
    $fTripGenerateFare = $tripData[0]['fTripGenerateFare'] * $priceRatio;
    $fPickUpPrice = $tripData[0]['fPickUpPrice'];
    $fNightPrice = $tripData[0]['fNightPrice'];
    $eFlatTrip = $tripData[0]['eFlatTrip'];
    $fFlatTripPrice = $tripData[0]['fFlatTripPrice'] * $priceRatio;
    $fTipPrice = $tripData[0]['fTipPrice'] * $priceRatio;
    $fVisitFee = $tripData[0]['fVisitFee'] * $priceRatio;
    $fMaterialFee = $tripData[0]['fMaterialFee'] * $priceRatio;
    $fMiscFee = $tripData[0]['fMiscFee'] * $priceRatio;
    $fDriverDiscount = $tripData[0]['fDriverDiscount'] * $priceRatio;
    $vVehicleFare = $vVehicleFare * $priceRatio;
    $fCancelPrice = $tripData[0]['fCancellationFare'] * $priceRatio;
    $fWaitingFees = $tripData[0]['fWaitingFees'] * $priceRatio;
    $fTripHoldPrice = $tripData[0]['fTripHoldPrice'] * $priceRatio; // Added By HJ For Intransit Amount On 28-12-2018
    //print_r($fTripHoldPrice);
    //die;
    if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
        $fWaitingFees = 0;
    }
    $fTollPrice = $tripData[0]['fTollPrice'] * $priceRatio;
    $fOtherCharges = $tripData[0]['fOtherCharges'] * $priceRatio; //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes
    $fTax1 = $tripData[0]['fTax1'] * $priceRatio;
    $fTax2 = $tripData[0]['fTax2'] * $priceRatio;
    $fOutStandingAmount = $tripData[0]['fOutStandingAmount'] * $priceRatio;
    $fAddedOutstandingamt = $tripData[0]['fAddedOutstandingamt'] * $priceRatio;
    //added for hotel
    $fHotelCommision = $tripData[0]['fHotelCommision'] * $priceRatio;
    // added for surge
    $fAirportPickupSurgeAmount = $tripData[0]['fAirportPickupSurgeAmount'] * $priceRatio;
    $fAirportDropoffSurgeAmount = $tripData[0]['fAirportDropoffSurgeAmount'] * $priceRatio;
    /*$eTollSkipped = "Yes";

    if ($fTollPrice > 0) {

        $eTollSkipped = $tripData[0]['eTollSkipped'];

    }*/
    $eTollSkipped = $tripData[0]['eTollSkipped'];
    if ($fTollPrice > 0) {
        $eTollSkipped = "No";
    }
    $tUserComment = "";
    if (isset($tripData[0]['tUserComment'])) {
        $tUserComment = $tripData[0]['tUserComment'];
    }
    ### Organization Profile Details ###
    $returnArr['vProfileName'] = "";
    $returnArr['OrganizationName'] = "";
    if ($tripData[0]['iOrganizationId'] > 0) {
        $TripUserOrganizationProfileDetailsArr = getTripUserOrganizationProfileDetails($iTripId, $tripData[0]['iUserId'], $userlangcode, $tripData[0]['iUserProfileId'], $tripData[0]['iOrganizationId']);
        $returnArr['vProfileName'] = $TripUserOrganizationProfileDetailsArr[0]['vProfileName'];
        $returnArr['OrganizationName'] = $eUserType == "Passenger" ? $TripUserOrganizationProfileDetailsArr[0]['vCompany'] : $languageLabelsArr['LBL_ORGANIZATION'];
    }
    ### Organization Profile Details ###
    ### Display Trip Organization Reason ###
    $eTripReason = $tripData[0]['eTripReason'];
    $returnArr['vReasonTitle'] = "";
    if ($eTripReason == "Yes" && $eUserType == "Passenger") {
        $vReasonTitle = $tripData[0]['vReasonTitle'];
        $iTripReasonId = $tripData[0]['iTripReasonId'];
        if ($vReasonTitle != "") {
            $returnArr['vReasonTitle'] = $languageLabelsArr['LBL_ORGANIZATION'] . ": " . $returnArr['OrganizationName'] . "\n" . $languageLabelsArr['LBL_BUSINESS_PROFILE'] . ": " . $returnArr['vProfileName'] . "\n" . $languageLabelsArr['LBL_REASON'] . ": " . $vReasonTitle;
        }
        if ($iTripReasonId > 0) {
            $sql = "SELECT vReasonTitle from  trip_reason  WHERE iTripReasonId ='" . $iTripReasonId . "'";
            $tripreasons = $obj->MySQLSelect($sql);
            $vReasonTitle = "vReasonTitle_" . $userlangcode;
            $vReasonTitleArr = json_decode($tripreasons[0]['vReasonTitle'], true);
            $vReasonTitleTxt = $vReasonTitleArr[$vReasonTitle];
            $returnArr['vReasonTitle'] = $languageLabelsArr['LBL_ORGANIZATION'] . ": " . $returnArr['OrganizationName'] . "\n" . $languageLabelsArr['LBL_BUSINESS_PROFILE'] . ": " . $returnArr['vProfileName'] . "\n" . $languageLabelsArr['LBL_REASON'] . ": " . $vReasonTitleTxt;
        }
    }
    /* ==========================STOP OVER POINT START======================= */
    //if($eUserType != "Passenger"){
    if ($MODULES_OBJ->checkStopOverPointModule() && !empty($iTripId) && $tripData[0]['eType'] == 'Ride' && ($tripData[0]['iActive'] != 'Finished' || $tripData[0]['iActive'] != 'Canceled')) {
        include_once('include/features/include_stop_over_point.php');
        $stop_over_point_data = getStopOverPointData($iTripId);
        $returnArr['stop_over_point_history'] = getDropOverPointHistory($iTripId);
        if (isset($stop_over_point_data['tDAddress']) && !empty($stop_over_point_data['tDAddress'])) {
            if ($eUserType != "Passenger") {
                $returnArr['tEndLat'] = $stop_over_point_data['tDestLatitude'];
                $returnArr['tEndLong'] = $stop_over_point_data['tDestLongitude'];
                $returnArr['tDaddress'] = $stop_over_point_data['tDAddress'];
            }
            $returnArr['iStopId'] = $stop_over_point_data['iStopId'];
            $returnArr['totalStopOverPoint'] = $stop_over_point_data['totalStopOverPoint'];
            $returnArr['currentStopOverPoint'] = $stop_over_point_data['currentStopOverPoint'];
            $returnArr['remaininStopOverPoint'] = $returnArr['stop_over_point_data']['remaininStopOverPoint'];
        }
    } else {
        $returnArr['stop_over_point_history'] = array();
    }
    //}
    /* ==========================STOP OVER POINT END======================= */
    ### Display Trip Organization Reason ###
    $returnArr['tUserComment'] = $tUserComment;
    $returnArr['vVehicleType'] = $vVehicleType;
    $returnArr['eIconType'] = $eIconType;
    $vCategoryName = "";
    if (isset($vVehicleCategoryData[0]['vCategory'])) {
        $vCategoryName = $vVehicleCategoryData[0]['vCategory'];
    }
    $returnArr['vVehicleCategory'] = $vCategoryName;
    $returnArr['TripTime'] = $TripTime;
    $returnArr['ConvertedTripRequestDate'] = $tTripRequestDate;
    $returnArr['FormattedTripDate'] = $tTripRequestDate;
    $returnArr['tTripRequestDateOrig'] = $tTripRequestDateOrig;
    $returnArr['tTripRequestDate'] = $tTripRequestDate;
    $returnArr['TripTimeInMinutes'] = $totalTime;

    $returnArr['TripRating'] = $TripRating;
    $returnArr['CurrencySymbol'] = $currencySymbol;
    $returnArr['TripFare'] = formatNum($iFare * $priceRatio);
    $returnArr['iTripId'] = "";
    if (isset($tripData[0]['iTripId'])) {
        $returnArr['iTripId'] = $tripData[0]['iTripId'];
    }
    $returnArr['vTripPaymentMode'] = "";
    if (isset($tripData[0]['vTripPaymentMode'])) {
        $returnArr['vTripPaymentMode'] = $tripData[0]['vTripPaymentMode'];
    }
    $returnArr['eType'] = "";
    if (isset($tripData[0]['eType'])) {
        $returnArr['eType'] = $tripData[0]['eType'];
    }
    if ($tripData[0]['eType'] == "UberX" && $tripData[0]['eFareType'] != "Regular") {
        $returnArr['tDaddress'] = "";
    }
    if ($tripData[0]['vBeforeImage'] != "") {
        $returnArr['vBeforeImage'] = $tconfig['tsite_upload_trip_images'] . $tripData[0]['vBeforeImage'];
    }
    if ($tripData[0]['eType'] == "UberX") {
        $returnArr['vLogoVehicleCategoryPath'] = $tconfig['tsite_upload_images_vehicle_category'] . "/" . $iVehicleCategoryId . "/";
        $returnArr['vLogoVehicleCategory'] = $vVehicleCategoryData[0]['vLogo'];
    } else {
        $returnArr['vLogoVehicleCategory'] = "";
        $returnArr['vLogoVehicleCategoryPath'] = "";
    }
    if ($tripData[0]['vAfterImage'] != "") {
        $returnArr['vAfterImage'] = $tconfig['tsite_upload_trip_images'] . $tripData[0]['vAfterImage'];
    }
    $originalFare = $iFare;
    $iFare_Detail_Earning = $iFare_Subtotal = 0;
    if ($eUserType == "Passenger") {
        $iFare = $iFare;
    } else {
        $iFare_Subtotal = $iFare;
        //$iFare = $tripData[0]['fTripGenerateFare'] + $tripData[0]['fTipPrice'] - $fCommision - $tripData[0]['fTax1'] - $tripData[0]['fTax2'];
        if ($PAGE_MODE != 'Display') {
            $iFare = $tripData[0]['fTripGenerateFare'] + $tripData[0]['fTipPrice'] - $fCommision - $tripData[0]['fTax1'] - $tripData[0]['fTax2'] - $tripData[0]['fOutStandingAmount'] - $tripData[0]['fAddedOutstandingamt'] - $tripData[0]['fHotelCommision'];
        } else {
            $iFare = $tripData[0]['fTripGenerateFare'] + $tripData[0]['fTipPrice'] - $fCommision - $tripData[0]['fTax1'] - $tripData[0]['fTax2'] - $tripData[0]['fOutStandingAmount'] - $tripData[0]['fAddedOutstandingamt'];
        }
        $iFare_Detail_Earning = $tripData[0]['fTripGenerateFare'] - $fCommision - $tripData[0]['fTax1'] - $tripData[0]['fTax2'] - $tripData[0]['fOutStandingAmount'] - $tripData[0]['fAddedOutstandingamt'] - $tripData[0]['fHotelCommision'];
        if ($tripData[0]['iActive'] == "Canceled") {
            $iFare_Detail_Earning = $tripData[0]['fTripGenerateFare'] - $fCommision;
        }
        //$iFare_Subtotal = $iFare_Subtotal + $tripData[0]['fOutStandingAmount']; //added by SP bc outstanding is not calculated in total so do it on 14-07-2020
    }
    $surgePrice = $tripData[0]['fNightPrice'];
    if ($tripData[0]['fPickUpPrice'] > 1) {
        $surgePrice = $tripData[0]['fPickUpPrice'];
    }
    $SurgePriceFactor = strval($surgePrice);
    // added for airport surge
    $fAirportPickupSurge = strval($tripData[0]['fAirportPickupSurge']);
    $fAirportDropoffSurge = strval($tripData[0]['fAirportDropoffSurge']);
    // added for airport surge
    $returnArr['TripFareOfMinutes'] = formatNum($tripData[0]['fPricePerMin'] * $priceRatio);
    $returnArr['TripFareOfDistance'] = formatNum($tripData[0]['fPricePerKM'] * $priceRatio);
    $returnArr['iFare'] = formatNum($iFare * $priceRatio);
    $returnArr['iFare_Detail_Earning'] = formatNum($iFare_Detail_Earning * $priceRatio);
    $returnArr['iFare_Subtotal'] = formatNum($iFare_Subtotal * $priceRatio);
    $returnArr['iOriginalFare'] = formatNum($originalFare * $priceRatio);
    //$returnArr['iOriginalFare'] = round($originalFare * $priceRatio,2);
    //added by SP for rounding off currency wise on 26-8-2019 start
    if ($eUserType == "Passenger") {
        //Added By HJ On 09-06-2020 For Optimization Start
        $tblnameUser = "register_user";
        $currencyDataArr = array();
        if (isset($userDetailsArr[$tblnameUser . "_" . $iMemberId]) && count($userDetailsArr[$tblnameUser . "_" . $iMemberId]) > 0) {
            $vCurrencyPassenger = $userDetailsArr[$tblnameUser . "_" . $iMemberId][0]['vCurrencyPassenger'];
            if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
                $currencyAssociateArr[$vCurrencyPassenger]['vCurrencyPassenger'] = $vCurrencyPassenger;
                $currencyDataArr[] = $currencyAssociateArr[$vCurrencyPassenger];
            }
        }
        //Added By HJ On 09-06-2020 For Optimization End
        if (count($currencyDataArr) > 0) {
            $currData = $currencyDataArr;
        } else {
            $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable,cu.Ratio,ru.vCurrencyPassenger FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iMemberId . "'";
            $currData = $obj->MySQLSelect($sqlp);
        }
        $vCurrency = $currData[0]['vName'];
        if (isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount'] != 0 && $tripData[0]['vCurrencyPassenger'] == $driverData[0]['vCurrencyPassenger'] && $currData[0]['eRoundingOffEnable'] == "Yes" && $MODULES_OBJ->isEnableRoundingMethod()) {
            //$roundingOffTotal_fare_amountArr['finalFareValue'] = formatNum(($iFare) - $tripData[0]['fRoundingAmount']);
            $roundingOffTotal_fare_amountArr['method'] = $tripData[0]['eRoundingType'];
            $roundingOffTotal_fare_amountArr['differenceValue'] = $tripData[0]['fRoundingAmount'];
            $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($iFare, $tripData[0]['fRoundingAmount'], $tripData[0]['eRoundingType'], $currData[0]['Ratio']); ////start
            //$returnArr['roundingOffAmountArr'] = $roundingOffTotal_fare_amount;
            $roundingMethod = "-";
            if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                $roundingMethod = "";
            }
            $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
            $returnArr['TotalFare'] = formatNum($roundingOffTotal_fare_amount);
            $returnArr['TotalFareAmount'] = formateNumAsPerCurrency($roundingOffTotal_fare_amount, $currencycode);
        } else {
            $returnArr['TotalFare'] = formatNum($iFare * $priceRatio);
            $returnArr['TotalFareAmount'] = formateNumAsPerCurrency(($iFare * $priceRatio), $currencycode);
        }
    } else {
        //Added By HJ On 09-06-2020 For Optimization register_driver Table Query Start
        $tblnameUser = "register_driver";
        $currencyDataArr = array();
        if (isset($userDetailsArr[$tblnameUser . "_" . $iMemberId]) && count($userDetailsArr[$tblnameUser . "_" . $iMemberId]) > 0) {
            $vCurrencyDriver = $userDetailsArr[$tblnameUser . "_" . $iMemberId][0]['vCurrencyDriver'];
            if (isset($currencyAssociateArr[$vCurrencyDriver])) {
                $currencyAssociateArr[$vCurrencyDriver]['vCurrencyDriver'] = $vCurrencyDriver;
                $currencyDataArr[] = $currencyAssociateArr[$vCurrencyDriver];
                //echo "<pre>";print_r($currencyDataArr);die;
            }
        }
        //Added By HJ On 09-06-2020 For Optimization register_driver Table Query End
        if (count($currencyDataArr) > 0) {
            $currData = $currencyDataArr;
        } else {
            $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver, cu.Ratio FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";
            $currData = $obj->MySQLSelect($sqlp);
        }
        $returnArr['TotalFare'] = formatNum($iFare * $priceRatio);
        $returnArr['TotalFareAmount'] = formateNumAsPerCurrency(($iFare * $priceRatio), $currencycode);
    }
    //echo $returnArr['TotalFare'];exit;
    //$returnArr['TotalFare'] = formatNum($iFare * $priceRatio);
    //added by SP for rounding off currency wise on 26-8-2019 end
    $returnArr['fPricePerKM'] = formatNum($fPricePerKM);
    $returnArr['iBaseFare'] = formatNum($iBaseFare);
    $returnArr['fPricePerMin'] = formatNum($fPricePerMin);
    $returnArr['fCommision'] = formatNum($fCommision * $priceRatio);
    $returnArr['fDistance'] = formatNum($fDistance);
    $returnArr['fDiscount'] = formatNum($fDiscount * $priceRatio);
    $returnArr['fMinFareDiff'] = formatNum($fMinFareDiff);
    $returnArr['fWalletDebit'] = formatNum($fWalletDebit * $priceRatio);
    $returnArr['fWalletAmountAdjusted'] = formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode);
    $returnArr['fSurgePriceDiff'] = formatNum($fSurgePriceDiff);
    $returnArr['fTripGenerateFare'] = formatNum($fTripGenerateFare);
    $returnArr['TripGenerateFare'] = formateNumAsPerCurrency($fTripGenerateFare, $currencycode);
    $returnArr['eChargeViewShow'] = "Yes";
    // added for airport surge
    $returnArr['fAirportPickupSurgeAmount'] = formatNum($fAirportPickupSurgeAmount);
    $returnArr['fAirportDropoffSurgeAmount'] = formatNum($fAirportDropoffSurgeAmount);
    /*if ($fTripGenerateFare > 0) {

        $returnArr['eChargeViewShow'] = "Yes";

    }*/
    $returnArr['eWalletAmtAdjusted'] = "No";
    if ($fWalletDebit > 0) {
        $returnArr['eWalletAmtAdjusted'] = "Yes";
    }
    $returnArr['fFlatTripPrice'] = formatNum($fFlatTripPrice);
    $returnArr['fWaitingFees'] = formatNum($fWaitingFees);
    $returnArr['fTripHoldPrice'] = formatNum($fTripHoldPrice); // Added By HJ For Intransit Amount On 28-12-2018
    $returnArr['fOutStandingAmount'] = formatNum($fOutStandingAmount);
    $returnArr['fAddedOutstandingamt'] = formatNum($fAddedOutstandingamt);
    //added for hotel
    $returnArr['fHotelCommision'] = formatNum($fHotelCommision);
    if ($eTollSkipped == "No") {
        $returnArr['fTollPrice'] = formatNum($fTollPrice);
    }
    $returnArr['fOtherCharges'] = formatNum($fOtherCharges); //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes
    if ($fTipPrice > 0) {
        $returnArr['fTipPrice'] = formateNumAsPerCurrency($fTipPrice, $currencycode);
    }
    $returnArr['SurgePriceFactor'] = $SurgePriceFactor;
    $returnArr['fVisitFee'] = formatNum($fVisitFee);
    $returnArr['fMaterialFee'] = formatNum($fMaterialFee);
    $returnArr['fMiscFee'] = formatNum($fMiscFee);
    $returnArr['fDriverDiscount'] = formatNum($fDriverDiscount);
    $returnArr['fCancelPrice'] = formatNum($fCancelPrice);
    $returnArr['fWaitingFees'] = formatNum($fWaitingFees);
    $returnArr['fTax1'] = formatNum($fTax1);
    $returnArr['fTax2'] = formatNum($fTax2);
    $returnArr['eSystem'] = "";
    if (isset($tripData[0]['eSystem'])) {
        $returnArr['eSystem'] = $tripData[0]['eSystem'];
    }
    //echo "<pre>"; print_r($tripData); die;
    if (count($driverDetails) > 0) {
        //Data Found
        //echo "<pre>"; print_r($driverDetails); die;
    } else {
        //Added By HJ On 17-06-2020 For Optimize register_driver_ Table Query Start
        if (isset($userDetailsArr["register_driver_" . $iDriverId])) {
            $driverDetails = $userDetailsArr["register_driver_" . $iDriverId];
        } else {
            $driverDetails = get_value('register_driver', '*,iDriverId as iMemberId', 'iDriverId', $iDriverId);
            $userDetailsArr["register_driver_" . $iDriverId] = $driverDetails;
        }
        //Added By HJ On 17-06-2020 For Optimize register_driver_ Table Query End
    }
    $driverDetails[0]['vImage'] = ($driverDetails[0]['vImage'] != "" && $driverDetails[0]['vImage'] != "NONE") ? "3_" . $driverDetails[0]['vImage'] : "";
    $driverDetails[0]['vPhone'] = '+' . $driverDetails[0]['vCode'] . $driverDetails[0]['vPhone'];
    $returnArr['DriverDetails'] = $driverDetails[0];
    $iUserId = $tripData[0]['iUserId'];
    //Added By HJ On 09-06-2020 For Optimization Start
    $tblName = "register_user";
    if (isset($userDetailsArr[$tblName . "_" . $iUserId]) && count($userDetailsArr[$tblName . "_" . $iUserId]) > 0) {
        $passengerDetails = $userDetailsArr[$tblName . "_" . $iUserId];
    } else {
        $passengerDetails = get_value($tblName, '*,iUserId as iMemberId', 'iUserId', $iUserId);
        $userDetailsArr[$tblName . "_" . $iUserId] = $passengerDetails;
    }
    //Added By HJ On 09-06-2020 For Optimization End
    $passengerDetails[0]['vImgName'] = ($passengerDetails[0]['vImgName'] != "" && $passengerDetails[0]['vImgName'] != "NONE") ? "3_" . $passengerDetails[0]['vImgName'] : "";
    $passengerDetails[0]['vPhone'] = '+' . $passengerDetails[0]['vPhoneCode'] . $passengerDetails[0]['vPhone'];
    $returnArr['PassengerDetails'] = $passengerDetails[0];
    if ($eUserType == "Passenger") {
        $returnArr['vImage'] = $driverDetails[0]['vImage'];
    } else {
        $returnArr['vImage'] = $passengerDetails[0]['vImgName'];
    }
    //$TaxArr = getMemberCountryTax($iUserId, "Passenger");
    //$fUserCountryTax1 = $TaxArr['fTax1'];
    //$fUserCountryTax2 = $TaxArr['fTax2'];
    $fUserCountryTax1 = $tripData[0]['fTax1Percentage'];
    $fUserCountryTax2 = $tripData[0]['fTax2Percentage'];
    $iDriverVehicleId = $tripData[0]['iDriverVehicleId'];
    //Added By HJ On 17-06-2020 For Optimize driver_vehicle Table Query Start
    if (isset($driverVehicleDataArr['driver_vehicle_' . $iDriverVehicleId])) {
        $vehicleDetailsArr = $driverVehicleDataArr['driver_vehicle_' . $iDriverVehicleId];
    } else {
        $vehicleDetailsArr = $obj->MySQLSelect("SELECT ma.vMake,mo.vTitle,dv.* FROM driver_vehicle as dv LEFT JOIN make as ma ON dv.iMakeId = ma.iMakeId LEFT JOIN model as mo ON dv.iModelId = mo.iModelId WHERE dv.iDriverVehicleId = '" . $iDriverVehicleId . "'");
        $driverVehicleDataArr['driver_vehicle_' . $iDriverVehicleId] = $vehicleDetailsArr;
    }
    //Added By HJ On 17-06-2020 For Optimize driver_vehicle Table Query End
    $vehicleDetailsArr[0]['vModel'] = "";
    if (isset($vehicleDetailsArr[0]['vTitle'])) {
        $vehicleDetailsArr[0]['vModel'] = $vehicleDetailsArr[0]['vTitle'];
    }
    //if ($eUserType == "Passenger" && $tripData[0]['eType'] == "UberX") {
    if ($tripData[0]['eType'] == "UberX") {
        //$ALLOW_SERVICE_PROVIDER_AMOUNT = $CONFIG_OBJ->getConfigurations("configurations", "ALLOW_SERVICE_PROVIDER_AMOUNT");
        $ALLOW_SERVICE_PROVIDER_AMOUNT = $ePriceType == "Provider" ? "Yes" : "No";
        $fAmount = "0";
        if ($ALLOW_SERVICE_PROVIDER_AMOUNT == "Yes") {
            $sqlServicePro = "SELECT * FROM `service_pro_amount` WHERE iDriverVehicleId='" . $iDriverVehicleId . "' AND iVehicleTypeId='" . $tripData[0]['iVehicleTypeId'] . "'";
            $serviceProData = $obj->MySQLSelect($sqlServicePro);
            $vehicleTypeData = get_value('vehicle_type', 'eFareType,fPricePerHour,fFixedFare', 'iVehicleTypeId', $tripData[0]['iVehicleTypeId']);
            if ($vehicleTypeData[0]['eFareType'] == "Fixed") {
                $fAmount = formateNumAsPerCurrency($vehicleTypeData[0]['fFixedFare'], $currencycode);
            } else if ($vehicleTypeData[0]['eFareType'] == "Hourly") {
                $fAmount = formateNumAsPerCurrency($vehicleTypeData[0]['fPricePerHour'], $currencycode) . "/hour";
            }
            if (count($serviceProData) > 0) {
                $fAmount = $serviceProData[0]['fAmount'];
                $vVehicleFare = $fAmount * $priceRatio;
                //$vVehicleFare = formatNum($vVehicleFare);
                if ($vehicleTypeData[0]['eFareType'] == "Fixed") {
                    $fAmount = formateNumAsPerCurrency($fAmount, $currencycode);
                } else if ($vehicleTypeData[0]['eFareType'] == "Hourly") {
                    $fAmount = formateNumAsPerCurrency($fAmount, $currencycode) . "/hour";
                }
            }
            $vehicleDetailsArr[0]['fAmount'] = strval($fAmount);
        }
    }
    $returnArr['DriverCarDetails'] = $vehicleDetailsArr[0];
    if ($iActive == "Canceled" && $eUserType == "Driver") {
        $sql = "SELECT * from trip_outstanding_amount WHERE iTripId = '" . $iTripId . "'";
        $tripCanceledData = $obj->MySQLSelect($sql);
        $fcancelCommision = $tripCanceledData[0]['fCommision'];
        $fDriverPendingAmount = $tripCanceledData[0]['fDriverPendingAmount'];
        $ePaidByPassenger = $tripCanceledData[0]['ePaidByPassenger'];
        $ePaidToDriver = $tripCanceledData[0]['ePaidToDriver'];
        $returnArr['fCommision'] = formatNum($fcancelCommision * $priceRatio);
        $returnArr['iFare'] = formatNum($fDriverPendingAmount * $priceRatio);
    }
    if ($eUserType == "Passenger") {
        $tripFareDetailsArr = array();
        if ($eFlatTrip == "Yes" && $iActive != "Canceled") {
            $i = 0;
            //$tripFareDetailsArr[$i][$languageLabelsArr['LBL_FLAT_TRIP_FARE_TXT']] = $currencySymbol . " " . $returnArr['fFlatTripPrice'];
            $tripFareDetailsArr[$i][$languageLabelsArr['LBL_FLAT_TRIP_FARE_TXT']] = formateNumAsPerCurrency($returnArr['fFlatTripPrice'], $currencycode);
            if ($fSurgePriceDiff > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fSurgePriceDiff'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                $i++;
            }
            // added for airport surge
            if ($fAirportPickupSurgeAmount > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fAirportPickupSurgeAmount'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fAirportDropoffSurgeAmount > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fAirportDropoffSurgeAmount'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fWaitingFees > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fWaitingFees'] : $currencySymbol . $returnArr['fWaitingFees'];
                $tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fTripHoldPrice'] : $currencySymbol . $returnArr['fTripHoldPrice'];
                $tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            if ($fDiscount > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_DISCOUNT']] = ($iActive != "Canceled") ? "- " . $currencySymbol . $returnArr['fDiscount'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($extraPersonCharge > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? $currencySymbol . setTwoDecimalPoint($extraPersonCharge) : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode, 2) : "--";
                $i++;
            }
            if ($fTax1 > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fTax1'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                $i++;
            }
            if ($fTax2 > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fTax2'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fOutStandingAmount'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                $i++;
            }
            if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                $i++;
            }
            if ($fOtherCharges > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                $i++;
            }
            if ($fHotelCommision > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fHotelCommision'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                $i++;
            }
            if ($fWalletDebit > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . $currencySymbol . $returnArr['fWalletDebit'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                $i++;
            }
            //$tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['iFare'] : "--";
            $tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iFare'], $currencycode) : "--";
        }
        elseif ($fCancelPrice > 0 || ($iActive == "Canceled" && $fWalletDebit > 0)) {
            if ($fWalletDebit > $fCancelPrice) {
                $CancelPrice = ($returnArr['fWalletDebit'] + $fCancelPrice) - ($fWaitingFees + $fTripHoldPrice + $fTax1 + $fTax2); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                $subtotal = formatNum($fCancelPrice);
            } else {
                if ($fWalletDebit > 0) {
                    $CancelPrice = $fCancelPrice + $returnArr['fWalletDebit'] - $fTripHoldPrice - $fTax1 - $fTax2; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    // $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice + $fWalletDebit+$fTax1+$fTax2);
                    $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice);
                } else {
                    $CancelPrice = $fCancelPrice;
                    $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice + $fTax1 + $fTax2);
                }
            }
            //$tripFareDetailsArr[][$languageLabelsArr['LBL_CANCELLATION_FEE']] = $currencySymbol . formatNum($CancelPrice);
            $tripFareDetailsArr[][$languageLabelsArr['LBL_CANCELLATION_FEE']] = formateNumAsPerCurrency($CancelPrice, $currencycode);
            $ki = 0;
            $tripFareDetailsArr[$ki + 1]['eDisplaySeperator'] = "Yes";
            $ki++;
            if ($fWaitingFees > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = $currencySymbol . $returnArr['fWaitingFees'];
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $ki++;
                $tripFareDetailsArr[$ki + 1]['eDisplaySeperator'] = "Yes";
                $ki++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = $currencySymbol . $returnArr['fTripHoldPrice'];
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $ki++;
                $tripFareDetailsArr[$ki + 1]['eDisplaySeperator'] = "Yes";
                $ki++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice Start
            if ($fTax1 > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = $currencySymbol . $returnArr['fTax1'];
                $ki++;
                $tripFareDetailsArr[$ki + 1]['eDisplaySeperator'] = "Yes";
                $ki++;
            }
            if ($fTax2 > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = $currencySymbol . $returnArr['fTax2'];
                $ki++;
                $tripFareDetailsArr[$ki + 1]['eDisplaySeperator'] = "Yes";
                $ki++;
            }
            //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice End
            if ($fWalletDebit > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode);
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "- " . $currencySymbol . $returnArr['fWalletDebit'];
                $ki++;
                $tripFareDetailsArr[$ki + 1]['eDisplaySeperator'] = "Yes";
                $ki++;
            }
            //$tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = $currencySymbol . $subtotal;
            $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = formateNumAsPerCurrency($subtotal, $currencycode);
        }
        else {
            $i = 0;
            $countUfx = 0;
            if ($tripData[0]['eType'] == "UberX") {
                if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $returnArr['vVehicleCategory'] . " (" . $languageLabelsArr['LBL_VIDEO_CONSULTATION_TXT'] . ")";
                } else {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $returnArr['vVehicleCategory'] . "-" . $returnArr['vVehicleType'];
                }
                $countUfx = 1;
            }
            if ($tripData[0]['eFareType'] == "Regular") {
                //$tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = $vVehicleType . " " . $currencySymbol . $returnArr['iBaseFare'];
                /* Changes For Rental */
                if ($tripData[0]['iRentalPackageId'] > 0 && function_exists('getRentalData')) {
                    $rentalData = getRentalData($tripData[0]['iRentalPackageId']);
                    $tripData[0]['vPackageName'] = $rentalData[0]['vPackageName_' . $userlangcode];
                    //$tripFareDetailsArr[][$tripData[0]['vPackageName'] . " " . $languageLabelsArr['LBL_RENTAL_FARE']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['iBaseFare'] : "--";
                    $tripFareDetailsArr[][$tripData[0]['vPackageName'] . " " . $languageLabelsArr['LBL_RENTAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                    if ($countUfx == 1) {
                        $i++;
                    }
                    $TripKilometer = getVehicleCountryUnit($tripData[0]['iVehicleTypeId'], $rentalData[0]['fKiloMeter']);
                    if ($eUnit == "Miles") {
                        $TripKilometer = round($TripKilometer * 0.621371, 2);
                    }
                    if ($fDistance > $TripKilometer) {
                        $extradistance = $fDistance - $TripKilometer;
                    } else {
                        $extradistance = 0;
                    }
                    if ($extradistance > 0) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_ADDITIONSL_DISTANCE_TXT'] . " (" . $extradistance . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                        $i++;
                    }
                    $Extra_Time = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode);
                    $Extra_Time_Val = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode, "Yes");
                    if ($Extra_Time_Val > 0) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_ADDITIONAL_TIME_TXT'] . " (" . $Extra_Time . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                        $i++;
                    }
                } else {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                    if ($countUfx == 1) {
                        $i++;
                    }
                    //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $languageLabelsArr['LBL_KM_DISTANCE_TXT'] . ")"] = ($iActive != "Canceled")?$currencySymbol . $returnArr['TripFareOfDistance']:"--";
                    if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                        $i++;
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                        $i++;
                    } else {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                        $i++;
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                        $i++;
                    }
                }
                /* Changes For Rental */
            } else if ($tripData[0]['eFareType'] == "Fixed") {
                //  $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = $currencySymbol . ($fTripGenerateFare - $fSurgePriceDiff - $fMinFareDiff);
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details Start
                if (isset($tripData[0]['tVehicleTypeFareData']) && $tripData[0]['tVehicleTypeFareData'] != "" && $SERVICE_PROVIDER_FLOW == "Provider") {
                    $tVehicleTypeFareData = json_decode($tripData[0]['tVehicleTypeFareData'], true);
                    $tVehicleTypeFareData = $tVehicleTypeFareData['FareData'];
                    $iVehicleTypeIds_str = "";
                    for ($fd = 0; $fd < count($tVehicleTypeFareData); $fd++) {
                        $iVehicleTypeIds_str = $iVehicleTypeIds_str == "" ? $tVehicleTypeFareData[$fd]['id'] : $iVehicleTypeIds_str . "," . $tVehicleTypeFareData[$fd]['id'];
                    }
                    $sql_vehicleTypeNames = "SELECT vt.vVehicleType_" . $userlangcode . " as vVehicleType, (SELECT vcs.vCategory_" . $userlangcode . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as ParentCategoryName FROM vehicle_type as vt, " . $sql_vehicle_category_table_name . " as vc WHERE vt.iVehicleTypeId IN ($iVehicleTypeIds_str) AND vc.iVehicleCategoryId = vt.iVehicleCategoryId";
                    $data_vehicleTypeNames = $obj->MySQLSelect($sql_vehicleTypeNames);
                    // print_r($data_vehicleTypeNames);exit;
                    $getCategoryName = "";
                    for ($fd = 0; $fd < count($tVehicleTypeFareData); $fd++) {
                        $eAllowQty = $tVehicleTypeFareData[$fd]['eAllowQty'];
                        $typeQty = $tVehicleTypeFareData[$fd]['qty'];
                        if ($typeQty < 1) {
                            $typeQty = 1;
                        }
                        $tVehicleTypeFareData[$fd]['amount'] = $tVehicleTypeFareData[$fd]['amount'] * $typeQty;
                        //$typeAmount = $currencySymbol . formatNum($tVehicleTypeFareData[$fd]->amount * $priceRatio);
                        $formattypeAmount = formatNum($tVehicleTypeFareData[$fd]['amount'] * $priceRatio);
                        $typeAmount = formateNumAsPerCurrency($formattypeAmount, $currencycode);
                        $iVehicleTypeIds_str = $iVehicleTypeIds_str == "" ? $tVehicleTypeFareData[$fd]['id'] : $iVehicleTypeIds_str . "," . $tVehicleTypeFareData[$fd]['id'];
                        // $typeTitle = $tVehicleTypeFareData[$fd]->title;
                        $typeTitle = $data_vehicleTypeNames[$fd]['vVehicleType'];
                        $getCategoryName = $data_vehicleTypeNames[$fd]['ParentCategoryName'];
                        $qtyDisplay = "";
                        if ($eAllowQty == "Yes") {
                            $qtyDisplay = " (x" . $typeQty . ")";
                        }
                        if ($typeTitle != $languageLabelsArr['LBL_SUBTOTAL_TXT']) {
                            if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
                                $typeAmount = $tripData[0]['fTripGenerateFare'] - $tripData[0]['fTax1'] - $tripData[0]['fTax2'];
                                $typeAmount = formateNumAsPerCurrency($typeAmount * $priceRatio, $currencycode);
                                $sql = 'SELECT * FROM `vehicle_category` WHERE iVehicleCategoryId =' . $tVehicleTypeFareData[0]['id'];
                                $data_vehicleTypeNames = $obj->MySQLSelect($sql);
                                //$tripFareDetailsArr[$i + $countUfx][$data_vehicleTypeNames[0]['vCategory_' . $userlangcode]] = $typeAmount;
                                $sql_vehicleCatNames = "SELECT vc.vCategory_" . $userlangcode . " as subCategoryName, (SELECT vcs.vCategory_" . $userlangcode . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as ParentCategoryName FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = '$iVehicleTypeIds_str'";
                                $data_vehicleCatNames = $obj->MySQLSelect($sql_vehicleCatNames);
                                $getCategoryName = $data_vehicleCatNames[0]['ParentCategoryName'];
                                $getSubCategoryName = $data_vehicleCatNames[0]['subCategoryName'];
                                $tripFareDetailsArr[$i + $countUfx][$getSubCategoryName] = $typeAmount;
                            } else {
                                $tripFareDetailsArr[][$typeTitle . $qtyDisplay] = $typeAmount;
                            }
                            $i++;
                        }
                    }
                    $returnArr['vVehicleCategory'] = $getCategoryName;
                } else {
                    $vVehicleFare = ($tripData[0]['iFare'] * $priceRatio) + $fDiscount + $returnArr['fWalletDebit'] + $fDriverDiscount - $fVisitFee - $fMaterialFee - $fMiscFee - $fOutStandingAmount - $fWaitingFees - $fTax1 - $fTax2 - $fTripHoldPrice; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    //$SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . $currencySymbol . formatNum($vVehicleFare) : $currencySymbol . formatNum($vVehicleFare);
                    $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                        if ($fSurgePriceDiff == 0) {
                            //$SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . $currencySymbol . formatNum($vVehicleFare) : $currencySymbol . formatNum($vVehicleFare);
                            $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                            if ($countUfx == 1) {
                                $i++;
                            }
                        }
                    } else {
                        //added by SP for fly stations on 20-08-2019 end
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                        if ($countUfx == 1) {
                            $i++;
                        }
                    }
                }
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details End
            } else if ($tripData[0]['eFareType'] == "Hourly") {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['TripFareOfMinutes'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                if ($countUfx == 1) {
                    $i++;
                }
            }
            if ($fSurgePriceDiff > 0) {
                //added by SP for fly stations on 20-08-2019 start
                if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                } else {
                    $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                    $i++;
                }
                //added by SP for fly stations on 20-08-2019 end
                //$tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                //$i++;
                $normalfare = $fTripGenerateFare - $fSurgePriceDiff - $fTax1 - $fTax2 - $fMinFareDiff - $fWaitingFees - $fOutStandingAmount - $fAddedOutstandingamt - $fHotelCommision - $fAirportPickupSurgeAmount - $fAirportDropoffSurgeAmount - $fTripHoldPrice - $fMaterialFee - $fMiscFee - $fOtherCharges + $fDriverDiscount; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                if ($eTollSkipped == "No") {
                    $normalfare = $fTripGenerateFare - $fSurgePriceDiff - $fTax1 - $fTax2 - $fMinFareDiff - $fWaitingFees - $fOutStandingAmount - $fAddedOutstandingamt - $fTollPrice - $fOtherCharges - $fHotelCommision - $fAirportPickupSurgeAmount - $fAirportDropoffSurgeAmount - $fTripHoldPrice; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                }
                $normalfare = formatNum($normalfare);
                //added by SP for fly stations on 20-08-2019 start
                if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                    //$tripFareDetailsArr[][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $currencySymbol . $normalfare : "--";
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                } else {
                    //$tripFareDetailsArr[][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? $currencySymbol . $normalfare : "--";
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                }
                //added by SP for fly stations on 20-08-2019 end
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? $currencySymbol . $normalfare : "--";
                $i++;
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fSurgePriceDiff'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                $i++;
            }
            if ($fVisitFee > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_VISIT_FEE']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fVisitFee'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_VISIT_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fVisitFee'], $currencycode) : "--";
                $i++;
            }
            // added for airport surge
            if ($fSurgePriceDiff == 0 && ($fAirportPickupSurgeAmount > 0 || $fAirportDropoffSurgeAmount > 0)) {
                $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                $i++;
                $normalfare = $fTripGenerateFare - $fSurgePriceDiff - $fTax1 - $fTax2 - $fMinFareDiff - $fWaitingFees - $fOutStandingAmount - $fAddedOutstandingamt - $fHotelCommision - $fAirportPickupSurgeAmount - $fAirportDropoffSurgeAmount - $fTripHoldPrice - $fOtherCharges;
                if ($eTollSkipped == "No") {
                    $normalfare = $fTripGenerateFare - $fSurgePriceDiff - $fTax1 - $fTax2 - $fMinFareDiff - $fWaitingFees - $fOutStandingAmount - $fAddedOutstandingamt - $fTollPrice - $fOtherCharges - $fHotelCommision - $fAirportPickupSurgeAmount - $fAirportDropoffSurgeAmount - $fTripHoldPrice;
                }
                $normalfare = formatNum($normalfare);
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? $currencySymbol . $normalfare : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                $i++;
                if ($fAirportPickupSurgeAmount > 0) {
                    //$tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fAirportPickupSurgeAmount'] : "--";
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fAirportDropoffSurgeAmount > 0) {
                    //$tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fAirportDropoffSurgeAmount'] : "--";
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
            } else {
                if ($fAirportPickupSurgeAmount > 0) {
                    //$tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fAirportPickupSurgeAmount'] : "--";
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fAirportDropoffSurgeAmount > 0) {
                    //$tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fAirportDropoffSurgeAmount'] : "--";
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
            }
            if ($fMaterialFee > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_MATERIAL_FEE']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fMaterialFee'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_MATERIAL_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMaterialFee'], $currencycode) : "--";
                $i++;
            }
            if ($fMiscFee > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_MISC_FEE']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fMiscFee'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_MISC_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMiscFee'], $currencycode) : "--";
                $i++;
            }
            if ($fDriverDiscount > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = ($iActive != "Canceled") ? "- " . $currencySymbol . $returnArr['fDriverDiscount'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDriverDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($fWaitingFees > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . ")"] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fWaitingFees'] : $currencySymbol . $returnArr['fWaitingFees'];
                $tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fTripHoldPrice'] : $currencySymbol . $returnArr['fTripHoldPrice'];
                $tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            if ($fMinFareDiff > 0) {
                //$minimamfare = $iBaseFare + $fPricePerKM + $fPricePerMin + $fMinFareDiff;
                $minimamfare = $fTripGenerateFare - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision - $fOtherCharges;
                if ($eTollSkipped == "No") {
                    $minimamfare = $fTripGenerateFare - $fTollPrice - $fOtherCharges - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision;
                }
                $minimamfare = formatNum($minimamfare);
                //$tripFareDetailsArr[][$currencySymbol . $minimamfare . " " . $languageLabelsArr['LBL_MINIMUM']] = $currencySymbol . $returnArr['fMinFareDiff'];
                $tripFareDetailsArr[][$languageLabelsArr['LBL_MINIMUM'] . " (" . formateNumAsPerCurrency($minimamfare, $currencycode) . ")"] = formateNumAsPerCurrency($returnArr['fMinFareDiff'], $currencycode);
                $returnArr['TotalMinFare'] = ($iActive != "Canceled") ? $minimamfare : "--";
                $i++;
            }
            if ($extraPersonCharge > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode, 2) : "--";
                $i++;
            }
            if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                $i++;
            }
            //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes Start
            if ($fOtherCharges > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                $i++;
            }
            //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes End
            if ($fDiscount > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_DISCOUNT']] = ($iActive != "Canceled") ? "- " . $currencySymbol . $returnArr['fDiscount'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($fTax1 > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fTax1'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                $i++;
            }
            if ($fTax2 > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fTax2'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fOutStandingAmount'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                $i++;
            }
            /* if ($fTipPrice > 0) {

              $tripFareDetailsArr[][$languageLabelsArr['LBL_TIP_AMOUNT']] = ($iActive != "Canceled")?$currencySymbol . $returnArr['fTipPrice']:"--";

              $i++;

          } */
            if ($fHotelCommision > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['fHotelCommision'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                $i++;
            }
            if ($fWalletDebit > 0) {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . $currencySymbol . $returnArr['fWalletDebit'] : "--";
                $tripFareDetailsArr[][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                $i++;
            }
            $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
            $i++;
            //$tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['iFare'] : $currencySymbol . $returnArr['fWaitingFees'];
            $tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iFare'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
            //added by SP for rounding off currency wise on 26-8-2019 start
            //if($userType == "Driver"){
            //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_driver as rd LEFT JOIN country as co ON rd.vCountry = co.vCountryCode  WHERE rd.iDriverId = '" . $iUserId . "'";
            //    $countryData = $obj->MySQLSelect($sqlp);
            //    $vCountry = $countryData[0]['vCountryCode'];
            //}else{
            //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_user as ru LEFT JOIN country as co ON ru.vCountry = co.vCountryCode WHERE ru.iUserId = '" . $iUserId . "'";
            //    $countryData = $obj->MySQLSelect($sqlp);
            //    $vCountry = $countryData[0]['vCountryCode'];
            //}
            /* if($eUserType == "Driver"){

              $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";

              $currData = $obj->MySQLSelect($sqlp);

              $vCurrency = $currData[0]['vName'];

              $samecur = ($tripData[0]['vCurrencyDriver']==$driverData[0]['vCurrencyDriver']) ? 1 : 0;

              } else {

              $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iMemberId . "'";

              $currData = $obj->MySQLSelect($sqlp);

              $vCurrency = $currData[0]['vName'];

              $samecur = ($tripData[0]['vCurrencyPassenger']==$driverData[0]['vCurrencyPassenger']) ? 1 : 0;

              }



              if($samecur==1 && $currData[0]['eRoundingOffEnable'] == "Yes" && isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount']!=0) {



              $roundingOffTotal_fare_amountArr['finalFareValue'] = formatNum(($returnArr['iFare']) - $tripData[0]['fRoundingAmount']);

              $roundingOffTotal_fare_amountArr['method'] = $tripData[0]['eRoundingType'];

              $roundingOffTotal_fare_amountArr['differenceValue'] = $tripData[0]['fRoundingAmount'];



              if($roundingOffTotal_fare_amountArr['method'] == "Addition"){

              $roundingMethod = "";

              }else{

              $roundingMethod = "-";

              }

              $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";

              $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";

              //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;





              $i++;

              $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod." ". $currencySymbol . "". $rounding_diff : $currencySymbol . $returnArr['fWaitingFees'];

              $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";

              $i++;

              $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? $currencySymbol."". $roundingOffTotal_fare_amount : $currencySymbol . $returnArr['fWaitingFees'];



          } */
        }
        if ($eUserType == "Driver") {
            if (count($currData) > 0) {
                //Data Found From Global Array
            } else {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver, cu.ratio FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";
                $currData = $obj->MySQLSelect($sqlp);
            }
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyDriver'] == $driverData[0]['vCurrencyDriver'] && $tripData[0]['vCurrencyDriver'] == $tripData[0]['vCurrencyPassenger']) ? 1 : 0;
        } else {
            if (count($currData) > 0) {
                //Data Found From Global Array
            } else {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger, cu.Ratio FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iMemberId . "'";
                $currData = $obj->MySQLSelect($sqlp);
            }
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyPassenger'] == $driverData[0]['vCurrencyPassenger']) ? 1 : 0;
        }
        //if($currData[0]['eRoundingOffEnable'] == "Yes"){
        if (isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount'] != 0 && $samecur == 1 && $currData[0]['eRoundingOffEnable'] == "Yes" && $MODULES_OBJ->isEnableRoundingMethod()) {
            //$roundingOffTotal_fare_amountArr = getRoundingOffAmount($returnArr['iFare'],$vCurrency);
            //$roundingOffTotal_fare_amountArr['finalFareValue'] = formatNum(($iFare) - $tripData[0]['fRoundingAmount']);
            $roundingOffTotal_fare_amountArr['method'] = $tripData[0]['eRoundingType'];
            $roundingOffTotal_fare_amountArr['differenceValue'] = $tripData[0]['fRoundingAmount'];
            $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($iFare, $tripData[0]['fRoundingAmount'], $tripData[0]['eRoundingType'], $currData[0]['Ratio']); ////start
            //$returnArr['roundingOffAmountArr'] = $roundingOffTotal_fare_amount;
            if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                $roundingMethod = "";
            } else {
                $roundingMethod = "-";
            }
            $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
            $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";
            //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;
            $i++;
            //$tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod . " " . $currencySymbol . "" . $rounding_diff : $currencySymbol . $returnArr['fWaitingFees'];
            $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
            $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
            $i++;
            //$tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? $currencySymbol . "" . formatNum($roundingOffTotal_fare_amount) : $currencySymbol . $returnArr['fWaitingFees'];
            $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($roundingOffTotal_fare_amount, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
        }
        //added by SP for rounding off currency wise on 26-8-2019 end
        //$returnArr['FareSubTotal'] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['iOriginalFare'] : "--";
        $returnArr['FareSubTotal'] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iOriginalFare'], $currencycode) : "--";
        $returnArr['FareDetailsNewArr'] = $tripFareDetailsArr;
        $FareDetailsArr = array();
        foreach ($tripFareDetailsArr as $data) {
            $FareDetailsArr = array_merge($FareDetailsArr, $data);
        }
        //print_r($tripFareDetailsArr);die;
        $returnArr['FareDetailsArr'] = $FareDetailsArr;
        $returnArr['HistoryFareDetailsNewArr'] = $tripFareDetailsArr;
        if ($tripData[0]['eType'] == "UberX") {
            //if($fCancelPrice == 0){
            if ($iActive != "Canceled") {
                array_splice($returnArr['HistoryFareDetailsNewArr'], 0, 1);
            }
            if ($PAGE_MODE == "DISPLAY") {
                array_splice($returnArr['FareDetailsNewArr'], 0, 1);
            }
        }
    }
    else {
        $tripFareDetailsArr = array();
        if ($eFlatTrip == "Yes" && $iActive != "Canceled") {
            $i = 0;
            $tripFareDetailsArr[$i][$languageLabelsArr['LBL_FLAT_TRIP_FARE_TXT']] = formateNumAsPerCurrency($returnArr['fFlatTripPrice'], $currencycode);
            if ($fSurgePriceDiff > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                $i++;
            }
            // added for airport surge
            if ($fAirportPickupSurgeAmount > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fAirportDropoffSurgeAmount > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                $i++;
            }
            if ($fOtherCharges > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                $i++;
            }
            if ($PAGE_MODE == "DISPLAY") {
                if ($fWaitingFees > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : "--";
                    $i++;
                }
                //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
                if ($fTripHoldPrice > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : "--";
                    $i++;
                }
                //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
                if ($fDiscount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                    $i++;
                }
                if ($fWalletDebit > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                    $i++;
                }
                // add hotel web
                if ($fHotelCommision > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                    $i++;
                }
                if ($fTax1 > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                    $i++;
                }
                if ($fTax2 > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                    $i++;
                }
                if ($fOutStandingAmount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    $i++;
                }
            } else {
                if ($fWaitingFees > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : "--";
                    $i++;
                }
                //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
                if ($fTripHoldPrice > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : "--";
                    $i++;
                }
                //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
                /* if($fOutStandingAmount > 0) {

                  $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled")?"- ".$currencySymbol . $returnArr['fOutStandingAmount']:"--";

                  $i++;

              } */ // commented to hide outstanding on the page of history in driver earning page
                /*if ($fOutStandingAmount > 0 && $tripData[0]['vTripPaymentMode'] == "Cash") {

                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";

                    $i++;

                    $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";

                    $i++;

                    $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;

                    $tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";

                    $i++;

                    //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;

                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";

                    $i++;

                }*/
                if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0 && $tripData[0]['vTripPaymentMode'] == "Cash") {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    $i++;
                    $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";
                    $i++;
                    //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    $i++;
                }
                //added by SP for rounding off currency wise on 26-8-2019 start
                // rounding off total amount code starts
                //if($userType == "Driver"){
                //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_driver as rd LEFT JOIN country as co ON rd.vCountry = co.vCountryCode  WHERE rd.iDriverId = '" . $iUserId . "'";
                //    $countryData = $obj->MySQLSelect($sqlp);
                //    $vCountry = $countryData[0]['vCountryCode'];
                //}else{
                //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_user as ru LEFT JOIN country as co ON ru.vCountry = co.vCountryCode WHERE ru.iUserId = '" . $iUserId . "'";
                //    $countryData = $obj->MySQLSelect($sqlp);
                //    $vCountry = $countryData[0]['vCountryCode'];
                //}
                /* if($eUserType == "Driver"){

                  $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";

                  $currData = $obj->MySQLSelect($sqlp);

                  $vCurrency = $currData[0]['vName'];

                  $samecur = ($tripData[0]['vCurrencyDriver']==$driverData[0]['vCurrencyDriver']) ? 1 : 0;

                  } else {

                  $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iMemberId . "'";

                  $currData = $obj->MySQLSelect($sqlp);

                  $vCurrency = $currData[0]['vName'];

                  $samecur = ($tripData[0]['vCurrencyPassenger']==$driverData[0]['vCurrencyPassenger']) ? 1 : 0;

                  }



                  if($samecur==1 && $currData[0]['eRoundingOffEnable'] == "Yes" && isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount']!=0) {



                  $roundingOffTotal_fare_amountArr['finalFareValue'] = formatNum(($returnArr['iFare']) - $tripData[0]['fRoundingAmount']);

                  $roundingOffTotal_fare_amountArr['method'] = $tripData[0]['eRoundingType'];

                  $roundingOffTotal_fare_amountArr['differenceValue'] = $tripData[0]['fRoundingAmount'];



                  if($roundingOffTotal_fare_amountArr['method'] == "Addition"){

                  $roundingMethod = "";

                  }else{

                  $roundingMethod = "-";

                  }

                  $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";

                  $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";

                  //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;





                  $i++;

                  $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod." ". $currencySymbol . "". $rounding_diff : $currencySymbol . $returnArr['fWaitingFees'];

                  $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";

                  $i++;

                  $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? $currencySymbol."". $roundingOffTotal_fare_amount : $currencySymbol . $returnArr['fWaitingFees'];



                  } else {

                  $returnArr['TotalFare'] = formatNum($iFare * $priceRatio);

              } */
                if ($eUserType == "Driver") {
                    if (count($currData) > 0) {
                        //Data Found From Global Array
                    } else {
                        $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver,cu.ratio FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";
                        $currData = $obj->MySQLSelect($sqlp);
                    }
                    $vCurrency = $currData[0]['vName'];
                    $samecur = ($tripData[0]['vCurrencyDriver'] == $driverData[0]['vCurrencyDriver'] && $tripData[0]['vCurrencyDriver'] == $tripData[0]['vCurrencyPassenger']) ? 1 : 0;
                } else {
                    if (count($currData) > 0) {
                        //Data Found From Global Array
                    } else {
                        $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger,cu.ratio FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iMemberId . "'";
                        $currData = $obj->MySQLSelect($sqlp);
                    }
                    $vCurrency = $currData[0]['vName'];
                    $samecur = ($tripData[0]['vCurrencyPassenger'] == $driverData[0]['vCurrencyPassenger']) ? 1 : 0;
                }
                /*new add by for driver rounding*/
                if ($tripData[0]['vCurrencyDriver'] == $driverData[0]['vCurrencyDriver'] && $currData[0]['eRoundingOffEnable'] == "Yes" && $tripData[0]['vCurrencyDriver'] != $tripData[0]['vCurrencyPassenger'] && $MODULES_OBJ->isEnableRoundingMethod()) {
                    if (isset($tripData[0]['fRoundingAmountDriver']) && !empty($tripData[0]['fRoundingAmountDriver']) && $tripData[0]['fRoundingAmountDriver'] != 0) {
                        $iFare_Subtotal_R = $iFare_Subtotal * $priceRatio;
                        $roundingOffTotal_fare_amountArrDriver = getRoundingOffAmounttrip($iFare_Subtotal_R, $tripData[0]['fRoundingAmountDriver'], $tripData[0]['eRoundingTypeDriver']); ////start
                        if ($roundingOffTotal_fare_amountArrDriver['method'] == "Addition") {
                            $roundingMethod = "";
                        } else {
                            $roundingMethod = "-";
                        }
                        $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArrDriver['finalFareValue']) && $roundingOffTotal_fare_amountArrDriver['finalFareValue'] != '' ? formatNum($roundingOffTotal_fare_amountArrDriver['finalFareValue']) : "0.00";
                        $rounding_diff = isset($roundingOffTotal_fare_amountArrDriver['differenceValue']) && $roundingOffTotal_fare_amountArrDriver['differenceValue'] != '' ? $roundingOffTotal_fare_amountArrDriver['differenceValue'] : "0.00";
                        $i++;
                        $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                        $i++;
                        $returnArr['FareDetailsNewArr'][]['eDisplaySeperator'] = "Yes";
                        $i++;
                        $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($roundingOffTotal_fare_amount, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                    }
                }
                //if($currData[0]['eRoundingOffEnable'] == "Yes"){
                if (isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount'] != 0 && $samecur == 1 && $currData[0]['eRoundingOffEnable'] == "Yes" && $MODULES_OBJ->isEnableRoundingMethod()) {
                    $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($returnArr['iFare'], $tripData[0]['fRoundingAmount'], $tripData[0]['eRoundingType'], $currData[0]['Ratio']); ////start
                    //$roundingOffTotal_fare_amountArr = getRoundingOffAmount($returnArr['iFare'],$vCurrency);
                    //$returnArr['roundingOffAmountArr'] = $roundingOffTotal_fare_amount;
                    if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                        $roundingMethod = "";
                    } else {
                        $roundingMethod = "-";
                    }
                    $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
                    $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";
                    //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;
                    $i++;
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                    $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($roundingOffTotal_fare_amount, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                }
                //added by SP for rounding off currency wise on 26-8-2019 end
            }
        } elseif ($fCancelPrice > 0 || ($iActive == "Canceled" && $fWalletDebit > 0)) {
            if ($fWalletDebit > $fCancelPrice) {
                $CancelPrice = ($returnArr['fWalletDebit'] + $fCancelPrice) - ($fWaitingFees + $fTripHoldPrice + $fTax1 + $fTax2); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                $subtotal = formatNum($fCancelPrice);
            } else {
                $CancelPrice = $fCancelPrice - $returnArr['fWalletDebit'] - $fTripHoldPrice; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice + $returnArr['fWalletDebit'] + $fTax1 + $fTax2);
            }
            $i = 0;
            $tripFareDetailsArr[][$languageLabelsArr['LBL_CANCELLATION_FEE']] = formateNumAsPerCurrency($CancelPrice, $currencycode);
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . ")"] = formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice Start
            /*if ($fTax1 > 0) {

                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = "-" . $currencySymbol . $returnArr['fTax1'];

                $i++;

            }

            if ($fTax2 > 0) {

                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = "-" . $currencySymbol . $returnArr['fTax2'];

                $i++;

            }*/ //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice End
            /* if($fWalletDebit > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "- " . $currencySymbol . $returnArr['fWalletDebit'];

              $i++;

          } */
            //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = $currencySymbol.$subtotal;$i++;
        } else {
            $i = 0;
            $countUfx = 0;
            if ($tripData[0]['eType'] == "UberX" && $PAGE_MODE == "HISTORY") {
                if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $returnArr['vVehicleCategory'] . " (" . $languageLabelsArr['LBL_VIDEO_CONSULTATION_TXT'] . ")";
                } else {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $returnArr['vVehicleCategory'] . "-" . $returnArr['vVehicleType'];
                }
                $countUfx = 1;
            }
            if ($tripData[0]['eFareType'] == "Regular") {
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = $vVehicleType . " " . $currencySymbol . $returnArr['iBaseFare'];
                /* Changes For Rental */
                if ($tripData[0]['iRentalPackageId'] > 0 && function_exists('getRentalData')) {
                    if ($PAGE_MODE == "DISPLAY") {
                        $rentalData = getRentalData($tripData[0]['iRentalPackageId']);
                        $tripData[0]['vPackageName'] = $rentalData[0]['vPackageName_' . $userlangcode];
                        $tripFareDetailsArr[][$tripData[0]['vPackageName'] . " " . $languageLabelsArr['LBL_RENTAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                        if ($countUfx == 1) {
                            $i++;
                        }
                        $TripKilometer = getVehicleCountryUnit($tripData[0]['iVehicleTypeId'], $rentalData[0]['fKiloMeter']);
                        if ($eUnit == "Miles") {
                            $TripKilometer = round($TripKilometer * 0.621371, 2);
                        }
                        if ($fDistance > $TripKilometer) {
                            $extradistance = $fDistance - $TripKilometer;
                        } else {
                            $extradistance = 0;
                        }
                        if ($extradistance > 0) {
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_ADDITIONSL_DISTANCE_TXT'] . " (" . $extradistance . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                        }
                        $Extra_Time = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode);
                        $Extra_Time_Val = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode, "Yes");
                        if ($Extra_Time_Val > 0) {
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_ADDITIONAL_TIME_TXT'] . " (" . $Extra_Time . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        }
                    } else {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_Total_Fare']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripGenerateFare'], $currencycode) : "--";
                        $i++;
                    }
                } else {
                    // Modified by HV on 04-11-2020 as discussed with KS for driver earning
                    if ($PAGE_MODE == "DISPLAY") {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                    } else {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_Total_Fare']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripGenerateFare'], $currencycode) : "--";
                    }
                    if ($countUfx == 1) {
                        $i++;
                    }
                    // Modified and added by HV on 04-11-2020 as discussed with KS for driver earning End
                    //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $languageLabelsArr['LBL_KM_DISTANCE_TXT'] . ")"] = ($iActive != "Canceled")?$currencySymbol . $returnArr['TripFareOfDistance']:"--";
                    // Modified and added by HV on 04-11-2020 as discussed with KS for driver earning
                    if ($PAGE_MODE == "DISPLAY") {
                        if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        } else {
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                            // $tripFareDetailsArr[][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            // heni work
                            $totalTimeInMinutes_trip = $returnArr['fDuration'];
                            $hours = floor($totalTimeInMinutes_trip / 60); // No. of mins/60 to get the hours and round down
                            $mins = $totalTimeInMinutes_trip % 60; // No. of mins/60 - remainder (modulus) is the minutes
                            $LBL_HOURS_TXT = ($hours > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
                            $LBL_MINUTES_TXT = ($mins > 1) ? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
                            if ($hours >= 1) {
                                $tripDurationDisplay = $hours . " " . $LBL_HOURS_TXT . ", " . $mins . " " . $LBL_MINUTES_TXT;
                            } else {
                                $tripDurationDisplay = $totalTimeInMinutes_trip . " " . $LBL_MINUTES_TXT;
                            }
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        }
                    }
                    // Modified by HV on 04-11-2020 as discussed with KS for driver earning End
                }
                /* Changes For Rental */
            } else if ($tripData[0]['eFareType'] == "Fixed") {
                //$tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = $currencySymbol . ($fTripGenerateFare - $fSurgePriceDiff - $fMinFareDiff);
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details Start
                if (isset($tripData[0]['tVehicleTypeFareData']) && $tripData[0]['tVehicleTypeFareData'] != "" && $SERVICE_PROVIDER_FLOW == "Provider") {
                    $tVehicleTypeFareData = json_decode($tripData[0]['tVehicleTypeFareData'], true);
                    $tVehicleTypeFareData = $tVehicleTypeFareData['FareData'];
                    $iVehicleTypeIds_str = "";
                    for ($fd = 0; $fd < count($tVehicleTypeFareData); $fd++) {
                        $iVehicleTypeIds_str = $iVehicleTypeIds_str == "" ? $tVehicleTypeFareData[$fd]['id'] : $iVehicleTypeIds_str . "," . $tVehicleTypeFareData[$fd]['id'];
                    }
                    $sql_vehicleTypeNames = "SELECT vt.vVehicleType_" . $userlangcode . " as vVehicleType, (SELECT vcs.vCategory_" . $userlangcode . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as ParentCategoryName FROM vehicle_type as vt, " . $sql_vehicle_category_table_name . " as vc WHERE vt.iVehicleTypeId IN ($iVehicleTypeIds_str) AND vc.iVehicleCategoryId = vt.iVehicleCategoryId";
                    $data_vehicleTypeNames = $obj->MySQLSelect($sql_vehicleTypeNames);
                    // print_r($data_vehicleTypeNames);exit;
                    $getCategoryName = "";
                    for ($fd = 0; $fd < count($tVehicleTypeFareData); $fd++) {
                        $eAllowQty = $tVehicleTypeFareData[$fd]['eAllowQty'];
                        $typeQty = $tVehicleTypeFareData[$fd]['qty'];
                        if ($typeQty < 1) {
                            $typeQty = 1;
                        }
                        $tVehicleTypeFareData[$fd]['amount'] = $tVehicleTypeFareData[$fd]['amount'] * $typeQty;
                        //$typeAmount = $currencySymbol . formatNum($tVehicleTypeFareData[$fd]->amount * $priceRatio);
                        $formattypeAmount = formatNum($tVehicleTypeFareData[$fd]['amount'] * $priceRatio);
                        $typeAmount = formateNumAsPerCurrency($formattypeAmount, $currencycode);
                        $iVehicleTypeIds_str = $iVehicleTypeIds_str == "" ? $tVehicleTypeFareData[$fd]['id'] : $iVehicleTypeIds_str . "," . $tVehicleTypeFareData[$fd]['id'];
                        // $typeTitle = $tVehicleTypeFareData[$fd]->title;
                        $typeTitle = $data_vehicleTypeNames[$fd]['vVehicleType'];
                        $getCategoryName = $data_vehicleTypeNames[$fd]['ParentCategoryName'];
                        $qtyDisplay = "";
                        if ($eAllowQty == "Yes") {
                            $qtyDisplay = " (x" . $typeQty . ")";
                        }
                        if ($typeTitle != $languageLabelsArr['LBL_SUBTOTAL_TXT']) {
                            /*if($PAGE_MODE == "DISPLAY")

                            {

                                $tripFareDetailsArr[][$typeTitle . $qtyDisplay] = $typeAmount;

                                $i++;

                            }*/
                            if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
                                $video_consult_data = $VIDEO_CONSULT_OBJ->getServiceDetails($tripData[0]['iDriverId'], $tVehicleTypeFareData[0]['id']);
                                // $sql = 'SELECT * FROM `vehicle_category` WHERE iVehicleCategoryId =' . $tVehicleTypeFareData[0]['id'];
                                // $data_vehicleTypeNames = $obj->MySQLSelect($sql);
                                $sql_vehicleCatNames = "SELECT vc.vCategory_" . $userlangcode . " as subCategoryName, (SELECT vcs.vCategory_" . $userlangcode . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as ParentCategoryName FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = '$iVehicleTypeIds_str'";
                                $data_vehicleCatNames = $obj->MySQLSelect($sql_vehicleCatNames);
                                $getCategoryName = $data_vehicleCatNames[0]['ParentCategoryName'];
                                $getSubCategoryName = $data_vehicleCatNames[0]['subCategoryName'];
                                //$tripFareDetailsArr[][$getSubCategoryName] = $video_consult_data['eVideoConsultServiceCharge'];
                                $tripFareDetailsArr[][$getSubCategoryName] = formateNumAsPerCurrency($video_consult_data['eVideoConsultServiceCharge'], $currencycode);
                                // $tripFareDetailsArr[][$data_vehicleTypeNames[0]['vCategory_' . $userlangcode]] = $video_consult_data['eVideoConsultServiceCharge'];
                            } else {
                                $tripFareDetailsArr[][$typeTitle . $qtyDisplay] = $typeAmount;
                            }
                            $i++;
                        } else if ($PAGE_MODE != 'HISTORY') {
                            $i--;
                        }
                    }
                    /*if($PAGE_MODE == "HISTORY")

                    {

                        $tripFareDetailsArr[][$languageLabelsArr['LBL_Total_Fare']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripGenerateFare'],$currencycode) : "--";

                        $i++;

                    }*/
                    //print_r($getCategoryName);exit;
                    $returnArr['vVehicleCategory'] = $getCategoryName;
                } else {
                    $vVehicleFare = ($tripData[0]['iFare'] * $priceRatio) + $fDiscount + $returnArr['fWalletDebit'] + $fDriverDiscount - $fVisitFee - $fMaterialFee - $fMiscFee - $fOutStandingAmount - $fAddedOutstandingamt - $fWaitingFees - $fTax1 - $fTax2 - $fTripHoldPrice; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                        if ($fSurgePriceDiff == 0) {
                            $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                            if ($countUfx == 1) {
                                $i++;
                            }
                        }
                    } else {
                        //added by SP for fly stations on 20-08-2019 end
                        $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                        if ($countUfx == 1) {
                            $i++;
                        }
                    }
                }
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details End
            } else if ($tripData[0]['eFareType'] == "Hourly") {
                $tripFareDetailsArr[][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                if ($countUfx == 1) {
                    $i++;
                }
            }
            // Modified by HV on 04-11-2020 as discussed with KS for driver earning
            if ($PAGE_MODE == "DISPLAY") {
                if ($fSurgePriceDiff > 0) {
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                    } else {
                        $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                        $i++;
                    }
                    //added by SP for fly stations on 20-08-2019 end
                    //$tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                    //$i++;
                    $normalfare = $fTripGenerateFare - $fSurgePriceDiff - $fTax1 - $fTax2 - $fMinFareDiff - $fWaitingFees - $fOutStandingAmount - $fAddedOutstandingamt - $fHotelCommision - $fTripHoldPrice - $fAirportPickupSurgeAmount - $fAirportDropoffSurgeAmount - $fMaterialFee - $fMiscFee - $fOtherCharges + $fDriverDiscount; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    if ($eTollSkipped == "No") {
                        $normalfare = $fTripGenerateFare - $fSurgePriceDiff - $fTax1 - $fTax2 - $fMinFareDiff - $fWaitingFees - $fOutStandingAmount - $fAddedOutstandingamt - $fTollPrice - $fOtherCharges - $fHotelCommision - $fTripHoldPrice - $fAirportPickupSurgeAmount - $fAirportDropoffSurgeAmount; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    }
                    $normalfare = formatNum($normalfare);
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                    } else {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                    }
                    //added by SP for fly stations on 20-08-2019 end
                    //$tripFareDetailsArr[][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? $currencySymbol . $normalfare : "--";
                    $i++;
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                    $i++;
                }
                if ($fVisitFee > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_VISIT_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fVisitFee'], $currencycode) : "--";
                    $i++;
                }
                // added for airport surge
                if ($fSurgePriceDiff == 0 && ($fAirportPickupSurgeAmount > 0 || $fAirportDropoffSurgeAmount > 0)) {
                    $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $normalfare = $fTripGenerateFare - $fSurgePriceDiff - $fTax1 - $fTax2 - $fMinFareDiff - $fWaitingFees - $fOutStandingAmount - $fAddedOutstandingamt - $fHotelCommision - $fTripHoldPrice - $fAirportPickupSurgeAmount - $fAirportDropoffSurgeAmount - $fOtherCharges;
                    if ($eTollSkipped == "No") {
                        $normalfare = $fTripGenerateFare - $fSurgePriceDiff - $fTax1 - $fTax2 - $fMinFareDiff - $fWaitingFees - $fOutStandingAmount - $fAddedOutstandingamt - $fTollPrice - $fOtherCharges - $fHotelCommision - $fTripHoldPrice - $fAirportPickupSurgeAmount - $fAirportDropoffSurgeAmount;
                    }
                    $normalfare = formatNum($normalfare);
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                    $i++;
                    if ($fAirportPickupSurgeAmount > 0) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                        $i++;
                    }
                    if ($fAirportDropoffSurgeAmount > 0) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                        $i++;
                    }
                } else {
                    if ($fAirportPickupSurgeAmount > 0) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_PICK_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                        $i++;
                    }
                    if ($fAirportDropoffSurgeAmount > 0) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_AIRPORT_DROP_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                        $i++;
                    }
                }
                //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
                if ($fTripHoldPrice > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                    $i++;
                }
                if ($fMaterialFee > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_MATERIAL_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMaterialFee'], $currencycode) : "--";
                    $i++;
                }
                if ($fMiscFee > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_MISC_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMiscFee'], $currencycode) : "--";
                    $i++;
                }
                if ($fDriverDiscount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDriverDiscount'], $currencycode) : "--";
                    $i++;
                }
                if ($fWaitingFees > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                    $i++;
                }
            }
            if ($tripData[0]['eFareType'] != "Regular" && $PAGE_MODE == "HISTORY") {
                if ($fMaterialFee > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_MATERIAL_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMaterialFee'], $currencycode) : "--";
                    $i++;
                }
                if ($fMiscFee > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_MISC_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMiscFee'], $currencycode) : "--";
                    $i++;
                }
                if ($fDriverDiscount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDriverDiscount'], $currencycode) : "--";
                    $i++;
                }
                if ($fWaitingFees > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                    $i++;
                }
            }
            // Modified by HV on 04-11-2020 as discussed with KS for driver earning End
            //Added By HJ On 28-12-2018 For Display In Transite Data In Invoice End
            if ($PAGE_MODE == "DISPLAY") { // added 30-03-2022 to remove minimum fare from the provider invoice
                if ($fMinFareDiff > 0) {
                    //$minimamfare = $iBaseFare + $fPricePerKM + $fPricePerMin + $fMinFareDiff;
                    $minimamfare = $fTripGenerateFare - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision - $fOtherCharges;
                    if ($eTollSkipped == "No") {
                        $minimamfare = $fTripGenerateFare - $fTollPrice - $fOtherCharges - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision;
                    }
                    $minimamfare = formatNum($minimamfare);
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_MINIMUM'] . " (" . formateNumAsPerCurrency($minimamfare, $currencycode) . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMinFareDiff'], $currencycode) : "--";
                    $returnArr['TotalMinFare'] = $minimamfare;
                    $i++;
                }
                if ($extraPersonCharge > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode, 2) : "--";
                    $i++;
                }
                // Modified by HV on 04-11-2020 as discussed with KS for driver earning
                if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                    $i++;
                }
                // Modified by HV on 04-11-2020 as discussed with KS for driver earning End
                //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes Start
                if ($fOtherCharges > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                    $i++;
                }
                if ($fDiscount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                    $i++;
                }
                if ($fTax1 > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                    $i++;
                }
                if ($fTax2 > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                    $i++;
                }
                if ($fOutStandingAmount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    $i++;
                }
                if ($fWalletDebit > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                    $i++;
                }
                if ($fHotelCommision > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                    $i++;
                }
            } else {
                if ($fOutStandingAmount > 0) { 
                    //&& $tripData[0]['vTripPaymentMode'] == "Cash"
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                    $i++;
                }
                // Modified and added by HV on 04-11-2020 as discussed with KS for driver earning
                if ($PAGE_MODE == "DISPLAY") {
                    $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";
                    $i++;
                } else {
                    if ($tripData[0]['eType'] != "UberX") {
                        if ($fTax1 > 0) {
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                            $i++;
                        }
                        if ($fTax2 > 0) {
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                            $i++;
                        }
                    } else {
                        if ($tripData[0]['eFareType'] == "Regular") {
                            if ($fTax1 > 0) {
                                $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                                $i++;
                            }
                            if ($fTax2 > 0) {
                                $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                                $i++;
                            }
                        }
                    }
                    if ($fHotelCommision > 0) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                        $i++;
                    }
                }
                // Modified and added by HV on 04-11-2020 as discussed with KS for driver earning End
                //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;
                //commented by SP on 04-09-2020 because two time outstanding shown
                //$tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fOutStandingAmount'],$currencycode) : "--";
                //$i++;
                //if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0 && $tripData[0]['vTripPaymentMode'] == "Cash") {
                if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0 && $tripData[0]['vTripPaymentMode'] == "Cash") {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    $i++;
                    $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";
                    $i++;
                    //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;
                    //commented by SP on 04-09-2020 because two time outstanding shown
                    //$tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    //$i++;
                }
            }
            /* if ($fDiscount > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISCOUNT']] = ($iActive != "Canceled")?"- " . $currencySymbol . $returnArr['fDiscount']:"--";

              $i++;

              }

              if ($fWalletDebit > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled")?"- " . $currencySymbol . $returnArr['fWalletDebit']:"--";

              $i++;

          } */
            /* if ($fTipPrice > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIP_AMOUNT']] = ($iActive != "Canceled")?$currencySymbol . $returnArr['fTipPrice']:"--";

              $i++;

          } */
        }
        // echo "<pre>";
        // print_r($tripFareDetailsArr);
        // exit;
        $returnArr['FareSubTotal'] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iOriginalFare'], $currencycode) : "--";
        $returnArr['FareDetailsNewArr'] = $tripFareDetailsArr;
        $returnArr['FareDetailsNewArr___'] = $tripFareDetailsArr;
        if ($PAGE_MODE == "DISPLAY") {
            $returnArr['FareDetailsNewArr'][]['eDisplaySeperator'] = "Yes";
            $i++;
            if ($eFlatTrip == "Yes" && $iActive != "Canceled") {
                $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iFare_Subtotal'], $currencycode) : "--";
            } elseif ($fCancelPrice > 0 || ($iActive == "Canceled" && $fWalletDebit > 0)) {
                $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = formateNumAsPerCurrency($subtotal, $currencycode);
            } else {
                $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iFare_Subtotal'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
            }
            $i--;
        }
        //added by SP for rounding off currency wise on 26-8-2019 start
        //if($userType == "Driver"){
        //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_driver as rd LEFT JOIN country as co ON rd.vCountry = co.vCountryCode  WHERE rd.iDriverId = '" . $iUserId . "'";
        //    $countryData = $obj->MySQLSelect($sqlp);
        //    $vCountry = $countryData[0]['vCountryCode'];
        //}else{
        //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_user as ru LEFT JOIN country as co ON ru.vCountry = co.vCountryCode WHERE ru.iUserId = '" . $iUserId . "'";
        //    $countryData = $obj->MySQLSelect($sqlp);
        //    $vCountry = $countryData[0]['vCountryCode'];
        //}
        /* if($eUserType == "Driver"){

          $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";

          $currData = $obj->MySQLSelect($sqlp);

          $vCurrency = $currData[0]['vName'];

          $samecur = ($tripData[0]['vCurrencyDriver']==$driverData[0]['vCurrencyDriver']) ? 1 : 0;

          } else {

          $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iMemberId . "'";

          $currData = $obj->MySQLSelect($sqlp);

          $vCurrency = $currData[0]['vName'];

          $samecur = ($tripData[0]['vCurrencyPassenger']==$driverData[0]['vCurrencyPassenger']) ? 1 : 0;

          }



          if($samecur==1 && $currData[0]['eRoundingOffEnable'] == "Yes" && isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount']!=0) {



          $roundingOffTotal_fare_amountArr['finalFareValue'] = formatNum(($returnArr['iFare_Subtotal']) - $tripData[0]['fRoundingAmount']);

          $roundingOffTotal_fare_amountArr['method'] = $tripData[0]['eRoundingType'];

          $roundingOffTotal_fare_amountArr['differenceValue'] = $tripData[0]['fRoundingAmount'];



          if($roundingOffTotal_fare_amountArr['method'] == "Addition"){

          $roundingMethod = "";

          }else{

          $roundingMethod = "-";

          }

          $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";

          $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";

          //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;



          $i++;

          $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod." ". $currencySymbol . "". $rounding_diff : $currencySymbol . $returnArr['fWaitingFees'];

          $i++;

          $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";

          $i++;

          $tripFareDetailsArr[][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? $currencySymbol."". $roundingOffTotal_fare_amount : $currencySymbol . $returnArr['fWaitingFees'];



      } */
        if ($eUserType == "Driver") {
            if (count($currData) > 0) {
                //Data Found From Global Array
            } else {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, cu.ratio, rd.vCurrencyDriver FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";
                $currData = $obj->MySQLSelect($sqlp);
            }
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyDriver'] == $driverData[0]['vCurrencyDriver'] && $tripData[0]['vCurrencyDriver'] == $tripData[0]['vCurrencyPassenger']) ? 1 : 0;
            if ($tripData[0]['eHailTrip'] == 'Yes') {
                $samecur = 1;
            }
        } else {
            if (count($currData) > 0) {
                //Data Found From Global Array
            } else {
                $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, cu.ratio, ru.vCurrencyPassenger FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iMemberId . "'";
                $currData = $obj->MySQLSelect($sqlp);
            }
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyPassenger'] == $driverData[0]['vCurrencyPassenger']) ? 1 : 0;
        }
        /*new add by for driver rounding*/
        if ($tripData[0]['vCurrencyDriver'] == $driverData[0]['vCurrencyDriver'] && $currData[0]['eRoundingOffEnable'] == "Yes" && $tripData[0]['vCurrencyDriver'] != $tripData[0]['vCurrencyPassenger'] && $MODULES_OBJ->isEnableRoundingMethod()) {
            if (isset($tripData[0]['fRoundingAmountDriver']) && !empty($tripData[0]['fRoundingAmountDriver']) && $tripData[0]['fRoundingAmountDriver'] != 0) {
                $iFare_Subtotal_R = $iFare_Subtotal * $priceRatio;
                $roundingOffTotal_fare_amountArrDriver = getRoundingOffAmounttrip($iFare_Subtotal_R, $tripData[0]['fRoundingAmountDriver'], $tripData[0]['eRoundingTypeDriver']); ////start
                if ($roundingOffTotal_fare_amountArrDriver['method'] == "Addition") {
                    $roundingMethod = "";
                } else {
                    $roundingMethod = "-";
                }
                $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArrDriver['finalFareValue']) && $roundingOffTotal_fare_amountArrDriver['finalFareValue'] != '' ? formatNum($roundingOffTotal_fare_amountArrDriver['finalFareValue']) : "0.00";
                $rounding_diff = isset($roundingOffTotal_fare_amountArrDriver['differenceValue']) && $roundingOffTotal_fare_amountArrDriver['differenceValue'] != '' ? $roundingOffTotal_fare_amountArrDriver['differenceValue'] : "0.00";
                $i++;
                $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $i++;
                $returnArr['FareDetailsNewArr'][]['eDisplaySeperator'] = "Yes";
                $i++;
                $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($roundingOffTotal_fare_amount, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
            }
        }
        //if($currData[0]['eRoundingOffEnable'] == "Yes"){
        //print_R($returnArr); exit;
        //echo $returnArr['iFare_Subtotal']."aaa".$iFare_Subtotal; exit;
        if (isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount'] != 0 && $samecur == 1 && $currData[0]['eRoundingOffEnable'] == "Yes" && $MODULES_OBJ->isEnableRoundingMethod()) {
            //remain when driver have inr currency with 4 digit like, 3000......
            $iFare_Subtotal_R = $iFare_Subtotal * $priceRatio;
            $roundingOffTotal_fare_amountArr = getRoundingOffAmounttrip($iFare_Subtotal_R, $tripData[0]['fRoundingAmount'], $tripData[0]['eRoundingType']); ////start
            //print_R($roundingOffTotal_fare_amountArr); exit;
            //$roundingOffTotal_fare_amountArr = getRoundingOffAmount($returnArr['iFare_Subtotal'],$vCurrency);
            //$returnArr['roundingOffAmountArr'] = $roundingOffTotal_fare_amount;
            if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                $roundingMethod = "";
            } else {
                $roundingMethod = "-";
            }
            $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? formatNum($roundingOffTotal_fare_amountArr['finalFareValue']) : "0.00";
            $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";
            //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;
            $i++;
            $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
            $i++;
            $returnArr['FareDetailsNewArr'][]['eDisplaySeperator'] = "Yes";
            $i++;
            $returnArr['FareDetailsNewArr'][][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($roundingOffTotal_fare_amount, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
        }
        //added by SP for rounding off currency wise on 26-8-2019 end
        $FareDetailsArr = array();
        foreach ($tripFareDetailsArr as $data) {
            $FareDetailsArr = array_merge($FareDetailsArr, $data);
        }
        $returnArr['FareDetailsArr'] = $FareDetailsArr;
        //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_Commision']] = ($iActive != "Canceled")?"-" . $currencySymbol . $returnArr['fCommision']:"--";
        if ($returnArr['fCommision'] > 0) {
            $tripFareDetailsArr[][$languageLabelsArr['LBL_Commision']] = "-" . formateNumAsPerCurrency($returnArr['fCommision'], $currencycode);
            $i++;
        }
        //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EARNED_AMOUNT']] = $currencySymbol . $returnArr['iFare'];
        $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
        $i++;
        //$tripFareDetailsArr[][$languageLabelsArr['LBL_EARNED_AMOUNT']] = $currencySymbol . $returnArr['iFare_Detail_Earning'];
        if ($iActive == "Canceled") {
            //$returnArr['iFare_Detail_Earning'] = $CancelPrice + $tripData[0]['fTipPrice'] - $fCommision - $tripData[0]['fOutStandingAmount'] - $tripData[0]['fAddedOutstandingamt'];
            $returnArr['iFare_Detail_Earning'] = $CancelPrice + $fTipPrice - $returnArr['fCommision'] - $fOutStandingAmount - $fAddedOutstandingamt; //so here al are after counting ratio
            if ($CancelPrice == 0) {
                $returnArr['iFare_Detail_Earning'] = 0;
            }
        }
        $tripFareDetailsArr[][$languageLabelsArr['LBL_EARNED_AMOUNT']] = formateNumAsPerCurrency($returnArr['iFare_Detail_Earning'], $currencycode);
        //$tripFareDetailsArr[][$languageLabelsArr['LBL_EARNED_AMOUNT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iFare_Detail_Earning'],$currencycode) : "--";
        //$tripFareDetailsArr[][$languageLabelsArr['LBL_EARNED_AMOUNT']] = formateNumAsPerCurrency($returnArr['iFare_Detail_Earning'] * $priceRatio,$currencycode);
        $returnArr['HistoryFareDetailsNewArr'] = $tripFareDetailsArr;
        if ($tripData[0]['eType'] == "UberX" && $iActive != "Canceled") {
            array_splice($returnArr['HistoryFareDetailsNewArr'], 0, 1);
        }
    }
    //added by SP for rounding off currency wise on 26-8-2019 start
    //echo $roundingOffTotal_fare_amount;exit;
    if (isset($roundingOffTotal_fare_amount)) {
        $returnArr['FareSubTotal'] = ($iActive != "Canceled") ? formateNumAsPerCurrency($roundingOffTotal_fare_amount, $currencycode) : "--";
    } else {
        $returnArr['FareSubTotal'] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iOriginalFare'], $currencycode) : "--";
    }
    //$returnArr['FareSubTotal'] = ($iActive != "Canceled") ? $currencySymbol . $returnArr['iOriginalFare'] : "--";
    //added by SP for rounding off currency wise on 26-8-2019 end
    //passengertripfaredetails
    $HistoryFareDetailsArr = array();
    foreach ($tripFareDetailsArr as $inner) {
        $HistoryFareDetailsArr = array_merge($HistoryFareDetailsArr, $inner);
    }
    $returnArr['HistoryFareDetailsArr'] = $HistoryFareDetailsArr;
    // echo "<pre>";print_r($HistoryFareDetailsArr);die;
    //echo "<pre>";print_r(vVehicleCategory);die;
    $tVehicleTypeData = (array)json_decode($tripData[0]['tVehicleTypeData']);
    $returnArr['moreServices'] = "No";
    if (count($tVehicleTypeData) > 1) {
        $returnArr['moreServices'] = "Yes";
    } else if (!empty($tVehicleTypeData)) {
        $returnArr['moreServices'] = "Yes";
    }
    //added by SP for fly stations on 30-08-2019 start
    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
        $returnArr['eFly'] = "Yes";
    } else {
        $returnArr['eFly'] = "No";
    }

    $returnArr['eJobType'] = $tripData[0]['eType'];
    if($tripData[0]['isVideoCall'] == "Yes") {
        $returnArr['eJobType'] = "VideoConsult";
    } elseif ($tripData[0]['eType'] == "Multi-Delivery") {
        $returnArr['eJobType'] = "Deliver";
    }
    //added by SP for fly stations on 30-08-2019 end
    //drivertripfarehistorydetails
    //echo "<pre>";print_r($returnArr);echo "<pre>";exit;
    return $returnArr;
}

function isMemberPhoneVerified($iMemberId, $user_type = "Passenger")
{
    global $obj, $DRIVER_EMAIL_VERIFICATION, $DRIVER_PHONE_VERIFICATION, $RIDER_EMAIL_VERIFICATION, $RIDER_PHONE_VERIFICATION, $COMPANY_EMAIL_VERIFICATION, $COMPANY_PHONE_VERIFICATION;
    if ($user_type == "Driver") {
        $PHONE_VERIFICATION = $DRIVER_PHONE_VERIFICATION;
        $sqld = "SELECT eEmailVerified,ePhoneVerified FROM register_driver WHERE iDriverId = '" . $iMemberId . "'";
        $driverData = $obj->MySQLSelect($sqld);
        $ePhoneVerified = $driverData[0]['ePhoneVerified'];
    } else if ($user_type == "Company") {
        $PHONE_VERIFICATION = $COMPANY_PHONE_VERIFICATION;
        $sqld = "SELECT eEmailVerified,ePhoneVerified FROM company WHERE iCompanyId = '" . $iMemberId . "'";
        $companyData = $obj->MySQLSelect($sqld);
        $ePhoneVerified = $companyData[0]['ePhoneVerified'];
    } else {
        $PHONE_VERIFICATION = $RIDER_PHONE_VERIFICATION;
        $sqld = "SELECT eEmailVerified,ePhoneVerified FROM register_user WHERE iUserId = '" . $iMemberId . "'";
        $driverData = $obj->MySQLSelect($sqld);
        $ePhoneVerified = $driverData[0]['ePhoneVerified'];
    }
    $phone = $PHONE_VERIFICATION == "Yes" ? ($ePhoneVerified == "Yes" ? "true" : "false") : "true";
    if ($phone == "false") {
        $returnArr['Action'] = "0";
        $returnArr['message'] = "DO_PHONE_VERIFY";
        setDataResponse($returnArr);
    }
}

function convertTimeToArabic($time)
{
    $months = ["Jan" => "ÙŠÙ†Ø§ÙŠØ±", "Feb" => "Ù?Ø¨Ø±Ø§ÙŠØ±", "Mar" => "Ù…Ø§Ø±Ø³", "Apr" => "Ø£Ø¨Ø±ÙŠÙ„", "May" => "Ù…Ø§ÙŠÙˆ", "Jun" => "ÙŠÙˆÙ†ÙŠÙˆ", "Jul" => "ÙŠÙˆÙ„ÙŠÙˆ", "Aug" => "Ø£ØºØ³Ø·Ø³", "Sep" => "Ø³Ø¨ØªÙ…Ø¨Ø±", "Oct" => "Ø£ÙƒØªÙˆØ¨Ø±", "Nov" => "Ù†ÙˆÙ?Ù…Ø¨Ø±", "Dec" => "Ø¯ÙŠØ³Ù…Ø¨Ø±"];
    $days = ["Sat" => "Ø§Ù„Ø³Ø¨Øª", "Sun" => "Ø§Ù„Ø£Ø­Ø¯", "Mon" => "Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†", "Tue" => "Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡", "Wed" => "Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡", "Thu" => "Ø§Ù„Ø®Ù…ÙŠØ³", "Fri" => "Ø§Ù„Ø¬Ù…Ø¹Ø©"];
    $am_pm = ['AM' => 'ØµØ¨Ø§Ø­Ø§Ù‹', 'PM' => 'Ù…Ø³Ø§Ø¡Ù‹'];
    $day = $days[date('D', $time)];
    $month = $months[date('M', $time)];
    $am_pm = $am_pm[date('A', $time)];
    $date = date('h:i', $time) . ' ' . $am_pm;
    $numbers_ar = ["Ù ", "Ù¡", "Ù¢", "Ù£", "Ù¤", "Ù¥", "Ù¦", "Ù§", "Ù¨", "Ù©"];
    $numbers_en = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];
    return str_replace($numbers_en, $numbers_ar, $date);
}

//Added By HJ On 04-11-2019 For Optimized Speed When Load Store Start
function FetchNearByStores($sourceLat, $sourceLon, $iUserId, $fOfferType = "No", $searchword = "", $vAddress = "", $iServiceId = '', $storeid = '')
{
    global $MODULES_OBJ, $obj, $LIST_RESTAURANT_LIMIT_BY_DISTANCE, $DRIVER_REQUEST_METHOD, $intervalmins, $ENABLE_FAVORITE_STORE_MODULE, $tconfig, $userDetailsArr, $currencyAssociateArr, $Data_ALL_currency_Arr, $languageLabelDataArr, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $LANG_OBJ;
    $cmpMinutes = ceil((fetchtripstatustimeMAXinterval() + $intervalmins) / 60);
    $currencycode = isset($_REQUEST["vGeneralCurrency"]) ? $_REQUEST["vGeneralCurrency"] : ''; // Added By HJ On 23-01-2020 When User Not Logged In Get Curren cy Code
    $str_date = @date('Y-m-d H:i:s', strtotime('-' . $cmpMinutes . ' minutes'));
    $param = ($DRIVER_REQUEST_METHOD == "Time") ? "tOnline" : "tLastOnline";
    $sourceLocationArr = array($sourceLat, $sourceLon);
    $allowed_ans = checkAreaRestriction($sourceLocationArr, "No");
    $ssql = $having_ssql = "";
    if ($fOfferType == "Yes") {
        $ssql .= " AND ( company.fOfferType = 'Flat' OR company.fOfferType = 'Percentage' ) AND company.fOfferAppyType != 'None'";
    }
    if (SITE_TYPE == "Demo" && $searchword == "") {
        $having_ssql .= " OR company.eDemoDisplay = 'Yes'";
        if ($vAddress != "") {
            //$ssql .= " AND ( company.vRestuarantLocation like '%$vAddress%' OR company.vRestuarantLocation like '%India%' OR company.eDemoDisplay = 'Yes')";
        } else {
            //$ssql .= " AND ( company.vRestuarantLocation like '%India%' OR company.eDemoDisplay = 'Yes')";
        }
    }
    //$vLanguage = "EN";
    $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
    $ssql_fav_q = "";
    $priceRatio = 1;
    $ssql1 = " AND company.eBuyAnyService = 'No' ";
    if ($MODULES_OBJ->isEnableStoreMultiServiceCategories()) {
        $fsql = " AND (FIND_IN_SET('" . $iServiceId . "', company.iServiceId) OR FIND_IN_SET('" . $iServiceId . "', company.iServiceIdMulti)) ";
    } else {
        $fsql = " AND iServiceId = '" . $iServiceId . "' ";
    }
    if ($MODULES_OBJ->isFavouriteStoreModuleAvailable() && !empty($iUserId)) {
        $ssql_fav_q = getFavSelectQuery('', $iUserId);
        $ssql1 = " AND company.eBuyAnyService = 'No' ";
        $sql = "SELECT ROUND(( 6371 * acos( cos( radians(" . $sourceLat . ") ) 

        * cos( radians( vRestuarantLocationLat ) ) 

            * cos( radians( vRestuarantLocationLong ) - radians(" . $sourceLon . ") ) 

            + sin( radians(" . $sourceLat . ") ) 

            * sin( radians( vRestuarantLocationLat ) ) ) ),2) AS distance, company.* " . $ssql_fav_q . " FROM `company`

            WHERE vRestuarantLocationLat != '' AND vRestuarantLocationLong != '' AND eStatus='Active' AND eSystem = 'DeliverAll' $fsql $ssql $ssql1

            HAVING (distance < " . $LIST_RESTAURANT_LIMIT_BY_DISTANCE . $having_ssql . " ) ORDER BY `company`.`iCompanyId` ASC";
        $filterquery = getFavFilterCondition($sql);
    }
    if ($iUserId != "" && $iUserId > 0) {
        //Added By HJ On 14-07-2020 For Optimization register_user Table Query Start
        $tblName = "register_user";
        if (isset($userDetailsArr[$tblName . "_" . $iUserId]) && count($userDetailsArr[$tblName . "_" . $iUserId]) > 0) {
            $passengerData = $userDetailsArr[$tblName . "_" . $iUserId];
        } else {
            $passengerData = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM " . $tblName . " WHERE iUserId='" . $iUserId . "'");
            $userDetailsArr[$tblName . "_" . $iUserId] = $passengerData;
        }
        //Added By HJ On 14-07-2020 For Optimization register_user Table Query End
        //Added By HJ On 14-07-2020 For Optimize currency Table Query Start
        $vCurrencyPassenger = $passengerData[0]['vCurrencyPassenger'];
        if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
            $userCurrencyData = $currencyAssociateArr[$vCurrencyPassenger];
            $passengerData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $passengerData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        }
        //echo "<pre>";print_r($passengerData);die;
        //Added By HJ On 14-07-2020 For Optimize currency Table Query End
        //$sqlp = "SELECT ru.vCurrencyPassenger,ru.vLang,cu.vSymbol,cu.Ratio FROM register_user as ru LEFT JOIN currency as cu ON ru.vCurrencyPassenger = cu.vName WHERE iUserId = '" . $iUserId . "'";
        //$passengerData = $obj->MySQLSelect($sqlp);
        $currencycode = $passengerData[0]['vCurrencyPassenger'];
        $vLanguage = $passengerData[0]['vLang'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $priceRatio = $passengerData[0]['Ratio'];
        if ($vLanguage == "" || $vLanguage == NULL) {
            //Added By HJ On 14-07-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 14-07-2020 For Optimize language_master Table Query End
        }
    } else {
        //Added By HJ On 14-07-2020 For Optimize currency Table Query Start
        if (($currencySymbol == "" || $currencySymbol == NULL) && $currencycode != "") {
            if (isset($currencyAssociateArr[$currencycode])) {
                $currencyData = array();
                $currencyData[] = $currencyAssociateArr[$currencycode];
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE vName = '" . $currencycode . "'");
            }
        } else {
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencyData = array();
                $currencyData[0]['vName'] = $vSystemDefaultCurrencyName;
                $currencyData[0]['vSymbol'] = $vSystemDefaultCurrencySymbol;
                $currencyData[0]['Ratio'] = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            }
        }
        if (count($currencyData) > 0) {
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $priceRatio = $currencyData[0]['Ratio'];
        } else {
            $currencycode = "USD";
            $currencySymbol = "$";
            $priceRatio = 1.0000;
        }
        //Added By HJ On 14-07-2020 For Optimize currency Table Query End
    }
    if ($allowed_ans == 'Yes') {
        //Added By HJ On 14-07-2020 For Optimize currency Table Query Start
        $currencyArr = $currencySymbolArr = array();
        if (count($Data_ALL_currency_Arr) > 0) {
            $getCurrencyRation = $Data_ALL_currency_Arr;
        } else {
            $getCurrencyRation = $obj->MySQLSelect("SELECT Ratio,iCurrencyId,vSymbol,vName FROM currency WHERE eStatus='Active'");
        }
        for ($c = 0; $c < count($getCurrencyRation); $c++) {
            if (strtoupper($getCurrencyRation[$c]['eStatus']) == "ACTIVE") {
                $currencyArr[$getCurrencyRation[$c]['vName']] = $getCurrencyRation[$c]['Ratio'];
                $currencySymbolArr[$getCurrencyRation[$c]['vName']] = $getCurrencyRation[$c]['vSymbol'];
            }
        }
        //Added By HJ On 14-07-2020 For Optimize currency Table Query End
        if (isset($filterquery) && !empty($filterquery)) {
            $sql = $filterquery;
        } else {
            $sql = "SELECT ROUND(( 6371 * acos( cos( radians(" . $sourceLat . ") )

        * cos( radians( vRestuarantLocationLat ) )

            * cos( radians( vRestuarantLocationLong ) - radians(" . $sourceLon . ") ) 

                    + sin( radians(" . $sourceLat . ") ) 

            * sin( radians( vRestuarantLocationLat ) ) ) ),2) AS distance, company.* " . $ssql_fav_q . " FROM `company`

                    WHERE vRestuarantLocationLat != '' AND vRestuarantLocationLong != '' AND eStatus='Active' AND eSystem = 'DeliverAll' $fsql $ssql $ssql1

                    HAVING (distance < " . $LIST_RESTAURANT_LIMIT_BY_DISTANCE . $having_ssql . ") ORDER BY `company`.`iCompanyId` ASC";
        }

        if ($storeid != '') {
            $storeIdArr_sql = 'AND company.iCompanyId = ' . $storeid;
            $sql = "SELECT  company.*  FROM `company`
                    WHERE   eStatus='Active' 
                     AND company.iCompanyId = $storeid ORDER BY `company`.`iCompanyId` ASC";
        }

       
        $Data = $obj->MySQLSelect($sql);
        //echo "<pre>";print_R($Data);die;
        //Added By HJ On 14-07-2020 For langauge labele and Other Union Table Query Start
        if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId])) {
            $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId];
        } else {
            $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $iServiceId);
            $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId] = $languageLabelsArr;
        }
        //Added By HJ On 14-07-2020 For langauge labele and Other Union Table Query End
        $iToLocationId = GetUserGeoLocationId($sourceLocationArr);
        $LBL_PER_PERSON_TXT = $languageLabelsArr['LBL_PER_PERSON_TXT'];
        $LBL_MIN_ORDER_TXT = $languageLabelsArr['LBL_MIN_ORDER_TXT'];
        $LBL_NO_MIN_ORDER_TXT = $languageLabelsArr['LBL_NO_MIN_ORDER_TXT'];
        if (count($Data) > 0) {
            //Added By HJ On 09-05-2019 For Optimized Code start
            $storeIdArr = $favStoreArr = $storeBasicData = array();
            for ($c = 0; $c < count($Data); $c++) {
                $storeIdArr[] = $Data[$c]['iCompanyId'];
            }
            if (count($storeIdArr) > 0) {
                $storeIds = implode(",", $storeIdArr);
                $getStoreBasicData = $obj->MySQLSelect("SELECT iCompanyId,eStatus,vCountry,vFromSatSunTimeSlot1,vFromSatSunTimeSlot2,vToSatSunTimeSlot1,vToSatSunTimeSlot2,vFromMonFriTimeSlot1,vFromMonFriTimeSlot2,vToMonFriTimeSlot1,vToMonFriTimeSlot2,eAvailable,eLogout FROM `company` WHERE iCompanyId IN ($storeIds)");
                //echo "<pre>";print_r($getStoreBasicData);die;
                for ($g = 0; $g < count($getStoreBasicData); $g++) {
                    $storeBasicData[$getStoreBasicData[$g]['iCompanyId']][] = $getStoreBasicData[$g];
                }
            }
            $storeDetails = getStoreDetails($storeIdArr, $iUserId, $iToLocationId, $languageLabelsArr);
            //Added By HJ On 09-05-2019 For Optimized Code End
            //echo "<pre>";print_r($storeDetails);die;
            for ($i = 0; $i < count($Data); $i++) {
                //echo "<pre>";print_r($Data[$i]);die;
                $iCompanyId = $Data[$i]['iCompanyId'];
                $vAvgRating = $Data[$i]['vAvgRating'];
                /* if (isset($Data[$i]['vCurrencyCompany']) && $Data[$i]['vCurrencyCompany'] != '') {

                  $currencycode = $Data[$i]['vCurrencyCompany'];

                  }

                  //if (isset($currencyArr[$currencycode]) && $priceRatio == "") { // Commented By HJ On 23-01-2020 For Solved Company Currency Issue

                  if (isset($currencyArr[$currencycode])) { // Added By HJ On 23-01-2020 For Solved Company Currency Issue

                  $priceRatio = $currencyArr[$currencycode];

                  $currencySymbol = $currencySymbolArr[$currencycode];

              } */
                $Data[$i]['fMinOrderValue'] = setTwoDecimalPoint($Data[$i]['fMinOrderValue'] * $priceRatio);
                $Data[$i]['fPackingCharge'] = setTwoDecimalPoint($Data[$i]['fPackingCharge'] * $priceRatio);
                $Data[$i]['fTargetAmt'] = setTwoDecimalPoint($Data[$i]['fTargetAmt'] * $priceRatio);
                $Data[$i]['fOfferAmt'] = setTwoDecimalPoint($Data[$i]['fOfferAmt'] * $priceRatio);
                $Data[$i]['fMaxOfferAmt'] = setTwoDecimalPoint($Data[$i]['fMaxOfferAmt'] * $priceRatio);
                $Data[$i]['fPricePerPerson'] = setTwoDecimalPoint($Data[$i]['fPricePerPerson'] * $priceRatio);
                $Data[$i]['vAvgRating'] = ($vAvgRating > 0) ? number_format($Data[$i]['vAvgRating'], 1) : 0;
                $Data[$i]['vAvgRatingOrig'] = $Data[$i]['vAvgRating'];
                $restaurant_status_arr = GetStoreWorkingHoursDetails($Data[$i]['iCompanyId'], $iUserId, $vLanguage, $languageLabelsArr, $storeBasicData);
                //echo "<pre>";print_r($restaurant_status_arr['timeslotavailable']);exit;
                $Data[$i]['Restaurant_Status'] = "Closed";
                $Data[$i]['Restaurant_Opentime'] = $Data[$i]['Restaurant_Closetime'] = $Data[$i]['Restaurant_Cuisine_Id'] = "";
                $Data[$i]['restaurantstatus'] = "closed"; // closed or open
                $Data[$i]['timeslotavailable'] = "No";
                if (isset($restaurant_status_arr['timeslotavailable'])) {
                    $Data[$i]['timeslotavailable'] = $restaurant_status_arr['timeslotavailable'];
                }
                if (isset($restaurant_status_arr['status'])) {
                    $Data[$i]['Restaurant_Status'] = $restaurant_status_arr['status'];
                    $Data[$i]['Restaurant_Opentime'] = $restaurant_status_arr['opentime'];
                    $Data[$i]['Restaurant_Closetime'] = $restaurant_status_arr['closetime'];
                    $Data[$i]['restaurantstatus'] = $restaurant_status_arr['restaurantstatus']; // closed or open
                }
                //$CompanyDetailsArr = getCompanyDetails($Data[$i]['iCompanyId'], $iUserId, "No", ""); // Commented By HJ On 09-05-2019 For Optimized Code
                //echo "<pre>";print_r($CompanyDetailsArr);die;
                $Data[$i]['Restaurant_Cuisine'] = $Restaurant_OfferMessage_short = $Restaurant_OfferMessage = "";
                $Data[$i]['Restaurant_OrderPrepareTime'] = "0 mins";
                // $Data[$i]['restaurantstatus'] = $restaurantstatus = "Closed";
                if (isset($storeDetails['companyCuisineArr'][$iCompanyId])) {
                    $Data[$i]['Restaurant_Cuisine'] = implode(", ", $storeDetails['companyCuisineArr'][$iCompanyId]);
                }
                if (isset($storeDetails['companyCuisineIdArr'][$iCompanyId])) {
                    $Data[$i]['Restaurant_Cuisine_Id'] = implode(",", $storeDetails['companyCuisineIdArr'][$iCompanyId]);
                }
                if (isset($storeDetails['restaurantPrepareTime'][$iCompanyId])) {
                    $Data[$i]['Restaurant_OrderPrepareTime'] = $storeDetails['restaurantPrepareTime'][$iCompanyId];
                }
                if (isset($storeDetails['offerMsgArr'][$iCompanyId]['Restaurant_OfferMessage_short'])) {
                    $Restaurant_OfferMessage_short = $storeDetails['offerMsgArr'][$iCompanyId]['Restaurant_OfferMessage_short'];
                }
                if (isset($storeDetails['offerMsgArr'][$iCompanyId]['Restaurant_OfferMessage'])) {
                    $Restaurant_OfferMessage = $storeDetails['offerMsgArr'][$iCompanyId]['Restaurant_OfferMessage'];
                }
                /*if (isset($storeDetails['restaurantStatusArr'][$iCompanyId]['status'])) {

                    $Data[$i]['restaurantstatus'] = $restaurantstatus = $storeDetails['restaurantStatusArr'][$iCompanyId]['status'];

                }*/
                $fPricePerPerson = $fMinOrderValue = 0;
                if (isset($storeDetails['restaurantPricePerPerson'][$iCompanyId])) {
                    $fPricePerPerson = $storeDetails['restaurantPricePerPerson'][$iCompanyId];
                }
                if (isset($storeDetails['restaurantMinOrdValue'][$iCompanyId])) {
                    $fMinOrderValue = $storeDetails['restaurantMinOrdValue'][$iCompanyId];
                }
                $Data[$i]['Restaurant_OfferMessage'] = $Restaurant_OfferMessage;
                $Data[$i]['Restaurant_OfferMessage_short'] = $Restaurant_OfferMessage_short;
                //$fPricePerPerson = setTwoDecimalPoint($fPricePerPerson * $priceRatio);
                $fPricePerPerson = setTwoDecimalPoint($fPricePerPerson);
                if ($iServiceId == 1) {
                    $Data[$i]['Restaurant_PricePerPerson'] = formateNumAsPerCurrency($fPricePerPerson, $currencycode) . " " . $LBL_PER_PERSON_TXT;
                } else {
                    $Data[$i]['Restaurant_PricePerPerson'] = '';
                }
                //$fMinOrderValue = setTwoDecimalPoint($fMinOrderValue * $priceRatio);
                $fMinOrderValue = setTwoDecimalPoint($fMinOrderValue);
                $Data[$i]['fMinOrderValueDisplay'] = formateNumAsPerCurrency($fMinOrderValue, $currencycode);
                $Data[$i]['fMinOrderValue'] = $fMinOrderValue;
                $Data[$i]['Restaurant_MinOrderValue'] = ($fMinOrderValue > 0) ? formateNumAsPerCurrency($fMinOrderValue, $currencycode) . " " . $LBL_MIN_ORDER_TXT : $LBL_NO_MIN_ORDER_TXT;
                $Data[$i]['Restaurant_MinOrderValue_Orig'] = ($fMinOrderValue > 0) ? formateNumAsPerCurrency($fMinOrderValue, $currencycode) : $LBL_NO_MIN_ORDER_TXT;
                $Data[$i]['CompanyFoodDataCount'] = isset($CompanyDetailsArr['CompanyFoodDataCount']) ? $CompanyDetailsArr['CompanyFoodDataCount'] : '1'; // Remain
                $Data[$i]['CompanyFoodData'] = array();
                $vGeneralLang = !empty($_REQUEST['vGeneralLang']) ? $_REQUEST['vGeneralLang'] : "EN";
                // $Data[$i]['Restaurant_Safety_Status'] = (!empty($Data[$i]['eSafetyPractices'] && $MODULES_OBJ->isEnableStoreSafetyProcedure(()) && ($Data[$i]['iServiceId'] == 1 || $Data[$i]['iServiceId'] == 2)) ? $Data[$i]['eSafetyPractices'] : "No";
                $Data[$i]['Restaurant_Safety_Status'] = (!empty($Data[$i]['eSafetyPractices']) && $MODULES_OBJ->isEnableStoreSafetyProcedure()) ? $Data[$i]['eSafetyPractices'] : "No";
                $safetyimg = "/webimages/icons/DefaultImg/ic_safety.png";
                $Data[$i]['Restaurant_Safety_Icon'] = (file_exists($tconfig["tpanel_path"] . $safetyimg)) ? $tconfig["tsite_url"] . $safetyimg : "";
                $time = time();
                $Data[$i]['Restaurant_Safety_URL'] = $tconfig["tsite_url"] . "safety-measures?time_data=" . $time . "&fromlang=" . $vGeneralLang . "&id=" . $iCompanyId . "&iServiceId=" . $Data[$i]['iServiceId'];
                $banner_images = 0;
                if ($MODULES_OBJ->isEnableStorePhotoUploadFacility()) {
                    $banner_data = $obj->MySQLSelect("SELECT * FROM store_wise_banners WHERE eStatus = 'Active' AND iCompanyId = " . $iCompanyId . " ORDER BY iDisplayOrder");
                    if (count($banner_data) > 0) {
                        $banner_images = 1;
                    }
                }
                if (($Data[$i]['eSafetyPractices'] == "Yes" && $MODULES_OBJ->isEnableStoreSafetyProcedure()) || ($MODULES_OBJ->isEnableStorePhotoUploadFacility() && $banner_images == 1)) {
                    $Data[$i]['Restaurant_Safety_URL'] = $tconfig["tsite_url"] . "safety-measures?time_data=" . $time . "&fromlang=" . $vGeneralLang . "&id=" . base64_encode($iCompanyId) . "&iServiceId=" . base64_encode($Data[$i]['iServiceId']);
                } else {
                    $Data[$i]['Restaurant_Safety_URL'] = "";
                }
            }
        }
        return $Data;
    } else {
        $Data = array();
        return $Data;
    }
}

function secondsToTime($inputSeconds)
{
    $secondsInAMinute = 60;
    $secondsInAnHour = 60 * $secondsInAMinute;
    $secondsInADay = 24 * $secondsInAnHour;
    // extract days
    $days = floor($inputSeconds / $secondsInADay);
    // extract hours
    $hourSeconds = $inputSeconds % $secondsInADay;
    $hours = floor($hourSeconds / $secondsInAnHour);
    // extract minutes
    $minuteSeconds = $hourSeconds % $secondsInAnHour;
    $minutes = floor($minuteSeconds / $secondsInAMinute);
    // extract the remaining seconds
    $remainingSeconds = $minuteSeconds % $secondsInAMinute;
    $seconds = ceil($remainingSeconds);
    // return the final array
    $tottimearr = array('d' => (int)$days, 'h' => (int)$hours, 'm' => (int)$minutes, 's' => (int)$seconds,);
    return $tottimearr;
}

function GetAllMenuItemOptionsTopping($iCompanyId, $currencySymbol, $Ratio, $vLanguage, $eFor = "", $iServiceId = "", $currencycode = "", $iMenuItemId = "")
{
    global $MODULES_OBJ;
    if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
        $returnArr = GetAllMenuItemOptionsToppingMulti($iCompanyId, $currencySymbol, $Ratio, $vLanguage, $eFor, $iServiceId, $currencycode, $iMenuItemId);
    } else {
        global $obj, $tconfig, $serviceCatDataArr, $orderDetailsArr;
        $returnArr = array();
        $returnArr['options'] = $returnArr['addon'] = $finalReturnArr = $subItemArr = array();
        $ssql = " AND mo.iOptionsCategoryId = 0 ";
        if ($eFor == "Display") {
            $ssql .= " AND mo.eStatus = 'Active' ";
        }
        $db_options_data = $obj->MySQLSelect("SELECT mo.*,mi.fOfferAmt,fm.iFoodMenuId FROM menuitem_options as mo LEFT JOIN menu_items as mi ON mo.iMenuItemId=mi.iMenuItemId LEFT JOIN food_menu as fm ON mi.iFoodMenuId=fm.iFoodMenuId LEFT JOIN company as co ON fm.iCompanyId=co.iCompanyId WHERE co.iCompanyId = '" . $iCompanyId . "' AND mi.eStatus='Active' AND fm.eStatus = 'Active' AND mi.eAvailable = 'Yes'" . $ssql); //Comment
        if (count($db_options_data) > 0) {
            //Added By HJ On 13-07-2020 For Optimize service_categories Table Query Start
            if (count($serviceCatDataArr) > 0) {
                $ServiceCategoryData = $serviceCatDataArr;
            } else {
                $ServiceCategoryData = $serviceCatDataArr = $obj->MySQLSelect("SELECT * FROM service_categories");
            }
            //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
            $serviceCatArr = array();
            for ($h = 0; $h < count($ServiceCategoryData); $h++) {
                $serviceCatArr[$ServiceCategoryData[$h]['iServiceId']] = $ServiceCategoryData[$h];
            }
            //echo "<pre>";print_r($serviceCatArr);die;
            //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
            //Added By HJ On 13-07-2020 For Optimize menu_items Table Query Start
            $menuItemIdArr = array();
            for ($b = 0; $b < count($db_options_data); $b++) {
                $menuItemIdArr[] = $db_options_data[$b]['iMenuItemId'];
            }
            if (count($menuItemIdArr) > 0) {
                $menuItemIdArr = array_unique($menuItemIdArr, SORT_REGULAR);
                $menuItenIds = implode(",", $menuItemIdArr);
                $db_price = $obj->MySQLSelect("select * from menu_items where iMenuItemId IN ($menuItenIds)");
                for ($h = 0; $h < count($db_price); $h++) {
                    $orderDetailsArr['menu_items_' . $db_price[$h]['iMenuItemId']][] = $db_price[$h];
                }
            }
            //Added By HJ On 13-07-2020 For Optimize menu_items Table Query End
            //echo "<pre>";print_r($orderDetailsArr);die;
            for ($i = 0; $i < count($db_options_data); $i++) {
                $fPrice = $db_options_data[$i]['fPrice'];
                $eOptionType = $db_options_data[$i]['eOptionType'];
                $fUserPrice = setTwoDecimalPoint($fPrice * $Ratio);
                //$fUserPriceWithSymbol = $currencySymbol . " " . $fUserPrice;
                $fUserPriceWithSymbol = formateNumAsPerCurrency($fUserPrice, $currencycode);
                $db_options_data[$i]['fUserPrice'] = $fUserPrice;
                $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
                //$fPrice = round($MenuItemPriceArr['fPrice'] * $Ratio, 2);
                //added by SP for offer amount
                $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($db_options_data[$i]['iMenuItemId'], $iCompanyId, 1, '', "Display", "", "", $iServiceId);
                $fOfferAmt = round($MenuItemPriceArr['fOfferAmt'], 2);
                if (isset($db_options_data[$i]['tOptionNameLang']) && !empty($db_options_data[$i]['tOptionNameLang'])) {
                    $tOptionNameLang = json_decode(trim($db_options_data[$i]['tOptionNameLang'], '"'), true);
                    if (isset($tOptionNameLang['tOptionNameLang_' . $vLanguage]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLanguage])) {
                        $db_options_data[$i]['vOptionName'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
                    }
                    $db_options_data[$i]['tOptionNameLang'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
                }
                $ispriceshow = '';
                if (isset($iServiceId) && !empty($iServiceId)) {
                    $servFields = 'eType';
                    //Added By HJ On 13-07-2020 For Optimize service_categories Table Query Start
                    if (isset($serviceCatArr[$iServiceId])) {
                        $ServiceCategoryData = array();
                        $ServiceCategoryData[] = $serviceCatArr[$iServiceId];
                    } else {
                        $ServiceCategoryData = get_value('service_categories', $servFields, 'iServiceId', $iServiceId);
                    }
                    //echo "<pre>";print_r($ServiceCategoryData);die;
                    //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
                    if (!empty($ServiceCategoryData)) {
                        if (!empty($ServiceCategoryData[0]['eType']) && $ServiceCategoryData[0]['eType'] == 'separate') {
                            $ispriceshow = $ServiceCategoryData[0]['eType'];
                        }
                    }
                }
                $StrikeoutPrice = setTwoDecimalPoint($fPrice * $Ratio, 2);
                if (isset($ispriceshow) && !empty($ispriceshow)) {
                    $fPrice_separate = 0;
                    if ($fPrice == 0) {
                        $fPrice_separate = $MenuItemPriceArr['fPrice'];
                        $StrikeoutPrice = setTwoDecimalPoint($fPrice_separate * $Ratio, 2);
                        $db_options_data[$i]['fPrice'] = $fPrice_separate;
                        $fUserPrice = setTwoDecimalPoint($fPrice_separate * $Ratio);
                        $fUserPriceWithSymbol = $currencySymbol . " " . $fUserPrice;
                        $db_options_data[$i]['fUserPrice'] = $fUserPrice;
                        $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
                    }
                }
                $db_options_data[$i]['fToppingStrikeoutPrice'] = $StrikeoutPrice;
                $db_options_data[$i]['fToppingStrikeoutPricewithsymbol'] = $currencySymbol . " " . $StrikeoutPrice;
                $db_options_data[$i]['fToppingDiscountPrice'] = "";
                $db_options_data[$i]['fToppingDiscountPricewithsymbol'] = "";
                $db_options_data[$i]['isShownDiscountPrice'] = "No";
                if ($fOfferAmt > 0) {
                    $fDiscountPrice = $fPrice - (($fPrice * $fOfferAmt) / 100);
                    $fDiscountPrice = $fDiscountPrice * $Ratio;
                    if (!empty($fDiscountPrice)) {
                        $fDiscountPrice = setTwoDecimalPoint($fDiscountPrice, 2);
                        $db_options_data[$i]['fToppingDiscountPrice'] = $fDiscountPrice;
                        $db_options_data[$i]['fToppingDiscountPricewithsymbol'] = $currencySymbol . " " . $fDiscountPrice;
                        $db_options_data[$i]['isShownDiscountPrice'] = "Yes";
                    }
                }
                if (!empty($db_options_data[$i]['vImage']) && file_exists($tconfig['tsite_upload_images_menu_item_options_path'] . $db_options_data[$i]['vImage'])) {
                    $db_options_data[$i]['vImage'] = $tconfig['tsite_upload_images_menu_item_options'] . $db_options_data[$i]['vImage'];
                }
                if ($eOptionType == "Options") {
                    $returnArr['options'][] = $db_options_data[$i];
                } else if ($eOptionType == "Addon") {
                    $returnArr['addon'][] = $db_options_data[$i];
                } else { // Added By HJ On 21-05-2019 For Get Custome Topping Data Start
                    $eOptionType = $db_options_data[$i]['eOptionType'];
                    $eOptionInputType = $db_options_data[$i]['eOptionInputType'];
                    $vOptionMinSelection = $db_options_data[$i]['vOptionMinSelection'];
                    $vOptionMaxSelection = $db_options_data[$i]['vOptionMaxSelection'];
                    $iFoodMenuId = $db_options_data[$i]['iFoodMenuId'];
                    $iMenuItemId = $db_options_data[$i]['iMenuItemId'];
                    $fPrice = $db_options_data[$i]['fPrice'];
                    $fUserPrice = setTwoDecimalPoint($fPrice * $Ratio);
                    $fUserPriceWithSymbol = formateNumAsPerCurrency($fUserPrice, $currencycode);
                    $db_options_data[$i]['fUserPrice'] = $fUserPrice;
                    $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
                    //$subItemArr[$iMenuItemId]['eOptionType'] = $eOptionType;
                    $subItemArr[$iMenuItemId]['iMenuItemId'] = $iMenuItemId;
                    $subItemArr[$iMenuItemId]['iFoodMenuId'] = $iFoodMenuId;
                    $subItemArr[$iMenuItemId]['eOptionInputType'] = $eOptionInputType;
                    $subItemArr[$iMenuItemId]['vOptionMinSelection'] = $vOptionMinSelection;
                    $subItemArr[$iMenuItemId]['vOptionMaxSelection'] = $vOptionMaxSelection;
                    $subItemArr[$iMenuItemId]['subItemArr'][] = $db_options_data[$i];
                    // Added By HJ On 21-05-2019 For Get Custome Topping Data End
                }
            }
        }
    }
    //echo "<pre>";print_r($returnArr);exit;
    return $returnArr;
}

function GetAllMenuItemOptionsToppingMulti($iCompanyId, $currencySymbol, $Ratio, $vLanguage, $eFor = "", $iServiceId = "", $currencycode = "", $iMenuItemId = "")
{
    global $obj, $tconfig, $serviceCatDataArr, $orderDetailsArr;
    $returnArr = $catArray = array();
    $returnArr['options'] = $returnArr['addon'] = $finalReturnArr = $subItemArr = array();
    $ssql = "";
    if ($eFor == "Display") {
        $ssql .= " AND mo.eStatus = 'Active' AND mo.iMenuItemId = '$iMenuItemId'";
    }
    $db_options_cat_data = $obj->MySQLSelect("SELECT mo.iOptionsCategoryId,mo.tCategoryName FROM menuitem_options_category as mo LEFT JOIN menu_items as mi ON mo.iMenuItemId=mi.iMenuItemId LEFT JOIN food_menu as fm ON mi.iFoodMenuId=fm.iFoodMenuId LEFT JOIN company as co ON fm.iCompanyId=co.iCompanyId WHERE co.iCompanyId = '" . $iCompanyId . "' AND mi.eStatus='Active' AND fm.eStatus = 'Active' AND mi.eAvailable = 'Yes'" . $ssql);
    if (count($db_options_cat_data) > 0) {
        foreach ($db_options_cat_data as $key => $value) {
            $value1 = array();
            if (isset($value['tCategoryName']) && !empty($value['tCategoryName'])) {
                $tCategoryName = json_decode($value['tCategoryName'], true);
                if (isset($tCategoryName['tCategoryName_' . $vLanguage]) && !empty($tCategoryName['tCategoryName_' . $vLanguage])) {
                    $value['vCatName'] = $tCategoryName['tCategoryName_' . $vLanguage];
                }
                $value['tCategoryName'] = $tCategoryName['tCategoryName_' . $vLanguage];
            }
            $returnArr = array();
            $ssqlCat = " AND iOptionsCategoryId = '" . $value['iOptionsCategoryId'] . "'";
            $db_options_data = $obj->MySQLSelect("SELECT mo.*,mi.fOfferAmt,fm.iFoodMenuId FROM menuitem_options as mo LEFT JOIN menu_items as mi ON mo.iMenuItemId=mi.iMenuItemId LEFT JOIN food_menu as fm ON mi.iFoodMenuId=fm.iFoodMenuId LEFT JOIN company as co ON fm.iCompanyId=co.iCompanyId WHERE co.iCompanyId = '" . $iCompanyId . "' AND mi.eStatus='Active' AND fm.eStatus = 'Active' AND mi.eAvailable = 'Yes'" . $ssql . $ssqlCat); //Comment
            // echo "<pre>"; print_r($db_options_data); exit;
            if (count($db_options_data) > 0) {
                //Added By HJ On 13-07-2020 For Optimize service_categories Table Query Start
                if (count($serviceCatDataArr) > 0) {
                    $ServiceCategoryData = $serviceCatDataArr;
                } else {
                    $ServiceCategoryData = $serviceCatDataArr = $obj->MySQLSelect("SELECT * FROM service_categories");
                }
                //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
                $serviceCatArr = array();
                for ($h = 0; $h < count($ServiceCategoryData); $h++) {
                    $serviceCatArr[$ServiceCategoryData[$h]['iServiceId']] = $ServiceCategoryData[$h];
                }
                //echo "<pre>";print_r($serviceCatArr);die;
                //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
                //Added By HJ On 13-07-2020 For Optimize menu_items Table Query Start
                $menuItemIdArr = array();
                for ($b = 0; $b < count($db_options_data); $b++) {
                    $menuItemIdArr[] = $db_options_data[$b]['iMenuItemId'];
                }
                if (count($menuItemIdArr) > 0) {
                    $menuItemIdArr = array_unique($menuItemIdArr, SORT_REGULAR);
                    $menuItenIds = implode(",", $menuItemIdArr);
                    $db_price = $obj->MySQLSelect("select * from menu_items where iMenuItemId IN ($menuItenIds)");
                    for ($h = 0; $h < count($db_price); $h++) {
                        $orderDetailsArr['menu_items_' . $db_price[$h]['iMenuItemId']][] = $db_price[$h];
                    }
                }
                //Added By HJ On 13-07-2020 For Optimize menu_items Table Query End
                // echo "<pre>";print_r($db_options_data);die;
                $value['tOptionTitle'] = $value['tAddonTitle'] = "";
                for ($i = 0; $i < count($db_options_data); $i++) {
                    $fPrice = $db_options_data[$i]['fPrice'];
                    $eOptionType = $db_options_data[$i]['eOptionType'];
                    $fUserPrice = setTwoDecimalPoint($fPrice * $Ratio);
                    //$fUserPriceWithSymbol = $currencySymbol . " " . $fUserPrice;
                    $fUserPriceWithSymbol = formateNumAsPerCurrency($fUserPrice, $currencycode);
                    $db_options_data[$i]['fUserPrice'] = $fUserPrice;
                    $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
                    //$fPrice = round($MenuItemPriceArr['fPrice'] * $Ratio, 2);
                    //added by SP for offer amount
                    $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($db_options_data[$i]['iMenuItemId'], $iCompanyId, 1, '', "Display", "", "", $iServiceId);
                    $fOfferAmt = round($MenuItemPriceArr['fOfferAmt'], 2);
                    if (isset($db_options_data[$i]['tOptionNameLang']) && !empty($db_options_data[$i]['tOptionNameLang'])) {
                        $tOptionNameLang = json_decode($db_options_data[$i]['tOptionNameLang'], true);
                        if (isset($tOptionNameLang['tOptionNameLang_' . $vLanguage]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLanguage])) {
                            $db_options_data[$i]['vOptionName'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
                        }
                        $db_options_data[$i]['tOptionNameLang'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
                    }
                    $ispriceshow = '';
                    if (isset($iServiceId) && !empty($iServiceId)) {
                        $servFields = 'eType';
                        //Added By HJ On 13-07-2020 For Optimize service_categories Table Query Start
                        if (isset($serviceCatArr[$iServiceId])) {
                            $ServiceCategoryData = array();
                            $ServiceCategoryData[] = $serviceCatArr[$iServiceId];
                        } else {
                            $ServiceCategoryData = get_value('service_categories', $servFields, 'iServiceId', $iServiceId);
                        }
                        //echo "<pre>";print_r($ServiceCategoryData);die;
                        //Added By HJ On 13-07-2020 For Optimize service_categories Table Query End
                        if (!empty($ServiceCategoryData)) {
                            if (!empty($ServiceCategoryData[0]['eType']) && $ServiceCategoryData[0]['eType'] == 'separate') {
                                $ispriceshow = $ServiceCategoryData[0]['eType'];
                            }
                        }
                    }
                    $StrikeoutPrice = setTwoDecimalPoint($fPrice * $Ratio, 2);
                    if (isset($ispriceshow) && !empty($ispriceshow)) {
                        $fPrice_separate = 0;
                        if ($fPrice == 0) {
                            $fPrice_separate = $MenuItemPriceArr['fPrice'];
                            $StrikeoutPrice = setTwoDecimalPoint($fPrice_separate * $Ratio, 2);
                            $db_options_data[$i]['fPrice'] = $fPrice_separate;
                            $fUserPrice = setTwoDecimalPoint($fPrice_separate * $Ratio);
                            $fUserPriceWithSymbol = $currencySymbol . " " . $fUserPrice;
                            $db_options_data[$i]['fUserPrice'] = $fUserPrice;
                            $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
                        }
                    }
                    $db_options_data[$i]['fToppingStrikeoutPrice'] = $StrikeoutPrice;
                    $db_options_data[$i]['fToppingStrikeoutPricewithsymbol'] = $currencySymbol . " " . $StrikeoutPrice;
                    $db_options_data[$i]['fToppingDiscountPrice'] = "";
                    $db_options_data[$i]['fToppingDiscountPricewithsymbol'] = "";
                    $db_options_data[$i]['isShownDiscountPrice'] = "No";
                    if ($fOfferAmt > 0) {
                        $fDiscountPrice = $fPrice - (($fPrice * $fOfferAmt) / 100);
                        $fDiscountPrice = $fDiscountPrice * $Ratio;
                        if (!empty($fDiscountPrice)) {
                            $fDiscountPrice = setTwoDecimalPoint($fDiscountPrice, 2);
                            $db_options_data[$i]['fToppingDiscountPrice'] = $fDiscountPrice;
                            $db_options_data[$i]['fToppingDiscountPricewithsymbol'] = $currencySymbol . " " . $fDiscountPrice;
                            $db_options_data[$i]['isShownDiscountPrice'] = "Yes";
                        }
                    }
                    $tOptionAddonTitle = !empty($db_options_data[$i]['tOptionAddonTitle']) ? json_decode($db_options_data[$i]['tOptionAddonTitle'], true) : "";
                    if ($eOptionType == "Options") {
                        $returnArr['options'][] = $db_options_data[$i];
                        $value['tOptionTitle'] = !empty($tOptionAddonTitle) ? $tOptionAddonTitle['tOptionAddonTitle_' . $vLanguage] : "";
                    } else if ($eOptionType == "Addon") {
                        $returnArr['addon'][] = $db_options_data[$i];
                        $value['tAddonTitle'] = !empty($tOptionAddonTitle) ? $tOptionAddonTitle['tOptionAddonTitle_' . $vLanguage] : "";
                    } else { // Added By HJ On 21-05-2019 For Get Custome Topping Data Start
                        $eOptionType = $db_options_data[$i]['eOptionType'];
                        $eOptionInputType = $db_options_data[$i]['eOptionInputType'];
                        $vOptionMinSelection = $db_options_data[$i]['vOptionMinSelection'];
                        $vOptionMaxSelection = $db_options_data[$i]['vOptionMaxSelection'];
                        $iFoodMenuId = $db_options_data[$i]['iFoodMenuId'];
                        $iMenuItemId = $db_options_data[$i]['iMenuItemId'];
                        $fPrice = $db_options_data[$i]['fPrice'];
                        $fUserPrice = setTwoDecimalPoint($fPrice * $Ratio);
                        $fUserPriceWithSymbol = formateNumAsPerCurrency($fUserPrice, $currencycode);
                        $db_options_data[$i]['fUserPrice'] = $fUserPrice;
                        $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
                        //$subItemArr[$iMenuItemId]['eOptionType'] = $eOptionType;
                        $subItemArr[$iMenuItemId]['iMenuItemId'] = $iMenuItemId;
                        $subItemArr[$iMenuItemId]['iFoodMenuId'] = $iFoodMenuId;
                        $subItemArr[$iMenuItemId]['eOptionInputType'] = $eOptionInputType;
                        $subItemArr[$iMenuItemId]['vOptionMinSelection'] = $vOptionMinSelection;
                        $subItemArr[$iMenuItemId]['vOptionMaxSelection'] = $vOptionMaxSelection;
                        $subItemArr[$iMenuItemId]['subItemArr'][] = $db_options_data[$i];
                        // Added By HJ On 21-05-2019 For Get Custome Topping Data End
                    }
                }
            }
            //$value['optionsArr'] = $returnArr;
            //$catArray['Category'][] = $value;
            if (isset($returnArr['options'][0])) {
                $returnArr['options'][0]['eDefault'] = 'Yes';
            }
            $value1 = $returnArr;
            if (!empty($value1)) {
                $catArray['Category'][] = array_merge($value, $value1);
            }
        }
    }
    return $catArray;
}

function GetOrderStatusLogTextForCancelledSplit($iOrderId, $UserType = "Passenger")
{ //added by SP for cubex on 11-10-2019
    global $obj, $tconfig, $languageLabelDataArr, $LANG_OBJ;
    $sql = "SELECT ord.iUserId,ord.iDriverId,ord.iCompanyId,ord.fRefundAmount,ord.iStatusCode,ord.iServiceId,os.vStatus_Track,os.vStatus,osl.dDate,ord.fCancellationCharge,ord.fRestaurantPaidAmount,ord.fDriverPaidAmount,ord.eRestaurantPaymentStatus,ord.eBuyAnyService,ord.fDeliveryChargeCancelled,ord.vCancelReason FROM order_status as os LEFT JOIN orders as ord ON os.iStatusCode = ord.iStatusCode LEFT JOIN order_status_logs as osl ON osl.iStatusCode = ord.iStatusCode WHERE ord.iOrderId = '" . $iOrderId . "' ORDER BY osl.dDate DESC LIMIT 0,1";
    $data_order = $obj->MySQLSelect($sql);
    $iCompanyId = $data_order[0]['iCompanyId'];
    $iUserId = $data_order[0]['iUserId'];
    $iDriverId = $data_order[0]['iDriverId'];
    $iStatusCode = $data_order[0]['iStatusCode'];
    $dDate = $data_order[0]['dDate'];
    $vStatus = $data_order[0]['vStatus'];
    $fRefundAmount = $data_order[0]['fRefundAmount'];
    $fCancellationCharge = $data_order[0]['fCancellationCharge'];
    $fRestaurantPaidAmount = $data_order[0]['fRestaurantPaidAmount'];
    $eRestaurantPaymentStatus = $data_order[0]['eRestaurantPaymentStatus'];
    $fDriverPaidAmount = $data_order[0]['fDriverPaidAmount'];
    $iServiceId = $data_order[0]['iServiceId'];
    $vCancelReason = $data_order[0]['vCancelReason'];
    // $StatusDate = date('l, dS M Y',strtotime($dDate));
    $StatusDate = date('F d, Y h:iA', strtotime($dDate)); //h:iA
    if ($UserType == "Passenger") {
        $UserDetailsArr = getUserCurrencyLanguageDetails($iUserId, $iOrderId);
    } else if ($UserType == "Driver") {
        $UserDetailsArr = getDriverCurrencyLanguageDetails($iDriverId, $iOrderId);
    } else {
        $UserDetailsArr = getCompanyCurrencyLanguageDetails($iCompanyId, $iOrderId);
    }
    $Ratio = $UserDetailsArr['Ratio'];
    $currencycode = $UserDetailsArr['currencycode'];
    $currencySymbol = $UserDetailsArr['currencySymbol'];
    $vLang = $UserDetailsArr['vLang'];
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query Start
    if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId])) {
        $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId];
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
        $languageLabelDataArr['language_label_union_other_food_' . $vLang . "_" . $iServiceId] = $languageLabelsArr;
    }
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query End
    $Displaytext = $Displaytext1 = "";
    if ($UserType == "Passenger") {
        if ($iStatusCode == "8") {
            $fCancellationChargeNew = $fCancellationCharge * $Ratio;
            if ($data_order[0]['eBuyAnyService'] == "Yes" && $data_order[0]['fDeliveryChargeCancelled'] > 0) {
                $fCancellationChargeNew = $data_order[0]['fDeliveryChargeCancelled'] * $Ratio;
            }
            $fCancellationCharge = formatNum($fCancellationChargeNew);
            // $CancellationCharge = $currencySymbol . $fCancellationCharge;
            $CancellationCharge = formateNumAsPerCurrency($fCancellationCharge, $currencycode);
            $CancellationChargeTxt = $languageLabelsArr["LBL_CANCELLATION_CHARGE"] . ": " . $CancellationCharge;
            $Displaytext = $languageLabelsArr["LBL_ORDER_CANCEL_TEXT"];
            $Displaytext1 = $CancellationChargeTxt;
        }
        if ($iStatusCode == "7") {
            // $Displaytext = $languageLabelsArr["LBL_ORDER_REFUND_TEXT"];
            $fCancellationChargeNew = $fCancellationCharge * $Ratio;
            $fCancellationCharge = formatNum($fCancellationChargeNew);
            //$CancellationCharge = $currencySymbol . $fCancellationCharge;
            $CancellationCharge = formateNumAsPerCurrency($fCancellationCharge, $currencycode);
            $CancellationChargeTxt = $languageLabelsArr["LBL_CANCELLATION_CHARGE"] . ": " . $CancellationCharge;
            $fRefundAmountnew = $fRefundAmount * $Ratio;
            $fRefundAmount = formatNum($fRefundAmountnew);
            //$RefundAmount = $currencySymbol . $fRefundAmount;
            $RefundAmount = formateNumAsPerCurrency($fRefundAmount, $currencycode);
            $RefundAmountTxt = $languageLabelsArr["LBL_REFUND_APP_TXT"] . ": " . $RefundAmount;
            $Displaytext = $languageLabelsArr["LBL_ORDER_REFUND_TEXT_CUBEX"];
            $Displaytext1 = $CancellationChargeTxt . "\n" . $RefundAmountTxt;
        }
    } else if ($UserType == "Company") {
        if ($iStatusCode == "8" || $iStatusCode == "7") {
            $fRestaurantPaidAmountNew = $fRestaurantPaidAmount * $Ratio;
            $fRestaurantPaidAmount = formatNum($fRestaurantPaidAmountNew);
            // $fRestaurantPaidAmount = $currencySymbol . $fRestaurantPaidAmount;
            $fRestaurantPaidAmount = formateNumAsPerCurrency($fRestaurantPaidAmount, $currencycode);
            if ($data_order[0]['fRestaurantPaidAmount'] > 0 || $eRestaurantPaymentStatus == "Settled") {
                $fRestaurantPaidAmountTxt = $languageLabelsArr["LBL_ADJUSTMENT_AMOUNT_MESSAGE"] . ": " . $fRestaurantPaidAmount;
            } else {
                $fRestaurantPaidAmountTxt = $languageLabelsArr["LBL_AMT_GENERATE_PENDING"];
            }
            if ($iStatusCode == "8") {
                $Displaytext = $languageLabelsArr["LBL_ORDER_CANCEL_TEXT"];
                $Displaytext1 = $fRestaurantPaidAmountTxt;
            } else if ($iStatusCode == "7") {
                $Displaytext = $languageLabelsArr["LBL_ORDER_REFUND_TEXT_CUBEX"];
                $Displaytext1 = $fRestaurantPaidAmountTxt;
            }
        }
    } else {
        if ($iStatusCode == "8" || $iStatusCode == "7") {
            $fDriverPaidAmountNew = $fDriverPaidAmount * $Ratio;
            $fDriverPaidAmount = formatNum($fDriverPaidAmountNew);
            //$fDriverPaidAmount = $currencySymbol . $fDriverPaidAmount;
            $fDriverPaidAmount = formateNumAsPerCurrency($fDriverPaidAmount, $currencycode);
            $eDriverPaymentStatus = get_value('trips', 'eDriverPaymentStatus', 'iOrderId', $iOrderId, '', 'true');
            if ($data_order[0]['fDriverPaidAmount'] > 0 || $eDriverPaymentStatus == "Settled" || $eDriverPaymentStatus == "Settelled") {
                $fDriverPaidAmountTxt = $languageLabelsArr["LBL_ADJUSTMENT_AMOUNT_MESSAGE"] . ": " . $fDriverPaidAmount;
            } else {
                $fDriverPaidAmountTxt = $languageLabelsArr["LBL_AMT_GENERATE_PENDING"];
            }
            if ($iStatusCode == "8") {
                $Displaytext = $languageLabelsArr["LBL_ORDER_CANCEL_TEXT"];
                $Displaytext1 = $fDriverPaidAmountTxt;
            } else if ($iStatusCode == "7") {
                $Displaytext = $languageLabelsArr["LBL_ORDER_REFUND_TEXT_CUBEX"];
                $Displaytext1 = $fDriverPaidAmountTxt;
            }
        }
    }
    $returnArr['Displaytext'] = $Displaytext;
    $returnArr['Displaytext1'] = $Displaytext1;
    $returnArr['vCancelReason'] = $vCancelReason;
    return $returnArr;
}

function FetchStoreDriverOptions($vLang, $iServiceId)
{
    global $LANG_OBJ;
    $langage_lbl = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
    //echo "<pre>";print_r($langage_lbl);die;
    $optionArr = array();
    $optionArr[] = array("label" => "All", "value" => $langage_lbl['LBL_BOTH_DELIEVERY_DRIVERS']);
    $optionArr[] = array("label" => "Personal", "value" => $langage_lbl['LBL_PERSONAL_DELIVERY_DRIVER']);
    $optionArr[] = array("label" => "Site", "value" => $langage_lbl['LBL_SITE_DELIVERY_DRIVER']);
    //echo "<pre>";print_r($optionArr);die;
    return $optionArr;
}

// Added by HV on 12-06-2020 for Store KOT bill print
function getReceiptPdf($kotBillFormat, $html_content, $dir, $vLangCode, $iServiceId)
{
    global $tconfig, $languageLabelDataArr, $MODULES_OBJ, $LANG_OBJ;
    include_once($tconfig['tpanel_path'] . 'assets/libraries/dompdf/autoload.php');
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query Start
    if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLangCode . "_" . $iServiceId])) {
        $langage_lbl = $languageLabelDataArr['language_label_union_other_food_' . $vLangCode . "_" . $iServiceId];
    } else {
        $langage_lbl = $LANG_OBJ->FetchLanguageLabels($vLangCode, "1", $iServiceId);
        $languageLabelDataArr['language_label_union_other_food_' . $vLangCode . "_" . $iServiceId] = $langage_lbl;
    }
    //Added By HJ On 13-07-2020 For langauge labele and Other Union Table Query End
    $font_family_arr = array('HI' => "*{ font-family: notosans, DejaVu Sans, sans-serif; margin: 0; }", 'TH' => "*{ font-family: prompt, DejaVu Sans, sans-serif; margin: 0; }", 'KM' => "*{ font-family: khmer, DejaVu Sans, sans-serif; margin: 0; }", 'KO' => "*{ font-family: gothic, DejaVu Sans, sans-serif; margin: 0; }", 'ZH' => "*{ font-family: chinese, DejaVu Sans, sans-serif; margin: 0; }", 'MY' => "*{ font-family: myanmar, DejaVu Sans, sans-serif; margin: 0; }", 'BN' => "*{ font-family: bengali, DejaVu Sans, sans-serif; margin: 0; }", 'SI' => "*{ font-family: sinhala, DejaVu Sans, sans-serif; margin: 0; }", 'TA' => "*{ font-family: tamil, DejaVu Sans, sans-serif; margin: 0; }", 'JA' => "*{ font-family: japanese, DejaVu Sans, sans-serif; margin: 0; }",);
    $font_family_lang_codes = array_keys($font_family_arr);
    $font_family_css = "*{ font-family: DejaVu Sans, sans-serif; margin: 0; }";
    if (in_array($vLangCode, $font_family_lang_codes)) {
        $font_family_css = $font_family_arr[$vLangCode];
    }
    /* Parse data and generate HTML for Receipt */
    $html = '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><style type="text/css">

    ' . $font_family_css . '

    span { font-size: 15px;}

    body {width: 236px; max-width: 236px !important;}

    hr {border: none;border-top: 2px dashed #000000;}

    .text-center { text-align: center; }

    .text-left { text-align: left; }

    .text-right { text-align: right; }

    .item { display: table; width: 236px}

    .item span { display: table-cell; line-height: 12px}

    .item:first-child { margin-top: 15px; }

    .pt-5 { padding-top: 5px }

    .pt-10 { padding-top: 10px }

    .pb-5 { padding-bottom: 5px }

    .pb-10 { padding-bottom: 10px }

    .mb-5 { margin-bottom: 5px }

    .mb-10 { margin-bottom: 10px }

    .mt-5 { margin-top: 5px }

    .mt-10 { margin-top: 10px }

    .w-60mm {width: 236px; max-width: 236px !important;}

    .float-left { float: left;}

    .float-right { float: right;}

    .clearfix {clear:both}

    .w-60mm span:nth-child(even) { word-wrap:break-word; width: 120px; text-align: ' . (($dir == "ltr") ? "left" : "right") . '}

    ' . (($dir == "rtl") ? '.item span:nth-child(1) { width: 30px !important; } .item span:nth-child(2) { word-wrap: break-word; width: 170px !important; }' : '') . '

    </style></head><body>';

    $align_keywords = array("CENTER", "LEFT", "RIGHT");
    $align = "";
    $start_tag = "";
    $last_tag = "";
    $new_line = 0;
    foreach ($kotBillFormat as $key => $value) {
        $value = trim($value);
        if ($value != "NL") {
            if (in_array($value, $align_keywords)) {
                if ($align == "") {
                    $align = $value;
                    if ($align == "CENTER") {
                        $start_tag = '<div class="w-60mm text-center">';
                    } else {
                        $start_tag = '<div class="w-60mm">';
                    }
                } else {
                    if ($align != $value) {
                        $align = $value;
                    }
                    if ($new_line == 1) {
                        $start_tag .= '</div><div class="clearfix"></div>';
                        $html .= $start_tag;
                        if ($align == "CENTER") {
                            $start_tag = '<div class="w-60mm text-center">';
                        } else {
                            $start_tag = '<div class="w-60mm">';
                        }
                        $new_line = 0;
                    }
                }
            } else {
                if ($value == "BREAK_LINE") {
                    $html .= '<hr class="w-60mm" />';
                    $last_tag = $value;
                } else {
                    if ($value == "ITEM_NAME") {
                        if ($dir == "rtl") {
                            $align = ($align == "LEFT") ? "RIGHT" : "LEFT";
                        }
                        $align_opp = ($align == "LEFT") ? "RIGHT" : "LEFT";
                        $item_new_line = "";
                        $new_line_count = 1;
                        foreach ($html_content['ITEM_LIST'] as $sItem) {
                            $sItemExtra = "";
                            if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
                                if (!empty($sItem['SubTitle'])) {
                                    $sItemExtra .= str_replace(",", ", ", $sItem['SubTitle']);
                                }
                            } else {
                                if ($sItem['MenuItemToppings'] != "") {
                                    $sItemExtra .= str_replace(",", ", ", $sItem['MenuItemToppings']);
                                }
                                if ($sItem['MenuItemOptions'] != "") {
                                    $sItem['MenuItemOptions'] = str_replace(",", ", ", $sItem['MenuItemOptions']);
                                    $sItemExtra .= ($sItemExtra != "") ? ", " . $sItem['MenuItemOptions'] : $sItem['MenuItemOptions'];
                                }
                            }
                            $vSKU = "";
                            if ($MODULES_OBJ->isEnableRequireMenuItemSKU() && !empty($sItem['vSKU'])) {
                                $vSKU .= "<p>" . $langage_lbl['LBL_MENU_ITEM_SKU_CODE_TXT'] . ": " . $sItem['vSKU'] . "</p>";
                            }
                            $start_tag .= '<div class="item mb-10">';
                            if ($dir == "rtl") {
                                if ($sItemExtra != "") {
                                    $start_tag .= '<span class="text-' . strtolower($align_opp) . '" style="width: 50px !important">' . $sItem['iQty'] . ' X &nbsp;&nbsp;&nbsp;</span><span class="text-' . strtolower($align) . '" style="word-wrap: break-word;">' . $sItem['MenuItem'] . '<br><p>(' . $sItemExtra . ')</p>' . $vSKU . '</span>' . $item_new_line;
                                } else {
                                    $start_tag .= '<span class="text-' . strtolower($align_opp) . '" style="width: 50px !important">' . $sItem['iQty'] . ' X &nbsp;&nbsp;&nbsp;</span><span class="text-' . strtolower($align) . '">' . $sItem['MenuItem'] . $vSKU . '</span>' . $item_new_line;
                                }
                            } else {
                                if ($sItemExtra != "") {
                                    $start_tag .= '<span class="text-' . strtolower($align) . '" style="word-wrap: break-word;"><strong>' . $sItem['MenuItem'] . ' (X ' . $sItem['iQty'] . ')</strong><br><p>(' . $sItemExtra . ')</p>' . $vSKU . '</span><span class="text-' . strtolower($align_opp) . '" style="text-align: right; width: 70px !important">' . $sItem['fTotPrice'] . '</span>' . $item_new_line;
                                } else {
                                    $start_tag .= '<span class="text-' . strtolower($align) . '"><strong>' . $sItem['MenuItem'] . ' (X ' . $sItem['iQty'] . ')</strong>' . $vSKU . '</span><span class="text-' . strtolower($align_opp) . '" style="text-align: right; width: 70px !important">' . $sItem['fTotPrice'] . '</span>' . $item_new_line;
                                }
                            }
                            $start_tag .= '</div><div class="clearfix"></div>';
                            $new_line_count++;
                        }
                    } elseif ($value == "ITEM_QTY" || $value == "INSTRUCTIONS") {
                        // Ignored
                    } else {
                        if ($align == "CENTER") {
                            $td_text = isset($html_content[$value]) ? $html_content[$value] : $value;
                            if ($start_tag == "") {
                                $start_tag = '<div class="w-60mm text-center">';
                            }
                            $start_tag .= '<span>' . $td_text . '</span>';
                        } else {
                            $align = ($dir == "ltr") ? "LEFT" : "RIGHT";
                            $align_alt = ($align == "LEFT") ? "LEFT" : "RIGHT";
                            $align_opp_alt = ($align_alt == "RIGHT") ? "LEFT" : "RIGHT";
                            $td_text = isset($html_content[$value]) ? $html_content[$value] : $value;
                            if ($dir == "rtl") {
                                $td_text = (stripos($td_text, ' :') !== false) ? ": " . (str_replace(':', '', $td_text)) : $td_text;
                            }
                            if ($value == "PRICE_TITLE" || $value == "TOTAL_FARE") {
                                $td_text = $value == "PRICE_TITLE" ? $langage_lbl['LBL_GENIE_PRICE'] : $td_text;
                                if ($dir == "rtl") {
                                    $start_tag .= '<span class="float-' . strtolower($align_opp_alt) . '" style="text-align: left">' . $td_text . '&nbsp;</span>';
                                } else {
                                    $start_tag .= '<span class="float-' . strtolower($align_opp_alt) . '" style="text-align: right"><strong>' . $td_text . '</strong>&nbsp;</span>';
                                }
                            } elseif ($value == "ITEM_TITLE" || $value == "TOTAL_TITLE") {

                                $td_text = $value == "ITEM_TITLE" ? $langage_lbl['LBL_ITEM'] : $langage_lbl['LBL_TOTAL_TXT'];
                                if ($start_tag == "") {
                                    $start_tag = '<div class="w-60mm">';
                                }
                                $start_tag .= '<span class="float-' . strtolower($align_alt) . '"><strong>' . $td_text . '</strong>&nbsp;</span>';
                            } elseif ($value == "INSTRUCTIONS_TITLE") {
                                $td_text = '<strong>' . $langage_lbl['LBL_FOOD_INSTRUCTION_TXT'] . ': </strong>' . $html_content['INSTRUCTIONS'];
                                if ($start_tag == "") {
                                    $start_tag = '<div class="w-60mm">';
                                }
                                $start_tag .= '<span class="float-' . strtolower($align_alt) . '">' . $td_text . '&nbsp;</span>';
                            } else {
                                if ($start_tag == "") {
                                    $start_tag = '<div class="w-60mm">';
                                }
                                $start_tag .= '<span class="float-' . strtolower($align_alt) . '">' . $td_text . '&nbsp;</span>';
                            }
                        }
                    }
                }
            }
        } else {
            if ($last_tag != "BREAK_LINE") {
                $start_tag .= '</div><div class="clearfix"></div>';
                $html .= $start_tag;
                $start_tag = "";
            } else {
                $last_tag = "";
            }
            $new_line = 1;
            if ($kotBillFormat[$key - 1] == "NL") {
                $html .= "<br>";
            }
        }
    }
    $html .= $start_tag . '</div></body></html>';
    // Create PDF
    $dompdf = new \Dompdf\Dompdf();
    $dompdf->set_paper(array(0, 0, 180, 300));
    $GLOBALS['bodyHeight'] = 0;
    $dompdf->setCallbacks(array(
        'myCallbacks' => array(
            'event' => 'end_frame', 'f' => function ($infos) {
                $frame = $infos["frame"];
                if (strtolower($frame->get_node()->nodeName) === "body") {
                    $padding_box = $frame->get_content_box();
                    $GLOBALS['bodyHeight'] += $padding_box['h'];
                }
            }
        )
    ));
    $html = mb_convert_encoding($html, 'HTML-ENTITIES', 'UTF-8');
    $dompdf->loadHtml($html, 'UTF-8');
    $dompdf->render();
    unset($dompdf);
    $dompdf = new \Dompdf\Dompdf();
    $dompdf->set_paper(array(0, 0, 180, $GLOBALS['bodyHeight'] + 180));
    $dompdf->loadHtml($html, 'UTF-8');
    $dompdf->render();
    if (isset($_REQUEST['testhv']) && $_REQUEST['testhv']) {
        $output = $dompdf->stream("dompdf_out.pdf", array("Attachment" => false));
        exit;
    }
    $output = $dompdf->output();
    return base64_encode($output);
}

function getReceiptImage($pathToPdf, $order_invoice_name)
{
    global $tconfig;
    include_once($tconfig['tpanel_path'] . 'assets/libraries/PdfToImage/vendor/autoload.php');
    $pdf = new Spatie\PdfToImage\Pdf($pathToPdf);
    $img = $pdf->getImageData($order_invoice_name);
    return base64_encode($img);
}

function OrderDeliveryTipPayment($iMemberId, $iOrderId, $fAmount)
{
    global $WALLET_OBJ, $obj, $APP_PAYMENT_METHOD, $tconfig, $SYSTEM_PAYMENT_FLOW, $LANG_OBJ;
    $langage_lbl = $LANG_OBJ->FetchLanguageLabels($vLang, "1", 1);
    $tbl_name = "register_user";
    $currencycode = "vCurrencyPassenger";
    $iUserId = "iUserId";
    $eUserType = "Rider";
    if ($iMemberId == "") {
        $iMemberId = get_value('orders', 'iUserId', 'iOrderId', $iOrderId, '', 'true');
    }
    $tripsData = $obj->MySQLSelect("SELECT iTripId,iDriverId,fTipPrice FROM trips WHERE iOrderId = $iOrderId");
    $iTripId = $iDriverId = 0;
    if (count($tripsData) > 0) {
        $iTripId = $tripsData[0]['iTripId'];
        $iDriverId = $tripsData[0]['iDriverId'];
    }
    $getUserData = $obj->MySQLSelect("SELECT tSessionId FROM " . $tbl_name . " WHERE $iUserId='" . $iMemberId . "'");
    $userAvailableBalance = $WALLET_OBJ->FetchMemberWalletBalance($iMemberId, $eUserType);
    $orderData = get_value('orders', 'vOrderNo,eCheckUserWallet', 'iOrderId', $iOrderId);
    // echo "<pre>"; print_r($orderData); exit;
    $description = "Amount charge for Delivery Tip for order no: " . $orderData[0]['vOrderNo'];
    $SYSTEM_TYPE = isset($_REQUEST["SYSTEM_TYPE"]) ? $_REQUEST["SYSTEM_TYPE"] : 'APP';
    $cancelUrl = isset($_REQUEST["cancelUrl"]) ? $_REQUEST["cancelUrl"] : '';
    $CheckUserWallet = (isset($orderData[0]['eCheckUserWallet'])) ? $orderData[0]['eCheckUserWallet'] : "No";
    $extraParams = "iOrderId=" . $iOrderId . "&GeneralMemberId=" . $iMemberId . "&GeneralUserType=Passenger&iUserId=" . $iMemberId . "&UserType=Passenger&tSessionId=" . $getUserData[0]['tSessionId'] . "&PAGE_TYPE=ORDER_TIP_COLLECT&SYSTEM_TYPE=" . $SYSTEM_TYPE . "&IS_RETURN_RESULT=Yes&CheckUserWallet=" . $CheckUserWallet . "&eForTip=Yes&description=" . urlencode($description) . "&AMOUNT=" . $fAmount . "&cancelUrl=" . $cancelUrl;
    $returnArr['paymentUrl'] = $tconfig['tsite_url'] . 'assets/libraries/webview/system_payment.php?' . $extraParams;
    $returnArr['TIP_PAYMENT_URL'] = $tconfig['tsite_url'] . 'assets/libraries/webview/system_payment.php?' . $extraParams;
    $returnArr['Action'] = "1";
    // $returnArr['message'] = $data;
    setDataResponse($returnArr);
}

//Added By HJ On 13-10-2020 For Get Item List For Item wise Search Functionality Start
function getStoreItemData($iCompanyId, $vLanguage = "EN", $searchWord = "", $iUserId, $serviceId)
{
    global $obj, $orderDetailsArr, $serviceCatDataArr, $Data_ALL_currency_Arr, $userDetailsArr, $currencyAssociateArr, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $languageLabelDataArr, $tconfig, $LANG_OBJ, $MODULES_OBJ, $MENU_ITEM_MEDIA_OBJ;
    $foodMenuIdArr = $itemDataArr = $catCompanyIdArr = $companyDataArr = array();
    $itemimimgUrl = $tconfig["tsite_upload_images_menu_item"];
    if (is_array($iCompanyId)) {
        $iCompanyId = implode(",", $iCompanyId);
        $getFoodMenuData = $obj->MySQLSelect("SELECT iFoodMenuId,iCompanyId FROM food_menu WHERE iCompanyId IN ($iCompanyId) AND eStatus='Active' ORDER BY iDisplayOrder ASC");
    } else {
        if (isset($orderDetailsArr['food_menu_' . $iCompanyId])) {
            $getFoodMenuData = $orderDetailsArr['food_menu_' . $iCompanyId];
        } else {
            $getFoodMenuData = $obj->MySQLSelect("SELECT * FROM food_menu WHERE iCompanyId='" . $iCompanyId . "' AND eStatus='Active' ORDER BY iDisplayOrder ASC");
            $orderDetailsArr['food_menu_' . $iCompanyId] = $getFoodMenuData;
        }
    }
    $getCompanyData = $obj->MySQLSelect("SELECT eAvailable,vAvgRating,vCurrencyCompany,iServiceId,vCompany,iCompanyId,fMinOrderValue,iMaxItemQty FROM company WHERE iCompanyId IN ($iCompanyId)");
    $serviceCatArr = $ServiceCategoryData = $menuItemArr = $topingArr = $customerTopingArr = array();
    if (count($serviceCatDataArr) > 0) {
        $ServiceCategoryData = $serviceCatDataArr;
    } else {
        $ServiceCategoryData = $serviceCatDataArr = $obj->MySQLSelect("SELECT * FROM service_categories");
    }
    for ($h = 0; $h < count($ServiceCategoryData); $h++) {
        $serviceCatArr[$ServiceCategoryData[$h]['iServiceId']] = $ServiceCategoryData[$h];
    }

    for ($g = 0; $g < count($getCompanyData); $g++) {
        $restaurant_status_arr = GetStoreWorkingHoursDetails($getCompanyData[$g]['iCompanyId'], $iUserId);
        $getCompanyData[$g]['Restaurant_Status'] = $restaurant_status_arr['status'];
        $getCompanyData[$g]['restaurantstatus'] = $restaurant_status_arr['status'];
        /*--------------------- for the store timeslotavailable --------------------*/
        $getCompanyData[$g]['timeslotavailable'] = "No";
        if (isset($restaurant_status_arr['timeslotavailable'])) {
            $getCompanyData[$g]['timeslotavailable'] = $restaurant_status_arr['timeslotavailable'];
        }
        /*--------------------- for the store timeslotavailable --------------------*/
        $ispriceshow = '';
        if (isset($serviceCatArr[$getCompanyData[$g]['iServiceId']])) {
            $ispriceshow = $serviceCatArr[$getCompanyData[$g]['iServiceId']]['eType'];
        }
        $getCompanyData[$g]['ispriceshow'] = $ispriceshow;
        if ($getCompanyData[$g]['vAvgRating'] == "") {
            $getCompanyData[$g]['vAvgRating'] = number_format(0, 1);
        }
        $getCompanyData[$g]['vAvgRating'] = number_format($getCompanyData[$g]['vAvgRating'], 1);
        $companyDataArr[$getCompanyData[$g]['iCompanyId']] = $getCompanyData[$g];
    }

    for ($f = 0; $f < count($getFoodMenuData); $f++) {
        $foodMenuIdArr[] = $getFoodMenuData[$f]['iFoodMenuId'];
        $catCompanyIdArr[$getFoodMenuData[$f]['iFoodMenuId']] = $getFoodMenuData[$f]['iCompanyId'];
    }
    $ssql = "";
    if ($searchWord != "") {
        $ssql .= " AND (vItemType_$vLanguage like '%$searchWord%')";
    }
    $Ratio = $vSystemDefaultCurrencyRatio;
    $currencySymbol = $vSystemDefaultCurrencySymbol; // Added By HJ On 23-01-2020 When User Not Logged In Get Currency Code
    if ($iUserId != "" && $iUserId > 0) {
        if (isset($userDetailsArr['register_user_' . $iUserId])) {
            $passengerData = $userDetailsArr['register_user_' . $iUserId];
        } else {
            $passengerData = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM register_user WHERE iUserId='" . $iUserId . "'");
            $userDetailsArr['register_user_' . $iUserId] = $passengerData;
        }
        //echo "<pre>";print_r($passengerData);die;
        $vCurrencyPassenger = $passengerData[0]['vCurrencyPassenger'];
        if (isset($currencyAssociateArr[trim($vCurrencyPassenger)])) {
            $userCurrencyData = $currencyAssociateArr[trim($vCurrencyPassenger)];
            $passengerData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $passengerData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        }
        $currencycode = $passengerData[0]['vCurrencyPassenger'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $Ratio = $passengerData[0]['Ratio'];
    }
    //Added By HJ On 15-07-2020 For langauge labele and Other Union Table Query Start
    if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $serviceId])) {
        $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $serviceId];
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $serviceId);
        $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $serviceId] = $languageLabelsArr;
    }
    //Added By HJ On 15-07-2020 For langauge labele and Other Union Table Query End
    //echo $currencycode."===".$currencySymbol."===".$Ratio;die;
    if (count($foodMenuIdArr) > 0) {
        $foodMenuIds = implode(",", $foodMenuIdArr);
        $itemDataArr = $obj->MySQLSelect("SELECT iMenuItemId,iFoodMenuId,vItemType_$vLanguage AS vItemType,vItemDesc_$vLanguage AS vItemDesc,fPrice,eFoodType,fOfferAmt,vImage,iDisplayOrder,eStatus,eAvailable,eBestSeller,eRecommended,vHighlightName,prescription_required,eImgDownload,eBuyAnyService,vItemTypeBuyAnyService FROM menu_items WHERE iFoodMenuId IN ($foodMenuIds) AND eStatus='Active' AND eAvailable = 'Yes' $ssql");
        for ($b = 0; $b < count($itemDataArr); $b++) {
            $menuItemArr[] = $itemDataArr[$b]['iMenuItemId'];
        }
        if (count($menuItemArr) > 0) {
            $itemIds = implode(",", $menuItemArr);
            $topingArr = GetMenuItemOptionsTopping($itemIds, $currencySymbol, $Ratio, $vLanguage, $serviceId, $iCompanyId, $currencycode);
            $customerTopingArr = getMenuCustomeAllToppings($itemIds, $currencySymbol, $Ratio, $vLanguage, 0, $currencycode);
            //echo "<pre>";print_r($topingArr);die;
        }
        foreach ($itemDataArr as $k => $v) {
            $itemDataArr[$k]['iCompanyId'] = $iCompanyId = $catCompanyIdArr[$v['iFoodMenuId']];
            if (isset($companyDataArr[$iCompanyId])) {
                //$itemDataArr[$k] = array_mergre($itemDataArr[$k],$companyDataArr[$iCompanyId]);
                foreach ($companyDataArr[$iCompanyId] as $key => $val) {
                    $itemDataArr[$k][$key] = $val;
                }
                //echo "<pre>";print_r($itemDataArr);die;
            }
            $iMenuItemId = $itemDataArr[$k]['iMenuItemId'];
            $iCompanyId = $itemDataArr[$k]['iCompanyId'];
            $iServiceId = $itemDataArr[$k]['iServiceId'];
            if ($iUserId == "" || $iUserId <= 0) {
                $store_currency = $itemDataArr[$k]['vCurrencyCompany'];
                $currencyArr = $currencySymbolArr = array();
                if (count($Data_ALL_currency_Arr) > 0) {
                    $getCurrencyRation = $Data_ALL_currency_Arr;
                } else {
                    $getCurrencyRation = $obj->MySQLSelect("SELECT * FROM currency WHERE eStatus='Active'");
                }
                for ($c = 0; $c < count($getCurrencyRation); $c++) {
                    if (strtoupper($getCurrencyRation[$c]['Ratio']) == "ACTIVE") {
                        $currencyArr[$getCurrencyRation[$c]['iCurrencyId']] = $getCurrencyRation[$c]['Ratio'];
                        $currencySymbolArr[$getCurrencyRation[$c]['iCurrencyId']] = $getCurrencyRation[$c]['vSymbol'];
                    }
                }
                if (isset($currencyArr[$store_currency])) {
                    $Ratio = $currencyArr[$store_currency];
                    $currencySymbol = $currencySymbolArr[$store_currency];
                }
            }
            $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, 1, $iUserId, "Display", "", "", $iServiceId);
            //echo "<pre>";print_r($MenuItemPriceArr);die;
            $fPrice = setTwoDecimalPoint($MenuItemPriceArr['fPrice'] * $Ratio);
            $fOfferAmt = setTwoDecimalPoint($MenuItemPriceArr['fOfferAmt']);
            $itemDataArr[$k]['fOfferAmt'] = $fOfferAmt;
            //echo $Ratio."-----";die;
            $itemDataArr[$k]['fPrice'] = setTwoDecimalPoint($itemDataArr[$k]['fPrice'] * $Ratio);
            if ($fOfferAmt > 0) {
                $fDiscountPrice = setTwoDecimalPoint($MenuItemPriceArr['fPrice'] * $Ratio);
                $StrikeoutPrice = setTwoDecimalPoint($MenuItemPriceArr['fOriginalPrice'] * $Ratio);
                $itemDataArr[$k]['StrikeoutPrice'] = formateNumAsPerCurrency($StrikeoutPrice, $currencycode);
                $itemDataArr[$k]['fDiscountPrice'] = $fDiscountPrice;
                $itemDataArr[$k]['fDiscountPricewithsymbol'] = formateNumAsPerCurrency($fDiscountPrice, $currencycode);
                $itemDataArr[$k]['currencySymbol'] = $currencySymbol;
            } else {
                $itemDataArr[$k]['StrikeoutPrice'] = formateNumAsPerCurrency($fPrice, $currencycode);
                $itemDataArr[$k]['fDiscountPrice'] = $fPrice;
                $itemDataArr[$k]['fDiscountPricewithsymbol'] = formateNumAsPerCurrency($fPrice, $currencycode);
                $itemDataArr[$k]['currencySymbol'] = $currencySymbol;
            }
            $vHighlightNameLBL = $itemDataArr[$k]['vHighlightName'];
            if (isset($languageLabelsArr[$vHighlightNameLBL]) && $vHighlightNameLBL != "" && $vHighlightNameLBL != null) {
                $vHighlightNameLBL = $languageLabelsArr[$vHighlightNameLBL];
            }
            $itemDataArr[$k]['vHighlightNameLBL'] = $itemDataArr[$k]['vHighlightName'];
            $itemDataArr[$k]['vHighlightName'] = $vHighlightNameLBL;
            $itemimgpth = $tconfig["tsite_upload_images_menu_item_path"] . '/' . $itemDataArr[$k]['vImage'];
            if ($itemDataArr[$k]['vImage'] != "" && file_exists($itemimgpth)) {
                $itemDataArr[$k]['vImageName'] = $itemDataArr[$k]['vImage'];
                $itemDataArr[$k]['vImage'] = $itemimimgUrl . '/' . $itemDataArr[$k]['vImage'];
            } else {
                $itemDataArr[$k]['vImageName'] = '';
                $itemDataArr[$k]['vImage'] = $itemimimgUrl . '/sample_image.png';
            }
            if ($MODULES_OBJ->isEnableItemMultipleImageVideoUpload()) {
                $ItemMedia = $MENU_ITEM_MEDIA_OBJ->getItemMedia($iMenuItemId);
                $MenuItemMediaArr = $ItemMedia['MenuItemMedia'];
                $itemDataArr[$k]['vImage'] = '';
                if ($MenuItemMediaArr[0]['eFileType'] == 'Video') {
                    $itemDataArr[$k]['vImage'] = $MenuItemMediaArr[0]['ThumbImage'];
                } else {
                    $itemDataArr[$k]['vImage'] = $MenuItemMediaArr[0]['vImage'];
                }
            }
            $MenuItemOptionToppingArr = $customeToppings = array();
            if (isset($topingArr[$iMenuItemId])) {
                $MenuItemOptionToppingArr = $topingArr[$iMenuItemId];
            }
            $itemDataArr[$k]['MenuItemOptionToppingArr'] = $MenuItemOptionToppingArr;
            if (isset($customerTopingArr[$iMenuItemId])) {
                $customeToppings = $customerTopingArr[$iMenuItemId];
            }
            $itemDataArr[$k]['MenuItemOptionToppingArr']['customItemArray'] = $customeToppings;
        }
    }
    //echo "<pre>";print_r($itemDataArr);die;
    return $itemDataArr;
}

//Added By HJ On 13-10-2020 For Get Item List For Item wise Search Functionality End
function callCaptureCardPaymentOrder($data)
{
    global $tconfig;
    $params = http_build_query($data);
    $webservice_url = $tconfig['tsite_url'] . WEBSERVICE_API_FILE_NAME . '?' . $params;
    // $response = @file_get_contents($webservice_url);
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $webservice_url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $response = curl_exec($ch);
    curl_close($ch);
    if (!empty($response) && isJsonTextGT($response)) {
        $returnArr = json_decode($response, true);
        $returnArr['WebviewPayment'] = "Yes";    
        if(isset($returnArr['full_wallet_adjustment']) && $returnArr['full_wallet_adjustment'] == "Yes") {
            $returnArr['WebviewPayment'] = "No";    
        }
        $returnArr['iOrderId'] = $data['iOrderId'];
    } else {
        $returnArr['Action'] = "0";
    }
    setDataResponse($returnArr);
}

function getcuisinelist($CompanyId, $iUserId, $languageLabelsArr = array(), $serviceId = 0)
{
    global $obj, $MODULES_OBJ, $tconfig, $vTimeZone, $iServiceId, $currencyAssociateArr, $userDetailsArr, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $languageLabelDataArr, $LANG_OBJ;
    if (!empty($_COOKIE['vUserDeviceTimeZone'])) {
        $vTimeZone = $_COOKIE['vUserDeviceTimeZone'];
    }
    date_default_timezone_set($vTimeZone);
    $vCurrentTime = @date("Y-m-d H:i:s");
    $day = date('l', strtotime($vCurrentTime));
    $timingArray = array('vMonFromSlot', 'vMonToSlot', 'vTueFromSlot', 'vTueToSlot', 'vWedFromSlot', 'vWedToSlot', 'vThuFromSlot', 'vThuToSlot', 'vFriFromSlot', 'vFriToSlot', 'vSatFromSlot', 'vSatToSlot', 'vSunFromSlot', 'vSunToSlot');
    $orgtimingArray = array('vMonFromSlot1', 'vMonToSlot1', 'vTueFromSlot1', 'vTueToSlot1', 'vWedFromSlot1', 'vWedToSlot1', 'vThuFromSlot1', 'vThuToSlot1', 'vFriFromSlot1', 'vFriToSlot1', 'vSatFromSlot1', 'vSatToSlot1', 'vSunFromSlot1', 'vSunToSlot1', 'vMonFromSlot2', 'vMonToSlot2', 'vTueFromSlot2', 'vTueToSlot2', 'vWedFromSlot2', 'vWedToSlot2', 'vThuFromSlot2', 'vThuToSlot2', 'vFriFromSlot2', 'vFriToSlot2', 'vSatFromSlot2', 'vSatToSlot2', 'vSunFromSlot2', 'vSunToSlot2');
    $sltAry = array(1, 2);
    $returnArr = array();
    //added by SP on 14-10-2020 for timeslot changes
    $ENABLE_TIMESLOT_ADDON = !empty($MODULES_OBJ->isEnableTimeslotFeature()) ? "Yes" : "No";
    if (strtoupper($ENABLE_TIMESLOT_ADDON) == "YES") {
        switch ($day) {
            case $day == "Monday":
                $vFromTimeSlot1 = "vMonFromSlot1";
                $vToTimeSlot1 = "vMonToSlot1";
                $vFromTimeSlot2 = "vMonFromSlot2";
                $vToTimeSlot2 = "vMonToSlot2";
                break;
            case $day == "Tuesday":
                $vFromTimeSlot1 = "vTueFromSlot1";
                $vToTimeSlot1 = "vTueToSlot1";
                $vFromTimeSlot2 = "vTueFromSlot2";
                $vToTimeSlot2 = "vTueToSlot2";
                break;
            case $day == "Wednesday":
                $vFromTimeSlot1 = "vWedFromSlot1";
                $vToTimeSlot1 = "vWedToSlot1";
                $vFromTimeSlot2 = "vWedFromSlot2";
                $vToTimeSlot2 = "vWedToSlot2";
                break;
            case $day == "Thursday":
                $vFromTimeSlot1 = "vThuFromSlot1";
                $vToTimeSlot1 = "vThuToSlot1";
                $vFromTimeSlot2 = "vThuFromSlot2";
                $vToTimeSlot2 = "vThuToSlot2";
                break;
            case $day == "Friday":
                $vFromTimeSlot1 = "vFriFromSlot1";
                $vToTimeSlot1 = "vFriToSlot1";
                $vFromTimeSlot2 = "vFriFromSlot2";
                $vToTimeSlot2 = "vFriToSlot2";
                break;
            case $day == "Saturday":
                $vFromTimeSlot1 = "vSatFromSlot1";
                $vToTimeSlot1 = "vSatToSlot1";
                $vFromTimeSlot2 = "vSatFromSlot2";
                $vToTimeSlot2 = "vSatToSlot2";
                break;
            case $day == "Sunday":
                $vFromTimeSlot1 = "vSunFromSlot1";
                $vToTimeSlot1 = "vSunToSlot1";
                $vFromTimeSlot2 = "vSunFromSlot2";
                $vToTimeSlot2 = "vSunToSlot2";
                break;
            default:
                echo "break in generalFunction() @ 54XX";
                exit;
                break;
        }
    } else {
        if ($day == "Sunday" || $day == "Saturday") {
            $vFromTimeSlot1 = "vFromSatSunTimeSlot1";
            $vFromTimeSlot2 = "vFromSatSunTimeSlot2";
            $vToTimeSlot1 = "vToSatSunTimeSlot1";
            $vToTimeSlot2 = "vToSatSunTimeSlot2";
        } else {
            $vFromTimeSlot1 = "vFromMonFriTimeSlot1";
            $vFromTimeSlot2 = "vFromMonFriTimeSlot2";
            $vToTimeSlot1 = "vToMonFriTimeSlot1";
            $vToTimeSlot2 = "vToMonFriTimeSlot2";
        }
    }
    $userCurrencyRatio = 1;
    $vLanguage = "EN";
    $currencySymbol = "";
    $passengerData = array();
    if ($iUserId > 0) {
        //Added By HJ On 14-07-2020 For Optimization register_user Table Query Start
        $tblName = "register_user";
        if (isset($userDetailsArr[$tblName . "_" . $iUserId]) && count($userDetailsArr[$tblName . "_" . $iUserId]) > 0) {
            $passengerData = $userDetailsArr[$tblName . "_" . $iUserId];
        } else {
            $passengerData = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM " . $tblName . " WHERE iUserId='" . $iUserId . "'");
            $userDetailsArr[$tblName . "_" . $iUserId] = $passengerData;
        }
        //Added By HJ On 14-07-2020 For Optimization register_user Table Query End
        //Added By HJ On 14-07-2020 For Optimize currency Table Query Start
        $vCurrencyPassenger = $passengerData[0]['vCurrencyPassenger'];
        if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
            $userCurrencyData = $currencyAssociateArr[$vCurrencyPassenger];
            $passengerData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $passengerData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        }
        //echo "<pre>";print_r($passengerData);die;
        //Added By HJ On 14-07-2020 For Optimize currency Table Query End
        //$sqlp = "SELECT ru.vCurrencyPassenger,ru.vLang,cu.vSymbol,cu.Ratio FROM register_user as ru LEFT JOIN currency as cu ON ru.vCurrencyPassenger = cu.vName WHERE iUserId = '" . $iUserId . "'";
        //$passengerData = $obj->MySQLSelect($sqlp);
    }
    //echo "<pre>";print_r($passengerData);die;
    if (count($passengerData) > 0) {
        $vLanguage = $passengerData[0]['vLang'];
        $userCurrencyRatio = $passengerData[0]['Ratio'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $currencycode = $passengerData[0]['vCurrencyPassenger'];
    } else {
        //Added By HJ On 23-01-2020 For Get Currency Data Start
        $currencycode = isset($_REQUEST["vGeneralCurrency"]) ? $_REQUEST["vGeneralCurrency"] : ''; // Added By HJ On 23-01-2020 When User Not Logged In Get Curren cy Code
        $vLanguage = isset($_REQUEST["vGeneralLang"]) ? $_REQUEST["vGeneralLang"] : ''; // Added By HJ On 23-01-2020 When User Not Logged In Get Language Code

        //Added By HJ On 14-07-2020 For Optimize currency Table Query Start
        if (($currencySymbol == "" || $currencySymbol == NULL) && $currencycode != "") {
            if (isset($currencyAssociateArr[$currencycode])) {
                $currencyData = array();
                $currencyData[] = $currencyAssociateArr[$currencycode];
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE vName = '" . $currencycode . "'");
            }
        } else {
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencyData = array();
                $currencyData[0]['vName'] = $vSystemDefaultCurrencyName;
                $currencyData[0]['vSymbol'] = $vSystemDefaultCurrencySymbol;
                $currencyData[0]['Ratio'] = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            }
        }
         
        //Added By HJ On 14-07-2020 For Optimize currency Table Query End
        if (count($currencyData) > 0) {
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $userCurrencyRatio = $currencyData[0]['Ratio'];
        } else {
            $currencycode = "USD";
            $currencySymbol = "$";
            $userCurrencyRatio = 1.0000;
        }
        //Added By HJ On 23-01-2020 For Get Currency Data End
    }
    //print_r($passengerData);die;
    if ($vLanguage == "") {
        //Added By HJ On 14-07-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 14-07-2020 For Optimize language_master Table Query End
    }
    if (isset($_SESSION['sess_lang']) && $_SESSION['sess_lang'] != "" && stripos($_SERVER['REQUEST_URI'], WEBSERVICE_API_FILE_NAME) === false) {
        $vLanguage = $_SESSION['sess_lang'];
    }
    if (count($languageLabelsArr) == 0) {
        //Added By HJ On 14-07-2020 For langauge labele and Other Union Table Query Start
        if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLanguage])) {
            $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLanguage];
        } else {
            $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $iServiceId);
            $languageLabelDataArr['language_label_union_other_food_' . $vLanguage] = $languageLabelsArr;
        }
        //Added By HJ On 14-07-2020 For langauge labele and Other Union Table Query End
    }
    $cuisine_all = $companyCuisineArr = $companyLatLangArr = $offerMsgArr = $restaurantStatusArr = $companyCuisineIdArr = $pricePerPersonArr = $storeMinOrdValueArr = $storePrepareTimeArr = $storeDemoImageArr = $cuisineArr = array();
    $db_cuisine_str = "";
    //if ($iUserId != "" && count($CompanyId) > 0) { // Commented By HJ On 13-08-2019 As Per Discuss DT
    if (count($CompanyId) > 0) {
        $storeIds = implode(",", $CompanyId);
        $whereServiceId = "";
        if ($serviceId > 0) {
            $whereServiceId = " AND cu.iServiceId='" . $serviceId . "'";
        }
        $sql = "SELECT cu.cuisineName_" . $vLanguage . " as cuisineName,cu.cuisineId,cmp.vRestuarantLocationLat as restaurantlat,cmp.vRestuarantLocationLong as restaurantlong,cmp.* FROM cuisine as cu INNER JOIN company_cuisine as ccu ON ccu.cuisineId=cu.cuisineId INNER JOIN company cmp ON ccu.iCompanyId=cmp.iCompanyId WHERE ccu.iCompanyId IN ($storeIds) $whereServiceId AND cu.eStatus = 'Active'";
        $db_cuisine = $obj->MySQLSelect($sql);
        $getStoreLantLangData = $obj->MySQLSelect("SELECT iCompanyId,vRestuarantLocationLat as restaurantlat,vRestuarantLocationLong as restaurantlong,fPricePerPerson,fMinOrderValue,fPrepareTime FROM company WHERE iCompanyId IN($storeIds)");
        $LBL_MINS_SMALL = $languageLabelsArr['LBL_MINS_SMALL'];
        for ($re = 0; $re < count($getStoreLantLangData); $re++) {
            $companyLatLangArr[$getStoreLantLangData[$re]['iCompanyId']]['restaurantlat'] = $getStoreLantLangData[$re]['restaurantlat'];
            $companyLatLangArr[$getStoreLantLangData[$re]['iCompanyId']]['restaurantlong'] = $getStoreLantLangData[$re]['restaurantlong'];
            $pricePerPersonArr[$getStoreLantLangData[$re]['iCompanyId']] = setTwoDecimalPoint($getStoreLantLangData[$re]['fPricePerPerson'] * $userCurrencyRatio);
            $storeMinOrdValueArr[$getStoreLantLangData[$re]['iCompanyId']] = setTwoDecimalPoint($getStoreLantLangData[$re]['fMinOrderValue'] * $userCurrencyRatio);
            $storePrepareTimeArr[$getStoreLantLangData[$re]['iCompanyId']] = $getStoreLantLangData[$re]['fPrepareTime'];
            $iCompanyId = $getStoreLantLangData[$re]['iCompanyId'];
            if (count($db_cuisine) > 0) {
                for ($i = 0; $i < count($db_cuisine); $i++) {
                    $db_cuisine_str = $db_cuisine[$i]['cuisineName'];
                    if (!in_array($db_cuisine[$i]['cuisineId'], $companyCuisineIdArr[$db_cuisine[$i]['iCompanyId']]) || !isset($companyCuisineIdArr[$db_cuisine[$i]['iCompanyId']])) {
                        $companyCuisineArr[$db_cuisine[$i]['iCompanyId']][] = $db_cuisine[$i]['cuisineName'];
                        $companyCuisineIdArr[$db_cuisine[$i]['iCompanyId']][] = $db_cuisine[$i]['cuisineId'];
                    }
                    array_push($cuisine_all, $db_cuisine_str);
                    //Added By HJ On 26-07-2019 Start
                    $companyLatLangArr[$iCompanyId]['restaurantlat'] = $db_cuisine[$i]['restaurantlat'];
                    $companyLatLangArr[$iCompanyId]['restaurantlong'] = $db_cuisine[$i]['restaurantlong'];
                    //$pricePerPersonArr[$iCompanyId] = setTwoDecimalPoint($db_cuisine[$i]['fPricePerPerson'] * $userCurrencyRatio);
                    //$storeMinOrdValueArr[$iCompanyId] = setTwoDecimalPoint($db_cuisine[$i]['fMinOrderValue'] * $userCurrencyRatio);
                    //$storeDemoImageArr[$iCompanyId] = $db_cuisine[$i]['vDemoStoreImage'];
                    $pricePerPersonArr[$db_cuisine[$i]['iCompanyId']] = setTwoDecimalPoint($db_cuisine[$i]['fPricePerPerson'] * $userCurrencyRatio);
                    $storeMinOrdValueArr[$db_cuisine[$i]['iCompanyId']] = setTwoDecimalPoint($db_cuisine[$i]['fMinOrderValue'] * $userCurrencyRatio);
                    $storeDemoImageArr[$db_cuisine[$i]['iCompanyId']] = $db_cuisine[$i]['vDemoStoreImage'];
                    $fDeliverytime = $storePrepareTimeArr[$iCompanyId];//$db_cuisine[$i]['fPrepareTime'];
                    $returnArr[$iCompanyId]['Restaurant_OrderPrepareTime'] = $fDeliverytime . " " . $LBL_MINS_SMALL;
                    $returnArr[$iCompanyId]['Restaurant_OrderPrepareTimeValue'] = $fDeliverytime;
                    $returnArr[$iCompanyId]['Restaurant_OrderPrepareTimePostfix'] = $LBL_MINS_SMALL;
                    //Added By HJ On 26-07-2019 End
                    //START CODE FOR GET STORE OFFER MESSAGE BY HJ ON 01-04-2019
                    $fOfferType = $db_cuisine[$i]['fOfferType'];
                    $fOfferAppyType = $db_cuisine[$i]['fOfferAppyType'];
                    $fOfferAmt = setTwoDecimalPoint($db_cuisine[$i]['fOfferAmt']);
                    $fTargetAmt = setTwoDecimalPoint($db_cuisine[$i]['fTargetAmt']);
                    $fTargetAmt = setTwoDecimalPoint($fTargetAmt * $userCurrencyRatio);
                    $fMaxOfferAmt = setTwoDecimalPoint($db_cuisine[$i]['fMaxOfferAmt']);
                    $fMaxOfferAmt = setTwoDecimalPoint($fMaxOfferAmt * $userCurrencyRatio);
                    $MaxDiscountAmount = $ALL_ORDER_TXT = $offermsg = $offermsg_short = "";
                    if ($fMaxOfferAmt > 0) {
                        //$MaxDiscountAmount = " ( " . $languageLabelsArr['LBL_MAX_DISCOUNT_TXT'] . " " . $currencySymbol . "" . $fMaxOfferAmt . " )";
                        $MaxDiscountAmount = " ( " . $languageLabelsArr['LBL_MAX_DISCOUNT_TXT'] . " " . formateNumAsPerCurrency($fMaxOfferAmt, $currencycode) . " )";
                    }
                    if ($fTargetAmt > 0) {
                        $TargerAmountTXT = $languageLabelsArr['LBL_OFF_TXT'] . " " . $languageLabelsArr['LBL_ORDERS_ABOVE_TXT'] . " " . formateNumAsPerCurrency($fTargetAmt, $currencycode) . " ";
                    } else {
                        $TargerAmountTXT = $languageLabelsArr['LBL_OFF_TXT'];
                        $ALL_ORDER_TXT = $languageLabelsArr['LBL_ALL_ORDER_TXT'];
                    }
                    if ($fOfferType == "Percentage") {
                        if ($fOfferAppyType == "First") {
                            $offermsg = $languageLabelsArr['LBL_GET_TXT'] . " " . $fOfferAmt . "% " . $TargerAmountTXT . " " . $languageLabelsArr['LBL_FIRST_ORDER_TXT'] . "" . $MaxDiscountAmount;
                            $offermsg_short = $languageLabelsArr['LBL_GET_TXT'] . " " . $fOfferAmt . "% " . $TargerAmountTXT . " " . $languageLabelsArr['LBL_FIRST_ORDER_TXT'];
                        } elseif ($fOfferAppyType == "All") {
                            $offermsg = $languageLabelsArr['LBL_GET_TXT'] . " " . $fOfferAmt . "% " . $TargerAmountTXT . " " . $ALL_ORDER_TXT . " " . $MaxDiscountAmount;
                            // $offermsg =  $languageLabelsArr['LBL_GET_TXT']." ".$fOfferAmt."% ".$TargerAmountTXT." ".$MaxDiscountAmount;
                            $offermsg_short = $languageLabelsArr['LBL_GET_TXT'] . " " . $fOfferAmt . "% " . $TargerAmountTXT . " " . $ALL_ORDER_TXT;
                        }
                    } else {
                        $fOfferAmt = setTwoDecimalPoint($fOfferAmt * $userCurrencyRatio);
                        $DiscountAmount = formateNumAsPerCurrency($fOfferAmt, $currencycode);
                        if ($fOfferAppyType == "First" && $fOfferAmt > 0) {
                            $offermsg = $languageLabelsArr['LBL_GET_TXT'] . " " . $DiscountAmount . " " . $TargerAmountTXT . " " . $languageLabelsArr['LBL_FIRST_ORDER_TXT'];
                            $offermsg_short = $offermsg;
                        } elseif ($fOfferAppyType == "All" && $fOfferAmt > 0) {
                            $offermsg = $languageLabelsArr['LBL_GET_TXT'] . " " . $DiscountAmount . " " . $TargerAmountTXT . " " . $ALL_ORDER_TXT;
                            // $offermsg =  $languageLabelsArr['LBL_GET_TXT']." ".$DiscountAmount." ".$TargerAmountTXT;
                            $offermsg_short = $offermsg;
                        }
                    }
                    $offerMsgArr[$db_cuisine[$i]['iCompanyId']]['Restaurant_OfferMessage'] = $offermsg;
                    $offerMsgArr[$db_cuisine[$i]['iCompanyId']]['Restaurant_OfferMessage_short'] = $offermsg_short;
                    //END CODE FOR GET STORE OFFER MESSAGE BY HJ ON 01-04-2019
                    //START CODE FOR GET RESTAURANT STATUS BY HJ ON 01-04-2019
                    if (isset($db_cuisine[$i][$vFromTimeSlot1]) && $db_cuisine[$i][$vFromTimeSlot1] == "00:00:00" && $db_cuisine[$i][$vToTimeSlot1] == "00:00:00" && $db_cuisine[$i][$vFromTimeSlot2] == "00:00:00" && $db_cuisine[$i][$vToTimeSlot2] == "00:00:00") {
                        $restaurantStatusArr[$db_cuisine[$i]['iCompanyId']]['status'] = "Closed";
                    } else {
                        if ($db_cuisine[$i][$vToTimeSlot1] < $db_cuisine[$i][$vFromTimeSlot1]) {
                            $endTime = strtotime($db_cuisine[$i][$vToTimeSlot1]);
                            $vFromTimeSlot_1 = date(("H:i"), strtotime($db_cuisine[$i][$vFromTimeSlot1]));
                            $vToTimeSlot_1 = date(("H:i"), strtotime('+1 day', $endTime));
                        } else {
                            $vFromTimeSlot_1 = date(("H:i"), strtotime($db_cuisine[$i][$vFromTimeSlot1]));
                            $vToTimeSlot_1 = date(("H:i"), strtotime($db_cuisine[$i][$vToTimeSlot1]));
                        }
                        if ($db_cuisine[$i][$vToTimeSlot2] < $db_cuisine[$i][$vFromTimeSlot2]) {
                            $endTime2 = strtotime($db_cuisine[$i][$vToTimeSlot2]);
                            $vFromTimeSlot_2 = date(("H:i"), strtotime($db_cuisine[$i][$vFromTimeSlot2]));
                            $vToTimeSlot_2 = date(("H:i"), strtotime('+1 day', $endTime2));
                        } else {
                            $vFromTimeSlot_2 = date(("H:i"), strtotime($db_cuisine[$i][$vFromTimeSlot2]));
                            $vToTimeSlot_2 = date(("H:i"), strtotime($db_cuisine[$i][$vToTimeSlot2]));
                        }
                        //$date = @date("H:i");
                        $date = @date("H:i", strtotime($vCurrentTime));
                        // $currenttime = strtotime($date);
                        $status = "closed";
                        $status_display = $languageLabelsArr['LBL_RESTAURANT_CLOSED_STATUS_TXT'];
                        $opentime = $closetime = "";
                        $OpenAt = $languageLabelsArr['LBL_RESTAURANT_OPEN_TXT'];
                        $timeslotavailable = "No";
                        //echo isBetween($vFromTimeSlot_1, $vToTimeSlot_1, $date);exit;
                        if (isBetween($vFromTimeSlot_1, $vToTimeSlot_1, $date) == 1 || isBetween($vFromTimeSlot_2, $vToTimeSlot_2, $date) == 1) {
                            $status = "open";
                            $timeslotavailable = "Yes";
                            $status_display = $languageLabelsArr['LBL_RESTAURANT_OPEN_STAUS_TXT'];
                            $currentdate = @date("Y-m-d H:i:s");
                            $enddate = @date("Y-m-d");
                            if (isBetween($vFromTimeSlot_1, $vToTimeSlot_1, $date) == 1) {
                                $enddate = $enddate . " " . $vToTimeSlot_1 . ":00";
                            } else {
                                $enddate = $enddate . " " . $vToTimeSlot_2 . ":00";
                            }
                            $datediff = strtotime($enddate) - strtotime($currentdate);
                            if ($datediff < 900) {
                                $closein = $languageLabelsArr['LBL_RESTAURANT_CLOSE_MINS_TXT'];
                                $closemins = round($datediff / 60);
                                $closetime = $closein . " " . $closemins . " " . $languageLabelsArr['LBL_MINS_SMALL'];
                            }
                        } else {
                            $newdate = @date("Y-m-d");
                            // $newdate = $newdate." ".$vFromTimeSlot_2.":00";
                            if (isBetween($vFromTimeSlot_1, $vFromTimeSlot_1, $date) == 1) {
                                $newdate = $newdate . " " . $vFromTimeSlot_1 . ":00";
                            } else {
                                if ($vFromTimeSlot_1 < $vFromTimeSlot_2 && $vFromTimeSlot_1 > $date) {
                                    $newdate = $newdate . " " . $vFromTimeSlot_1 . ":00";
                                } else {
                                    $newdate = ($vFromTimeSlot_2 == "00:00") ? $newdate . " " . $vFromTimeSlot_1 . ":00" : $newdate . " " . $vFromTimeSlot_2 . ":00";
                                }
                            }
                            $currentdate = @date("Y-m-d H:i:s");
                            $datediff = strtotime($newdate) - strtotime($currentdate);
                            if ($datediff > 0) {
                                $opentime = $OpenAt . " " . date("h:i a", strtotime($newdate));
                            }
                        }
                        $eAvailable = $db_cuisine[$i]['eAvailable'];
                        $eLogout = $db_cuisine[$i]['eLogout'];
                        $eStatus = $db_cuisine[$i]['eStatus'];
                        //if ($eAvailable == "No" || $eLogout == "Yes" || $eStatus != "Active") {
                        if ($eAvailable == "No" || $eStatus != "Active") {
                            $status_display = $languageLabelsArr['LBL_RESTAURANT_CLOSED_STATUS_TXT'];
                            $closetime = "";
                            $status = "closed";
                        }
                        $restaurantStatusArr[$db_cuisine[$i]['iCompanyId']]['opentime'] = $opentime;
                        $restaurantStatusArr[$db_cuisine[$i]['iCompanyId']]['closetime'] = $closetime;
                        $restaurantStatusArr[$db_cuisine[$i]['iCompanyId']]['timeslotavailable'] = $timeslotavailable;
                        $restaurantStatusArr[$db_cuisine[$i]['iCompanyId']]['status'] = $status;
                    }
                    //END CODE FOR GET RESTAURANT STATUS BY HJ ON 01-04-2019
                }
            }
        }
    }
    $cuisine_all = array_unique($cuisine_all);
    $count = count($cuisine_all);
    $returnArr['cuisinecount'] = $count;
    $returnArr['cuisineArr'] = $cuisine_all;
    $returnArr['companyCuisineArr'] = $companyCuisineArr;
    $returnArr['companyCuisineIdArr'] = $companyCuisineIdArr;
    $returnArr['latLangArr'] = $companyLatLangArr;
    $returnArr['offerMsgArr'] = $offerMsgArr;
    $returnArr['restaurantStatusArr'] = $restaurantStatusArr;
    $returnArr['restaurantPricePerPerson'] = $pricePerPersonArr;
    $returnArr['restaurantMinOrdValue'] = $storeMinOrdValueArr;
    $returnArr['storeDemoImageArr'] = $storeDemoImageArr;
    $returnArr['restaurantPrepareTime'] = $storePrepareTimeArr;
    $returnArr['currencySymbol'] = $currencySymbol;
    $returnArr['currencycode'] = $currencycode;
    return $returnArr;
}

function getCompanyDetails($iCompanyId, $iUserId, $CheckNonVegFoodType = "", $searchword = "", $iServiceId_new = "", $passengerLat = "", $passengerLon = "")
{
    global $obj, $MODULES_OBJ, $tconfig, $iServiceId, $ENABLE_FAVORITE_STORE_MODULE, $userDetailsArr, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $currencyAssociateArr, $orderDetailsArr, $languageLabelDataArr, $LANG_OBJ, $MENU_ITEM_MEDIA_OBJ;
    $currencycode = isset($_REQUEST["vGeneralCurrency"]) ? $_REQUEST["vGeneralCurrency"] : ''; // Added By HJ On 23-01-2020 When User Not Logged In Get Currency Code
    if (!empty($iServiceId_new)) {
        $iServiceId = $iServiceId_new;
    }
    $Ratio = 1;
    $vLanguage = $currencySymbol = ''; // Added By HJ On 23-01-2020 When User Not Logged In Get Currency Code
    if ($iUserId != "" && $iUserId > 0) {
        //Added By HJ On 15-07-2020 For Optimize register_user Table Query Start
        if (isset($userDetailsArr['register_user_' . $iUserId])) {
            $passengerData = $userDetailsArr['register_user_' . $iUserId];
        } else {
            $passengerData = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM register_user WHERE iUserId='" . $iUserId . "'");
            $userDetailsArr['register_user_' . $iUserId] = $passengerData;
        }
        //Added By HJ On 15-07-2020 For Optimize register_user Table Query End
        //Added By HJ On 15-07-2020 For Optimize currency Table Query Start
        $vCurrencyPassenger = $passengerData[0]['vCurrencyPassenger'];
        //echo $vCurrencyPassenger."<br>";
        //echo "<pre>";print_r($currencyAssociateArr[$vCurrencyPassenger]);die;
        if (isset($currencyAssociateArr[trim($vCurrencyPassenger)])) {
            $userCurrencyData = $currencyAssociateArr[trim($vCurrencyPassenger)];
            //echo "<pre>";print_r($userCurrencyData);die;
            $passengerData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $passengerData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        }
        //$passengerData = $obj->MySQLSelect("SELECT ru.vCurrencyPassenger,ru.vLang,cu.vSymbol,cu.Ratio FROM register_user as ru LEFT JOIN currency as cu ON ru.vCurrencyPassenger = cu.vName WHERE iUserId = '" . $iUserId . "'");
        //Added By HJ On 15-07-2020 For Optimize currency Table Query End
        $currencycode = $passengerData[0]['vCurrencyPassenger'];
        $vLanguage = $passengerData[0]['vLang'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $Ratio = $passengerData[0]['Ratio'];
        if ($vLanguage == "" || $vLanguage == NULL) {
            //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
        }

        if(isset($_SESSION['MANUAL_ORDER_STORE']) && $_SESSION['MANUAL_ORDER_STORE'] == 'store' && isset($_SESSION['sess_currency'])){
            $sqlp = "SELECT vName,vSymbol,Ratio FROM currency WHERE vName = '".$_SESSION['sess_currency']."'";
            $currencyData = $obj->MySQLSelect($sqlp);
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        }

    } else if (isset($_REQUEST['eSystemAppType']) && strtoupper($_REQUEST['eSystemAppType']) == "KIOSK") {
        if (isset($userDetailsArr['company_' . $iCompanyId])) {
            $companyData = $userDetailsArr['company_' . $iCompanyId];
        } else {
            $companyData = $obj->MySQLSelect("SELECT *,iCompanyId as iMemberId FROM company WHERE iCompanyId='" . $iCompanyId . "'");
            $userDetailsArr['company_' . $iCompanyId] = $companyData;
        }
        $iServiceId = $companyData[0]['iServiceId'];
        //Added By HJ On 15-07-2020 For Optimize register_user Table Query End
        //Added By HJ On 15-07-2020 For Optimize currency Table Query Start
        $vCurrencyPassenger = $companyData[0]['vCurrencyCompany'];
        //echo $vCurrencyPassenger."<br>";
        //echo "<pre>";print_r($currencyAssociateArr[$vCurrencyPassenger]);die;
        if (isset($currencyAssociateArr[trim($vCurrencyPassenger)])) {
            $userCurrencyData = $currencyAssociateArr[trim($vCurrencyPassenger)];
            //echo "<pre>";print_r($userCurrencyData);die;
            $companyData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $companyData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        }
        $currencycode = $vCurrencyPassenger;
        $vLanguage = $companyData[0]['vLang'];
        $currencySymbol = $companyData[0]['vSymbol'];
        $Ratio = $companyData[0]['Ratio'];
        if ($vLanguage == "" || $vLanguage == NULL) {
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        }
    } else {
        //Added By HJ On 23-01-2020 For Get Currency Data Start
        if (($currencySymbol == "" || $currencySymbol == NULL) && $currencycode != "") {
            //Added By HJ On 15-07-2020 For Optimize currency Table Query Start
            if (isset($currencyAssociateArr[$currencycode])) {
                $currencyData = array();
                $currencyData[] = $currencyAssociateArr[$currencycode];
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE vName = '" . $currencycode . "'");
            }
            //$currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE vName = '" . $currencycode . "'");
            //Added By HJ On 15-07-2020 For Optimize currency Table Query End
        } else {
            //Added By HJ On 15-07-2020 For Optimize currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencyData = array();
                $currencyData[0]['vName'] = $vSystemDefaultCurrencyName;
                $currencyData[0]['vSymbol'] = $vSystemDefaultCurrencySymbol;
                $currencyData[0]['Ratio'] = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            }
            //$currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            //Added By HJ On 15-07-2020 For Optimize currency Table Query End
        }
        if (count($currencyData) > 0) {
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        } else {
            $currencycode = "USD";
            $currencySymbol = "$";
            $Ratio = 1.0000;
        }
    }


    $restaurant_status_arr = GetStoreWorkingHoursDetails($iCompanyId, 0, $vLanguage);
    $returnArr['restaurantstatus'] = $restaurant_status_arr['restaurantstatus'];
    $vGeneralLang = isset($_REQUEST["vGeneralLang"]) ? $_REQUEST["vGeneralLang"] : '';
    if (!empty($vGeneralLang) && $vLanguage == "") {
        $vLanguage = $vGeneralLang;
    }
    if ($vLanguage == "" || $vLanguage == NULL) {
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
    }
    if (isset($_SESSION['sess_lang']) && stripos($_SERVER['REQUEST_URI'], WEBSERVICE_API_FILE_NAME) === false) {
        $vLanguage = $_SESSION['sess_lang'];
    }
    //Added By HJ On 23-01-2020 For Get Currency Data End
    //echo $currencySymbol;die;
    //Added By HJ On 15-07-2020 For langauge label and Other Union Table Query Start
    if (isset($languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId])) {
        $languageLabelsArr = $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId];
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLanguage, "1", $iServiceId);
        $languageLabelDataArr['language_label_union_other_food_' . $vLanguage . "_" . $iServiceId] = $languageLabelsArr;
    }
    //Added By HJ On 15-07-2020 For langauge label and Other Union Table Query End
    $LBL_PER_PERSON_TXT = $languageLabelsArr['LBL_PER_PERSON_TXT'];
    $ssql_fav_q = "";
    if ($MODULES_OBJ->isFavouriteStoreModuleAvailable() && !empty($iUserId)) {
        include_once('include/features/include_fav_store.php');
        $ssql_fav_q = getFavSelectQuery($iCompanyId, $iUserId);
    }
    $DataCompany = $obj->MySQLSelect("SELECT * " . $ssql_fav_q . " FROM `company` WHERE iCompanyId = '" . $iCompanyId . "'");
    //Added By HJ On 04-02-2019 For Convert All Amount In Store Wise Currency Ration Start
    /* if (isset($DataCompany[0]['vCurrencyCompany']) && $DataCompany[0]['vCurrencyCompany'] != "") {

      $store_currency = $DataCompany[0]['vCurrencyCompany'];

      if (isset($currencyArr[$store_currency])) {

      $priceRatio = $currencyArr[$store_currency];

      $currencySymbol = $currencySymbolArr[$store_currency];

      $Ratio = $priceRatio;

      }

    } */
    //Added By HJ On 04-02-2019 For Convert All Amount In Store Wise Currency Ration End
    if ($iServiceId == 1) {
        if (isset($DataCompany[0]['fPricePerPerson'])) {
            $personprice = $DataCompany[0]['fPricePerPerson'];
            $PersonPrice = setTwoDecimalPoint($personprice * $Ratio);
            $returnArr['fPricePerPersonWithCurrency'] = formateNumAsPerCurrency($PersonPrice, $currencycode, 2);
        }
        $fPricePerPerson = $DataCompany[0]['fPricePerPerson'];
        $fPricePerPerson = setTwoDecimalPoint($fPricePerPerson * $Ratio);
        $fPricePerPerson = formateNumAsPerCurrency($fPricePerPerson, $currencycode) . " " . $LBL_PER_PERSON_TXT;
        $returnArr['Restaurant_PricePerPerson'] = $fPricePerPerson;
    } else {
        $returnArr['fPricePerPersonWithCurrency'] = $returnArr['Restaurant_PricePerPerson'] = '';
    }
    //added by SP on 14-10-2020 for timeslot changes
    $ENABLE_TIMESLOT_ADDON = !empty($MODULES_OBJ->isEnableTimeslotFeature()) ? "Yes" : "No";
    if (strtoupper($ENABLE_TIMESLOT_ADDON) == "YES") {
        $CompanyTimeSlot = FetchStoreWorkingHoursData($iCompanyId, $languageLabelsArr);
        foreach ($CompanyTimeSlot as $valueA) {
            $keyName = $valueA['Dayname'];
            $replica = substr($valueA['Dayname'], 0, -1);
            $returnArr[$replica] = $valueA['slot_time'];
        }
    } else {
        $CompanyTimeSlot = FetchStoreWorkingHoursData($iCompanyId, $languageLabelsArr);
        $returnArr['monfritimeslot_TXT'] = $CompanyTimeSlot['monfritimeslot_TXT'];
        $returnArr['monfritimeslot_Time'] = $CompanyTimeSlot['monfritimeslot_Time_new'];
        $returnArr['satsuntimeslot_TXT'] = $CompanyTimeSlot['satsuntimeslot_TXT'];
        $returnArr['satsuntimeslot_Time'] = $CompanyTimeSlot['satsuntimeslot_Time_new'];
    }
    //Added By HJ On 15-07-2020 For Optimize Inner Join Query of company_cuisine and cuisine Table Start
    $companyCuisineArr = $db_cuisine = array();
    $getCompanyCuisine = $obj->MySQLSelect("SELECT cuisineId FROM company_cuisine WHERE iCompanyId='" . $iCompanyId . "'");
    for ($c = 0; $c < count($getCompanyCuisine); $c++) {
        $companyCuisineArr[] = $getCompanyCuisine[$c]['cuisineId'];
    }
    if (count($companyCuisineArr) > 0) {
        $cuisineIds = implode(",", $companyCuisineArr);
        $db_cuisine = $obj->MySQLSelect("SELECT cuisineName_" . $vLanguage . " as cuisineName,cuisineId FROM cuisine WHERE cuisineId IN ($cuisineIds) AND eStatus='Active'");
    }
    //$db_cuisine = $obj->MySQLSelect("SELECT cu.cuisineName_" . $vLanguage . " as cuisineName,cu.cuisineId FROM cuisine as cu LEFT JOIN company_cuisine as ccu ON ccu.cuisineId=cu.cuisineId WHERE ccu.iCompanyId = '" . $iCompanyId . "' AND cu.eStatus = 'Active'");
    //echo "<pre>";print_r($db_cuisine);die;
    //Added By HJ On 15-07-2020 For Optimize Inner Join Query of company_cuisine and cuisine Table End
    $db_cuisine_str = $db_cuisine_id_str = $MaxDiscountAmount = "";
    if (count($db_cuisine) > 0) {
        for ($i = 0; $i < count($db_cuisine); $i++) {
            $db_cuisine_str .= $db_cuisine[$i]['cuisineName'] . ", ";
            $db_cuisine_id_str .= $db_cuisine[$i]['cuisineId'] . ",";
        }
        $db_cuisine_str = trim(trim($db_cuisine_str), ",");
        $db_cuisine_id_str = trim($db_cuisine_id_str, ",");
    }
    $returnArr['Restaurant_Cuisine'] = $db_cuisine_str;
    $returnArr['Restaurant_Cuisine_Id'] = $db_cuisine_id_str;
    $LBL_MINS_SMALL = $languageLabelsArr['LBL_MINS_SMALL'];
    $fPrepareTime = $DataCompany[0]['fPrepareTime'];
    $fPrepareTime = $fPrepareTime . " " . $LBL_MINS_SMALL;
    $returnArr['Restaurant_OrderPrepareTime'] = $fPrepareTime;
    $fOfferType = $DataCompany[0]['fOfferType'];
    $fOfferAppyType = $DataCompany[0]['fOfferAppyType'];
    $fOfferAmt = $DataCompany[0]['fOfferAmt'];
    $fTargetAmt = $DataCompany[0]['fTargetAmt'];
    $fTargetAmt = setTwoDecimalPoint($fTargetAmt * $Ratio);
    $fMaxOfferAmt = $DataCompany[0]['fMaxOfferAmt'];
    $fMaxOfferAmt = setTwoDecimalPoint($fMaxOfferAmt * $Ratio);
    $MaxDiscountAmount = "";
    if ($fMaxOfferAmt > 0) {
        $MaxDiscountAmount = " ( " . $languageLabelsArr['LBL_MAX_DISCOUNT_TXT'] . " " . formateNumAsPerCurrency($fMaxOfferAmt, $currencycode) . " )";
    }
    $TargerAmountTXT = $languageLabelsArr['LBL_OFF_TXT'];
    $ALL_ORDER_TXT = $languageLabelsArr['LBL_ALL_ORDER_TXT'];
    if ($fTargetAmt > 0) {
        $TargerAmountTXT = $languageLabelsArr['LBL_OFF_TXT'] . " " . $languageLabelsArr['LBL_ORDERS_ABOVE_TXT'] . " " . formateNumAsPerCurrency($fTargetAmt, $currencycode) . " ";
        $ALL_ORDER_TXT = "";
    }
    $offermsg = $offermsg_short = "";
    if ($fOfferType == "Percentage") {
        if ($fOfferAppyType == "First") {
            $offermsg = $languageLabelsArr['LBL_GET_TXT'] . " " . $fOfferAmt . "% " . $TargerAmountTXT . " " . $languageLabelsArr['LBL_FIRST_ORDER_TXT'] . "" . $MaxDiscountAmount;
            $offermsg_short = $languageLabelsArr['LBL_GET_TXT'] . " " . $fOfferAmt . "% " . $TargerAmountTXT . " " . $languageLabelsArr['LBL_FIRST_ORDER_TXT'];
        } elseif ($fOfferAppyType == "All") {
            $offermsg = $languageLabelsArr['LBL_GET_TXT'] . " " . $fOfferAmt . "% " . $TargerAmountTXT . " " . $ALL_ORDER_TXT . " " . $MaxDiscountAmount;
            $offermsg_short = $languageLabelsArr['LBL_GET_TXT'] . " " . $fOfferAmt . "% " . $TargerAmountTXT . " " . $ALL_ORDER_TXT;
        }
    } else {
        $fOfferAmt = setTwoDecimalPoint($fOfferAmt * $Ratio);
        $DiscountAmount = formateNumAsPerCurrency($fOfferAmt, $currencycode);
        if ($fOfferAppyType == "First" && $fOfferAmt > 0) {
            $offermsg = $languageLabelsArr['LBL_GET_TXT'] . " " . $DiscountAmount . " " . $TargerAmountTXT . " " . $languageLabelsArr['LBL_FIRST_ORDER_TXT'];
            $offermsg_short = $offermsg;
        } else if ($fOfferAppyType == "All" && $fOfferAmt > 0) {
            $offermsg = $languageLabelsArr['LBL_GET_TXT'] . " " . $DiscountAmount . " " . $TargerAmountTXT . " " . $ALL_ORDER_TXT;
            $offermsg_short = $offermsg;
        }
    }
    $returnArr['Restaurant_OfferMessage'] = $offermsg;
    $returnArr['Restaurant_OfferMessage_short'] = $offermsg_short;
    $fMinOrderValue = $DataCompany[0]['fMinOrderValue'];
    $fMinOrderValue = setTwoDecimalPoint($fMinOrderValue * $Ratio);
    $returnArr['fMinOrderValueDisplay'] = formateNumAsPerCurrency($fMinOrderValue, $currencycode);
    $returnArr['fMinOrderValue'] = $fMinOrderValue;
    $returnArr['Restaurant_MinOrderValue'] = ($fMinOrderValue > 0) ? formateNumAsPerCurrency($fMinOrderValue, $currencycode) . " " . $languageLabelsArr['LBL_MIN_ORDER_TXT'] : $languageLabelsArr['LBL_NO_MIN_ORDER_TXT'];
    $returnArr['Restaurant_MinOrderValue_Orig'] = ($fMinOrderValue > 0) ? formateNumAsPerCurrency($fMinOrderValue, $currencycode) : '';
    $fPackingCharge = $DataCompany[0]['fPackingCharge'];
    $fPackingCharge = setTwoDecimalPoint($fPackingCharge * $Ratio);
    $returnArr['fPackingCharge'] = $fPackingCharge;
    // echo "<pre>";print_r($returnArr);
    ## Check NonVeg Item Available of Restaaurant ##
    $eNonVegToggleDisplay = "No";
    $fsql = "";
    if ($MODULES_OBJ->isEnableStoreMultiServiceCategories()) {
        $fsql = " AND iServiceId = '" . $iServiceId . "'";
    }
    //Added By HJ On 15-07-2020 For Optimize Inner Join Query of food_menu and menu_items Table Start
    $foodMenuIdArr = $db_foodtype_data = array();
    if (isset($orderDetailsArr['food_menu_' . $iCompanyId])) {
        $getFoodMenuData = $orderDetailsArr['food_menu_' . $iCompanyId];
    } else {
        $getFoodMenuData = $obj->MySQLSelect("SELECT * FROM food_menu WHERE iCompanyId='" . $iCompanyId . "' AND eStatus='Active' $fsql ORDER BY iDisplayOrder ASC");
        $orderDetailsArr['food_menu_' . $iCompanyId] = $getFoodMenuData;
    }
    for ($f = 0; $f < count($getFoodMenuData); $f++) {
        $foodMenuIdArr[] = $getFoodMenuData[$f]['iFoodMenuId'];
    }
    if (count($foodMenuIdArr) > 0) {
        $foodMenuIds = implode(",", $foodMenuIdArr);
        $db_foodtype_data = $obj->MySQLSelect("SELECT * FROM menu_items WHERE iFoodMenuId IN ($foodMenuIds) AND eStatus='Active'");
    }
    //echo "<pre>";print_r($db_foodtype_data);die;
    //Added By HJ On 15-07-2020 For Optimize menu_items Table Query Start
    for ($m = 0; $m < count($db_foodtype_data); $m++) {
        $iMenuItemId = $db_foodtype_data[$m]['iMenuItemId'];
        $orderDetailsArr['menu_items_' . $iMenuItemId][] = $db_foodtype_data[$m];
    }
    //Added By HJ On 15-07-2020 For Optimize menu_items Table Query End
    //$db_foodtype_data = $obj->MySQLSelect("SELECT eFoodType,mi.eStatus,mi.eAvailable,mi.iFoodMenuId FROM menu_items as mi LEFT JOIN food_menu as fm ON fm.iFoodMenuId=mi.iFoodMenuId WHERE fm.iCompanyId = '" . $iCompanyId . "' AND fm.eStatus='Active' AND mi.eStatus='Active'");
    //Added By HJ On 15-07-2020 For Optimize Inner Join Query of food_menu and menu_items Table End
    $TotNonVegItems = $TotVegItems = 0;
    $foodItemCountArr = array();
    //echo "<pre>";print_r($db_foodtype_data);die;
    for ($r = 0; $r < count($db_foodtype_data); $r++) {
        $eFoodType = strtoupper($db_foodtype_data[$r]['eFoodType']);
        $iFoodMenuId = $db_foodtype_data[$r]['iFoodMenuId'];
        $eStatus = $db_foodtype_data[$r]['eStatus'];
        $eAvailable = $db_foodtype_data[$r]['eAvailable'];
        if ($eFoodType == "NONVEG") {
            $TotNonVegItems = $TotNonVegItems + 1;
        } else if ($eFoodType == "VEG") {
            $TotVegItems = $TotVegItems + 1;
        }
        if ($eStatus == "Active" && $eAvailable == "Yes") {
            if (isset($foodItemCountArr[$iFoodMenuId])) {
                $foodItemCountArr[$iFoodMenuId] += 1;
            } else {
                $foodItemCountArr[$iFoodMenuId] = 1;
            }
        }
    }
    if ($TotNonVegItems > 0 && $TotVegItems > 0) {
        $eNonVegToggleDisplay = "Yes";
    }
    $returnArr['eNonVegToggleDisplay'] = $eNonVegToggleDisplay;
    ## Check NonVeg Item Available of Restaaurant ##
    ## Get Company Rattings ##
    $Rating_data = $obj->MySQLSelect("SELECT count(r.iRatingId) as totalratings FROM orders as o LEFT JOIN ratings_user_driver as r on r.iOrderId=o.iOrderId WHERE o.iCompanyId='" . $iCompanyId . "' AND r.eFromUserType='Passenger' AND r.eToUserType='Company'");
    $ratingcounts = $Rating_data[0]['totalratings'];
    if ($ratingcounts <= 100) {
        $ratings = $ratingcounts . " " . $languageLabelsArr['LBL_RATING'];
    } else {
        $ratings = $ratingcounts . "+ " . $languageLabelsArr['LBL_RATING'];
    }
    $returnArr['RatingCounts'] = $ratings;
    ## End Get Company Rattings ##
    ## Get Company's menu details ##
    // $sql = "SELECT * FROM food_menu WHERE iCompanyId = '".$iCompanyId."' AND eStatus='Active' ORDER BY iDisplayOrder ASC";
    //Added By HJ On 15-07-2020 For Optimize food_menu Table Query Start
    if (isset($orderDetailsArr['food_menu_' . $iCompanyId])) {
        $db_food_data = $orderDetailsArr['food_menu_' . $iCompanyId];
    } else {
        $db_food_data = $obj->MySQLSelect("SELECT * FROM food_menu WHERE iCompanyId='" . $iCompanyId . "' AND eStatus='Active' $fsql ORDER BY iDisplayOrder ASC");
        $orderDetailsArr['food_menu_' . $iCompanyId] = $db_food_data;
    }
    //$db_food_data = $obj->MySQLSelect("SELECT fm.* FROM food_menu as fm WHERE fm.iCompanyId = '" . $iCompanyId . "' AND fm.eStatus='Active' ORDER BY fm.iDisplayOrder ASC");
    //Added By HJ On 15-07-2020 For Optimize food_menu Table Query End
    $CompanyFoodData = $MenuItemsDataArr = array();
    if (count($db_food_data) > 0) {
        $ssql = "";
        //added by SP on 21-10-2019 for cubex design
        if ($CheckNonVegFoodType == 'Yes') {
            $ssql .= " AND (eFoodType = 'Veg' OR eFoodType = '') ";
        } else if ($CheckNonVegFoodType == 'No') {
            $ssql .= " AND (eFoodType = 'NonVeg'  OR eFoodType = 'Veg' OR eFoodType = '') ";
        }
        //old leave as it is bc if pass from app like this value then no problem in future..
        if ($CheckNonVegFoodType == "Veg") {
            $ssql .= " AND (eFoodType = 'Veg' OR eFoodType = '') ";
        } else if ($CheckNonVegFoodType == "NonVeg") {
            $ssql .= " AND (eFoodType = 'NonVeg' OR eFoodType = '') ";
        } else if ($CheckNonVegFoodType == "VegNonVeg") {
            $ssql .= " AND (eFoodType = 'NonVeg' OR eFoodType = 'Veg' OR eFoodType = '') ";
        } else if ($CheckNonVegFoodType == "NonVegVeg") {
            $ssql .= " AND (eFoodType = 'NonVeg' OR eFoodType = 'Veg' OR eFoodType = '') ";
        }
        if ($searchword != "") {
            $ssql .= " AND LOWER(vItemType_" . $vLanguage . ") LIKE '%" . $searchword . "%' ";
        }
        $foodMenuIteIds = "";
        for ($h = 0; $h < count($db_food_data); $h++) {
            $foodMenuIteIds .= ",'" . $db_food_data[$h]['iFoodMenuId'] . "'";
        }
        $foodItemArr = $menuItemArr = $topingArr = array();
        $itemimimgUrl = $tconfig["tsite_upload_images_menu_item"];
        if ($foodMenuIteIds != "") {
            $foodItems = trim($foodMenuIteIds, ",");
            //$sqlf = "SELECT eRecommended,iMenuItemId,iFoodMenuId,vItemType_" . $vLanguage . " as vItemType,vItemDesc_" . $vLanguage . " as vItemDesc,fPrice,eFoodType,fOfferAmt,vImage,iDisplayOrder,vHighlightName,prescription_required FROM menu_items WHERE iFoodMenuId IN ($foodItems) AND eStatus='Active' AND eAvailable = 'Yes' $ssql ORDER BY iDisplayOrder ASC"; //prescription_required added by SP
            //Added By HJ On 15-07-2020 For Optimize language_master Table Query Start
            $def_lang = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 15-07-2020 For Optimize language_master Table Query End
            $sqlf = "SELECT eRecommended,iMenuItemId,iFoodMenuId,IFNULL(NULLIF(vItemType_" . $vLanguage . ", ''),vItemType_" . $def_lang . ") as vItemType,vItemDesc_" . $vLanguage . " as vItemDesc,fPrice,eFoodType,fOfferAmt,vImage,iDisplayOrder,vHighlightName,prescription_required FROM menu_items WHERE iFoodMenuId IN ($foodItems) AND eStatus='Active' AND eAvailable = 'Yes' $ssql ORDER BY iDisplayOrder ASC"; //prescription_required added by SP
            $dbItemData = $obj->MySQLSelect($sqlf);
            for ($d = 0; $d < count($dbItemData); $d++) {
                //Added By HJ On 17-10-2019 For Get Highlight Label Value Start
                $vHighlightNameLBL = $dbItemData[$d]['vHighlightName'];
                if (isset($languageLabelsArr[$dbItemData[$d]['vHighlightName']]) && $dbItemData[$d]['vHighlightName'] != "" && $dbItemData[$d]['vHighlightName'] != null) {
                    $vHighlightNameLBL = $languageLabelsArr[$dbItemData[$d]['vHighlightName']];
                }
                //echo $dbItemData[$d]['vHighlightName'];die;
                $dbItemData[$d]['vHighlightNameLBL'] = $dbItemData[$d]['vHighlightName'];
                //Added By HJ On 17-10-2019 For Get Highlight Label Value End
                if ($MODULES_OBJ->isEnableItemMultipleImageVideoUpload()) {
                    $dbItemData[$d]['MenuItemMedia'] = array();
                    $menu_item_media = $obj->MySQLSelect("SELECT * FROM menu_item_media WHERE iMenuItemId = '" . $dbItemData[$d]['iMenuItemId'] . "'");
                    if (!empty($menu_item_media)) {
                        $mCount = 0;
                        foreach ($menu_item_media as $media) {
                            $tmp = explode(".", $media['vImage']);
                            for ($i = 0; $i < count($tmp) - 1; $i++) {
                                $tmp1[] = $tmp[$i];
                            }
                            $file = implode("_", $tmp1);
                            $ext = $tmp[count($tmp) - 1];
                            $videoExt_arr = array('MP4', 'MOV', 'WMV', 'AVI', 'FLV', 'MKV', 'WEBM');
                            $dbItemData[$d]['MenuItemMedia'][$mCount]['vImage'] = $itemimimgUrl . '/' . $media['vImage'];
                            $dbItemData[$d]['MenuItemMedia'][$mCount]['eFileType'] = 'Image';
                            $dbItemData[$d]['MenuItemMedia'][$mCount]['ThumbImage'] = '';
                            if (in_array(strtoupper($ext), $videoExt_arr)) {
                                $dbItemData[$d]['MenuItemMedia'][$mCount]['vImage'] = $MENU_ITEM_MEDIA_OBJ->videoConvertTomp4($media['vImage']);
                                $dbItemData[$d]['MenuItemMedia'][$mCount]['eFileType'] = 'Video';
                                $dbItemData[$d]['MenuItemMedia'][$mCount]['ThumbImage'] = $MENU_ITEM_MEDIA_OBJ->getVideoThumbImage($media['vImage']);
                            }
                            $mCount++;
                        }
                    }
                    if (empty($dbItemData[$d]['MenuItemMedia'])) {
                        $dbItemData[$d]['MenuItemMedia'] = "";
                    }
                }
                $foodItemArr[$dbItemData[$d]['iFoodMenuId']][] = $dbItemData[$d];
                $menuItemArr[] = $dbItemData[$d]['iMenuItemId'];
            }
        }
        //echo "<pre>";print_r($foodItemArr);die;
        if (count($menuItemArr) > 0) {
            $itemIds = implode(",", $menuItemArr);
            $topingArr = GetMenuItemOptionsTopping($itemIds, $currencySymbol, $Ratio, $vLanguage, $iServiceId, $iCompanyId, $currencycode);
            //echo "<pre>";print_r($topingArr);die;
            //echo $itemIds . "<br>";
            $customerTopingArr = getMenuCustomeAllToppings($itemIds, $currencySymbol, $Ratio, $vLanguage, 0, $currencycode);
            //echo "<pre>";print_r($customerTopingArr);die;
        }
        // echo "<pre>";print_r($db_food_data);die;
        for ($i = 0; $i < count($db_food_data); $i++) {
            $iFoodMenuId = $db_food_data[$i]['iFoodMenuId'];
            if (isset($foodItemCountArr[$iFoodMenuId]) && $foodItemCountArr[$iFoodMenuId] > 0) {
                $vMenu = $db_food_data[$i]['vMenu_' . $vLanguage];
                $CompanyFoodData[$i]['iFoodMenuId'] = $iFoodMenuId;
                $CompanyFoodData[$i]['vMenu'] = $vMenu;
                $CompanyFoodData[$i]['vMenuItemCount'] = 0;
                $CompanyFoodData[$i]['vMenuImage'] = "";
                if (!empty($db_food_data[$i]['vImage']) && file_exists($tconfig["tsite_upload_images_menu_category_path"] . '/' . $db_food_data[$i]['vImage'])) {
                    $CompanyFoodData[$i]['vMenuImage'] = $tconfig["tsite_upload_images_menu_category"] . '/' . $db_food_data[$i]['vImage'];
                }
                if (isset($foodItemArr[$iFoodMenuId])) {
                    $db_item_data = $foodItemArr[$iFoodMenuId];
                    $CompanyFoodData[$i]['vMenuItemCount'] = count($db_item_data);
                    if (count($db_item_data) > 0) {
                        for ($j = 0; $j < count($db_item_data); $j++) {
                            $db_item_data[$j]['vItemDesc'] = str_replace(array("\\r\\n", "\\n", "\\r"), "\n", $db_item_data[$j]['vItemDesc']);
                            $db_item_data[$j]['vCategoryName'] = '';
                            if (!empty($vMenu)) {
                                $db_item_data[$j]['vCategoryName'] = $vMenu;
                            }
                            $iMenuItemId = $db_item_data[$j]['iMenuItemId'];
                            $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, 1, $iUserId, "Display", "", "", $iServiceId);
                            // echo "<pre>";print_r($MenuItemPriceArr);die;
                            $fPrice = setTwoDecimalPoint($MenuItemPriceArr['fPrice'] * $Ratio);
                            $fOfferAmt = setTwoDecimalPoint($MenuItemPriceArr['fOfferAmt']);
                            $db_item_data[$j]['fOfferAmt'] = $fOfferAmt;
                            //echo $Ratio."-----";die;
                            $db_item_data[$j]['fPrice'] = setTwoDecimalPoint($db_item_data[$j]['fPrice'] * $Ratio);
                            if ($fOfferAmt > 0) {
                                $fDiscountPrice = setTwoDecimalPoint($MenuItemPriceArr['fPrice'] * $Ratio);
                                $StrikeoutPrice = setTwoDecimalPoint($MenuItemPriceArr['fOriginalPrice'] * $Ratio);
                                $db_item_data[$j]['StrikeoutPrice'] = formateNumAsPerCurrency($StrikeoutPrice, $currencycode);
                                $db_item_data[$j]['fDiscountPrice'] = $fDiscountPrice;
                                $db_item_data[$j]['fDiscountPricewithsymbol'] = formateNumAsPerCurrency($fDiscountPrice, $currencycode);
                                $db_item_data[$j]['currencySymbol'] = $currencySymbol;
                            } else {
                                $db_item_data[$j]['StrikeoutPrice'] = formateNumAsPerCurrency($fPrice, $currencycode);
                                $db_item_data[$j]['fDiscountPrice'] = $fPrice;
                                $db_item_data[$j]['fDiscountPricewithsymbol'] = formateNumAsPerCurrency($fPrice, $currencycode);
                                $db_item_data[$j]['currencySymbol'] = $currencySymbol;
                            }
                            //added by SP for offer amount
                            $StrikeoutPrice = setTwoDecimalPoint($MenuItemPriceArr['fOriginalPrice'] * $Ratio, 2);
                            $db_item_data[$j]['fToppingStrikeoutPrice'] = $StrikeoutPrice;
                            $db_item_data[$j]['fToppingStrikeoutPricewithsymbol'] = $currencySymbol . " " . $StrikeoutPrice;
                            //$MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, 1, '', "Display", "", "", $iServiceId);
                            $fOfferAmt = round($MenuItemPriceArr['fOfferAmt'], 2);
                            $db_item_data[$j]['fToppingDiscountPrice'] = "";
                            $db_item_data[$j]['fToppingDiscountPricewithsymbol'] = "";
                            $db_item_data[$j]['isShownDiscountPrice'] = "No";
                            if ($fOfferAmt > 0) {
                                $fDiscountPrice = ($MenuItemPriceArr['fPrice'] * $Ratio);
                                //$fDiscountPrice = $fPrice - (($fPrice * $fOfferAmt) / 100);
                                //$fDiscountPrice = $fDiscountPrice * $Ratio;
                                if (!empty($fDiscountPrice)) {
                                    $db_item_data[$j]['isShownDiscountPrice'] = "Yes";
                                    $fDiscountPrice = setTwoDecimalPoint($fDiscountPrice, 2);
                                    $db_item_data[$j]['fToppingDiscountPrice'] = $fDiscountPrice;
                                    $db_item_data[$j]['fToppingDiscountPricewithsymbol'] = $currencySymbol . " " . $fDiscountPrice;
                                }
                            }
                            $itemimgpth = $tconfig["tsite_upload_images_menu_item_path"] . '/' . $db_item_data[$j]['vImage'];
                            if ($db_item_data[$j]['vImage'] != "" && file_exists($itemimgpth)) {
                                $db_item_data[$j]['vImageName'] = $db_item_data[$j]['vImage'];
                                $db_item_data[$j]['vImage'] = $itemimimgUrl . '/' . $db_item_data[$j]['vImage'];
                            } else {
                                $db_item_data[$j]['vImageName'] = '';
                                $db_item_data[$j]['vImage'] = $itemimimgUrl . '/sample_image.png';
                            }
                            if ($MODULES_OBJ->isEnableItemMultipleImageVideoUpload()) {
                                $MenuItemMediaArr = $db_item_data[$j]['MenuItemMedia'];
                                $db_item_data[$j]['vImage'] = '';
                                // if(!empty($MenuItemMediaArr)) {
                                //     $db_item_data[$j]['vImage'] = $MenuItemMediaArr[0]['vImage'];
                                // }
                                if ($MenuItemMediaArr[0]['eFileType'] == 'Video') {
                                    $db_item_data[$j]['vImage'] = $MenuItemMediaArr[0]['ThumbImage'];
                                } else {
                                    $db_item_data[$j]['vImage'] = $MenuItemMediaArr[0]['vImage'];
                                }
                            }
                            //$MenuItemOptionToppingArr = GetMenuItemOptionsTopping($iMenuItemId, $currencySymbol, $Ratio, $vLanguage, $iServiceId);
                            $MenuItemOptionToppingArr = $customeToppings = array();
                            if (isset($topingArr[$iMenuItemId])) {
                                $MenuItemOptionToppingArr = $topingArr[$iMenuItemId];
                            }
                            $db_item_data[$j]['MenuItemOptionToppingArr'] = $MenuItemOptionToppingArr;
                            //Added By HJ On 25-01-2019 For Get Custome Topping Data Start
                            //$customeToppings = getMenuCustomeToppings($iMenuItemId, $currencySymbol, $Ratio, $vLanguage, 0); //Commnted By HJ On 08-05-2019 For Optimize Code
                            if (isset($customerTopingArr[$iMenuItemId])) {
                                $customeToppings = $customerTopingArr[$iMenuItemId];
                            }
                            $db_item_data[$j]['MenuItemOptionToppingArr']['customItemArray'] = $customeToppings;
                            if ($iServiceId != '1') {
                                $db_item_data[$j]['eFoodType'] = '';
                            }
                            //Added By HJ On 25-01-2019 For Get Custome Topping Data End
                            // echo "<pre>";print_r($MenuItemOptionToppingArr);exit;
                            $CompanyFoodData[$i]['menu_items'][] = $db_item_data[$j];
                            array_push($MenuItemsDataArr, $db_item_data[$j]);
                        }
                    }
                }
            }
        }
    }
    $CompanyFoodData_New = array();
    $CompanyFoodData = array_values($CompanyFoodData);
    $CompanyFoodData_New = $CompanyFoodData;
    //echo "<pre>";print_r($CompanyFoodData);die;
    for ($i = 0; $i < count($CompanyFoodData); $i++) {
        //echo "<pre>";print_r($CompanyFoodData);die;
        $vMenuItemCount = $CompanyFoodData[$i]['vMenuItemCount'];
        if ($vMenuItemCount == 0) {
            unset($CompanyFoodData_New[$i]);
        }
    }
    $CompanyFoodData = array_values($CompanyFoodData_New);
    $returnArr['CompanyFoodData'] = $CompanyFoodData;
    $returnArr['CompanyFoodDataCount'] = count($CompanyFoodData);
    $returnArr['MenuItemsDataArr'] = array();
    if ($searchword != "") {
        $returnArr['MenuItemsDataArr'] = $MenuItemsDataArr;
    }
    $Recomendation_Arr = FetchRecommendedStoreItems($iCompanyId, $iUserId, "Recommended", $CheckNonVegFoodType, $searchword, $iServiceId, $vLanguage);
    //print_r($Recomendation_Arr);die;
    $returnArr['Recomendation_Arr'] = $Recomendation_Arr;
    ## Get Company's menu details ##
    return $returnArr;
}

function GetMenuItemOptionsTopping($iMenuItemId, $currencySymbol, $Ratio, $vLanguage, $iServiceId = '', $iCompanyId = '', $currencycode = "")
{
    global $MODULES_OBJ;
    if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
        $returnArr = GetMenuItemOptionsToppingMulti($iMenuItemId, $currencySymbol, $Ratio, $vLanguage, $iServiceId, $iCompanyId, $currencycode);
    } else {
        global $obj, $tconfig, $serviceCatDataArr;
        $returnArr = array();
        $ispriceshow = '';
        if (isset($iServiceId) && !empty($iServiceId)) {
            //Added By HJ On 15-07-2020 For Optimize service_categories Table Query Start
            $serviceCatArr = $ServiceCategoryData = array();
            if (count($serviceCatDataArr) > 0) {
                $ServiceCategoryData = $serviceCatDataArr;
            } else {
                $ServiceCategoryData = $serviceCatDataArr = $obj->MySQLSelect("SELECT * FROM service_categories");
            }
            for ($h = 0; $h < count($ServiceCategoryData); $h++) {
                $serviceCatArr[$ServiceCategoryData[$h]['iServiceId']] = $ServiceCategoryData[$h];
            }
            if (isset($serviceCatArr[$iServiceId])) {
                $ServiceCategoryData[] = $serviceCatArr[$iServiceId];
            } else {
                $ServiceCategoryData = get_value('service_categories', $servFields, 'iServiceId', $iServiceId);
            }
            //Added By HJ On 15-07-2020 For Optimize service_categories Table Query End
            if (!empty($ServiceCategoryData)) {
                if (!empty($ServiceCategoryData[0]['eType']) && $ServiceCategoryData[0]['eType'] == 'separate') {
                    $ispriceshow = $ServiceCategoryData[0]['eType'];
                }
            }
        }
        if (!empty($ispriceshow) && !empty($ispriceshow)) {
            $sql = "SELECT mo.iOptionId,mo.vOptionName,IF(mo.eDefault='Yes' AND mo.eOptionType='Options',mi.fprice,mo.fprice) as fPrice,mo.eOptionType,mo.eDefault,mo.iMenuItemId, mi.fOfferAmt,mo.tOptionNameLang,mo.vImage FROM menuitem_options as mo LEFT JOIN menu_items as mi ON mo.iMenuItemId = mi.iMenuItemId WHERE mo.iMenuItemId IN ($iMenuItemId) AND mo.eStatus = 'Active' AND mo.iOptionsCategoryId = 0 ORDER BY mo.eDefault";
        } else {
            $sql = "SELECT iOptionId,vOptionName,fPrice,eOptionType,eDefault,iMenuItemId,tOptionNameLang,vImage FROM menuitem_options WHERE iMenuItemId IN ($iMenuItemId) AND eStatus = 'Active' AND iOptionsCategoryId = 0 ORDER BY eDefault";
        }
        $db_options_data = $obj->MySQLSelect($sql);
        if (count($db_options_data) > 0) {
            for ($i = 0; $i < count($db_options_data); $i++) {
                $fPrice = $db_options_data[$i]['fPrice'];
                $iMenuItemId = $db_options_data[$i]['iMenuItemId'];
                $fUserPrices = $fPrice * $Ratio;
                $db_options_data[$i]['fPrice'] = strval($fUserPrices);
                $fUserPrice = round($fPrice * $Ratio, 2);
                //$fUserPrice = number_format($fPrice * $Ratio, 2);
                //$fUserPriceWithSymbol = $currencySymbol . " " . number_format($fUserPrices, 2);
                $fUserPriceWithSymbol = formateNumAsPerCurrency($fUserPrices, $currencycode);
                $db_options_data[$i]['fUserPrice'] = strval($fUserPrice);
                $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
                //added by SP for offer amount
                $StrikeoutPrice = setTwoDecimalPoint($fPrice * $Ratio, 2);
                $db_options_data[$i]['fToppingStrikeoutPrice'] = $StrikeoutPrice;
                $db_options_data[$i]['fToppingStrikeoutPricewithsymbol'] = $currencySymbol . " " . $StrikeoutPrice;
                $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, 1, '', "Display", "", "", $iServiceId);
                $fOfferAmt = round($MenuItemPriceArr['fOfferAmt'], 2);
                $db_options_data[$i]['fToppingDiscountPrice'] = "";
                $db_options_data[$i]['fToppingDiscountPricewithsymbol'] = "";
                if ($fOfferAmt > 0) {
                    $fDiscountPrice = $fPrice - (($fPrice * $fOfferAmt) / 100);
                    $fDiscountPrice = $fDiscountPrice * $Ratio;
                    if (!empty($fDiscountPrice)) {
                        $fDiscountPrice = setTwoDecimalPoint($fDiscountPrice, 2);
                        $db_options_data[$i]['fToppingDiscountPrice'] = $fDiscountPrice;
                        $db_options_data[$i]['fToppingDiscountPricewithsymbol'] = $currencySymbol . " " . $fDiscountPrice;
                    }
                }
                if (!empty($db_options_data[$i]['vImage']) && file_exists($tconfig['tsite_upload_images_menu_item_options_path'] . $db_options_data[$i]['vImage'])) {
                    $db_options_data[$i]['vImage'] = $tconfig['tsite_upload_images_menu_item_options'] . $db_options_data[$i]['vImage'];
                }
                if (isset($db_options_data[$i]['tOptionNameLang']) && !empty($db_options_data[$i]['tOptionNameLang'])) {
                    $tOptionNameLang = json_decode(trim($db_options_data[$i]['tOptionNameLang'], '"'), true);
                    if (isset($tOptionNameLang['tOptionNameLang_' . $vLanguage]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLanguage])) {
                        $db_options_data[$i]['vOptionName'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
                    }
                    $db_options_data[$i]['tOptionNameLang'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
                }
                if (isset($db_options_data[$i]['eOptionType']) && $db_options_data[$i]['eOptionType'] == "Options") {
                    $returnArr[$iMenuItemId]['options'][] = $db_options_data[$i];
                }
                if (isset($db_options_data[$i]['eOptionType']) && $db_options_data[$i]['eOptionType'] == "Addon") {
                    $returnArr[$iMenuItemId]['addon'][] = $db_options_data[$i];
                }
            }
        }
    }
    return $returnArr;
}

function GetMenuItemOptionsToppingMulti($iMenuItemId, $currencySymbol, $Ratio, $vLanguage, $iServiceId = '', $iCompanyId = '', $currencycode = "")
{
    global $obj, $tconfig, $serviceCatDataArr;
    $returnArr = $catArray = array();
    $ispriceshow = '';
    $vLanguage = strtoupper($vLanguage);
    if (isset($iServiceId) && !empty($iServiceId)) {
        //Added By HJ On 15-07-2020 For Optimize service_categories Table Query Start
        $serviceCatArr = $ServiceCategoryData = array();
        if (count($serviceCatDataArr) > 0) {
            $ServiceCategoryData = $serviceCatDataArr;
        } else {
            $ServiceCategoryData = $serviceCatDataArr = $obj->MySQLSelect("SELECT * FROM service_categories");
        }
        for ($h = 0; $h < count($ServiceCategoryData); $h++) {
            $serviceCatArr[$ServiceCategoryData[$h]['iServiceId']] = $ServiceCategoryData[$h];
        }
        if (isset($serviceCatArr[$iServiceId])) {
            $ServiceCategoryData = $serviceCatArr[$iServiceId];
        } else {
            $ServiceCategoryData = get_value('service_categories', $servFields, 'iServiceId', $iServiceId);
        }
        //Added By HJ On 15-07-2020 For Optimize service_categories Table Query End
        if (!empty($ServiceCategoryData)) {
            if (!empty($ServiceCategoryData[0]['eType']) && $ServiceCategoryData[0]['eType'] == 'separate') {
                $ispriceshow = $ServiceCategoryData[0]['eType'];
            }
        }
    }
    if (!empty($ispriceshow)) {
        $db_options_cat_data = $obj->MySQLSelect("SELECT mo.iOptionsCategoryId,mo.tCategoryName,mo.iMenuItemId FROM menuitem_options_category as mo LEFT JOIN menu_items as mi ON mo.iMenuItemId = mi.iMenuItemId WHERE mo.iMenuItemId IN ($iMenuItemId) AND mo.eStatus = 'Active'");
    } else {
        $db_options_cat_data = $obj->MySQLSelect("SELECT iOptionsCategoryId,tCategoryName,iMenuItemId FROM menuitem_options_category WHERE iMenuItemId IN ($iMenuItemId) AND eStatus = 'Active'");
    }
    if (count($db_options_cat_data) > 0) {
        foreach ($db_options_cat_data as $key => $value) {
            $returnArr = $value1 = array();
            if (isset($value['tCategoryName']) && !empty($value['tCategoryName'])) {
                $tCategoryName = json_decode($value['tCategoryName'], true);
                if (isset($tCategoryName['tCategoryName_' . $vLanguage]) && !empty($tCategoryName['tCategoryName_' . $vLanguage])) {
                    $value['vCatName'] = $tCategoryName['tCategoryName_' . $vLanguage];
                }
                $value['tCategoryName'] = $tCategoryName['tCategoryName_' . $vLanguage];
            }
            $ssqlCat = " AND iOptionsCategoryId = '" . $value['iOptionsCategoryId'] . "'";
            $iMenuItemIdNew = $value['iMenuItemId'];
            if (!empty($ispriceshow)) {
                $sql = "SELECT mo.iOptionId,mo.vOptionName,IF(mo.eDefault='Yes' AND mo.eOptionType='Options',mi.fprice,mo.fprice) as fPrice,mo.eOptionType,mo.eDefault,mo.iMenuItemId, mi.fOfferAmt,mo.tOptionNameLang,mo.tOptionAddonTitle FROM menuitem_options as mo LEFT JOIN menu_items as mi ON mo.iMenuItemId = mi.iMenuItemId WHERE mo.iMenuItemId IN ($iMenuItemIdNew) AND mo.eStatus = 'Active' $ssqlCat ORDER BY mo.eDefault";
            } else {
                $sql = "SELECT iOptionId,vOptionName,fPrice,eOptionType,eDefault,iMenuItemId,tOptionNameLang,tOptionAddonTitle FROM menuitem_options WHERE iMenuItemId IN ($iMenuItemIdNew) AND eStatus = 'Active' $ssqlCat ORDER BY eDefault";
            }
            $db_options_data = $obj->MySQLSelect($sql);
            if (count($db_options_data) > 0) {
                $value['tOptionTitle'] = $value['tAddonTitle'] = "";
                $returnArr[$iMenuItemId]['options'] = array();
                $returnArr[$iMenuItemId]['addon'] = array();
                for ($i = 0; $i < count($db_options_data); $i++) {
                    $fPrice = $db_options_data[$i]['fPrice'];
                    $iMenuItemIdNew1 = $db_options_data[$i]['iMenuItemId'];
                    $fUserPrices = $fPrice * $Ratio;
                    $db_options_data[$i]['fPrice'] = strval($fUserPrices);
                    $fUserPrice = round($fPrice * $Ratio, 2);
                    //$fUserPrice = number_format($fPrice * $Ratio, 2);
                    //$fUserPriceWithSymbol = $currencySymbol . " " . number_format($fUserPrices, 2);
                    $fUserPriceWithSymbol = formateNumAsPerCurrency($fUserPrices, $currencycode);
                    $db_options_data[$i]['fUserPrice'] = strval($fUserPrice);
                    $db_options_data[$i]['fUserPriceWithSymbol'] = $fUserPriceWithSymbol;
                    //added by SP for offer amount
                    $StrikeoutPrice = setTwoDecimalPoint($fPrice * $Ratio, 2);
                    $db_options_data[$i]['fToppingStrikeoutPrice'] = $StrikeoutPrice;
                    $db_options_data[$i]['fToppingStrikeoutPricewithsymbol'] = $currencySymbol . " " . $StrikeoutPrice;
                    $MenuItemPriceArr = FetchMenuItemCostByStoreOffer($iMenuItemId, $iCompanyId, 1, '', "Display", "", "", $iServiceId);
                    $fOfferAmt = round($MenuItemPriceArr['fOfferAmt'], 2);
                    $db_options_data[$i]['fToppingDiscountPrice'] = "";
                    $db_options_data[$i]['fToppingDiscountPricewithsymbol'] = "";
                    if ($fOfferAmt > 0) {
                        $fDiscountPrice = $fPrice - (($fPrice * $fOfferAmt) / 100);
                        $fDiscountPrice = $fDiscountPrice * $Ratio;
                        if (!empty($fDiscountPrice)) {
                            $fDiscountPrice = setTwoDecimalPoint($fDiscountPrice, 2);
                            $db_options_data[$i]['fToppingDiscountPrice'] = $fDiscountPrice;
                            $db_options_data[$i]['fToppingDiscountPricewithsymbol'] = $currencySymbol . " " . $fDiscountPrice;
                        }
                    }
                    if (isset($db_options_data[$i]['tOptionNameLang']) && !empty($db_options_data[$i]['tOptionNameLang'])) {
                        $tOptionNameLang = json_decode($db_options_data[$i]['tOptionNameLang'], true);
                        if (isset($tOptionNameLang['tOptionNameLang_' . $vLanguage]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLanguage])) {
                            $db_options_data[$i]['vOptionName'] = $tOptionNameLang['tOptionNameLang_' . $vLanguage];
                        }
                        //$db_options_data[$i]['tOptionNameLang'] = $tOptionNameLang['tOptionNameLang_'.$vLanguage];
                        $db_options_data[$i]['tOptionNameLang'] = !empty($tOptionNameLang['tOptionNameLang_' . $vLanguage]) ? $tOptionNameLang['tOptionNameLang_' . $vLanguage] : $db_options_data[$i]['vOptionName'];
                    }
                    $tOptionAddonTitle = !empty($db_options_data[$i]['tOptionAddonTitle']) ? json_decode($db_options_data[$i]['tOptionAddonTitle'], true) : "";
                    if ($db_options_data[$i]['eOptionType'] == "Options") {
                        $returnArr[$iMenuItemIdNew1]['options'][] = $db_options_data[$i];
                        $value['tOptionTitle'] = !empty($tOptionAddonTitle) ? $tOptionAddonTitle['tOptionAddonTitle_' . $vLanguage] : "";
                    }
                    if ($db_options_data[$i]['eOptionType'] == "Addon") {
                        $returnArr[$iMenuItemIdNew1]['addon'][] = $db_options_data[$i];
                        $value['tAddonTitle'] = !empty($tOptionAddonTitle) ? $tOptionAddonTitle['tOptionAddonTitle_' . $vLanguage] : "";
                    }
                }
            }
            if (isset($returnArr[$iMenuItemIdNew1]['options'][0])) {
                $returnArr[$iMenuItemIdNew1]['options'][0]['eDefault'] = 'Yes';
            }
            if (!empty($returnArr[$iMenuItemIdNew1])) {
                $value1 = $returnArr[$iMenuItemIdNew1];
                $catArray[$iMenuItemIdNew1]['Category'][] = array_merge($value, $value1);
            } else {
                //$catArray[$iMenuItemId]['Category'][] = $value;
            }
        }
    }
    return $catArray;
}

function CheckRideDeliveryFeatureDisable()
{
    global $obj, $APP_TYPE, $MODULES_OBJ, $vehicleCategoryDataArr;
    $eShowRideVehicles = $eShowDeliveryVehicles = $eShowDeliverAllVehicles = $RideDeliveryBothFeatureDisable = "No";
    $eMotoRideEnable = $eMotoDeliveryEnable = $eRentalEnable = $eMotoRentalEnable = "Yes";
    if ($APP_TYPE == "Ride-Delivery-UberX" || $APP_TYPE == "Ride-Delivery" || $APP_TYPE == "Delivery") {
        $eMotoRideEnable = $eMotoDeliveryEnable = $eRentalEnable = $eMotoRentalEnable = "No";
        $ssql = '';
        if ($APP_TYPE == "Ride-Delivery" || $APP_TYPE == "Delivery") {
            $ssql .= " AND eFor = 'DeliveryCategory' AND eCatType ='MoreDelivery'";
        }
        $sql_vehicle_category_table_name = getVehicleCategoryTblName();
        //Added By HJ On 13-06-2020 For Optimization Vehicle Category Table Query Start
        if (isset($vehicleCategoryDataArr[$sql_vehicle_category_table_name])) {
            $getVehicleCatData = $vehicleCategoryDataArr[$sql_vehicle_category_table_name];
        } else {
            $getVehicleCatData = $obj->MySQLSelect("SELECT * FROM " . $sql_vehicle_category_table_name);
            $vehicleCategoryDataArr[$sql_vehicle_category_table_name] = $getVehicleCatData;
        }
        $rideDeliveryIconData = array();
        for ($v = 0; $v < count($getVehicleCatData); $v++) {
            $vehicleeCatType = $getVehicleCatData[$v]['eCatType'];
            if (strtoupper($vehicleeCatType) != "SERVICEPROVIDER") {
                $rideDeliveryIconData[] = $getVehicleCatData[$v];
            }
        }
        //Added By HJ On 17-06-2020 For Optimization Vehicle Category Table Query End
        //echo "<pre>";
        //print_r($rideDeliveryIconData);die;
        ########### Stage 1 ###########
        if ($APP_TYPE == "Ride-Delivery-UberX" || $APP_TYPE == "Ride-Delivery") {
            for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                $data_temp = $rideDeliveryIconData[$i];
                if ($data_temp['eCatType'] == "Ride" || $data_temp['eCatType'] == "MotoRide" || $data_temp['eCatType'] == "Rental" || $data_temp['eCatType'] == "MotoRental") {
                    $iParentId_tmp = $data_temp['iParentId'];
                    $eStatus_tmp = $data_temp['eStatus'];
                    if ($eStatus_tmp == "Active" && ($iParentId_tmp == 0 || $iParentId_tmp == "0")) {
                        $eShowRideVehicles = "Yes";
                    }
                } else if ($data_temp['eCatType'] == "Delivery" || $data_temp['eCatType'] == "MotoDelivery") {
                    $iParentId_tmp = $data_temp['iParentId'];
                    $eStatus_tmp = $data_temp['eStatus'];
                    if ($eStatus_tmp == "Active" && ($iParentId_tmp == 0 || $iParentId_tmp == "0")) {
                        $eShowDeliveryVehicles = "Yes";
                    }
                    //} else if ($data_temp['eCatType'] == "DeliverAll") {
                } else if ($data_temp['eCatType'] == "DeliverAll" || in_array($data_temp['eCatType'], ['Genie', 'Runner', 'Anywhere'])) {
                    $iParentId_tmp = $data_temp['iParentId'];
                    $eStatus_tmp = $data_temp['eStatus'];
                    if ($eStatus_tmp == "Active" && ($iParentId_tmp == 0 || $iParentId_tmp == "0")) {
                        $eShowDeliverAllVehicles = "Yes";
                    }
                }
            }
        }
        // Ride Enable Checking
        ########## Stage 1 ############ Get Main Category #######
        if ($eShowRideVehicles == "No") {
            $main_category_ids = array();
            $count_main_category = 0;
            for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                $data_temp = $rideDeliveryIconData[$i];
                if ($data_temp['eCatType'] == "MoreDelivery" && $data_temp['eStatus'] == "Active") {
                    $main_category_ids[$count_main_category] = $data_temp['iVehicleCategoryId'];
                    $count_main_category++;
                }
            }
            if (count($main_category_ids) > 0) {
                $sub_category_ids = array();
                $count_sub_category = 0;
                foreach ($main_category_ids as $k => $val) {
                    for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                        $data_temp = $rideDeliveryIconData[$i];
                        if ($data_temp['eStatus'] == "Active" && $data_temp['iParentId'] == $val) {
                            $sub_category_ids[$count_sub_category] = $data_temp['iVehicleCategoryId'];
                            $count_sub_category++;
                        }
                    }
                }
                if (count($sub_category_ids) > 0) {
                    $ssub_category_ids = $tempsubcat = array();
                    $count_ssub_category = 0;
                    foreach ($sub_category_ids as $k => $val) {
                        for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                            $data_temp = $rideDeliveryIconData[$i];
                            if ($data_temp['eStatus'] == "Active" && $data_temp['iParentId'] == $val) {
                                $ssub_category_ids[$count_ssub_category] = $data_temp['iVehicleCategoryId'];
                                $count_ssub_category++;
                            } else if ($data_temp['iParentId'] == $val) {
                                $tempsubcat[$count_ssub_category] = $data_temp['iVehicleCategoryId'];
                                $count_ssub_deliverycategory++;
                            }
                        }
                    }
                    if (count($tempsubcat) == 0 || count($ssub_category_ids) > 0) {
                        $eShowRideVehicles = "Yes";
                    }
                }
            }
        }
        // Delivery Enable Checking
        ########### Stage 1 ###########
        if ($eShowDeliveryVehicles == "No") {
            $main_category_ids = array();
            $count_main_category = 0;
            for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                $data_temp = $rideDeliveryIconData[$i];
                if ($data_temp['eCatType'] == "MoreDelivery" && $data_temp['eFor'] == "DeliveryCategory" && $data_temp['eStatus'] == "Active") {
                    $main_category_ids[$count_main_category] = $data_temp['iVehicleCategoryId'];
                    $count_main_category++;
                }
            }
            // 178
            ########## Stage 2 ############ Get Main Category #######
            if (count($main_category_ids) > 0) {
                $sub_deliverycategory_ids = array();
                $count_sub_category = 0;
                foreach ($main_category_ids as $k => $val) {
                    for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                        $data_temp = $rideDeliveryIconData[$i];
                        if ($data_temp['eStatus'] == "Active" && $data_temp['iParentId'] == $val) {
                            $sub_deliverycategory_ids[$count_sub_category] = $data_temp['iVehicleCategoryId'];
                            $count_sub_category++;
                        }
                    }
                }
                if (count($sub_deliverycategory_ids) > 0) {
                    $ssub_deliverycategory_ids = $tempsubcat = array();
                    $count_ssub_deliverycategory = 0;
                    foreach ($sub_deliverycategory_ids as $k => $val) {
                        for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                            $data_temp = $rideDeliveryIconData[$i];
                            if ($data_temp['eStatus'] == "Active" && $data_temp['iParentId'] == $val) {
                                $ssub_deliverycategory_ids[$count_ssub_deliverycategory] = $data_temp['iVehicleCategoryId'];
                                $count_ssub_deliverycategory++;
                            } else if ($data_temp['iParentId'] == $val) {
                                $tempsubcat[$count_ssub_deliverycategory] = $data_temp['iVehicleCategoryId'];
                                $count_ssub_deliverycategory++;
                            }
                        }
                    }
                    if (count($tempsubcat) == 0 || count($ssub_deliverycategory_ids) > 0) {
                        $eShowDeliveryVehicles = "Yes";
                    }
                }
            }
        }
        // Deliverall Enable Checking
        ########### Stage 1 ###########
        $main_Deliverallcategory_ids = array();
        if ($eShowDeliverAllVehicles == "No") {
            $count_mainDeliverall_category = 0;
            for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                $data_temp = $rideDeliveryIconData[$i];
                if ($data_temp['eCatType'] == "MoreDelivery" && $data_temp['eFor'] == "DeliverAllCategory" && $data_temp['eStatus'] == "Active") {
                    $main_Deliverallcategory_ids[$count_mainDeliverall_category] = $data_temp['iVehicleCategoryId'];
                    $count_mainDeliverall_category++;
                }
            }
        }
        // 185
        ########## Stage 2 ############ Get Main Category #######
        if (count($main_Deliverallcategory_ids) > 0) {
            $sub_deliverAllcategory_ids = array();
            $count_deliverallsub_category = 0;
            foreach ($main_Deliverallcategory_ids as $k => $val) {
                for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                    $data_temp = $rideDeliveryIconData[$i];
                    if ($data_temp['eStatus'] == "Active" && $data_temp['iParentId'] == $val) {
                        $sub_deliverAllcategory_ids[$count_deliverallsub_category] = $data_temp['iVehicleCategoryId'];
                        $count_deliverallsub_category++;
                    }
                }
            }
            if (count($sub_deliverAllcategory_ids) > 0) {
                $ssub_deliverallcategory_ids = $tempsubcat = array();
                $count_ssub_deliverallcategory = 0;
                foreach ($sub_deliverAllcategory_ids as $k => $val) {
                    for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
                        $data_temp = $rideDeliveryIconData[$i];
                        if ($data_temp['eStatus'] == "Active" && $data_temp['iParentId'] == $val) {
                            $ssub_deliverallcategory_ids[$count_ssub_deliverallcategory] = $data_temp['iVehicleCategoryId'];
                            $count_ssub_deliverallcategory++;
                        } elseif ($data_temp['iParentId'] == $val) {
                            $tempsubcat[$count_ssub_deliverallcategory] = $data_temp['iVehicleCategoryId'];
                            $count_ssub_deliverallcategory++;
                        }
                    }
                }
                if (count($tempsubcat) == 0 || count($ssub_deliverallcategory_ids) > 0) {
                    $eShowDeliverAllVehicles = "Yes";
                }
            }
        }
        for ($i = 0; $i < count($rideDeliveryIconData); $i++) {
            $data_temp = $rideDeliveryIconData[$i];
            if ($data_temp['eCatType'] == "MotoRide" && $data_temp['eStatus'] == "Active") {
                $eMotoRideEnable = "Yes";
            } else if ($data_temp['eCatType'] == "MotoDelivery" && $data_temp['eStatus'] == "Active") {
                $eMotoDeliveryEnable = "Yes";
            } else if ($data_temp['eCatType'] == "Rental" && $data_temp['eStatus'] == "Active") {
                $eRentalEnable = "Yes";
            } else if ($data_temp['eCatType'] == "MotoRental" && $data_temp['eStatus'] == "Active") {
                $eMotoRentalEnable = "Yes";
            }
        }
    } else if ($APP_TYPE == "Ride") {
        $eShowRideVehicles = $eMotoRideEnable = $eRentalEnable = $eMotoRentalEnable = "Yes";
    }

    $isAdmin = "No";
    if(isset($_SESSION['sess_iAdminUserId'])) {
        $isAdmin = "Yes";
    }
    if (!$MODULES_OBJ->isRideFeatureAvailable($isAdmin)) {
        $eShowRideVehicles = $eMotoRideEnable = $eRentalEnable = $eMotoRentalEnable = "No";
    }
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable($isAdmin)) {
        $eShowDeliveryVehicles = $eMotoDeliveryEnable = "No";
    }
    if (!$MODULES_OBJ->isDeliverAllFeatureAvailable($isAdmin)) {
        $eShowDeliverAllVehicles = "No";
    }
    if ($eShowRideVehicles == "No" && $eShowDeliveryVehicles == "No") {
        $RideDeliveryBothFeatureDisable = "Yes";
    }
    if (ONLYDELIVERALL == "Yes") {
        $eShowDeliverAllVehicles = "Yes";
    }
    $returnArr['eShowRideVehicles'] = ONLYDELIVERALL == "Yes" ? 'No' : $eShowRideVehicles;
    $returnArr['eShowDeliveryVehicles'] = ONLYDELIVERALL == "Yes" ? 'No' : $eShowDeliveryVehicles;
    $returnArr['eShowDeliverAllVehicles'] = ONLYDELIVERALL == "Yes" ? 'Yes' : $eShowDeliverAllVehicles;
    $returnArr['RideDeliveryBothFeatureDisable'] = ONLYDELIVERALL == "Yes" ? 'Yes' : $RideDeliveryBothFeatureDisable;
    $returnArr['eMotoRideEnable'] = ONLYDELIVERALL == "Yes" ? 'No' : $eMotoRideEnable;
    $returnArr['eMotoDeliveryEnable'] = ONLYDELIVERALL == "Yes" ? 'No' : $eMotoDeliveryEnable;
    $returnArr['eRentalEnable'] = ONLYDELIVERALL == "Yes" ? 'No' : $eRentalEnable;
    $returnArr['eMotoRentalEnable'] = ONLYDELIVERALL == "Yes" ? 'No' : $eMotoRentalEnable;
    return $returnArr;
}

function getUserCurrencyLanguageDetails($iUserId = "", $iOrderId = 0)
{
    global $obj, $tconfig, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $orderDetailsArr, $userDetailsArr, $currencyAssociateArr, $LANG_OBJ;
    $returnArr = array();
    if ($iUserId != "") {
        //Added By HJ On 13-07-2020 For Optimize register_user Table Query Start
        if (isset($userDetailsArr['register_user_' . $iUserId])) {
            $passengerData = $userDetailsArr['register_user_' . $iUserId];
        } else {
            $passengerData = $obj->MySQLSelect("SELECT *,iUserId as iMemberId FROM register_user WHERE iUserId='" . $iUserId . "'");
            $userDetailsArr['register_user_' . $iUserId] = $passengerData;
        }
        //Added By HJ On 13-07-2020 For Optimize register_user Table Query End
        //Added By HJ On 13-07-2020 For Optimize currency Table Query Start
        $vCurrencyPassenger = $passengerData[0]['vCurrencyPassenger'];
        if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
            $userCurrencyData = $currencyAssociateArr[$vCurrencyPassenger];
            //echo "<pre>";print_r($userCurrencyData);die;
            $passengerData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $passengerData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        }


        //Added By HJ On 13-07-2020 For Optimize currency Table Query End
        //$sqlp = "SELECT ru.vCurrencyPassenger,ru.vLang,cu.vSymbol,cu.Ratio FROM register_user as ru LEFT JOIN currency as cu ON ru.vCurrencyPassenger = cu.vName WHERE iUserId = '" . $iUserId . "'";
        //$passengerData = $obj->MySQLSelect($sqlp);
        $currencycode = $passengerData[0]['vCurrencyPassenger'];
        $vLanguage = $passengerData[0]['vLang'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $Ratio = $passengerData[0]['Ratio'];
        if ($iOrderId > 0) {
            //Added By HJ On 13-07-2020 For Optimize Order Table Query Start
            if (isset($orderDetailsArr['orders_' . $iOrderId])) {
                $CurrencyData = $orderDetailsArr['orders_' . $iOrderId];
            } else {
                $CurrencyData = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");
                $orderDetailsArr['orders_' . $iOrderId] = $CurrencyData;
            }
            //echo "<pre>";print_r($CurrencyData);die;
            if (isset($CurrencyData[0]['fRatio_' . $currencycode])) {
                $Ratio = $CurrencyData[0]['fRatio_' . $currencycode];
            }
            //Added By HJ On 13-07-2020 For Optimize Order Table Query End
        }
        if ($vLanguage == "" || $vLanguage == NULL) {
            //Added By HJ On 13-07-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 13-07-2020 For Optimize language_master Table Query End
        }
        if ($currencycode == "" || $currencycode == NULL) {
            //Added By HJ On 13-07-2020 For Optimization currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencycode = $vSystemDefaultCurrencyName;
                $currencySymbol = $vSystemDefaultCurrencySymbol;
                $Ratio = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
                $currencycode = $currencyData[0]['vName'];
                $currencySymbol = $currencyData[0]['vSymbol'];
                $Ratio = $currencyData[0]['Ratio'];
            }
            //Added By HJ On 13-07-2020 For Optimization currency Table Query End
        }


    } else {
        //Added By HJ On 13-07-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 13-07-2020 For Optimize language_master Table Query End
        //Added By HJ On 13-07-2020 For Optimization currency Table Query Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
            $Ratio = $vSystemDefaultCurrencyRatio;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        }
        //Added By HJ On 13-07-2020 For Optimization currency Table Query End
    }
    $returnArr['currencycode'] = $currencycode;
    $returnArr['currencySymbol'] = $currencySymbol;
    $returnArr['Ratio'] = $Ratio;
    $returnArr['vLang'] = $vLanguage;
    return $returnArr;
}

function getDriverCurrencyLanguageDetails($iDriverId = "", $iOrderId = 0)
{
    global $obj, $tconfig, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $orderDetailsArr, $userDetailsArr, $currencyAssociateArr, $LANG_OBJ;
    $returnArr = array();
    if ($iDriverId != "") {
        //Added By HJ On 13-07-2020 For Optimize register_driver Table Query Start
        if (isset($userDetailsArr['register_driver_' . $iDriverId])) {
            $passengerData = $userDetailsArr['register_driver_' . $iDriverId];
        } else {
            $passengerData = $obj->MySQLSelect("SELECT *,iDriverId as iMemberId FROM register_driver WHERE iUserId='" . $iDriverId . "'");
            $userDetailsArr['register_driver_' . $iDriverId] = $passengerData;
        }
        //Added By HJ On 13-07-2020 For Optimize register_driver Table Query End
        //Added By HJ On 13-07-2020 For Optimize currency Table Query Start
        $vCurrencyDriver = $passengerData[0]['vCurrencyDriver'];
        if (isset($currencyAssociateArr[$vCurrencyDriver])) {
            $userCurrencyData = $currencyAssociateArr[$vCurrencyDriver];
            //echo "<pre>";print_r($userCurrencyData);die;
            $passengerData[0]['Ratio'] = $userCurrencyData['Ratio'];
            $passengerData[0]['vSymbol'] = $userCurrencyData['vSymbol'];
        }
        //Added By HJ On 13-07-2020 For Optimize currency Table Query End
        //$sqlp = "SELECT rd.vCurrencyDriver,rd.vLang,cu.vSymbol,cu.Ratio FROM register_driver as rd LEFT JOIN currency as cu ON rd.vCurrencyDriver = cu.vName WHERE iDriverId = '" . $iDriverId . "'";
        //$passengerData = $obj->MySQLSelect($sqlp);
        $currencycode = $passengerData[0]['vCurrencyDriver'];
        $vLanguage = $passengerData[0]['vLang'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $Ratio = $passengerData[0]['Ratio'];
        if ($iOrderId > 0) {
            //Added By HJ On 13-07-2020 For Optimize Order Table Query Start
            if (isset($orderDetailsArr['orders_' . $iOrderId])) {
                $CurrencyData = $orderDetailsArr['orders_' . $iOrderId];
            } else {
                $CurrencyData = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId = '" . $iOrderId . "'");
                $orderDetailsArr['orders_' . $iOrderId] = $CurrencyData;
            }
            //echo "<pre>";print_r($CurrencyData);die;
            if (isset($CurrencyData[0]['fRatio_' . $currencycode])) {
                $Ratio = $CurrencyData[0]['fRatio_' . $currencycode];
            }
            //Added By HJ On 13-07-2020 For Optimize Order Table Query End
        }
        if ($vLanguage == "" || $vLanguage == NULL) {
            //Added By HJ On 13-07-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 13-07-2020 For Optimize language_master Table Query End
        }
        if ($currencycode == "" || $currencycode == NULL) {
            //Added By HJ On 13-07-2020 For Optimization currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencycode = $vSystemDefaultCurrencyName;
                $currencySymbol = $vSystemDefaultCurrencySymbol;
                $Ratio = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
                $currencycode = $currencyData[0]['vName'];
                $currencySymbol = $currencyData[0]['vSymbol'];
                $Ratio = $currencyData[0]['Ratio'];
            }
            //Added By HJ On 13-07-2020 For Optimization currency Table Query End
        }
    } else {
        //Added By HJ On 13-07-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 13-07-2020 For Optimize language_master Table Query End
        //Added By HJ On 13-07-2020 For Optimization currency Table Query Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
            $Ratio = $vSystemDefaultCurrencyRatio;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        }
        //Added By HJ On 13-07-2020 For Optimization currency Table Query End
    }
    $returnArr['currencycode'] = $currencycode;
    $returnArr['currencySymbol'] = $currencySymbol;
    $returnArr['Ratio'] = $Ratio;
    $returnArr['vLang'] = $vLanguage;
    return $returnArr;
}

function FetchUserAvgRating($iMemberId, $eUserType = "Passenger", $checkDeleted = "No")
{
    global $obj, $MODULES_OBJ;
    if ($eUserType == "Passenger") {
        $iUserId = "iDriverId";
        $checkusertype = "Passenger";
    } else if ($eUserType == "Company") {
        $iUserId = "iCompanyId";
        $checkusertype = "Company";
    } else {
        $iUserId = "iUserId";
        $checkusertype = "Driver";
        if (strtoupper($_REQUEST['eSystem']) == "DELIVERALL" && strtoupper($_REQUEST['GeneralUserType']) == "COMPANY") {
            $iUserId = "iCompanyId";
        }
        if (strtoupper($_REQUEST['eSystem']) == "DELIVERALL" && strtoupper($_REQUEST['GeneralUserType']) == "DRIVER") {
            $iUserId = "iDriverId";
        }
    }
    $average_rating = 0;
    $ssql = "";
    if (strtoupper($checkDeleted) == "YES") {
        $ssql .= " eStatus != 'Deleted' ";
    }
    //if (isset($_REQUEST['eSystem']) && strtoupper($_REQUEST['eSystem']) == "DELIVERALL") {
    if ((isset($_REQUEST['eSystem']) && strtoupper($_REQUEST['eSystem']) == "DELIVERALL") || (isset($_REQUEST['GeneralUserType']) && strtoupper($_REQUEST['GeneralUserType']) == "COMPANY")) {
        $usertotaltrips = $obj->MySQLSelect("SELECT iOrderId from orders WHERE $iUserId = '" . $iMemberId . "'");
        $iOrderId = "";
        if (count($usertotaltrips) > 0) {
            for ($i = 0; $i < count($usertotaltrips); $i++) {
                $iOrderId .= $usertotaltrips[$i]['iOrderId'] . ",";
            }
            $iOrderId_str = substr($iOrderId, 0, -1);
            // echo  $iTripId_str;exit;
            $sql = "SELECT count(iRatingId) as ToTalTrips, SUM(vRating1) as ToTalRatings from ratings_user_driver WHERE iOrderId IN (" . $iOrderId_str . ") AND eToUserType = '" . $checkusertype . "' AND vRating1!='' $ssql ";
            $result_ratings = $obj->MySQLSelect($sql);
            $ToTalTrips = $result_ratings[0]['ToTalTrips'];
            $ToTalRatings = $result_ratings[0]['ToTalRatings'];
            // $average_rating = round($ToTalRatings / $ToTalTrips, 2);
            if ($ToTalTrips != 0 && $ToTalRatings != 0) {
                $average_rating = round($ToTalRatings / $ToTalTrips, 1);
            }
        }
    } else {
        /*  $usertotaltrips = $obj->MySQLSelect("SELECT iTripId from trips WHERE $iUserId = '" . $iMemberId . "' AND eHailTrip = 'No' AND (eBookingFrom != 'Hotel' OR eBookingFrom != 'Kiosk')");
        if (count($usertotaltrips) > 0) {

            $iTripId = "";
            for ($i = 0; $i < count($usertotaltrips); $i++) {

                $iTripId .= $usertotaltrips[$i]['iTripId'] . ",";
            }
            $iTripId_str = substr($iTripId, 0, -1);
            //echo  $iTripId_str;exit;
            $sql = "SELECT count(iRatingId) as ToTalTrips, SUM(vRating1) as ToTalRatings from ratings_user_driver WHERE iTripId IN (" . $iTripId_str . ") AND eUserType = '" . $checkusertype . "' AND vRating1!=''";
            $result_ratings = $obj->MySQLSelect($sql);
            $ToTalTrips = $result_ratings[0]['ToTalTrips'];
            $ToTalRatings = $result_ratings[0]['ToTalRatings'];
            //$average_rating = round($ToTalRatings / $ToTalTrips, 2);
            $average_rating = round($ToTalRatings / $ToTalTrips, 1);
        } */
        $ToTalTrips = $ToTalRatings = 0;
        $usertotaltrips = $obj->MySQLSelect("SELECT iTripId from trips WHERE $iUserId = '" . $iMemberId . "' AND eHailTrip = 'No' AND (eBookingFrom != 'Hotel' OR eBookingFrom != 'Kiosk')");
        if (count($usertotaltrips) > 0) {
            $iTripId = "";
            for ($i = 0; $i < count($usertotaltrips); $i++) {
                $iTripId .= $usertotaltrips[$i]['iTripId'] . ",";
            }
            $iTripId_str = substr($iTripId, 0, -1);
            //echo  $iTripId_str;exit;
            $sql = "SELECT count(iRatingId) as ToTalTrips, SUM(vRating1) as ToTalRatings from ratings_user_driver WHERE iTripId IN (" . $iTripId_str . ") AND eUserType = '" . $checkusertype . "' AND vRating1 != '' $ssql ";
            $result_ratings = $obj->MySQLSelect($sql);
            $ToTalTrips += $result_ratings[0]['ToTalTrips'];
            $ToTalRatings += $result_ratings[0]['ToTalRatings'];
            //$average_rating = round($ToTalRatings / $ToTalTrips, 2);
        }
        if ($MODULES_OBJ->isEnableBiddingServices()) {
            $userBidding = $obj->MySQLSelect("SELECT bp.iBiddingPostId from bidding_post bp WHERE $iUserId = '" . $iMemberId . "' AND vTaskStatus = 'Finished' ");
            if (count($userBidding) > 0) {
                $iTripId = "";
                for ($i = 0; $i < count($userBidding); $i++) {
                    $iTripId .= $userBidding[$i]['iBiddingPostId'] . ",";
                }
                $iTripId_str = substr($iTripId, 0, -1);
                $usertotaltrips = $obj->MySQLSelect("SELECT count(bsr.iBiddingPostId) as iBiddingPostId, SUM(bsr.fRating) as ToTalRatings from bidding_service_ratings bsr JOIN bidding_post bp on(bp.iBiddingPostId = bsr.iBiddingPostId) WHERE  bp.iBiddingPostId IN (" . $iTripId_str . ") AND $iUserId = '" . $iMemberId . "' AND eUserType = '" . $checkusertype . "' $ssql ");
                $ToTalTrips += $usertotaltrips[0]['iBiddingPostId'];
                $ToTalRatings += $usertotaltrips[0]['ToTalRatings'];
            }
        }
        if ($ToTalTrips != 0 && $ToTalRatings != 0) {
            $average_rating = round($ToTalRatings / $ToTalTrips, 1);
        }
    }
    return $average_rating;
}

function GetCustomNotificationDetails($id, $messageArr, $vLang = "")
{
    if (isset($_REQUEST['eSystem']) && strtoupper($_REQUEST['eSystem']) == "DELIVERALL") {
        return GetCustomNotificationDetailsDeliverAll($id, $messageArr, $vLang);
    } else {
        return GetCustomNotificationDetailsGeneral($id, $messageArr, $vLang);
    }
}

function GetCustomNotificationDetailsGeneral($iTripId, $vMessage, $vLang = "")
{
    global $obj, $LANG_OBJ;
    $customArrayNotification = array();
    //echo $iTripId;
    $StatusArray = array("Active", "Arrived", "On Going Trip", "Finished");
    $StatusArrayIcon = array("Active", "Arriving", "OnGoingTrip", "Finished");
    $tripdata = $obj->MySQLSelect("SELECT t.iTripId,t.iCabBookingId,t.vRideNo,t.iActive,t.eCancelled,t.eDriverArrived,t.eApproveRequestSentByDriver,t.vChargesDetailData,t.eType,t.eApproved,t.iFromStationId,t.iToStationId,u.vLang,d.vTripStatus, CONCAT(u.vName,' ',u.vLastName) as ridername, CONCAT(d.vName,' ',d.vLastName) as drivername FROM trips t LEFT Join register_user u ON u.iUserId = t.iUserId LEFT JOIN register_driver d on d.iDriverId = t.iDriverId WHERE t.iTripId = $iTripId AND t.eSystem = 'General'");
    if (empty($vLang)) {
        $vLang = $tripdata[0]['vLang'];
        if ($vLang == "" || $vLang == NULL) {
            $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
        }
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", 0);
    $iActiveCurrent = $tripdata[0]['iActive'];
    $iActiveCurrentDriver = $tripdata[0]['vTripStatus'];
    $eDriverArrived = $tripdata[0]['eDriverArrived'];
    $eApproveRequestSentByDriver = $tripdata[0]['eApproveRequestSentByDriver'];
    $eApproved = $tripdata[0]['eApproved'];
    $vChargesDetailData = $tripdata[0]['vChargesDetailData'];
    $eType = $tripdata[0]['eType'];
    if ($eType == 'Ride') {
        if (!empty($tripdata[0]['iFromStationId']) && !empty($tripdata[0]['iToStationId'])) {
            $StatusArray = array("Active", "On Going Trip", "Finished");
            $StatusArrayTitle = array($languageLabelsArr["LBL_BOOKED"], $languageLabelsArr["LBL_EN_ROUTE"], $languageLabelsArr["LBL_REACHED"]);
            $StatusArrayIcon = array("Active", "OnGoingTrip", "Finished");
            if ($iActiveCurrent == 'Arrived') {
                $iActiveCurrent = 'Active';
                $iActiveCurrentDriver = 'Active';
            }
        } else {
            $StatusArrayTitle = array($languageLabelsArr["LBL_BOOKED"], $languageLabelsArr["LBL_ARRIVING"], $languageLabelsArr["LBL_EN_ROUTE"], $languageLabelsArr["LBL_REACHED"]);
        }
    }
    if ($eType == 'UberX') {
        $StatusArrayTitle = array($languageLabelsArr["LBL_BOOKED"], $languageLabelsArr["LBL_ARRIVING"], $languageLabelsArr["LBL_JOB_START"], $languageLabelsArr["LBL_COMPLETED"]);
    }
    if ($eType == 'Deliver' || $eType == 'Multi-Delivery') {
        $StatusArrayTitle = array($languageLabelsArr["LBL_BOOKED"], $languageLabelsArr["LBL_ARRIVING"], $languageLabelsArr["LBL_IN_TRANSIT"], $languageLabelsArr["LBL_DELIVERED_CUSTOM_NOTI"]);
    }
    $cancel = 0;
    $StatusArrayCancel = $languageLabelsArr["LBL_CANCELLED"];
    $cancelIcon = "cancelled";
    if ($iActiveCurrent == "Canceled" && $tripdata[0]['eCancelled'] == "Yes" && $eDriverArrived == "No") {
        $cancel = 1;
        //$StatusArrayCancel = "Cancelled before arrive";
    }
    if ($iActiveCurrent == "Canceled" && $tripdata[0]['eCancelled'] == "Yes" && $eDriverArrived == "Yes") {
        $cancel = 2;
        //$StatusArrayCancel = "Cancelled after arrive";
    }
    if ($iActiveCurrent == "Finished" && $tripdata[0]['eCancelled'] == "Yes") {
        $cancel = 3;
        //$StatusArrayCancel = "Cancelled after start";
    }
    //Arriving is in active mode when accept request not active booked.
    $arriving = "No";
    if ($iActiveCurrent == 'Active' && $iActiveCurrentDriver != 'Arrived' && empty($tripdata[0]['iFromStationId']) && empty($tripdata[0]['iToStationId'])) {
        $iActiveCurrent = 'Arrived';
        $arriving = "Yes";
    }
    //echo $cancel;exit;
    //echo $cancel.">>".$iActiveCurrentDriver.">>".$tripdata[0]['eCancelled'];exit;
    $complete = "Yes";
    for ($i = 0; $i < count($StatusArray); $i++) {
        $currentStatus = "No";
        //if($cancel == 0 && $StatusArray[$i]=='Cancelled') {
        //    continue;
        //}
        //finished >> when last stage then driver status is not active so it does not shown currentstatus yes..so put this condition
        //on going  trip for multi delivery when more location then seacond trip start at that time it will again set to no for on going and arriverd to set current status becoz here also driver status set to arrived
        //if($iActiveCurrentDriver==$StatusArray[$i] || ($iActiveCurrent=='Finished' && $iActiveCurrent==$StatusArray[$i]) || ($iActiveCurrent=="On Going Trip" && $eType=='Multi-Delivery' && $iActiveCurrent==$StatusArray[$i])) {
        //    $currentStatus = "Yes";
        //    if($eType=='Multi-Delivery' && $iActiveCurrent=="On Going Trip" && $iActiveCurrentDriver=='Arrived' && $iActiveCurrentDriver==$StatusArray[$i]) {
        //        $currentStatus = "No";
        //    }
        //}
        if (($iActiveCurrent == $StatusArray[$i] && $iActiveCurrent != "Active") || ($iActiveCurrent == "Active" && $iActiveCurrentDriver == $StatusArray[$i])) {
            $currentStatus = "Yes";
        }
        if ($StatusArray[$i] == 'Arrived' && $complete == "Yes") {
            if ($arriving == "Yes") {
            } else {
                $StatusArrayTitle[$i] = $languageLabelsArr["LBL_ARRIVED"];
                $StatusArrayIcon[$i] = "Arrived";
            }
        }
        if ($StatusArray[$i] == 'On Going Trip' && !empty($vChargesDetailData) && ($eApproveRequestSentByDriver == "Yes" || !isset($_REQUEST['eApproveRequestSentByDriver']))) {
            $StatusArrayTitle[$i] = $languageLabelsArr["LBL_CONFIRM_TXT"];
            if ($eApproved == "Yes") {
                $complete = "Yes";
            } else {
                $complete = "No";
            }
        }
        if ($StatusArray[$i] == 'On Going Trip' && !empty($vChargesDetailData) && $_REQUEST['eApproveRequestSentByDriver'] == "No") {
            $StatusArrayTitle[$i] = $languageLabelsArr["LBL_DECLINED"];
            if ($eApproved == "Yes") {
                $complete = "Yes";
            } else {
                $complete = "No";
            }
        }
        if ($currentStatus == "Yes") {
            $vCurrentStatus = $StatusArrayTitle[$i];
        }
        //$customArrayNotification[$i]['vStatusOrig'] = $StatusArray[$i];
        $customArrayNotification[$i]['vStatus'] = $StatusArrayTitle[$i];
        $customArrayNotification[$i]['eCompleted'] = $complete;
        $customArrayNotification[$i]['isCurrentStatus'] = $currentStatus;
        $customArrayNotification[$i]['icon'] = $StatusArrayIcon[$i];
        //if($complete=="Yes" && $StatusArray[$i]=='Cancelled' && $cancel==1) {
        //echo $cancel.">>".$i."<br>";
        if ($cancel != 0 && $cancel == $i + 1) {
            $i = $i + 1;
            //$customArrayNotification[$i]['vStatusOrig'] = "Cancelled";
            $customArrayNotification[$i]['vStatus'] = $StatusArrayCancel;
            $customArrayNotification[$i]['eCompleted'] = "Yes";
            $customArrayNotification[$i]['isCurrentStatus'] = "Yes";
            $customArrayNotification[$i]['icon'] = $cancelIcon;
            $vCurrentStatus = $StatusArrayCancel;
            //$currentStatus = "Yes";
            //$customArrayNotification[$i]['currentStatus'] = $currentStatus;
            break;
        }
        //if($iActiveCurrentDriver==$StatusArray[$i]) {
        //    $complete = "No";
        //    //$currentStatus = "Yes";
        //}
        //echo $iActiveCurrent."===".$StatusArray[$i]."====".$iActiveCurrentDriver."<br>";
        if (($iActiveCurrent == $StatusArray[$i] && $iActiveCurrent != "Active") || ($iActiveCurrent == "Active" && $iActiveCurrentDriver == $StatusArray[$i])) {
            $complete = "No";
        }
    }
    $customArrayNotification = array_values(array_filter($customArrayNotification)); // reset array keys
    $customArrayNotification[0]['vCurrentStatus'] = $vCurrentStatus;
    $customArrayNotification[0]['vCurrentStatus_Track'] = str_replace("'", '"', $vMessage);
    $customArrayNotification[0]['eType'] = $eType;
    $customArrayNotification[0]['iCabBookingId'] = $tripdata[0]['iCabBookingId'];
    $customArrayNotification[0]['eFinished'] = "No";
    if ($iActiveCurrent == "Finished") {
        $customArrayNotification[0]['eFinished'] = "Yes";
    }
    return $customArrayNotification;
}

function GetCustomNotificationDetailsDeliverAll($iOrderId, $messageArr, $vLang = "")
{
    global $obj, $vTimeZone, $LANG_OBJ;
    $UserType = "Passenger";
    $NotInStatusCode = "12";
    //$url = "https://cubejekdev.bbcsproducts.net/assets/img/apptype/CJX/";
    //$customArrayImg = array("1"=>"icon1.jpg","2"=>"icon2.jpg","4"=>"icon3.jpg","5"=>"icon4.jpg","6"=>"icon1.jpg","13"=>"icon1.jpg","14"=>"icon1.jpg");
    $customArrayImg = array("1" => "Placed", "2" => "AcceptedStore", "4" => "AcceptedDriver", "5" => "Pickedup", "6" => "Delivered", "8" => "Cancelled", "9" => "Declined", "13" => "Review", "14" => "Billing");
    $orderdata = get_value('orders', 'iUserId,iServiceId,eTakeaway,ePaymentOption,fSubTotal,fOffersDiscount,fDeliveryCharge,fNetTotal,eBuyAnyService,iStatusCode, genieWaitingForUserApproval,genieUserApproved,ePaid,fOutStandingAmount,fRoundingAmount,eRoundingType,vCancelReason,iReasonId,eCancelledBy,iDriverId,vOrderNo', 'iOrderId', $iOrderId, '');
    $iServiceId = $orderdata[0]['iServiceId'];
    $eTakeaway = !empty($orderdata[0]['eTakeaway']) ? $orderdata[0]['eTakeaway'] : "No";
    $eBuyAnyServiceOrd = $orderdata[0]['eBuyAnyService'];
    if (empty($vLang)) {
        $userdata = get_value('register_user', 'vLang', 'iUserId', $orderdata[0]['iUserId'], '');
        $vLang = $userdata[0]['vLang'];
        if ($vLang == "" || $vLang == NULL) {
            $vLang = $LANG_OBJ->FetchDefaultLangData("vCode");
        }
    }
    if ($eTakeaway == 'Yes') {
        $NotInStatusCode .= ", 4 ,5";
    }
    if ($orderdata[0]['ePaymentOption'] == "Cash" && $eBuyAnyServiceOrd == 'Yes') {
        $customArrayImg[14] = "Billing-Cash";
    }
    if ($orderdata[0]['ePaymentOption'] == "Card" && $eBuyAnyServiceOrd == 'Yes') {
        $customArrayImg[14] = "Billing-Card";
    }
    //takeaway feature end
    $OrderStatusMain = $OrderStatusNotExistMain = array();
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
    $LBL_ITEMSLBL_ITEMS = $languageLabelsArr['LBL_ITEMSLBL_ITEMS'];
    $LBL_ITEMSLBL_ITEM = $languageLabelsArr['LBL_ITEMSLBL_ITEM'];
    $LBL_RESTAURANT_TXT = $languageLabelsArr['LBL_RESTAURANT_TXT'];
    $LBL_VEHICLE_DRIVER_TXT_FRONT = $languageLabelsArr['LBL_VEHICLE_DRIVER_TXT_FRONT'];
    $customArrayStatus = array("1" => $languageLabelsArr['LBL_PLACED'], "2" => $languageLabelsArr['LBL_ACCEPTED_CUSTOM_NOTI'], "4" => $languageLabelsArr['LBL_ASSIGNED'], "5" => $languageLabelsArr['LBL_PICKED_UP'], "6" => $languageLabelsArr['LBL_HISTORY_REST_DELIVERED'], "8" => $languageLabelsArr['LBL_HISTORY_REST_CANCELLED'], "9" => $languageLabelsArr['LBL_HISTORY_REST_DECLINED'], "13" => $languageLabelsArr['LBL_REVIEW_ITEMS_CUSTOM_NOTI'], "14" => $languageLabelsArr['LBL_PAYMENT_CUSTOM_NOTI']);
    if ($eTakeaway == 'Yes') {
        $customArrayStatus[6] = $languageLabelsArr['LBL_PICKED_UP'];
    }
    //$sql = "SELECT os.vStatus_" . $vLang . " as vStatus,os.vStatus_Track_" . $vLang . " as vStatus_Track,osl.dDate,osl.iStatusCode,ord.iUserId,ord.iCompanyId,ord.iDriverId,ord.iStatusCode as OrderCurrentStatusCode,ord.iUserAddressId,ord.vOrderNo,ord.tOrderRequestDate,ord.fNetTotal,ord.iOrderId,ord.vImageDeliveryPref,selectedPreferences,os.eTakeaway,ord.fTipAmount,os.eBuyAnyService FROM order_status_logs as osl LEFT JOIN order_status as os ON osl.iStatusCode = os.iStatusCode LEFT JOIN orders as ord ON osl.iOrderId=ord.iOrderId WHERE osl.iOrderId = " . $iOrderId . " AND osl.iStatusCode NOT IN(" . $NotInStatusCode . ") ORDER BY osl.iStatusCode ASC";
    $sql = "SELECT os.vStatus_" . $vLang . " as vStatus,os.vStatus_Track_" . $vLang . " as vStatus_Track,osl.iStatusCode,ord.iStatusCode as OrderCurrentStatusCode,ord.iOrderId,os.eTakeaway,os.eBuyAnyService FROM order_status_logs as osl LEFT JOIN order_status as os ON osl.iStatusCode = os.iStatusCode LEFT JOIN orders as ord ON osl.iOrderId=ord.iOrderId WHERE osl.iOrderId = " . $iOrderId . " AND osl.iStatusCode NOT IN(" . $NotInStatusCode . ") ORDER BY osl.iStatusCode ASC";
    $OrderStatusMain = $obj->MySQLSelect($sql);
    $currentStatusCode = $OrderStatusMain[0]['OrderCurrentStatusCode'];
    if (!empty($orderdata[0]['vCancelReason']) || !empty($orderdata[0]['iReasonId'])) {
        $sql = "select vTitle_" . $vLang . " as vTitle FROM cancel_reason where iCancelReasonId = '" . $orderdata[0]['iReasonId'] . "'";
        $db_sql = $obj->MySQLSelect($sql);
        $vTitle = $db_sql[0]['vTitle'];
        $vTitleReasonMessage = ($orderdata[0]['vCancelReason'] != "") ? $orderdata[0]['vCancelReason'] : $vTitle;
        if ($orderdata[0]['eCancelledBy'] == 'Admin') {
            $cancelreason = $languageLabelsArr['LBL_CANCEL_ORDER_ADMIN_TXT'] . " #" . $orderdata[0]['vOrderNo'] . " " . $languageLabelsArr['LBL_REASON_TXT'] . " " . $vTitleReasonMessage;
        } else if ($orderdata[0]['eCancelledBy'] == 'Company') {
            $cancelreason = $languageLabelsArr['LBL_DECLINE_ORDER_APP_TXT'] . " #" . $orderdata[0]['vOrderNo'] . " " . $languageLabelsArr['LBL_REASON_TXT'] . " " . $vTitleReasonMessage;
        }
    }
    $eDisplayDottedLine = "No";
    $eDisplayRouteLine = "No";
    $vCurrentStatus = $vCurrentStatus_Track = '';
    if (count($OrderStatusMain) > 0) {
        $returnArr['Action'] = "1";
        $sql = "SELECT concat(vName,' ',vLastName) as drivername,vImage from  register_driver WHERE iDriverId ='" . $orderdata[0]['iDriverId'] . "'";
        $driverdetail = $obj->MySQLSelect($sql);
        $drivername = "";
        if(!empty($driverdetail)) {
            $drivername = !empty($driverdetail[0]['drivername']) ? $driverdetail[0]['drivername'] : $LBL_VEHICLE_DRIVER_TXT_FRONT;
        }
        $OrderPickedUpDate = $OrderStatusCode = "";
        $CheckOtherStatusCode = "Yes";
        for ($i = 0; $i < count($OrderStatusMain); $i++) {
            //takeaway feature start
            if ($OrderStatusMain[$i]['iStatusCode'] == 6 || $OrderStatusMain[$i]['iStatusCode'] == 2) {
                $ordtakeaway = !empty($OrderStatusMain[$i]['eTakeaway']) ? $OrderStatusMain[$i]['eTakeaway'] : "No";
                if ($eTakeaway == 'Yes' && $ordtakeaway == "No") {
                    continue;
                }
                if ($eTakeaway == 'No' && $ordtakeaway == "Yes") {
                    continue;
                }
            }
            if ($OrderStatusMain[$i]['iStatusCode'] == 4) {
                continue;
            }
            if (in_array($OrderStatusMain[$i]['iStatusCode'], [13, 14]) && ($eBuyAnyServiceOrd == 'Yes' && $OrderStatusMain[$i]['eBuyAnyService'] == "Yes")) {
                if (($OrderStatus[0]['OrderCurrentStatusCode'] == 1 || $OrderStatus[0]['OrderCurrentStatusCode'] == 13) && $OrderStatusMain[$i]['iStatusCode'] == 14) {
                    continue;
                } else if ($OrderStatusMain[$i]['iStatusCode'] == 13 && ($OrderStatus[0]['OrderCurrentStatusCode'] != 1 && $OrderStatus[0]['OrderCurrentStatusCode'] != 13)) {
                    continue;
                }
            }
            //takeaway feature end
            //Buy Any Service feature start /* Added by HV on 01-09-2020 for Buy Any Service Feature */
            if (in_array($OrderStatusMain[$i]['iStatusCode'], [1, 2, 4])) {
                if (($eBuyAnyServiceOrd == 'Yes' && $OrderStatusMain[$i]['eBuyAnyService'] == "No") || ($eBuyAnyServiceOrd == 'No' && $OrderStatusMain[$i]['eBuyAnyService'] == "Yes") || ($OrderStatusMain[$i]['iStatusCode'] == 2 && $eBuyAnyServiceOrd == "Yes")) {
                    continue;
                }
            }
            if (in_array($OrderStatusMain[$i]['iStatusCode'], [13, 14]) && $eBuyAnyServiceOrd == 'No') {
                continue;
            }
            //Buy Any Service feature /* Added by HV on 01-09-2020 for Buy Any Service Feature End */
            $OrderStatus[$i] = $OrderStatusMain[$i];
            $OrderStatusCode .= $OrderStatus[$i]['iStatusCode'] . ",";
            $OrderStatus[$i]["icon"] = $customArrayImg[$OrderStatus[$i]['iStatusCode']];
            $iStatusCode = $OrderStatusMain[0]['OrderCurrentStatusCode'];
            $OrderStatus[$i]['vStatus_Track'] = str_replace("#DriverName#", $drivername, $OrderStatus[$i]['vStatus_Track']);
            $OrderStatus[$i]['vStatus_Track'] = str_replace("#STORE#", $LBL_RESTAURANT_TXT, $OrderStatus[$i]['vStatus_Track']);
            //$OrderStatus[$i]['vStatus'] = str_replace("#STORE#", $LBL_RESTAURANT_TXT, $OrderStatus[$i]['vStatus']);
            $OrderStatus[$i]['vStatus'] = $customArrayStatus[$OrderStatus[$i]['iStatusCode']] ?? $OrderStatus[$i]['vStatus'];
            if (($OrderStatus[$i]['iStatusCode'] == 13 || $OrderStatus[$i]['iStatusCode'] == 14) && $orderdata[0]['ePaymentOption'] == "Card") {
                $OrderStatus[$i]['vStatus'] = $languageLabelsArr['LBL_CONFIRM_PAY'];
            }
            if ($OrderStatus[$i]['iStatusCode'] == 5) {
                $OrderStatus[$i]['vStatus_Track'] = $languageLabelsArr['LBL_DELIVERY_EXECUTIVE_TXT'] . " " . $OrderStatus[$i]['vStatus_Track'];
            }
            if ($OrderStatus[$i]['iStatusCode'] == 8 || $OrderStatus[$i]['iStatusCode'] == 9) {
                $OrderStatus[$i]['vStatus_Track'] = $cancelreason;
            }
            if ($currentStatusCode == $OrderStatus[$i]['iStatusCode'] || ($currentStatusCode == 4 && $OrderStatus[$i]['iStatusCode'] == 2)) {
                $vCurrentStatus = $OrderStatus[$i]['vStatus'];
                $vCurrentStatus_Track = $OrderStatus[$i]['vStatus_Track'];
                if ($currentStatusCode == 4 && $OrderStatus[$i]['iStatusCode'] == 2) {
                    $vCurrentStatus_Track = $languageLabelsArr['LBL_DELIVERY_EXECUTIVE_TXT'] . " " . $drivername . " " . $languageLabelsArr['LBL_DELIVERY_ON_WAY_TXT'] . " #" . $orderdata[0]['vOrderNo'];
                    $OrderStatus[$i]['iStatusCode'] = 4;
                    $OrderStatus[$i]['vStatus'] = $customArrayStatus[$OrderStatus[$i]['iStatusCode']] ?? $OrderStatus[$i]['vStatus'];
                    $vCurrentStatus = $OrderStatus[$i]['vStatus'];
                }
            }
            $OrderStatus[$i]['vCurrentStatus'] = $vCurrentStatus;
            $OrderStatus[$i]['vCurrentStatus_Track'] = $vCurrentStatus_Track;
            $OrderStatus[$i]['eCompleted'] = "Yes";
            if ($iStatusCode == 8 || $iStatusCode == 9) {
                $CheckOtherStatusCode = "No";
            }
        }
        if ($eBuyAnyServiceOrd == "Yes") {
            $OrderStatus = array_values($OrderStatus);
            if ($OrderStatus[0]['OrderCurrentStatusCode'] == 8 || $OrderStatus[0]['OrderCurrentStatusCode'] == 9) {
                $CheckOtherStatusCode = "No";
            }
        }
        if ($CheckOtherStatusCode == "Yes" && $UserType == "Passenger") {
            //$OrderStatusCode = substr($OrderStatusCode, 0, -1);
            $OrderStatusCode = trim($OrderStatusCode, ",");
            $OrderStatusCode = $OrderStatusCode . ",7,8,9,11,12";
            if ($eTakeaway == 'Yes') {
                $OrderStatusCode .= ", 4 ,5";
            }
            $OrderStatusCode = trim($OrderStatusCode, ",");
            $sql = "SELECT vStatus_" . $vLang . " as vStatus,vStatus_Track_" . $vLang . " as vStatus_Track,iStatusCode,eTakeaway,eBuyAnyService FROM order_status WHERE iStatusCode NOT IN(" . $OrderStatusCode . ") ORDER BY iDisplayOrder ASC";
            $OrderStatusNotExistMain = $obj->MySQLSelect($sql);
            for ($i = 0; $i < count($OrderStatusNotExistMain); $i++) {
                if ($OrderStatusNotExistMain[$i]['iStatusCode'] == 6 || $OrderStatusNotExistMain[$i]['iStatusCode'] == 2) {
                    $ordtakeaway = !empty($OrderStatusNotExistMain[$i]['eTakeaway']) ? $OrderStatusNotExistMain[$i]['eTakeaway'] : "No";
                    if ($eTakeaway == 'Yes' && $ordtakeaway == "No") {
                        continue;
                    }
                    if ($eTakeaway == 'No' && $ordtakeaway == "Yes") {
                        continue;
                    }
                }
                //Buy Any Service feature start /* Added by HV on 01-09-2020 for Buy Any Service Feature */
                if (in_array($OrderStatusNotExistMain[$i]['iStatusCode'], [1, 2, 4])) {
                    if (($eBuyAnyServiceOrd == 'Yes' && $OrderStatusNotExistMain[$i]['eBuyAnyService'] == "No") || ($eBuyAnyServiceOrd == 'No' && $OrderStatusNotExistMain[$i]['eBuyAnyService'] == "Yes") || ($OrderStatusNotExistMain[$i]['iStatusCode'] == 2 && $eBuyAnyServiceOrd == "Yes")) {
                        continue;
                    }
                }
                if (in_array($OrderStatusNotExistMain[$i]['iStatusCode'], [13, 14]) && $eBuyAnyServiceOrd == 'No') {
                    continue;
                }
                if ($OrderStatusNotExistMain[$i]['iStatusCode'] == 4) {
                    continue;
                }
                if (in_array($OrderStatusNotExistMain[$i]['iStatusCode'], [13, 14]) && ($eBuyAnyServiceOrd == 'Yes' && $OrderStatusNotExistMain[$i]['eBuyAnyService'] == "Yes")) {
                    if (($OrderStatus[0]['OrderCurrentStatusCode'] == 1 || $OrderStatus[0]['OrderCurrentStatusCode'] == 13) && $OrderStatusNotExistMain[$i]['iStatusCode'] == 14) {
                        continue;
                    } else if ($OrderStatusNotExistMain[$i]['iStatusCode'] == 13 && ($OrderStatus[0]['OrderCurrentStatusCode'] != 1 && $OrderStatus[0]['OrderCurrentStatusCode'] != 13)) {
                        continue;
                    }
                }
                //Buy Any Service feature /* Added by HV on 01-09-2020 for Buy Any Service Feature End */
                $OrderStatusNotExist[$i] = $OrderStatusNotExistMain[$i];
                $OrderStatusNotExist[$i]['vStatus'] = $OrderStatusNotExist[$i]['vStatus'];
                $OrderStatusNotExist[$i]['vStatus_Track'] = str_replace("#DriverName#", $drivername, $OrderStatusNotExist[$i]['vStatus_Track']);
                $OrderStatusNotExist[$i]['vStatus_Track'] = str_replace("#STORE#", $LBL_RESTAURANT_TXT, $OrderStatusNotExist[$i]['vStatus_Track']);
                //$OrderStatusNotExist[$i]['vStatus'] = str_replace("#STORE#", $LBL_RESTAURANT_TXT, $OrderStatusNotExist[$i]['vStatus']);
                $OrderStatusNotExist[$i]['vStatus'] = $customArrayStatus[$OrderStatusNotExist[$i]['iStatusCode']] ?? $OrderStatusNotExist[$i]['vStatus'];
                if (($OrderStatusNotExist[$i]['iStatusCode'] == 13 || $OrderStatusNotExist[$i]['iStatusCode'] == 14) && $orderdata[0]['ePaymentOption'] == "Card") {
                    $OrderStatusNotExist[$i]['vStatus'] = $languageLabelsArr['LBL_CONFIRM_PAY'];
                }
                $OrderStatusNotExist[$i]['iStatusCode'] = $OrderStatusNotExist[$i]['iStatusCode'];
                $OrderStatusNotExist[$i]['OrderCurrentStatusCode'] = $OrderStatus[0]['OrderCurrentStatusCode'];
                $OrderStatusNotExist[$i]['eCompleted'] = "No";
                $OrderStatusNotExist[$i]['icon'] = $customArrayImg[$OrderStatusNotExist[$i]['iStatusCode']];
                if ($OrderStatusNotExist[$i]['iStatusCode'] == 5) {
                    $OrderStatusNotExist[$i]['vStatus_Track'] = $languageLabelsArr['LBL_DELIVERY_EXECUTIVE_TXT'] . " " . $OrderStatusNotExist[$i]['vStatus_Track'];
                }
                if ($currentStatusCode == $OrderStatusNotExist[$i]['iStatusCode'] || ($currentStatusCode == 4 && $OrderStatusNotExist[$i]['iStatusCode'] == 2)) {
                    $vCurrentStatus = $OrderStatusNotExist[$i]['vStatus'];
                    $vCurrentStatus_Track = $OrderStatusNotExist[$i]['vStatus_Track'];
                    if ($currentStatusCode == 4 && $OrderStatusNotExist[$i]['iStatusCode'] == 2) {
                        $vCurrentStatus_Track = $languageLabelsArr['LBL_DELIVERY_EXECUTIVE_TXT'] . " " . $drivername . " " . $languageLabelsArr['LBL_DELIVERY_ON_WAY_TXT'] . " #" . $orderdata[0]['vOrderNo'];
                        $OrderStatusNotExist[$i]['iStatusCode'] = 4;
                    }
                }
                if ($OrderStatusNotExist[$i]['iStatusCode'] == 8 || $OrderStatusNotExist[$i]['iStatusCode'] == 9) {
                    $OrderStatusNotExist[$i]['vStatus_Track'] = $cancelreason;
                }
                $OrderStatusNotExist[$i]['vCurrentStatus'] = $vCurrentStatus;
                $OrderStatusNotExist[$i]['vCurrentStatus_Track'] = $vCurrentStatus_Track;
                array_push($OrderStatus, $OrderStatusNotExist[$i]);
            }
        }
        foreach ($OrderStatus as $k => $v) {
            $Data_name['iStatusCode'][$k] = $v['iStatusCode'];
        }
        array_multisort($Data_name['iStatusCode'], SORT_ASC, $OrderStatus); //Added By HJ ON 3-1-2019 For Sort BY iStatusCode
        /* Added by HV on 01-09-2020 for Buy Any Service Feature */
        if ($eBuyAnyServiceOrd == "Yes") {
            $insertAfterKey = "";
            $arrToInsert = array();
            foreach ($OrderStatus as $okey => $oValue) {
                if ($oValue['iStatusCode'] == 4) {
                    $insertAfterKey = $okey;
                }
                if ($oValue['iStatusCode'] == 13 || $oValue['iStatusCode'] == 14) {
                    $arrToInsert[] = $OrderStatus[$okey];
                    unset($OrderStatus[$okey]);
                }
            }
            if (count($arrToInsert) > 0) {
                array_splice($OrderStatus, $insertAfterKey + 1, 0, $arrToInsert);
            }
            if ($orderdata[0]['ePaymentOption'] == "Cash") {
                $insertAfterKeyNew = "";
                $arrToInsertNew = array();
                foreach ($OrderStatus as $okey => $oValue) {
                    if ($oValue['iStatusCode'] == 5) {
                        $insertAfterKeyNew = $okey;
                    }
                    if ($oValue['iStatusCode'] == 14) {
                        $arrToInsertNew[] = $OrderStatus[$okey];
                        unset($OrderStatus[$okey]);
                    }
                }
                if (count($arrToInsertNew) > 0) {
                    array_splice($OrderStatus, $insertAfterKeyNew, 0, $arrToInsertNew);
                }
            }
        }
        /* Added by HV on 01-09-2020 for Buy Any Service Feature End */
        if (empty($OrderStatus[0]['vCurrentStatus'])) {
            $OrderStatus[0]['vCurrentStatus'] = $vCurrentStatus;
            $OrderStatus[0]['vCurrentStatus_Track'] = $vCurrentStatus_Track;
        }
        //pass array which keys are needed by app, becoz in ios it will be issue if more parameter passed in array.
        $ordernoti = array();
        foreach ($OrderStatus as $key => $value) {
            $ordernoti[$key]['vStatus'] = $value['vStatus'];
            //$ordernoti[$key]['OrderCurrentStatusCode'] = $value['OrderCurrentStatusCode'];
            $ordernoti[$key]['icon'] = $value['icon'];
            //$ordernoti[$key]['iStatusCode'] = $value['iStatusCode'];
            //$ordernoti[$key]['vCurrentStatus'] = $value['vCurrentStatus'];
            //$ordernoti[$key]['vCurrentStatus_Track'] = $value['vCurrentStatus_Track'];
            $ordernoti[$key]['isCurrentStatus'] = "No";
            if ($value['OrderCurrentStatusCode'] == $value['iStatusCode']) {
                $ordernoti[$key]['isCurrentStatus'] = "Yes";
            }
            if ($currentStatusCode == 4 && $eBuyAnyServiceOrd == 'Yes' && $value['iStatusCode'] == 1) {//when driver accepted req in genie
                $ordernoti[$key]['isCurrentStatus'] = "Yes";
                $OrderStatus[0]['vCurrentStatus'] = $languageLabelsArr['LBL_PLACED'];
                $OrderStatus[0]['vCurrentStatus_Track'] = $languageLabelsArr['LBL_ORDER_PLACED'];
            }
            $ordernoti[$key]['eCompleted'] = $value['eCompleted'];
        }
        $ordernoti[0]['vCurrentStatus'] = $OrderStatus[0]['vCurrentStatus'];
        $ordernoti[0]['vCurrentStatus_Track'] = $OrderStatus[0]['vCurrentStatus_Track'];
    }
    return $ordernoti;
}

if (!function_exists('checkFlatTripnew')) {
    function checkFlatTripnew($Source_point_Address, $Destination_point_Address, $iVehicleTypeId, $iRentalPackageId = "0")
    {
        global $obj;
        $returnArr = array();
        if (!empty($iRentalPackageId) && $iRentalPackageId > 0) {
            $returnArr['eFlatTrip'] = "No";
            $returnArr['Flatfare'] = 0;
            return $returnArr;
        }
        $sql = "SELECT ls.fFlatfare,lm1.vLocationName as vFromname,lm2.vLocationName as vToname, lm1.tLatitude as fromlat, lm1.tLongitude as fromlong, lm2.tLatitude as tolat, lm2.tLongitude as tolong FROM `location_wise_fare` ls left join location_master lm1 on ls.iFromLocationId = lm1.iLocationId left join location_master lm2 on ls.iToLocationId = lm2.iLocationId WHERE lm1.eFor = 'FixFare' AND lm1.eStatus = 'Active' AND ls.eStatus = 'Active' AND ls.iVehicleTypeId = '" . $iVehicleTypeId . "'";
        $location_data = $obj->MySQLSelect($sql);
        $polygon = array();
        foreach ($location_data as $key => $value) {
            $fromlat = explode(",", $value['fromlat']);
            $fromlong = explode(",", $value['fromlong']);
            $tolat = explode(",", $value['tolat']);
            $tolong = explode(",", $value['tolong']);
            for ($x = 0; $x < count($fromlat); $x++) {
                if (!empty($fromlat[$x]) || !empty($fromlong[$x])) {
                    $from_polygon[$key][] = array($fromlat[$x], $fromlong[$x]);
                }
            }
            for ($y = 0; $y < count($tolat); $y++) {
                if (!empty($tolat[$y]) || !empty($tolong[$y])) {
                    $to_polygon[$key][] = array($tolat[$y], $tolong[$y]);
                }
            }
            if (!empty($Source_point_Address) && !empty($Destination_point_Address)) {
                if (!empty($from_polygon[$key]) && !empty($to_polygon[$key])) {
                    $from_source_addresss = contains($Source_point_Address, $from_polygon[$key]) ? 'IN' : 'OUT';
                    $to_source_addresss = contains($Destination_point_Address, $to_polygon[$key]) ? 'IN' : 'OUT';
                    $to_dest_addresss = contains($Destination_point_Address, $to_polygon[$key]) ? 'IN' : 'OUT';
                    $from_dest_addresss = contains($Source_point_Address, $from_polygon[$key]) ? 'IN' : 'OUT';
                    if (($from_source_addresss == "IN" && $to_source_addresss == "IN") || ($to_dest_addresss == "IN" && $from_dest_addresss == "IN")) {
                        $returnArr['Flatfare'] = $location_data[$key]['fFlatfare'];
                        $returnArr['eFlatTrip'] = "Yes";
                        return $returnArr;
                    }
                }
            }
        }
        if (empty($returnArr)) {
            $returnArr['eFlatTrip'] = "No";
            $returnArr['Flatfare'] = 0;
        }
        return $returnArr;
    }
}
function checkSurgePrice($vehicleTypeID, $selectedDateTime = "", $iRentalPackageId = "0")
{
    global $ENABLE_SURGE_CHARGE_RENTAL, $vTimeZone, $obj, $vehicleTypeDataArr;
    if ($iRentalPackageId == "" || $iRentalPackageId == NULL) {
        $iRentalPackageId = 0;
    }
    //$ePickStatus = get_value('vehicle_type', 'ePickStatus', 'iVehicleTypeId', $vehicleTypeID, '', 'true'); //Commented By HJ On 16-07-2019 For Optimize
    //$eNightStatus = get_value('vehicle_type', 'eNightStatus', 'iVehicleTypeId', $vehicleTypeID, '', 'true'); //Commented By HJ On 16-07-2019 For Optimize
    $fPickUpPrice = $fNightPrice = 1;
    if ($selectedDateTime == "") {
        $selectedTime = @date("Y-m-d H:i:s");
        $systemTimeZone = date_default_timezone_get();
        $currentDateTime = converToTz($selectedTime, $vTimeZone, $systemTimeZone);
        $currentTime = @date('H:i:s', strtotime($currentDateTime));
        $currentDay = @date('D', strtotime($currentDateTime));
        $PreviousDayDate = @date('Y-m-d', strtotime('-1 day'));
        $PreviousDay = @date('D', strtotime($PreviousDayDate));
        // $currentTime = @date("H:i:s");
        // $currentDay = @date("D");
    } else {
        // $currentTime = $selectedDateTime;
        $PreviousDayDate = @date('Y-m-d', strtotime($selectedDateTime . '-1 day'));
        $PreviousDay = @date('D', strtotime($PreviousDayDate));
        $currentTime = @date("H:i:s", strtotime($selectedDateTime));
        $currentDay = @date("D", strtotime($selectedDateTime));
    }
    $startTime_str = "t" . $currentDay . "PickStartTime";
    $endTime_str = "t" . $currentDay . "PickEndTime";
    $price_str = "f" . $currentDay . "PickUpPrice";
    $ePickStatus = $eNightStatus = "Inactive";
    $tNightSurgeData_PrevDay = $tNightSurgeData = "";
    //Added By HJ On 20-06-2020 For Optimized vehicle_type Table Query Start
    if (isset($vehicleTypeDataArr['vehicle_type'])) {
        $VehicleTypeData = $vehicleTypeDataArr['vehicle_type'];
    } else {
        $VehicleTypeData = $obj->MySQLSelect("SELECT * from vehicle_type");
        $vehicleTypeDataArr['vehicle_type'] = $VehicleTypeData;
    }
    $tripVehicleDataArr = $tripVehicleData = array();
    for ($h = 0; $h < count($VehicleTypeData); $h++) {
        $tripVehicleDataArr[$VehicleTypeData[$h]['iVehicleTypeId']] = $VehicleTypeData[$h];
    }
    if (isset($tripVehicleDataArr[$vehicleTypeID])) {
        $getVehicleData[] = $tripVehicleDataArr[$vehicleTypeID];
    }
    //Added By HJ On 20-06-2020 For Optimized vehicle_type Table Query End
    //$getVehicleData = $obj->MySQLSelect("SELECT eNightStatus,ePickStatus,tNightSurgeData,$startTime_str,$endTime_str,$price_str FROM vehicle_type WHERE iVehicleTypeId='" . $vehicleTypeID . "'");
    $pickStartTime = $pickEndTime = "00:00:00";
    $fPickUpPrice = 1;
    if (count($getVehicleData) > 0) {
        $ePickStatus = $getVehicleData[0]['ePickStatus'];
        $eNightStatus = $getVehicleData[0]['eNightStatus'];
        $tNightSurgeData_PrevDay = $tNightSurgeData = $getVehicleData[0]['tNightSurgeData'];
        $pickStartTime = $getVehicleData[0][$startTime_str];
        $pickEndTime = $getVehicleData[0][$endTime_str];
        $fPickUpPrice = $getVehicleData[0][$price_str];
    }
    //echo $eNightStatus;die;
    ## Checking For Previous Day NightSurge Charge For 0-5 am ##
    if ($currentTime > "00:00:00" && $currentTime <= "05:00:00" && $eNightStatus == "Active" && ($iRentalPackageId == 0 || ($iRentalPackageId != 0 && $ENABLE_SURGE_CHARGE_RENTAL == "Yes"))) {
        $previousnightStartTime_str = "t" . $PreviousDay . "NightStartTime";
        $previousnightEndTime_str = "t" . $PreviousDay . "NightEndTime";
        $fpreviousNightPrice_str = "f" . $PreviousDay . "NightPrice";
        //$tNightSurgeData_PrevDay = get_value('vehicle_type', 'tNightSurgeData', 'iVehicleTypeId', $vehicleTypeID, '', 'true'); //Commented By HJ On 16-07-2019 For Optimize
        $tNightSurgeDataPrevDayArr = json_decode($tNightSurgeData_PrevDay, true);
        if (count($tNightSurgeDataPrevDayArr) > 0) {
            $nightStartTime_PrevDay = $tNightSurgeDataPrevDayArr[$previousnightStartTime_str];
            $nightEndTime_PrevDay = $tNightSurgeDataPrevDayArr[$previousnightEndTime_str];
            $fNightPrice_PrevDay = $tNightSurgeDataPrevDayArr[$fpreviousNightPrice_str];
            if ($nightStartTime_PrevDay > "00:00:00" && $nightEndTime_PrevDay <= "05:00:00" && $fNightPrice_PrevDay > 1) {
                $returnArr['Action'] = "0";
                $returnArr['message'] = "LBL_NIGHT_SURGE_NOTE";
                $returnArr['SurgePrice'] = $fNightPrice_PrevDay . "X";
                $returnArr['SurgePriceValue'] = $fNightPrice_PrevDay;
                return $returnArr;
            }
        }
    }
    ## Checking For Previous Day NightSurge Charge For 0-5 am ##
    /* added for rental */
    if (($ePickStatus == "Active" || $eNightStatus == "Active") && ($iRentalPackageId == 0 || ($iRentalPackageId != 0 && $ENABLE_SURGE_CHARGE_RENTAL == "Yes"))) {
        //$pickStartTime = get_value('vehicle_type', $startTime_str, 'iVehicleTypeId', $vehicleTypeID, '', 'true'); //Commented By HJ On 16-07-2019 For Optimize
        //$pickEndTime = get_value('vehicle_type', $endTime_str, 'iVehicleTypeId', $vehicleTypeID, '', 'true'); //Commented By HJ On 16-07-2019 For Optimize
        //$fPickUpPrice = get_value('vehicle_type', $price_str, 'iVehicleTypeId', $vehicleTypeID, '', 'true'); //Commented By HJ On 16-07-2019 For Optimize
        /* $nightStartTime = get_value('vehicle_type', 'tNightStartTime', 'iVehicleTypeId', $vehicleTypeID, '', 'true');

          $nightEndTime = get_value('vehicle_type', 'tNightEndTime', 'iVehicleTypeId', $vehicleTypeID, '', 'true');

          $fNightPrice = get_value('vehicle_type', 'fNightPrice', 'iVehicleTypeId', $vehicleTypeID, '', 'true'); */
        $nightStartTime_str = "t" . $currentDay . "NightStartTime";
        $nightEndTime_str = "t" . $currentDay . "NightEndTime";
        $fNightPrice_str = "f" . $currentDay . "NightPrice";
        //$tNightSurgeData = get_value('vehicle_type', 'tNightSurgeData', 'iVehicleTypeId', $vehicleTypeID, '', 'true'); //Commented By HJ On 16-07-2019 For Optimize
        $tNightSurgeDataArr = json_decode($tNightSurgeData, true);
        $nightStartTime = $nightEndTime = "00:00:00";
        $fNightPrice = 1;
        if (count($tNightSurgeDataArr) > 0) {
            $nightStartTime = $tNightSurgeDataArr[$nightStartTime_str];
            $nightEndTime = $tNightSurgeDataArr[$nightEndTime_str];
            $fNightPrice = $tNightSurgeDataArr[$fNightPrice_str];
        }
        $tempNightHour = "12:00:00";
        if (($currentTime > $pickStartTime) && ($currentTime < $pickEndTime) && $ePickStatus == "Active" && $fPickUpPrice > 1) {
            $returnArr['Action'] = "0";
            $returnArr['message'] = "LBL_PICK_SURGE_NOTE";
            $returnArr['SurgePrice'] = $fPickUpPrice . "X";
            $returnArr['SurgePriceValue'] = $fPickUpPrice;
        } // else if ($currentTime > $nightStartTime && $currentTime < $nightEndTime && $eNightStatus == "Active") {
        else if ((($currentTime > $nightStartTime && $currentTime < $nightEndTime && $nightEndTime > $tempNightHour) || ($currentTime < $nightStartTime && $currentTime < $nightEndTime && $nightEndTime < $tempNightHour && $nightStartTime > $tempNightHour) || ($currentTime > $nightStartTime && $currentTime > $nightEndTime && $nightEndTime < $tempNightHour && $nightStartTime > $tempNightHour) || ($currentTime > $nightStartTime && $currentTime < $nightEndTime && $nightEndTime < $tempNightHour)) && $eNightStatus == "Active" && $fNightPrice > 1) {
            $returnArr['Action'] = "0";
            $returnArr['message'] = "LBL_NIGHT_SURGE_NOTE";
            $returnArr['SurgePrice'] = $fNightPrice . "X";
            $returnArr['SurgePriceValue'] = $fNightPrice;
        } else {
            $returnArr['Action'] = "1";
        }
    } else {
        $returnArr['Action'] = "1";
    }
    return $returnArr;
}

function FetchAvailableDrivers($sourceLat, $sourceLon, $address_data = array(), $DropOff = "No", $From_Autoassign = "No", $Check_Driver_UFX = "No", $Check_Date_Time = "", $destLat = "", $destLon = "", $param1 = "", $param2 = '', $param3 = "")
{
    if (isset($_REQUEST['eSystem']) && strtoupper($_REQUEST['eSystem']) == "DELIVERALL") {
        $iUserId = $param1;
        $iDriverIdWeb = $param2;
        return getOnlineDriverArrDeliverAll($sourceLat, $sourceLon, $address_data, $DropOff, $From_Autoassign, $Check_Driver_UFX, $Check_Date_Time, $destLat, $destLon, $iUserId, $iDriverIdWeb);
    } else {
        $eType = !empty($param1) ? $param1 : "Ride";
        $eFemaleDriverRequestWeb = $param2;
        $SelectedDriverId = $param3;
        return getOnlineDriverArrGeneral($sourceLat, $sourceLon, $address_data, $DropOff, $From_Autoassign, $Check_Driver_UFX, $Check_Date_Time, $destLat, $destLon, $eType, $eFemaleDriverRequestWeb, $SelectedDriverId);
    }
}

function getOnlineDriverArrDeliverAll($sourceLat, $sourceLon, $address_data = array(), $DropOff = "No", $From_Autoassign = "No", $Check_Driver_UFX = "No", $Check_Date_Time = "", $destLat = "", $destLon = "", $iUserId = "", $iDriverIdWeb = "")
{
    global $MODULES_OBJ, $WALLET_OBJ, $obj, $RESTRICTION_KM_NEAREST_TAXI, $LIST_RESTAURANT_LIMIT_BY_DISTANCE, $LIST_DRIVER_LIMIT_BY_DISTANCE, $DRIVER_REQUEST_METHOD, $COMMISION_DEDUCT_ENABLE, $WALLET_MIN_BALANCE, $RESTRICTION_KM_NEAREST_TAXI, $APP_TYPE, $vTimeZone, $intervalmins, $MULTIPLE_ORDER_PICKUP_RANGE, $MULTIPLE_ORDER_DELIVERY_RANGE, $MAXIMUM_MULTIPLE_ORDERS_COUNT;
    $cmpMinutes = ceil((fetchtripstatustimeMAXinterval() + $intervalmins) / 60);
    $str_date = @date('Y-m-d H:i:s', strtotime('-' . $cmpMinutes . ' minutes'));
    $LIST_DRIVER_LIMIT_BY_DISTANCE = $From_Autoassign == "Yes" ? $LIST_RESTAURANT_LIMIT_BY_DISTANCE : $LIST_RESTAURANT_LIMIT_BY_DISTANCE;
    $param = ($DRIVER_REQUEST_METHOD == "Time") ? "tOnline" : "tLocationUpdateDate";
    $eDriverType = "All";
    if (isset($address_data['eDriverType'])) {
        $eDriverType = $address_data['eDriverType'];
    }
    if (isset($address_data['iCompanyId'])) {
        $iCompanyId = $address_data['iCompanyId'];
    }
    $iOrderId = "";
    $iDriverIdOrder = 0;
    if (isset($address_data['iOrderId'])) {
        $iOrderId = $address_data['iOrderId'];
        $getOrderDriver = $obj->MySQLSelect("SELECT iDriverId FROM orders WHERE iOrderId = $iOrderId");
        $iDriverIdOrder = $getOrderDriver[0]['iDriverId'];
    }
    $sourceLocationArr = array($sourceLat, $sourceLon);
    $destinationLocationArr = array($destLat, $destLon);
    $ssql_available = "";
    $allowed_ans = $allowed_ans_drop = "Yes";
    $vLatitude = 'vLatitude';
    $vLongitude = 'vLongitude';
    if ($Check_Driver_UFX == "No") {
        $ssql_available .= " AND vAvailability = 'Available' AND vTripStatus != 'Active' AND tLocationUpdateDate > '$str_date' ";
    }
    if (strtoupper($eDriverType) == "SITE") {
        $ssql_available .= " AND iCompanyId >= 1"; // Added By HJ On 30-09-2020
    } else if (strtoupper($eDriverType) == "PERSONAL") {
        $ssql_available .= " AND iCompanyId='" . $iCompanyId . "'";
    } else if (strtoupper($eDriverType) == "ALL") {
        $ssql_available .= " AND (iCompanyId='" . $iCompanyId . "' OR iCompanyId >= 1)";
    }
    if (!empty($iDriverIdWeb)) {
        $ssql_available .= " AND iDriverId='" . $iDriverIdWeb . "'";
    }
    $ssql_demo_driver_available = " ";
    ## Include Demo User's Driver ##
    if (SITE_TYPE == "Demo" && $iUserId != "") {
        $uemail = get_value('register_user', 'vEmail', 'iUserId', $iUserId, '', 'true');
        $uemail = explode("-", $uemail);
        $uemail = $uemail[1];
        if ($uemail != "") {
            $ssql_demo_driver_available .= " OR vEmail = '" . $uemail . "' ";
        }
    }
    ## Include Demo User's Driver ##
    if ($allowed_ans == 'Yes' && $allowed_ans_drop == 'Yes') {
        $sql = "SELECT ROUND(( 6371 * acos( cos( radians(" . $sourceLat . ") )

        * cos( radians( ROUND(" . $vLatitude . ",8) ) )

            * cos( radians( ROUND(" . $vLongitude . ",8) ) - radians(" . $sourceLon . ") )

            + sin( radians(" . $sourceLat . ") )

            * sin( radians( ROUND(" . $vLatitude . ",8) ) ) ) ),2) AS distance, concat('+',register_driver.vCode,register_driver.vPhone) as vPhonenumber, register_driver.*  FROM `register_driver`

            WHERE (" . $vLatitude . " != '' AND " . $vLongitude . " != '' $ssql_available AND eStatus='active' AND eIsBlocked = 'No')

            HAVING ( distance < " . $LIST_DRIVER_LIMIT_BY_DISTANCE . " $ssql_demo_driver_available ) ORDER BY distance, `register_driver`.`" . $param . "` ASC";
        $Data = $obj->MySQLSelect($sql);
        $ActiveData = array();
        if ($MODULES_OBJ->isEnableAcceptMultipleOrders()) {
            $sql = "SELECT ROUND(( 6371 * acos( cos( radians(" . $sourceLat . ") )

            * cos( radians( ROUND(" . $vLatitude . ",8) ) )

                * cos( radians( ROUND(" . $vLongitude . ",8) ) - radians(" . $sourceLon . ") )

                    + sin( radians(" . $sourceLat . ") )

                * sin( radians( ROUND(" . $vLatitude . ",8) ) ) ) ),2) AS distance, concat('+',register_driver.vCode,register_driver.vPhone) as vPhonenumber, register_driver.*  FROM `register_driver`

                    WHERE (" . $vLatitude . " != '' AND " . $vLongitude . " != '' AND vAvailability != 'Available' AND (vTripStatus = 'Active' OR vTripStatus = 'On Going Trip') AND tLocationUpdateDate > '$str_date' AND eStatus='active' AND eIsBlocked = 'No')

                    HAVING ( distance < " . $LIST_DRIVER_LIMIT_BY_DISTANCE . " $ssql_demo_driver_available ) ORDER BY distance, `register_driver`.`" . $param . "` ASC";
            $ActiveDriverOrders = $obj->MySQLSelect($sql);
            // echo "<pre>"; print_r($ActiveDriverOrders); exit;
            foreach ($ActiveDriverOrders as $actOrder) {
                $oData = $obj->MySQLSelect("SELECT o.iOrderId, o.iStatusCode, c.vRestuarantLocationLat, c.vRestuarantLocationLong, uad.vLatitude, uad.vLongitude FROM orders as o LEFT JOIN company as c ON c.iCompanyId = o.iCompanyId LEFT JOIN user_address as uad ON uad.iUserAddressId = o.iUserAddressId WHERE iDriverId = '" . $actOrder['iDriverId'] . "' AND o.eCancelledbyDriver = 'No' AND iStatusCode IN (4,5,13,14) ORDER BY iOrderId");
                // echo "<pre>"; print_r($oData);
                if (!empty($oData) && count($oData) < $MAXIMUM_MULTIPLE_ORDERS_COUNT) {
                    if ($oData[0]['iStatusCode'] == "4") {
                        $pickupRangeDistance = distanceByLocation($oData[0]['vRestuarantLocationLat'], $oData[0]['vRestuarantLocationLong'], $sourceLat, $sourceLon, "K");
                        $dropoffRangeDistance = distanceByLocation($oData[0]['vLatitude'], $oData[0]['vLongitude'], $destLat, $destLon, "K");
                        // echo $pickupRangeDistance."<br>";
                        // echo $dropoffRangeDistance."<br>";
                        if ($pickupRangeDistance <= $MULTIPLE_ORDER_PICKUP_RANGE && $dropoffRangeDistance <= $MULTIPLE_ORDER_DELIVERY_RANGE) {
                            $ActiveData[] = $actOrder;
                        }
                    }
                }
            }
        }
        $Data = array_merge($Data, $ActiveData);
        // echo "<pre>"; print_r($Data); exit;
        $newData = array();
        $j = 0;
        $driver_id_auto = "";
        $sql = "select GROUP_CONCAT(iVehicleTypeId)as VehicleTypeId from `vehicle_type` where eType = 'DeliverAll' AND eStatus = 'Active'";
        $db_deliverall_vehicle = $obj->MySQLSelect($sql);
        for ($i = 0; $i < count($Data); $i++) {
            $VehicleTypeId = $db_deliverall_vehicle[0]['VehicleTypeId'];
            $VehicleTypeIdArr = explode(",", $VehicleTypeId);
            $iDriverVehicleId = $Data[$i]['iDriverVehicleId'];
            $vCarType = get_value('driver_vehicle', 'vCarType', 'iDriverVehicleId', $iDriverVehicleId, '', 'true');
            $drivercartypeArr = explode(",", $vCarType);
            $vCarTypeArr = array_intersect($VehicleTypeIdArr, $drivercartypeArr);
            $vCarTypeArr = array_values($vCarTypeArr);
            $vCarType = $vCarTypeArr[0];
            $fRadius = get_value('vehicle_type', 'fRadius', 'iVehicleTypeId', $vCarType, '', 'true');
            $Data[$i]['DeliveryVehicleType'] = $vCarType;
            $distanceusercompany = distanceByLocation($sourceLat, $sourceLon, $destLat, $destLon, "K");
            $Data[$i]['vPhone'] = $Data[$i]['vPhonenumber'];
            $Data[$i]['fRadius'] = $fRadius;
            $Data[$i]['distanceusercompany'] = $distanceusercompany;
            $DistanceNew = $Data[$i]['distance'] + $distanceusercompany;
            $Data[$i]['TotalDistance'] = $DistanceNew;
            $eSystemCompany = get_value('company', 'eSystem', 'iCompanyId', $Data[$i]['iCompanyId'], '', 'true');
            $Data[$i]['eSystemCompany'] = $eSystemCompany;
            $allow_request = "Yes";
            if ($eSystemCompany != "General" && $Data[$i]['iCompanyId'] > 1 && (strtoupper($eDriverType) == "SITE" || strtoupper($eDriverType) == "ALL")) {
                $allow_request = "No";
            }
            $enableCommisionDeduct = $MODULES_OBJ->autoDeductDriverCommision("DeliverAll"); // Added By HJ On 16-10-2020 For get Auto Deduct Driver Commision Configuration As Per eSystem
            if ($enableCommisionDeduct == 'Yes') {
                $user_available_balance = $WALLET_OBJ->FetchMemberWalletBalance($Data[$i]['iDriverId'], "Driver");
                if ($WALLET_MIN_BALANCE > $user_available_balance) {
                    $Data[$i]['ACCEPT_CASH_TRIPS'] = "No";
                } else {
                    $Data[$i]['ACCEPT_CASH_TRIPS'] = "Yes";
                }
            } else {
                $Data[$i]['ACCEPT_CASH_TRIPS'] = "Yes";
            }
            if ($MODULES_OBJ->isEnableCancelDriverOrder() && !empty($iOrderId)) {
                $checkCancelOrder = $obj->MySQLSelect("SELECT * FROM order_driver_log WHERE iOrderId = $iOrderId AND iDriverId = " . $Data[$i]['iDriverId']);
                if (($iDriverIdOrder > 0 && $iDriverIdOrder == $Data[$i]['iDriverId']) || (!empty($checkCancelOrder) && count($checkCancelOrder) > 0)) {
                    continue;
                }
            }
            // if (($fRadius > $distanceusercompany) && $vCarType > 0) {
            if ($vCarType > 0 && $DistanceNew <= $fRadius && $allow_request == "Yes") {
                $driver_id_auto .= $Data[$i]['iDriverId'] . ",";
                $newData[$j] = $Data[$i];
                $j++;
            }
        }
        $driver_id_auto = substr($driver_id_auto, 0, -1);
        // echo "<pre>";print_r($newData);die;
        $returnData['DriverList'] = $newData;
        $returnData['driver_id_auto'] = $driver_id_auto;
        $returnData['PickUpDisAllowed'] = $allowed_ans;
        $returnData['DropOffDisAllowed'] = $allowed_ans_drop;
    } else {
        $newData = array();
        $returnData['DriverList'] = $newData;
        $returnData['driver_id_auto'] = "";
        $returnData['PickUpDisAllowed'] = $allowed_ans;
        $returnData['DropOffDisAllowed'] = $allowed_ans_drop;
    }
    return $returnData;
}

function getOnlineDriverArrGeneral($sourceLat, $sourceLon, $address_data = array(), $DropOff = "No", $From_Autoassign = "No", $Check_Driver_UFX = "No", $Check_Date_Time = "", $destLat = "", $destLon = "", $eType = "Ride", $eFemaleDriverRequestWeb = '', $SelectedDriverId = "")
{
    global $SEND_REQUEST_BEFORE_TRIP_DISTANCE, $SEND_REQUEST_BEFORE_TRIP_MINUTES, $MODULES_OBJ, $WALLET_OBJ, $obj, $RESTRICTION_KM_NEAREST_TAXI, $LIST_DRIVER_LIMIT_BY_DISTANCE, $DRIVER_REQUEST_METHOD, $COMMISION_DEDUCT_ENABLE, $WALLET_MIN_BALANCE, $RESTRICTION_KM_NEAREST_TAXI, $APP_TYPE, $vTimeZone, $PROVIDER_AVAIL_LOC_CUSTOMIZE, $isFromHotelPanel, $FEMALE_RIDE_REQ_ENABLE, $intervalmins, $isFromAdminPanel, $iCompanyId, $SERVICE_PROVIDER_FLOW, $_REQUEST, $ENABLE_FAVORITE_DRIVER_MODULE, $SYSTEM_PAYMENT_FLOW, $type, $cashPayment;
    $cmpMinutes = ceil((fetchtripstatustimeMAXinterval() + $intervalmins) / 60);
    $str_date = @date('Y-m-d H:i:s', strtotime('-' . $cmpMinutes . ' minutes'));
    $LIST_DRIVER_LIMIT_BY_DISTANCE = ($From_Autoassign == "Yes" || $isFromHotelPanel == 'Yes' || $isFromAdminPanel == 'Yes') ? $RESTRICTION_KM_NEAREST_TAXI : $LIST_DRIVER_LIMIT_BY_DISTANCE;
    $vWorkLocationRadius = $RESTRICTION_KM_NEAREST_TAXI;
    $eForVideoConsultation = isset($_REQUEST["eForVideoConsultation"]) ? $_REQUEST['eForVideoConsultation'] : 'No';
    if (isset($_REQUEST["isVideoCall"])) {
        $eForVideoConsultation = isset($_REQUEST["isVideoCall"]) ? $_REQUEST["isVideoCall"] : 'No';
    }
    /* $LIST_DRIVER_LIMIT_BY_DISTANCE = $CONFIG_OBJ->getConfigurations("configurations", $From_Autoassign =="Yes" ?"RESTRICTION_KM_NEAREST_TAXI" : "LIST_DRIVER_LIMIT_BY_DISTANCE");     $DRIVER_REQUEST_METHOD = $CONFIG_OBJ->getConfigurations("configurations", "DRIVER_REQUEST_METHOD");         $COMMISION_DEDUCT_ENABLE=$CONFIG_OBJ->getConfigurations("configurations","COMMISION_DEDUCT_ENABLE");        $WALLET_MIN_BALANCE=$CONFIG_OBJ->getConfigurations("configurations","WALLET_MIN_BALANCE");

    $APP_TYPE = $CONFIG_OBJ->getConfigurations("configurations","APP_TYPE"); */
    //if($APP_TYPE == "UberX"){
    if ($eType == "UberX" && $PROVIDER_AVAIL_LOC_CUSTOMIZE == "Yes") {
        //$vLatitude = "COALESCE(NULLIF(vWorkLocationLatitude,''), vLatitude)"; //$vLongitude = "COALESCE(NULLIF(vWorkLocationLongitude,''), vLongitude)";
        //$vLatitude = "IF(register_driver.eSelectWorkLocation = 'Fixed',COALESCE(NULLIF(vWorkLocationLatitude,''), vLatitude),vLatitude)"; //$vLongitude = "IF(register_driver.eSelectWorkLocation = 'Fixed',COALESCE(NULLIF(vWorkLocationLongitude,''), vLongitude),vLongitude)";
        $vLatitude = "IF(register_driver.eSelectWorkLocation = 'Fixed',COALESCE(NULLIF(vWorkLocationLatitude,''), vLatitude),vLatitude)";
        $vLongitude = "IF(register_driver.eSelectWorkLocation = 'Fixed',COALESCE(NULLIF(vWorkLocationLongitude,''), vLongitude),vLongitude)";
    } else {
        $vLatitude = 'vLatitude';
        $vLongitude = 'vLongitude';
    }
    $param = ($DRIVER_REQUEST_METHOD == "Time") ? "tSwitchOnline" : "tLocationUpdateDate";
    $sourceLocationArr = array($sourceLat, $sourceLon);
    $destinationLocationArr = array($destLat, $destLon);
    $eFly = isset($_REQUEST["eFly"]) && !empty($_REQUEST["eFly"]) ? $_REQUEST['eFly'] : 'No';
    if ($DropOff == "No") {
        $address_data['CheckAddress'] = $address_data['PickUpAddress'];
        //$allowed_ans = checkRestrictedArea($address_data,"No");
        $source_array = $sourceLocationArr;
        //$allowed_ans = checkRestrictedAreaNew($source_array,"No");
        $allowed_ans = checkAreaRestriction($source_array, "No");
        //print_r($allowed_ans);die;
        $allowed_ans_drop = "Yes";
    } else {
        $address_data['CheckAddress'] = $address_data['PickUpAddress'];
        //$allowed_ans = checkRestrictedArea($address_data,"No");
        $source_array = $sourceLocationArr;
        //$allowed_ans = checkRestrictedAreaNew($source_array,"No");
        $allowed_ans = checkAreaRestriction($source_array, "No");
        $address_data['CheckAddress'] = $address_data['DropOffAddress'];
        //$allowed_ans_drop = checkRestrictedArea($address_data,"Yes");
        $dest_array = $destinationLocationArr;
        //$allowed_ans_drop = checkRestrictedAreaNew($dest_array,"Yes");
        $allowed_ans_drop = checkAreaRestriction($dest_array, "Yes");
    }
    $ssql_available = "";
    if ($Check_Driver_UFX == "No") {
        //$ssql_available .= " AND vAvailability = 'Available' AND vTripStatus != 'Active' AND tLocationUpdateDate > '$str_date' ";
        if ($MODULES_OBJ->isSendRequestToDriverBeforFinishTripModule() && $eType == "Ride" && $eFly != 'Yes') {
            $ssql_available .= " AND ((vAvailability = 'Available' AND vTripStatus != 'Active' ) || (vAvailability = 'Not Available' AND vTripStatus = 'On Going Trip' ) || (vTripStatus = 'Not Active' AND vAvailability='Available')) AND tLocationUpdateDate > '$str_date' ";
        } else {
            $ssql_available .= " AND vAvailability = 'Available' AND vTripStatus != 'Active' AND tLocationUpdateDate > '$str_date' ";
        }
    }
    // for hotel panel web
    if ($isFromHotelPanel == 'Yes') {
        if ($FEMALE_RIDE_REQ_ENABLE == 'Yes') {
            $ssql_available .= " AND eFemaleOnlyReqAccept = 'No' ";
        }
    }
    if ($isFromAdminPanel == 'Yes') {
        if ($FEMALE_RIDE_REQ_ENABLE == 'Yes' && $eFemaleDriverRequestWeb == 'Yes') {
            //$ssql_available .= " AND eFemaleOnlyReqAccept = 'Yes' ";
            $ssql_available .= " AND eGender = 'Female' ";
        } else {
            //$ssql_available .= " AND eFemaleOnlyReqAccept = 'No' ";
        }
        if ($iCompanyId != '' and $iCompanyId > 0) {
            $ssql_available .= " AND iCompanyId = '" . $iCompanyId . "' ";
        }
    }
    if ($eFly == 'Yes' || $eType != 'Ride') {
        $ssql_available .= " AND eDestinationMode != 'Yes'";
    }
    $webserviceType = isset($_REQUEST["type"]) ? $_REQUEST["type"] : '';
    //$cashPayment = isset($_REQUEST["CashPayment"]) ? $_REQUEST["CashPayment"] : '';
    $ssql_fav_q = "";
    if ($MODULES_OBJ->checkFavDriverModule()) {
        include_once('include/features/include_fav_driver.php');
        $iUserId = isset($_REQUEST["iUserId"]) ? $_REQUEST["iUserId"] : '';
        if (!empty($iUserId)) {
            $ssql_fav_q = getFavSelectQueryToLoadCabs($eType, $iUserId);
        }
    }
    //echo $ssql_fav_q;die;
    if ($allowed_ans == 'Yes' && $allowed_ans_drop == 'Yes') {
        if ($eType == "UberX") {
            if ($eForVideoConsultation == "No") {
                $sql = "SELECT ROUND(( 6371 * acos( cos( radians(" . $sourceLat . ") )

                    * cos( radians( ROUND(" . $vLatitude . ",8) ) )

                    * cos( radians( ROUND(" . $vLongitude . ",8) ) - radians(" . $sourceLon . ") )

                    + sin( radians(" . $sourceLat . ") )

                    * sin( radians( ROUND(" . $vLatitude . ",8) ) ) ) ),2) AS distance, concat('+',register_driver.vCode,register_driver.vPhone) as vPhonenumber, register_driver.* " . $ssql_fav_q . "  FROM `register_driver`

                    WHERE (" . $vLatitude . " != '' AND " . $vLongitude . " != '' $ssql_available AND eStatus='active' AND eIsBlocked = 'No')

                    HAVING distance < COALESCE(NULLIF(register_driver.vWorkLocationRadius,''), " . $LIST_DRIVER_LIMIT_BY_DISTANCE . ")  ORDER BY `register_driver`.`" . $param . "` ASC";
            } else {
                $sql = "SELECT concat('+',register_driver.vCode,register_driver.vPhone) as vPhonenumber, register_driver.* " . $ssql_fav_q . "  FROM `register_driver`

                    WHERE (1=1 $ssql_available AND eStatus='active' AND eIsBlocked = 'No')

                     ORDER BY `register_driver`.`" . $param . "` ASC";
            }
        } else {
            $sql = "SELECT ROUND(( 6371 * acos( cos( radians(" . $sourceLat . ") )

            * cos( radians( ROUND(" . $vLatitude . ",8) ) )

            * cos( radians( ROUND(" . $vLongitude . ",8) ) - radians(" . $sourceLon . ") )

            + sin( radians(" . $sourceLat . ") )

            * sin( radians( ROUND(" . $vLatitude . ",8) ) ) ) ),2) AS distance, concat('+',register_driver.vCode,register_driver.vPhone) as vPhonenumber, register_driver.* " . $ssql_fav_q . "  FROM `register_driver`

            WHERE (" . $vLatitude . " != '' AND " . $vLongitude . " != '' $ssql_available AND eStatus='active' AND eIsBlocked = 'No')

            HAVING distance < " . $LIST_DRIVER_LIMIT_BY_DISTANCE . " ORDER BY `register_driver`.`" . $param . "` ASC";
        }
        //echo $sql; exit;
        $Data = $obj->MySQLSelect($sql);
        // echo "<pre>"; print_r($Data); exit;
        $newData = $driverStatusArr = $companyDataArr = array();
        //Added By HJ On 10-06-2019 For Get All Driver Status Start
        $getDriverVehicleData = $obj->MySQLSelect("SELECT iDriverVehicleId,eStatus FROM driver_vehicle");
        for ($a = 0; $a < count($getDriverVehicleData); $a++) {
            $driverStatusArr[$getDriverVehicleData[$a]['iDriverVehicleId']] = $getDriverVehicleData[$a]['eStatus'];
        }
        //Added By HJ On 10-06-2019 For Get All Driver Status End
        //Added By HJ On 20-06-2020 For Optimized company Table Query Start
        $getCompanyData = $obj->MySQLSelect("SELECT iServiceId,iCompanyId FROM company");
        for ($f = 0; $f < count($getCompanyData); $f++) {
            $companyDataArr[$getCompanyData[$f]['iCompanyId']] = $getCompanyData[$f]['iServiceId'];
        }
        //Added By HJ On 20-06-2020 For Optimized company Table Query End
        $j = 0;
        for ($i = 0; $i < count($Data); $i++) {
            //added on 25-3 bc store driver not getting req of manual booking as discussed with HJ
            if ($MODULES_OBJ->isStorePersonalDriverAvailable()) {
                //$getcomData = $obj->MySQLSelect("SELECT iServiceId FROM company WHERE iCompanyId = " . $Data[$i]['iCompanyId']);
                $companyServiceId = 0;
                if (isset($companyDataArr[$Data[$i]['iCompanyId']])) {
                    $companyServiceId = $companyDataArr[$Data[$i]['iCompanyId']];
                }
                if ($companyServiceId > 0) {
                    continue;
                }
            }
            if ($FEMALE_RIDE_REQ_ENABLE == "No") {
                $Data[$i]['eFemaleOnlyReqAccept'] = "No";
            }
            if ((isset($driverStatusArr[$Data[$i]['iDriverVehicleId']]) && $driverStatusArr[$Data[$i]['iDriverVehicleId']] == "Active") || $eType == "UberX") {
                // if ($Data[$i]['tProfileDescription'] != "") {
                    // mb_internal_encoding("UTF-8");
                    // $Data[$i]['tProfileDescription'] = substr($Data[$i]['tProfileDescription'], 0, 50);
                    // $Data[$i]['tProfileDescription'] = mb_substr($Data[$i]['tProfileDescription'], 0, 50);
                // }

                $Data[$i]['vPhone'] = $Data[$i]['vPhonenumber'];
                if (!isset($Data[$i]['eFavDriver'])) {
                    $Data[$i]['eFavDriver'] = "No";
                }
                $Data[$i]['ACCEPT_CASH_TRIPS'] = "Yes";
                $enableCommisionDeduct = $MODULES_OBJ->autoDeductDriverCommision("Ride"); // Added By HJ On 16-10-2020 For get Auto Deduct Driver Commision Configuration As Per eSystem

                if ($enableCommisionDeduct == 'Yes') {
                    $user_available_balance = $WALLET_OBJ->FetchMemberWalletBalance($Data[$i]['iDriverId'], "Driver");
    
                    //echo "----" . $Data[$i]['iDriverId']."----" . $WALLET_MIN_BALANCE."===".$user_available_balance;
                    if ($WALLET_MIN_BALANCE > $user_available_balance) {
                        $Data[$i]['ACCEPT_CASH_TRIPS'] = "No";
                        //Added BY HJ On 23-09-2019 As Per Discuss with BM and GP Mam Start
                        $checkCondition = 0;
                        if ($SelectedDriverId != "" && $SelectedDriverId == $Data[$i]['iDriverId']) {
                            $checkCondition = 1;
                        }
                        if (($webserviceType == "sendRequestToDrivers" || $webserviceType == "ScheduleARide") && $cashPayment == 'true' && $eType == "UberX" && $checkCondition == 1) {
                            $returnArr = array();
                            $returnArr['Action'] = "0"; // code is invalid
                            $returnArr["message"] = "LBL_CHECK_PROVIDER_MIN_WALLET_BALANCE_TXT";
                            setDataResponse($returnArr);
                        }
                        //Added BY HJ On 23-09-2019 As Per Discuss with BM and GP Mam End
                    }
                }
                //Added By HJ On 05-06-2019 FOr Solved Bug - 6597 As Per Discuss With KS Sir Start
                // if ($Data[$i]['ACCEPT_CASH_TRIPS'] == "No" && ($SYSTEM_PAYMENT_FLOW == "Method-2" || $SYSTEM_PAYMENT_FLOW == 'Method-3')) {
                //     continue;
                // }
                //Added By HJ On 05-06-2019 FOr Solved Bug - 6597 As Per Discuss With KS Sir End
                //if($APP_TYPE == "UberX"){
                if ($eType == "UberX") {
                    // $eUnit = getMemberCountryUnit($Data[$i]['iDriverId'], "Driver");
                    if ($Data[$i]['eSelectWorkLocation'] == "Fixed" && $Data[$i]['vWorkLocationLatitude'] != "" && $Data[$i]['vWorkLocationLongitude'] != "" && $PROVIDER_AVAIL_LOC_CUSTOMIZE == "Yes") {
                        $Data[$i]['vLatitude'] = $Data[$i]['vWorkLocationLatitude'];
                        $Data[$i]['vLongitude'] = $Data[$i]['vWorkLocationLongitude'];
                    }
                    $Data[$i]['PROVIDER_RADIUS'] = $Data[$i]['vWorkLocationRadius'];
                    /*$sqlcount = "SELECT count(iRatingId) as TotalReview FROM ratings_user_driver as r LEFT JOIN trips as t ON r.iTripId=t.iTripId WHERE r.eUserType='Passenger' And t.iActive = 'Finished' AND t.iDriverId =  '" . $Data[$i]['iDriverId'] . "'";
                    $dbcount = $obj->MySQLSelect($sqlcount);
                    $Data[$i]['PROVIDER_RATING_COUNT'] = $dbcount[0]['TotalReview'];*/
                    $Data[$i]['PROVIDER_RATING_COUNT'] = "0";
                }
                //echo $Check_Driver_UFX;die;

                if ($Check_Driver_UFX == "Yes" && $Check_Date_Time != "") {
                    $systemTimeZone = date_default_timezone_get();
                    $Booking_Date_Time = converToTz($Check_Date_Time, $systemTimeZone, $vTimeZone);
                    $Checkday = date('l', strtotime($Check_Date_Time));
                    $hours = date('H', strtotime($Check_Date_Time));
                    $hr1 = $hours;
                    if ($hours == "12" || $hours == "00") {
                        $hr1 = "12";
                        $hr2 = "01";
                    } else {
                        $hr2 = $hr1 + 1;
                        $hr1 = str_pad($hr1, 2, '0', STR_PAD_LEFT);
                        $hr2 = str_pad($hr2, 2, '0', STR_PAD_LEFT);
                    }
                    $CheckHour = $hr1 . "-" . $hr2;
                    $sql = "SELECT * from driver_manage_timing WHERE iDriverId ='" . $Data[$i]['iDriverId'] . "' AND vDay = '" . $Checkday . "' AND vAvailableTimes LIKE '%" . $CheckHour . "%'";
                    $availdriver = $obj->MySQLSelect($sql);
                    if (count($availdriver) > 0) {
                        $sql_book = "SELECT iCabBookingId from cab_booking WHERE iDriverId ='" . $Data[$i]['iDriverId'] . "' AND dBooking_date = '" . $Booking_Date_Time . "' AND eStatus IN('Assign','Accepted')";
                        $availdriverbooking = $obj->MySQLSelect($sql_book);
                        if (count($availdriverbooking) == 0) {
                            $newData[$j] = $Data[$i];
                            $j++;
                        }
                    }
                } else {
                    if ($eType == "UberX" && isProviderEligible($Data[$i]) == false) {
                        continue;
                    }
                    if ($eType == "UberX") {
                        $Data[$i]['IS_PROVIDER_ONLINE'] = isProviderOnline($Data[$i]) ? "Yes" : "No";
                    }

                    // for hotel panel web
                    if (($isFromHotelPanel == 'No' || $isFromAdminPanel == 'No') || (($isFromHotelPanel == 'Yes' && $Data[$i]['ACCEPT_CASH_TRIPS'] == "Yes") || ($isFromAdminPanel == 'Yes' && $Data[$i]['ACCEPT_CASH_TRIPS'] == "Yes"))) {
                        if ($MODULES_OBJ->isSendRequestToDriverBeforFinishTripModule() && $eFly != 'Yes') {
                            if ($Data[$i]['vTripStatus'] == 'On Going Trip') {
                                $checkDriverInactiveTrip = $obj->MySQLSelect("SELECT iDriverId  FROM `trips` WHERE `iDriverId` = '" . $Data[$i]['iDriverId'] . "' AND iActive='Inactive' ");
                                if (count($checkDriverInactiveTrip) > 0) {
                                    continue;
                                }
                                $checkCurrentTrip = "SELECT count(iTripId)  as count FROM `trips` WHERE iTripId = " . $Data[$i]['iTripId'] . " AND (eType != 'Ride' OR (eType = 'Ride' AND ePoolRide = 'Yes') OR (eType = 'Ride' AND eSystem = 'DeliverAll')) AND iActive = 'On Going Trip'";
                                $checkCurrentTripRidecount = $obj->MySQLSelect($checkCurrentTrip);
                                $checkCurrentTrip_ = "SELECT tTotalDuration,fDuration,tStartDate,tStartLat,tStartLong,tEndLat,tEndLong,count(iTripId)  as count FROM `trips` WHERE iTripId = " . $Data[$i]['iTripId'] . "";
                                $checkCurrentTripRide = $obj->MySQLSelect($checkCurrentTrip_);
                                //current trip is not ride (on going trip)
                                if ($checkCurrentTripRidecount[0]['count'] > 0) {
                                    $j++;
                                    continue;
                                }
                                if (count($checkCurrentTripRide) > 0) {
                                    $driverdistance = distanceByLocation($Data[$i]['vLatitude'], $Data[$i]['vLongitude'], $checkCurrentTripRide[0]['tEndLat'], $checkCurrentTripRide[0]['tEndLong'], "K");
                                    $currDate = date('Y-m-d H:i:s');
                                    $minutes = dateDifference($checkCurrentTripRide[0]['tStartDate'], $currDate, '%i');
                                    $remaining_time = (($checkCurrentTripRide[0]['tTotalDuration'] - $minutes) / 60);
                                    if ($driverdistance > $SEND_REQUEST_BEFORE_TRIP_DISTANCE || $remaining_time > $SEND_REQUEST_BEFORE_TRIP_MINUTES) {
                                        $j++;
                                        continue;
                                    }
                                }
                            }
                        }
                        $newData[$j] = $Data[$i];
                        $j++;
                    }
                }
            }
        }
        if (strtoupper(PACKAGE_TYPE) == "SHARK" && $MODULES_OBJ->checkSharkPackage()) {
            $newData = getPoolDriverList($newData, $Check_Driver_UFX, $isFromHotelPanel, $vLatitude, $vLongitude, $param, $sourceLat, $str_date, $sourceLon, $destLat, $destLon); // For Get Pool Driver Details By Hasmukh On 05-12-2018
        }
        if ($MODULES_OBJ->checkDriverDestinationModule() && $eFly != 'Yes') {
            include_once('include/features/include_destinations_driver.php');
            $newData = getDestionsDriverList($newData, $destLat, $destLon);
        }
        $returnData['DriverList'] = $newData;
        $returnData['PickUpDisAllowed'] = $allowed_ans;
        $returnData['DropOffDisAllowed'] = $allowed_ans_drop;
    } else {
        $newData = array();
        $returnData['DriverList'] = $newData;
        $returnData['PickUpDisAllowed'] = $allowed_ans;
        $returnData['DropOffDisAllowed'] = $allowed_ans_drop;
    }

    return $returnData;
}

function getGeneralVarAll_IconBanner()
{
    global $obj, $APP_TYPE;
    //$listField = $obj->MySQLGetFieldsQuery("setting");
    $ssql = "";
    /* if(ENABLE_RENTAL_OPTION == 'No') {

      $ssql .= " AND eRentalType = 'No' ";

  } */
    $wri_usql = "SELECT iSettingId,vName,TRIM(vValue) as vValue,eImageType,eRentalType FROM configurations_cubejek where 1" . $ssql;
    $wri_ures = $obj->MySQLSelect($wri_usql);
    return $wri_ures;
}

function getLoginData($Data)
{
    global $obj, $iServiceId, $LANG_OBJ, $TRACK_ANY_SERVICE_OBJ;

    $vLang = $Data['vLang'];
    $iMemberId = $Data['iMemberId'];
    $UserType = $Data['UserType'];
    $eDeviceType = $Data['eDeviceType'];
    $GCMID = $Data['GCMID'];
    $vCurrency = $Data['vCurrency'];
    $returnArr['changeLangCode'] = "Yes";
    $returnArr['UpdatedLanguageLabels'] = $LANG_OBJ->FetchLanguageLabels($vLang, "1", $iServiceId);
    $returnArr['vLanguageCode'] = $vLang;
    $sql_LangCode = "SELECT eDirectionCode,vGMapLangCode FROM language_master WHERE `vCode` = '" . $vLang . "' ";
    $Data_checkLangCode = $obj->MySQLSelect($sql_LangCode);
    $returnArr['langType'] = $Data_checkLangCode[0]['eDirectionCode'];
    $returnArr['vGMapLangCode'] = $Data_checkLangCode[0]['vGMapLangCode'];
    $sql = "SELECT vCode, vGMapLangCode, eDirectionCode as eType, vTitle,vCurrencyCode,vCurrencySymbol,eDefault,vTitle_EN  FROM  `language_master` WHERE  `eStatus` = 'Active' ORDER BY iDispOrder ASC ";
    $defLangValues = $obj->MySQLSelect($sql);
    $returnArr['LIST_LANGUAGES'] = $defLangValues;
    for ($i = 0; $i < count($defLangValues); $i++) {
        if ($defLangValues[$i]['eDefault'] == "Yes") {
            $returnArr['DefaultLanguageValues'] = $defLangValues[$i];
        }

        if($defLangValues[$i]['vTitle'] != $defLangValues[$i]['vTitle_EN']){ 
			$returnArr['LIST_LANGUAGES'][$i]['vTitle'] = $defLangValues[$i]['vTitle_EN']." (".mb_convert_case($defLangValues[$i]['vTitle'], MB_CASE_TITLE, 'UTF-8').")";
			//$returnArr['LIST_LANGUAGES'][$i]['vTitle'] = $defLangValues[$i]['vTitle_EN']." (".ucfirst(strtolower($defLangValues[$i]['vTitle'])).")";
         } else {
            $returnArr['LIST_LANGUAGES'][$i]['vTitle'] = $defLangValues[$i]['vTitle_EN'];
        }
        $defLangValues[$i]['vService_BG_color'] = RANDOM_COLORS_ARR[$i];
        $defLangValues[$i]['vService_TEXT_color'] = "#FFFFFF";
        $returnArr['LIST_LANGUAGES'][$i]['vService_BG_color'] = RANDOM_COLORS_ARR[$i];
        $returnArr['LIST_LANGUAGES'][$i]['vService_TEXT_color'] = "#FFFFFF";
    }
    $defCurrencyValues = $obj->MySQLSelect("SELECT iCurrencyId,vName, vSymbol,iDispOrder, eDefault,Ratio,fThresholdAmount,eStatus  FROM  `currency` WHERE  `eStatus` = 'Active'  ORDER BY iDispOrder ASC ");
    $returnArr['LIST_CURRENCY'] = $defCurrencyValues;
    for ($i = 0; $i < count($defCurrencyValues); $i++) {
        if ($defCurrencyValues[$i]['eDefault'] == "Yes") {
            $returnArr['DefaultCurrencyValues'] = $defCurrencyValues[$i];
        }
        $defCurrencyValues[$i]['vService_BG_color'] = RANDOM_COLORS_ARR[$i];
        $defCurrencyValues[$i]['vService_TEXT_color'] = "#FFFFFF";
        $returnArr['LIST_CURRENCY'][$i]['vService_BG_color'] = RANDOM_COLORS_ARR[$i];
        $returnArr['LIST_CURRENCY'][$i]['vService_TEXT_color'] = "#FFFFFF";
    }
    $returnArr['Action'] = "1";
    $returnArr['IS_REGISTERED'] = 'Yes';
    if ($UserType == "Passenger") {
        $where = " iUserId = '$iMemberId' ";
        $Data_update_passenger['vLang'] = $vLang;
        $Data_update_passenger['iGcmRegId'] = $GCMID;
        $Data_update_passenger['eDeviceType'] = $eDeviceType;
        $Data_update_passenger['tSessionId'] = session_id() . time();
        $Data_update_passenger['vFirebaseDeviceToken'] = $GCMID;
        if (!empty($vCurrency)) {
            $Data_update_passenger['vCurrencyPassenger'] = $vCurrency;
        }
        if (SITE_TYPE == "Demo") {
            $Data_update_passenger['tRegistrationDate'] = date('Y-m-d H:i:s');
        }
        $id = $obj->MySQLQueryPerform("register_user", $Data_update_passenger, 'update', $where);
        $returnArr['message'] = getPassengerDetailInfo($iMemberId, '', "");
    } elseif ($UserType == "Driver") {
        $where = " iDriverId = '$iMemberId' ";
        $Data_update_driver['vLang'] = $vLang;
        $Data_update_driver['vFirebaseDeviceToken'] = $GCMID;
        $Data_update_driver['tSessionId'] = session_id() . time();
        $Data_update_driver['iGcmRegId'] = $GCMID;
        $Data_update_driver['eDeviceType'] = $eDeviceType;
        if (!empty($vCurrency)) {
            $Data_update_driver['vCurrencyDriver'] = $vCurrency;
        }
        $id = $obj->MySQLQueryPerform("register_driver", $Data_update_driver, 'update', $where);
        $returnArr['message'] = getDriverDetailInfo($iMemberId, 1);
    } elseif ($UserType == "Tracking") {
        $where = " iTrackServiceUserId = '$iMemberId' ";
        $Data_update_passenger['vLang'] = $vLang;
        $Data_update_passenger['iGcmRegId'] = $GCMID;
        $Data_update_passenger['eDeviceType'] = $eDeviceType;
        $Data_update_passenger['tSessionId'] = session_id() . time();
        $Data_update_passenger['vFirebaseDeviceToken'] = $GCMID;

        if (SITE_TYPE == "Demo") {
            $Data_update_passenger['tRegistrationDate'] = date('Y-m-d H:i:s');
        }
        $id = $obj->MySQLQueryPerform("track_service_users", $Data_update_passenger, 'update', $where);
        $returnArr['message'] = $TRACK_ANY_SERVICE_OBJ->getTrackingMemberDetailInfo($iMemberId);
        $UserType = "TrackServiceUser";
    } else {
        $where = " iCompanyId = '$iMemberId' ";
        $Data_update_company['vLang'] = $vLang;
        $Data_update_company['vFirebaseDeviceToken'] = $GCMID;
        $Data_update_company['iGcmRegId'] = $GCMID;
        $Data_update_company['eDeviceType'] = $eDeviceType;
        $Data_update_company['tSessionId'] = session_id() . time();
        $id = $obj->MySQLQueryPerform("company", $Data_update_company, 'update', $where);
        $returnArr['message'] = getCompanyDetailInfo($iMemberId, 1);
        $returnArr['message']['driverOptionArr'] = FetchStoreDriverOptions($vLang, $iServiceId);
    }
    $returnArr['message'] = getCustomeNotificationSound($returnArr['message']);
    $returnArr['message']['LIST_CURRENCY'] = $defCurrencyValues; //put bc naresh wants it in message..
    createUserLog($UserType, "No", $iMemberId, $eDeviceType);
    setDataResponse($returnArr);
}

//HP start isSendRequestToDriverBeforFinishTripModule
function sendRequestToDriverNextTrip($iMemberId)
{
    global $generalobj, $obj, $tconfig, $langage_lbl;
    $row_check = $obj->MySQLSelect("SELECT * FROM `trips` WHERE iDriverId = '$iMemberId' AND iActive = 'Inactive' ");
    if (count($row_check) > 0) {
        $where1 = " iTripId = " . $row_check[0]['iTripId'];
        $Data_update_cab_request['iActive'] = 'Active';
        $obj->MySQLQueryPerform("trips", $Data_update_cab_request, 'update', $where1);
        $cab_request_now = $obj->MySQLSelect("SELECT vRideCountry FROM cab_request_now WHERE iTripId='" . $row_check[0]['iTripId'] . "'");
        $where = " iDriverId = '$iMemberId'";
        $Data_update_driver['iTripId'] = $row_check[0]['iTripId'];
        $Data_update_driver['vTripStatus'] = 'Active';
        $Data_update_driver['vRideCountry'] = $cab_request_now[0]['vRideCountry'];
        $Data_update_driver['vAvailability'] = "Not Available";
        $Data_update_driver['dSendverificationDateEmergency'] = "0000-00-00 00:00:00";
        $Data_update_driver['vVerificationCountEmergency'] = 0;
        $id = $obj->MySQLQueryPerform("register_driver", $Data_update_driver, 'update', $where);
    }
}

//HP end isSendRequestToDriverBeforFinishTripModule
/* class.general.php functions */
function DateTime($text, $format = '')
{
    if ($text == "" || $text == "0000-00-00 00:00:00" || $text == "0000-00-00") {
        return "---";
    }
    switch ($format) {
        //us formate
        case "1":
            return @date('M j, Y', @strtotime($text));
            break;
        case "2":
            return @date('M j, y  [G:i] ', @strtotime($text));
            break;
        case "3":
            return @date("M j, Y", $text);
            break;
        case "4":
            return @date('Y,n,j,G,', $text) . intval(date('i', $text)) . ',' . intval(date('s', $text));
            break;
        case "5":
            return @date('l, F j, Y', @strtotime($text));
            break;
        case "6":
            return @date('g:i:s', $text);
            break;
        case "7":
            return @date('F j, Y  h:i A', @strtotime($text));
            break;
        case "8":
            return @date('Y-m-d', @strtotime($text));
            break;
        case "9":
            return @date('F j, Y', @strtotime($text));
            break;
        case "10":
            return @date('d/m/Y', @strtotime($text));
            break;
        case "11":
            return @date('m/d/y', @strtotime($text));
            break;
        case "12":
            return @date('H:i', @strtotime($text));
            break;
        case "13":
            return @date('F j, Y (H:i:s)', @strtotime($text));
            break;
        case "14":
            return @date('j M Y', @strtotime($text));
            break;
        case "15":
            return @date('D', @strtotime($text));
            break;
        case "16":
            return @date('d', @strtotime($text));
            break;
        case "17":
            return @date('M Y', @strtotime($text));
            break;
        case "18":
            return @date('h:i A', @strtotime($text));
            break;
        case "19":
            return @date('M j, Y', @strtotime($text));
            break;
        case "20":
            return @date('l,F d', @strtotime($text));
            break;
        case "21":
            return @date('M j, Y  h:i A', @strtotime($text));
            break;
        case "22":
            return @date('D, jS M y', @strtotime($text));
            break;
        case "23":
            return @date('D, jS M Y', @strtotime($text));
            break;
        default:
            return @date('M j, Y', @strtotime($text));
            break;
    }
}

function DateTime1($text, $time = 'yes')
{
    if ($text == "" || $text == "0000-00-00 00:00:00" || $text == "0000-00-00") {
        return "---";
    }
    $date = @date('jS F, Y', @strtotime($text));
    if ($time == 'yes') {
        $date .= " " . @date('h:i a', @strtotime($text));
    }
    return $date;
}

function encrypt_bycrypt($data)
{
    $options = ['cost' => 12];
    return password_hash($data, PASSWORD_BCRYPT, $options);
}

function replace_content($vTitle)
{
    $rs_catname = trim(strtolower(($vTitle)));
    $rs_catname = str_replace("/", "-", $rs_catname);
    $rs_catname = str_replace("�", "-", $rs_catname);
    $rs_catname = str_replace("(", "-", $rs_catname);
    $rs_catname = str_replace(")", "-", $rs_catname);
    $rs_catname = str_replace("?", "-", $rs_catname);
    $rs_catname = str_replace("-", "-", $rs_catname);
    $rs_catname = str_replace("#", "-", $rs_catname);
    $rs_catname = str_replace(",", "-", $rs_catname);
    $rs_catname = str_replace(";", "-", $rs_catname);
    $rs_catname = str_replace(":", "-", $rs_catname);
    $rs_catname = str_replace("'", "-", $rs_catname);
    $rs_catname = str_replace("\"", "-", $rs_catname);
    $rs_catname = str_replace("�", "-", $rs_catname);
    $rs_catname = str_replace("+", "-", $rs_catname);
    $rs_catname = str_replace("+", "-", $rs_catname);
    $rs_catname = str_replace("�", "-", $rs_catname);
    //$rs_catname = str_replace("s","_",$rs_catname);
    $rs_catname = str_replace(" ", "-", str_replace("&", "and", $rs_catname));
    $rs_catname = preg_replace("/-+/", "-", $rs_catname);
    return $rs_catname;
}

/* Function to clean string when submit form */
function clean($str)
{
    global $inwebservice, $obj, $obj_security;
    if (empty($obj_security) /*&& !empty($_SERVER['HTTP_HOST']) && (($_SERVER['HTTP_HOST'] == "192.168.1.131" && !empty($_SERVER['REQUEST_URI']) && (strpos($_SERVER['REQUEST_URI'], 'cubejekdev') !== false) == true) || $_SERVER['HTTP_HOST'] == "cubejekdev.bbcsproducts.net")*/) {
        $obj_security = new CI_Security();
    }
    if (!is_array($str)) {
        // should not be array only string will be clean
        $str = trim($str);
        if ($inwebservice != "1") {
            $str = $obj->SqlEscapeString(!empty($obj_security) ? $obj_security->xss_clean($str) : $str); //Commented By HJ On 06-09-2019 For Solved \r\n issue in Service type description As Per Discuss with KS sir
        } else {
            $str = !empty($obj_security) ? $obj_security->xss_clean($str) : $str;
        }
    }
    return ($str);
}

/* to set user role */
function setRole($arr_role, $url)
{
    $arr = array();
    $arr = explode(",", $arr_role);
    $role = $arr;
    checkValid($url, $role);
}

function checkValid($url, $role)
{
    global $tconfig;
    $user = isset($_SESSION['sess_user']) ? $_SESSION['sess_user'] : '';
    $val = in_array($user, $role);
    $val = isset($val) ? $val : $value;
    if ($val == 0) {
        switch ($user) {
            case 'driver':
                header('Location:profile.php');
                break;
            case 'rider':
                header('Location:profile_rider.php');
                break;
            case 'company':
                header('Location:profile.php');
                break;
            case 'organization':
                header('Location:organization-profile');
                break;
            case 'store':
                header('Location:dashboard');
                break;
            default:
                header("Location: ".$tconfig['tsite_url']);
                exit;
          //  header('location:login.php');
        }
    }
}

function save_log_data($iCompanyId, $iDriverId, $eUserType, $eType, $vLogName)
{
    global $obj;
    $curr_date = Date('Y-m-d H:i:s');
    /* $sql = "INSERT INTO `log_file` (`vLogName`,`tDate`,`iCompanyId`,`iDriverId`,`eUserType`, `eType`) VALUES ('" . $vLogName . "','" . $curr_date . "', '" . $iCompanyId . "','" . $iDriverId . "', '" . $eUserType . "', '" . $eType . "')";

    $check_file = $obj->sql_query($sql);*/
    $Data_Insert = [];
    $Data_Insert['vLogName'] = $vLogName;
    $Data_Insert['tDate'] = $curr_date;
    $Data_Insert['iCompanyId'] = $iCompanyId;
    $Data_Insert['iDriverId'] = $iDriverId;
    $Data_Insert['eUserType'] = $eUserType;
    $Data_Insert['eType'] = $eType;
    $check_file = $obj->MySQLQueryPerform("log_file", $Data_Insert, 'insert');
}

//Return trip fare with symbol
function trip_currency($price = '', $ratio = '', $defCurrency = "", $parameter = 2)
{
    global $obj;
    if ($defCurrency == '') {
        $ssql = " eDefault='Yes'";
    } else {
        $ssql = " vName='" . $defCurrency . "'";
    }
    $sql = "select vSymbol from currency where" . $ssql;
    $db_curr_mst = $obj->MySQLSelect($sql);
    if (count($db_curr_mst) > 0) {
        if ($ratio == '' || $ratio == 0) {
            // return $db_curr_mst[0]['vSymbol'] . ' ' . number_format($price, $parameter, '.', '');
            return $db_curr_mst[0]['vSymbol'] . ' ' . number_format($price, $parameter, '.', ',');
        } else {
            //return $db_curr_mst[0]['vSymbol'] . ' ' . number_format(($price * $ratio), $parameter, '.', '');
            return $db_curr_mst[0]['vSymbol'] . ' ' . number_format(($price * $ratio), $parameter, '.', ',');
        }
    }
}

/* used in my earning page */
function trip_currency_payment($price = '', $ratio = '', $defCurrency = "", $parameter = 2)
{
    global $obj, $vSystemDefaultCurrencySymbol, $currencyAssociateArr;
    if ($defCurrency == '') {
        $ssql = " eDefault='Yes'";
        if (!empty($vSystemDefaultCurrencySymbol)) {
            $db_curr_mst = array();
            $db_curr_mst[0]['vSymbol'] = $vSystemDefaultCurrencySymbol;
        }
    } else {
        $ssql = " vName='" . $defCurrency . "'";
        if (isset($currencyAssociateArr[$defCurrency])) {
            $db_curr_mst = array();
            $db_curr_mst[0]['vSymbol'] = $currencyAssociateArr[$defCurrency]['vSymbol'];
        }
    }
    if (count($db_curr_mst) > 0) {
        if ($ratio == '' || $ratio == 0) {
            return number_format($price, $parameter, '.', '');
        } else {
            return number_format(($price * $ratio), $parameter, '.', '');
        }
    }
}

function clearPhone($phone)
{
    $phone = preg_replace("/[^\d]/", "", $phone);
    if (isset($phone[0]) && $phone[0] == '0') {
        $phone = ltrim($phone, '0');
    }
    if (SITE_TYPE == "Demo") {
        if (isset($_REQUEST['ENABLE_READ_MODE_nsakj']) && strtoupper($_REQUEST['ENABLE_READ_MODE_nsakj']) == "YES") {
            return $phone;
        }
        $phone = substr_replace($phone, "*****", 0, -2);
    }
    return $phone;
}

function clearEmail($email)
{
    if (SITE_TYPE == "Demo") {
        if (isset($_REQUEST['ENABLE_READ_MODE_nsakj']) && strtoupper($_REQUEST['ENABLE_READ_MODE_nsakj']) == "YES") {
            return $email;
        }
        //Added By HJ On 29-11-2019 For Mask 70% String Start
        $email = trim($email);
        $mail = explode('.', $email);
        $text = $mail[0];
        $wordCount = strlen($text);
        $char = floor(($wordCount * 70) / 100);
        $orgChar = $wordCount - $char;
        $output = substr($text, 0, $orgChar);
        return $output . str_repeat("*", $char) . "." . $mail[count($mail) - 1];
        //Added By HJ On 29-11-2019 For Mask 70% String End
    } else {
        return $email;
    }
}

function clearMobile($text)
{
    if (SITE_TYPE == "Demo") {
        if (isset($_REQUEST['ENABLE_READ_MODE_nsakj']) && strtoupper($_REQUEST['ENABLE_READ_MODE_nsakj']) == "YES") {
            return $text;
        }
        //Added By HJ On 29-11-2019 For Mask 70% String Start
        $text = trim($text);
        $wordCount = strlen($text);
        $char = floor(($wordCount * 70) / 100);
        $orgChar = $wordCount - $char;
        $output = substr($text, 0, $orgChar);
        return $output . str_repeat("*", $char);
        //Added By HJ On 29-11-2019 For Mask 70% String End
    } else {
        return $text;
    }
}

function clearName($text)
{
    if (SITE_TYPE == "Demo") {
        if (isset($_REQUEST['ENABLE_READ_MODE_nsakj']) && strtoupper($_REQUEST['ENABLE_READ_MODE_nsakj']) == "YES") {
            return $text;
        }
        //Added By HJ On 29-11-2019 For Mask 70% String Start
        $text = trim($text);
        $wordCount = strlen($text);
        $char = floor(($wordCount * 70) / 100);
        $orgChar = $wordCount - $char;
        $output = substr($text, 0, $orgChar);
        return $output . str_repeat("*", $char);
        //Added By HJ On 29-11-2019 For Mask 70% String End
    } else {
        return $text;
    }
}

function clearGeneralText($text)
{
    if (SITE_TYPE == "Demo") {
        if (isset($_REQUEST['ENABLE_READ_MODE_nsakj']) && strtoupper($_REQUEST['ENABLE_READ_MODE_nsakj']) == "YES") {
            return $text;
        }
        //Added By HJ On 29-11-2019 For Mask 70% String Start
        $text = trim($text);
        $wordCount = strlen($text);
        $char = floor(($wordCount * 98) / 100);
        $orgChar = $wordCount - $char;
        $output = substr($text, 0, $orgChar);
        return $output . str_repeat("*", $char);
        //Added By HJ On 29-11-2019 For Mask 70% String End
    } else {
        return $text;
    }
}

/* get default currency */
function symbol_currency($defCurrency = "")
{
    global $obj;
    if ($defCurrency == '') {
        $ssql = " eDefault='Yes'";
    } else {
        $ssql = " vName='" . $defCurrency . "'";
    }
    $sql = "select vSymbol from currency where" . $ssql;
    $db_curr_mst = $obj->MySQLSelect($sql);
    if (count($db_curr_mst) > 0) {
        return $db_curr_mst[0]['vSymbol'];
    }
}

function getVehicleType()
{
    global $obj;
    $vehicleType = "SELECT * FROM vehicle_type WHERE 1";
    $result = $obj->MySQLSelect($vehicleType);
    return $result;
}

function cleanall($str)
{
    $str = trim($str);
    $str = stripslashes($str);
    return ($str);
}

function RandomString($limit , $uppercase = "No")
{
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    if($uppercase == 'Yes'){
        $characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    }

    $randstring = '';
    for ($i = 0; $i < $limit; $i++) {
        $randstring .= $characters[rand(0, strlen($characters))];
    }
    return $randstring;
}

function Insert_Default_Preferences($user_id, $set_default_etype = "", $user_type = "Driver")
{
    global $obj;
    $tbl_name = "preferences";
    $tbl_name1 = "driver_preferences";
    $sql = "select iPreferenceId from $tbl_name where eStatus='Active'";
    $db_preference = $obj->MySQLSelect($sql);
    foreach ($db_preference as $values) {
        $q = "Insert Into ";
        $query = $q . " `" . $tbl_name1 . "` SET

        `iPreferenceId` = '" . $values['iPreferenceId'] . "',

        `iDriverId` = '" . $user_id . "'";
        $obj->sql_query($query);
    }
    return true;
}

function Get_User_Preferences($user_id, $user_type = "Driver")
{
    global $obj;
    $tbl_name = "driver_preferences";
    // echo "sa";exit;
    $sql = "select dp.iPreferenceId as pref_Id,dp.eType as pref_Type,if(dp.eType = 'Yes',p.vPreferenceImage_Yes,p.vPreferenceImage_No) as pref_Image,if(dp.eType = 'Yes',p.vYes_Title,p.vNo_Title) as pref_Title from driver_preferences dp

    left join preferences p on p.iPreferenceId = dp.iPreferenceId

    where dp.iDriverId = '$user_id'";
    $data_preferences = $obj->MySQLSelect($sql);
    // echo "<pre>";print_r($data_preferences);exit;
    return $data_preferences;
}

function Update_User_Preferences($user_id, $pref_array = array(), $set_default_etype = "No", $user_type = "Driver")
{
    //insert transaction type entries
    global $obj;
    if (!empty($pref_array) && $user_id != "") {
        $tbl_name = "driver_preferences";
        $sql = "select iPreferenceId from preferences where eStatus='Active'";
        $db_preference = $obj->MySQLSelect($sql);
        // echo "<pre>";print_r($pref_array);exit;
        $sql = "select iDriverPreferenceId from $tbl_name where iDriverId = '$user_id'";
        $data_driver_pref = $obj->MySQLSelect($sql);
        if (count($data_driver_pref) > 0) {
            $sql = "delete from $tbl_name where iDriverId = '$user_id'";
            $obj->sql_query($sql);
        }
        foreach ($db_preference as $value) {
            $iPreferenceId = $value['iPreferenceId'];
            $pref_val = $pref_array['vChecked_' . $iPreferenceId];
            $eType = (isset($pref_val) && $pref_val != "") ? $pref_val : $set_default_etype;
            $q = "Insert Into ";
            $query = $q . " `" . $tbl_name . "` SET

            `iPreferenceId` = '" . $iPreferenceId . "',

            `iDriverId` = '" . $user_id . "',

            `eType` = '" . $eType . "'";
            $obj->sql_query($query);
        }
        return true;
    }
}

function clearPhoneFront($text)
{
    if (SITE_TYPE == "Demo") {
        return substr_replace($text, "*****", 0, -2);
    } else {
        return $text;
    }
}

function clearCmpNameFront($text)
{
    if (SITE_TYPE == "Demo") {
        if (strpos(trim($text), ' ') !== false) {
            $mail = explode(' ', $text);
            $output = substr($mail[1], 0, 1);
            return $mail[0] . ' ' . $output . '***';
        } else {
            $output = substr($text, 0, 3);
            return $output . '***';
        }
    } else {
        return $text;
    }
}

function encrypt($data)
{
    for ($i = 0, $key = 27, $c = 48; $i <= 255; $i++) {
        $c = 255 & ($key ^ ($c << 1));
        $table[$key] = $c;
        $key = 255 & ($key + 1);
    }
    $len = strlen($data);
    for ($i = 0; $i < $len; $i++) {
        $data[$i] = chr($table[ord($data[$i])]);
    }
    return base64_encode($data);
}

function decrypt($data)
{
    $data = base64_decode($data);
    for ($i = 0, $key = 27, $c = 48; $i <= 255; $i++) {
        $c = 255 & ($key ^ ($c << 1));
        $table[$c] = $key;
        $key = 255 & ($key + 1);
    }
    $len = strlen($data);
    for ($i = 0; $i < $len; $i++) {
        $data[$i] = chr($table[ord($data[$i])]);
    }
    return $data;
}

function getParentCatNew($iParentId = 0, $old_cat = "", $iCatIdNot = "0", $loop = 1, $iCategoryId)
{
    global $obj, $par_arr_new;
    $sql_query = "select iMenuId, vMenu, iParentId from menu  where iParentId='$iParentId' and eStatus='Active'";
    $db_cat_rs = $obj->MySQLSelect($sql_query);
    $n = count($db_cat_rs);
    if ($n > 0) {
        for ($i = 0; $i < $n; $i++) {
            $par_arr_new[] = array('iMenuId' => $db_cat_rs[$i]['iMenuId'], 'vMenu' => $old_cat . "--|" . $loop . "|&nbsp;&nbsp;" . $db_cat_rs[$i]['vMenu']);
            getParentCatNew($db_cat_rs[$i]['iMenuId'], $old_cat . "&nbsp;&nbsp;&nbsp;&nbsp;", $iCatIdNot, $loop + 1, $iCategoryId);
        }
        $old_cat = "";
    }
    return $par_arr_new;
}

function checkDuplicateFront($iDbKeyName, $TableName, $db_duplicateFieldArr, $vRedirectFile, $msg, $iDbKeyValue = '', $con = ' or ')
{
    global $obj;
    $ssql = '';
    if ($iDbKeyValue != '') {
        $ssql = " and $iDbKeyName <> '" . $iDbKeyValue . "'";
    }
    for ($i = 0; $i < count($db_duplicateFieldArr); $i++) {
        $ssql_field[] = " $db_duplicateFieldArr[$i] = '" . $_REQUEST[$db_duplicateFieldArr[$i]] . "' ";
    }
    $ssql .= " and ( " . @implode($con, $ssql_field) . ")";
    $sql = "select count($iDbKeyName) as tot from $TableName where 1 " . $ssql;
    $db_cnt = $obj->MySQLSelect($sql);
    //echo "<pre>";print_r($db_cnt);exit;
    if ($db_cnt[0]['tot'] > 0) {
        $_POST['duplicate'] = 1;
        getPostForm($_POST, $msg, $vRedirectFile);
        exit;
    }
}

function checkDuplicateAdmin($iDbKeyName, $TableName, $db_duplicateFieldArr, $vRedirectFile, $msg, $iDbKeyValue = '', $con = ' or ')
{
    global $obj;
    $ssql = '';
    if ($iDbKeyValue != '') {
        $ssql = " and $iDbKeyName <> '" . $iDbKeyValue . "'";
    }
    for ($i = 0; $i < count($db_duplicateFieldArr); $i++) {
        $ssql_field[] = " $db_duplicateFieldArr[$i] = '" . $_REQUEST[$db_duplicateFieldArr[$i]] . "' ";
    }
    $ssql .= " and ( " . @implode($con, $ssql_field) . ")";
    $sql = "select count($iDbKeyName) as tot from $TableName where 1 " . $ssql;
    $db_cnt = $obj->MySQLSelect($sql);
    if ($db_cnt[0]['tot'] > 0) {
        $duplicate = 1;
    } else {
        $duplicate = 0;
    }
    return $duplicate;
}

function checkDuplicateAdminNew($iDbKeyName, $TableName, $db_duplicateFieldArr, $iDbKeyValue = '', $con = ' or ')
{
    global $obj, $eSystem;
    $ssql = '';
    if ($iDbKeyValue != '') {
        $ssql = " and $iDbKeyName <> '" . $iDbKeyValue . "'";
    }
    for ($i = 0; $i < count($db_duplicateFieldArr); $i++) {
        $ssql_field[] = " $db_duplicateFieldArr[$i] = '" . $_REQUEST[$db_duplicateFieldArr[$i]] . "' ";
    }
    $ssql .= " and ( " . @implode($con, $ssql_field) . ")";
    if ($iDbKeyName == 'vEmail' && $TableName == 'company') {
        $ssql .= " and eStatus != 'Deleted'";
    }
    if ($eSystem == 'DeliverAll') {
        $ssql .= " and eSystem = 'DeliverAll'";
    }
    $sql = "select count($iDbKeyName) as tot from $TableName where 1 " . $ssql;
    $db_cnt = $obj->MySQLSelect($sql);
    if ($db_cnt[0]['tot'] > 0) {
        $duplicate = 1;
    } else {
        $duplicate = 0;
    }
    return $duplicate;
}

function getPostForm($POST_Arr, $msg = "", $action = "")
{
    $str = '

    <html>

    <form name="frm1" action="' . $action . '" method="post">';
    foreach ($POST_Arr as $key => $value) {
        if ($key != "mode") {
            if (is_array($value)) {
                foreach ($value as $kk => $vv) {
                    $str .= '<br><input type="Hidden" name="Data[' . $kk . ']" value="' . stripslashes($vv) . '">';
                }
                $str .= '<br><input type="Hidden" name="' . $key . '[]" value="' . stripslashes($value[$i]) . '">';
            } else {
                $str .= '<br><input type="Hidden" name="' . $key . '" value="' . stripslashes($value) . '">';
            }
        }
    }
    $str .= '<input type="Hidden" name=var_msg value="' . $msg . '">

    </form>

    <script>

    document.frm1.submit();

    </script>

    </html>';
    if ($action != "") {
        $url_components = parse_url($action);
        parse_str($url_components['query'], $params);
        $_SESSION['success'] = $params['success'];
        $_SESSION['var_msg'] = $msg;
    }
    echo $str;
    exit;
}

function cal_trip_price_details($iTripId, $iDriverVehicleId, $iVehicleTypeId)
{
    global $obj;
    $iVehicleCategoryId = get_value('vehicle_type', 'iVehicleCategoryId', 'iVehicleTypeId', $iVehicleTypeId, '', 'true');
    $vVehicleCategoryData = get_value(getVehicleCategoryTblName(), 'iParentId,ePriceType,vLogo,vCategory_EN as vCategory', 'iVehicleCategoryId', $iVehicleCategoryId);
    $vVehicleFare = get_value('vehicle_type', 'fFixedFare', 'iVehicleTypeId', $iVehicleTypeId, '', 'true');
    $iParentId = $vVehicleCategoryData[0]['iParentId'];
    if ($iParentId == 0) {
        $ePriceType = $vVehicleCategoryData[0]['ePriceType'];
    } else {
        $ePriceType = get_value(getVehicleCategoryTblName(), 'ePriceType', 'iVehicleCategoryId', $iParentId, '', 'true');
    }
    $ALLOW_SERVICE_PROVIDER_AMOUNT = $ePriceType == "Provider" ? "Yes" : "No";
    if ($ALLOW_SERVICE_PROVIDER_AMOUNT == "Yes") {
        $sqlServicePro = "SELECT * FROM `service_pro_amount` WHERE iDriverVehicleId='" . $iDriverVehicleId . "' AND iVehicleTypeId='" . $iVehicleTypeId . "'";
        $serviceProData = $obj->MySQLSelect($sqlServicePro);
        if (count($serviceProData) > 0) {
            $fAmount = $serviceProData[0]['fAmount'];
            $vVehicleFare = $fAmount;
        }
    }
    return $vVehicleFare;
}

function GetAllSurgePriceDetails($vehicleTypeID, $selectedDateTime = "")
{
    $ePickStatus = get_value('vehicle_type', 'ePickStatus', 'iVehicleTypeId', $vehicleTypeID, '', 'true');
    $eNightStatus = get_value('vehicle_type', 'eNightStatus', 'iVehicleTypeId', $vehicleTypeID, '', 'true');
    $fPickUpPrice = 1;
    $fNightPrice = 1;
    if ($selectedDateTime == "") {
        // $currentTime = @date("Y-m-d H:i:s");
        $currentTime = @date("H:i:s");
        $currentDay = @date("D");
    } else {
        // $currentTime = $selectedDateTime;
        $currentTime = @date("H:i:s", strtotime($selectedDateTime));
        $currentDay = @date("D", strtotime($selectedDateTime));
    }
    $returnArr['PickUpDetails']['ePickStatus'] = $ePickStatus;
    $returnArr['NightDetails']['eNightStatus'] = $eNightStatus;
    if ($ePickStatus == "Active" || $eNightStatus == "Active") {
        $startTime_str = "t" . $currentDay . "PickStartTime";
        $endTime_str = "t" . $currentDay . "PickEndTime";
        $price_str = "f" . $currentDay . "PickUpPrice";
        $pickStartTime = get_value('vehicle_type', $startTime_str, 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        $pickEndTime = get_value('vehicle_type', $endTime_str, 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        $fPickUpPrice = get_value('vehicle_type', $price_str, 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        $nightStartTime = get_value('vehicle_type', 'tNightStartTime', 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        $nightEndTime = get_value('vehicle_type', 'tNightEndTime', 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        $fNightPrice = get_value('vehicle_type', 'fNightPrice', 'iVehicleTypeId', $vehicleTypeID, '', 'true');
        $tempNightHour = "12:00:00";
        $returnArr['PickUpDetails']['PickStartTime'] = $pickStartTime;
        $returnArr['PickUpDetails']['PickEndTime'] = $pickEndTime;
        $returnArr['PickUpDetails']['fPickUpPrice'] = $fPickUpPrice;
        $returnArr['NightDetails']['NightStartTime'] = $nightStartTime;
        $returnArr['NightDetails']['NightEndTime'] = $nightEndTime;
        $returnArr['NightDetails']['fNightPrice'] = $fNightPrice;
        if ($currentTime > $pickStartTime && $currentTime < $pickEndTime && $ePickStatus == "Active") {
            $returnArr['Action'] = "0";
            $returnArr['SurgePrice'] = $fPickUpPrice;
            $returnArr['SurgeType'] = "PickUp";
        } else if ((($currentTime > $nightStartTime && $currentTime < $nightEndTime && $nightEndTime > $tempNightHour) || ($currentTime < $nightStartTime && $currentTime < $nightEndTime && $nightEndTime < $tempNightHour && $nightStartTime > $tempNightHour) || ($currentTime > $nightStartTime && $currentTime > $nightEndTime && $nightEndTime < $tempNightHour && $nightStartTime > $tempNightHour) || ($currentTime > $nightStartTime && $currentTime < $nightEndTime && $nightEndTime < $tempNightHour)) && $eNightStatus == "Active") {
            $returnArr['Action'] = "0";
            $returnArr['SurgePrice'] = $fNightPrice;
            $returnArr['SurgeType'] = "Night";
        } else {
            $returnArr['Action'] = "1";
            $returnArr['Status'] = "NoSurgesApplied";
        }
    } else {
        $returnArr['Action'] = "1";
        $returnArr['Status'] = "NoSurgesAdded";
    }
    return $returnArr;
}

function copyRemoteFile($url, $localPathname)
{
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
    $data = curl_exec($ch);
    curl_close($ch);
    if ($data) {
        $fp = fopen($localPathname, 'wb');
        if ($fp) {
            fwrite($fp, $data);
            fclose($fp);
        } else {
            fclose($fp);
            //return false;
        }
    } else {
        // return false;
    }
    return true;
}

function FetchTripFareDetailsWeb($iTripId, $iMemberId = '', $eUserType = '', $eFrom = '', $isOrganization = '', $isForAdmin = "")
{
    global $obj, $CONFIG_OBJ, $MODULES_OBJ, $LANG_OBJ, $tconfig, $POOL_ENABLE, $ENABLE_INTRANSIT_SHOPPING_SYSTEM, $SERVICE_PROVIDER_FLOW, $userDetailsArr, $currencyAssociateArr, $vSystemDefaultLangCode, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $languageLabelDataArr, $tripDetailsArr, $langage_lbl_admin;
    $returnArr = array();
    $userlangcode = $currencycode = $tblname = "";
    if ($eUserType == "Passenger") {
        $tblname = "register_user";
        $vLang = "vLang";
        $iUserId = "iUserId";
        $vCurrency = "vCurrencyPassenger";
    } else if ($eUserType == "Driver") {
        $tblname = "register_driver";
        $vLang = "vLang";
        $iUserId = "iDriverId";
        $vCurrency = "vCurrencyDriver";
    }
    include_once($tconfig["tpanel_path"] .'include/include_webservice_enterprisefeatures.php');
    if ($tblname != "") {
        if (isset($userDetailsArr[$tblname . '_' . $iMemberId])) {
            $memberData = $userDetailsArr[$tblname . '_' . $iMemberId];
        } else {
            $memberData = $obj->MySQLSelect("SELECT * FROM " . $tblname . " WHERE $iUserId='" . $iMemberId . "'");
        }
        $currencycode = $memberData[0][$vCurrency];
        $userlangcode = $memberData[0]['vLang'];
        //echo "<pre>";print_r($currencyAssociateArr);die;
        if (isset($currencyAssociateArr[$currencycode])) {
            $currencySymbol = $currencyAssociateArr[$currencycode]['vSymbol'];
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol from currency WHERE vName = '" . $currencycode . "'");
            $currencySymbol = $currencyData[0]['vSymbol'];
        }
    }
    if ($eUserType == "Passenger" && $isOrganization == 'Yes') {
        $tblname = "organization";
        $vLang = "vLang";
        $iUserId = "iOrganizationId";
        $vCurrency = "vCurrency";
        //$currencycode = get_value("trips", $vCurrency, "iTripId", $iTripId, '', 'true');
        $sql_org = "SELECT org.vCurrency,org.vLang,cu.vSymbol FROM organization as org LEFT JOIN currency as cu ON org.vCurrency = cu.vName WHERE  org.iOrganizationId= '" . $iMemberId . "'";
        $organizationData = $obj->MySQLSelect($sql_org);
        $currencycode = $organizationData[0]['vCurrency'];
        $userlangcode = $organizationData[0]['vLang'];
        $currencySymbol = $organizationData[0]['vSymbol'];
    }
    //$userlangcode = get_value($tblname, $vLang, $iUserId, $iMemberId, '', 'true');
    if ($userlangcode == "" || $userlangcode == NULL || $isForAdmin != "") {
        //Added By HJ On 24-06-2020 For Optimize language_master Table Query Start
        if (!empty($vSystemDefaultLangCode)) {
            $userlangcode = $vSystemDefaultLangCode;
        } else {
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
            $userlangcode = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
            //$userlangcode = get_value('language_master', 'vCode', 'eDefault', 'Yes', '', 'true');
        }
        //Added By HJ On 24-06-2020 For Optimize language_master Table Query End
    }
    if ($eFrom == "" || $eFrom == null) {
        $userlangcode = $_SESSION['sess_lang'];
    }
    //Added By HJ On 25-06-2020 For langauge labele and Other Union Table Query Start
    if (isset($languageLabelDataArr['language_label_union_other_' . $userlangcode])) {
        $languageLabelsArr = $languageLabelDataArr['language_label_union_other_' . $userlangcode];
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabelsWeb($userlangcode, "1");
        $languageLabelDataArr['language_label_union_other_' . $userlangcode] = $languageLabelsArr;
    }
    //Added By HJ On 25-06-2020 For langauge labele and Other Union Table Query End
    if (empty($currencycode) || $isForAdmin != "") {
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol from currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
        }
    }
    //$sql = "SELECT * from trips WHERE iTripId = '" . $iTripId . "'";
    $sql = "SELECT tr.*,vt.vVehicleType_" . $userlangcode . " as vVehicleType,vt.vRentalAlias_" . $userlangcode . " as vRentalVehicleTypeName,vt.vLogo,vt.iVehicleCategoryId,vt.iCancellationTimeLimit,vt.fFixedFare,vt.eIconType,COALESCE(vc.iParentId, '0') as iParentId,COALESCE(vc.ePriceType, '') as ePriceType,COALESCE(vc.vLogo, '') as vLogoVehicleCategory,COALESCE(vc.vCategory_" . $userlangcode . ", '') as vCategory from trips as tr LEFT JOIN  vehicle_type as vt ON tr.iVehicleTypeId = vt.iVehicleTypeId  LEFT JOIN " . getVehicleCategoryTblName() . " as vc ON vt.iVehicleCategoryId = vc.iVehicleCategoryId WHERE tr.iTripId = '" . $iTripId . "'";
    $tripData = $obj->MySQLSelect($sql);

    /*--------------------- Admin Video Consulting Services --------------------*/
    if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
        $sql_vehicle_category_table_name = getVehicleCategoryTblName();
        $tVehicleTypeFareDataArr = json_decode($tripData[0]['tVehicleTypeFareData'], true);
        $FareData = $tVehicleTypeFareDataArr['FareData'];
        $sql_CatName = "SELECT vc.vCategory_" . $userlangcode . " as subCategoryName , (SELECT vcs.vCategory_" . $userlangcode . " FROM " . $sql_vehicle_category_table_name . " as vcs WHERE vcs.iVehicleCategoryId = vc.iParentId) as ParentCategoryName FROM " . $sql_vehicle_category_table_name . " as vc WHERE vc.iVehicleCategoryId = '" . $FareData[0]['id'] . "'";
        $CatName = $obj->MySQLSelect($sql_CatName);
        $tripData[0]['vCategory'] = $CatName[0]['ParentCategoryName'];
        $tripData[0]['vSubCategory'] = $CatName[0]['subCategoryName'];
    }
    /*--------------------- Admin Video Consulting Services --------------------*/

    $priceRatio = 1;
    if (isset($tripData[0]['fRatio_' . $currencycode])) {
        $priceRatio = $tripData[0]['fRatio_' . $currencycode];
    }
    $iActive = $tripData[0]['iActive'];
    // Convert Into Timezone
    $tripTimeZone = $tripData[0]['vTimeZone'];
    $tTripRequestDateOrig = $tripData[0]['tTripRequestDate'];
    $tEndDateOrig = $tripData[0]['tEndDate'];
    $tStartDateOrig = $tripData[0]['tStartDate'];
    $ePoolRide = $tripData[0]['ePoolRide'];

    if ($tripTimeZone != "") {
        $serverTimeZone = date_default_timezone_get();
        $tripData[0]['tTripRequestDate'] = converToTz($tripData[0]['tTripRequestDate'], $tripTimeZone, $serverTimeZone);
        $tripData[0]['tDriverArrivedDate'] = converToTz($tripData[0]['tDriverArrivedDate'], $tripTimeZone, $serverTimeZone);
        if ($tripData[0]['tStartDate'] != "0000-00-00 00:00:00") {
            $tripData[0]['tStartDate'] = converToTz($tripData[0]['tStartDate'], $tripTimeZone, $serverTimeZone);
        }
        if ($tripData[0]['tEndDate'] != "0000-00-00 00:00:00") {
            $tripData[0]['tEndDate'] = converToTz($tripData[0]['tEndDate'], $tripTimeZone, $serverTimeZone);
        }
    }
    // Convert Into Timezone
    $returnArr = array_merge($tripData[0], $returnArr);
    $petDetails_arr = array();
    if ($tripData[0]['iUserPetId'] > 0) {
        $petDetails_arr = get_value('user_pets', 'iPetTypeId,vTitle as PetName,vWeight as PetWeight, tBreed as PetBreed, tDescription as PetDescription', 'iUserPetId', $tripData[0]['iUserPetId'], '', '');
    }
    $iRentalPackageId = $tripData[0]['iRentalPackageId'];
    if ($iRentalPackageId > 0) {
        $returnArr['eRental'] = "Yes";
    } else {
        $returnArr['eRental'] = "";
    }
    $iPackageTypeId = $tripData[0]['iPackageTypeId'];
    if ($iPackageTypeId != 0) {
        $returnArr['PackageType'] = get_value('package_type', 'vName', 'iPackageTypeId', $iPackageTypeId, '', 'true');
    }
    $returnArr['PetDetails']['PetName'] = $returnArr['PetDetails']['PetWeight'] = $returnArr['PetDetails']['PetBreed'] = $returnArr['PetDetails']['PetDescription'] = $returnArr['PetDetails']['PetTypeName'] = '';
    if (count($petDetails_arr) > 0) {
        $petTypeName = get_value('pet_type', 'vTitle_' . $userlangcode, 'iPetTypeId', $petDetails_arr[0]['iPetTypeId'], '', 'true');
        $returnArr['PetDetails']['PetName'] = $petDetails_arr[0]['PetName'];
        $returnArr['PetDetails']['PetWeight'] = $petDetails_arr[0]['PetWeight'];
        $returnArr['PetDetails']['PetBreed'] = $petDetails_arr[0]['PetBreed'];
        $returnArr['PetDetails']['PetDescription'] = $petDetails_arr[0]['PetDescription'];
        $returnArr['PetDetails']['PetTypeName'] = $petTypeName;
    }
    /* User Wallet Information */
    $returnArr['UserDebitAmount'] = strval($tripData[0]['fWalletDebit']);
    $iCancelReasonId = $tripData[0]['iCancelReasonId'];
    if ($iCancelReasonId > 0) {
        //Added By HJ On 04-07-2020 For Optimize cancel_reason Table Query Start
        if (isset($tripDetailsArr['cancel_reason'])) {
            $getCancelReasons = $tripDetailsArr['cancel_reason'];
        } else {
            $getCancelReasons = $obj->MySQLSelect("SELECT * FROM cancel_reason");
            $tripDetailsArr['cancel_reason'] = $getCancelReasons;
        }
        $cancelReasonArr = array();
        for ($c = 0; $c < count($getCancelReasons); $c++) {
            $cancelReasonArr[$getCancelReasons[$c]['iCancelReasonId']] = $getCancelReasons[$c];
        }
        if (isset($cancelReasonArr[$iCancelReasonId])) {
            $vCancelReason = $cancelReasonArr[$iCancelReasonId]['vTitle_' . $userlangcode];
        } else {
            $vCancelReason = get_value('cancel_reason', "vTitle_" . $userlangcode, 'iCancelReasonId', $iCancelReasonId, '', 'true');
        }
        //Added By HJ On 04-07-2020 For Optimize cancel_reason Table Query End
        //$vCancelReason = get_value('cancel_reason', "vTitle_" . $userlangcode, 'iCancelReasonId', $iCancelReasonId, '', 'true');
        $returnArr['vCancelReason'] = $vCancelReason;
    }
    $vVehicleType = $tripData[0]['vVehicleType'];
    $vRentalVehicleTypeName = !empty($tripData[0]['vRentalVehicleTypeName']) ? $tripData[0]['vRentalVehicleTypeName'] : $vVehicleType;
    $vVehicleTypeLogo = $tripData[0]['vLogo'];
    $iVehicleCategoryId = $tripData[0]['iVehicleCategoryId'];
    $vVehicleCategoryData[0]['vLogo'] = $tripData[0]['vLogoVehicleCategory'];
    $vVehicleCategoryData[0]['vCategory'] = $tripData[0]['vCategory'];
    $vVehicleFare = $tripData[0]['fFixedFare'];
    $iParentId = $tripData[0]['iParentId'];
    if ($iParentId == 0) {
        $ePriceType = $tripData[0]['ePriceType'];
    } else {
        $ePriceType = get_value(getVehicleCategoryTblName(), 'ePriceType', 'iVehicleCategoryId', $iParentId, '', 'true');
    }
    //$eIconType = get_value('vehicle_type', "eIconType", 'iVehicleTypeId', $tripData[0]['iVehicleTypeId'], '', 'true');
    $eIconType = $tripData[0]['eIconType'];
    $TripTime = date('h:iA', strtotime($tripData[0]['tTripRequestDate']));
    // Convert Into Timezone
    // $tripTimeZone = $tripData[0]['vTimeZone'];
    // if($tripTimeZone != ""){
    // $serverTimeZone = date_default_timezone_get();
    // $tTripRequestDateOrig = converToTz($tTripRequestDateOrig,$tripTimeZone,$serverTimeZone);
    // }
    // Convert Into Timezone
    $tTripRequestDate = date('dS M Y \a\t h:i a', strtotime($tripData[0]['tTripRequestDate']));
    $tStartDate = $tripData[0]['tStartDate'];
    $tEndDate = $tripData[0]['tEndDate'];
    $tDriverArrivedDate = $tripData[0]['tDriverArrivedDate'];
    $iCancellationTimeLimit = $tripData[0]['iCancellationTimeLimit'];
    $Vehicle_WaitingFeeTimeLimit = $tripData[0]['iWaitingFeeTimeLimit'];
    if (!empty($tripData[0]['tVehicleTypeFareData']) && $tripData[0]['eType'] == "UberX") {
        $tVehicleTypeFareDataArr = json_decode($tripData[0]['tVehicleTypeFareData'], true);
        $Vehicle_WaitingFeeTimeLimit = $tVehicleTypeFareDataArr['ParentWaitingTimeLimit'];
    }
    ## Checking Minutes For Waiting Fee ##
    $scheduled_trip = $obj->MySQLSelect("SELECT dBooking_date FROM cab_booking WHERE iTripId = '$iTripId' ");
    $dBooking_date = "";
    if (!empty($scheduled_trip) && count($scheduled_trip) > 0) {
        $dBooking_date = $scheduled_trip[0]['dBooking_date'];
    }
    $Vehicle_WaitingFeeTimeLimit = $Vehicle_WaitingFeeTimeLimit * 60;
    $waiting_time_diff = strtotime($tStartDate) - strtotime($tDriverArrivedDate) - $Vehicle_WaitingFeeTimeLimit;
    if (!empty($dBooking_date)) {
        $waiting_time_diff = strtotime($tStartDate) - strtotime($dBooking_date) - $Vehicle_WaitingFeeTimeLimit;
    }
    $waitingTime = ceil($waiting_time_diff / 60);
    //$waitingTime = $waitingTime - $iCancellationTimeLimit;
    if ($waitingTime > 1) {
        $waitingTime = $waitingTime . " " . $languageLabelsArr['LBL_MINUTES_TXT'];
    } else {
        $waitingTime = $waitingTime . " " . $languageLabelsArr['LBL_MINUTE'];
    }
    ## Checking Minutes For Waiting Fee ##
    $totalTime = $runQuery = 0;
    if (($tStartDate != '' && $tStartDate != '0000-00-00 00:00:00' && $tEndDate != '' && $tEndDate != '0000-00-00 00:00:00') || $tripData[0]['eType'] == "Multi-Delivery") {
        //if ($tStartDate != '' && $tStartDate != '0000-00-00 00:00:00' && $tEndDate != '' && $tEndDate != '0000-00-00 00:00:00') {
        if ($tripData[0]['eFareType'] == "Hourly") {
            // $hours       =   0;
            // $minutes     =   0;
            $totalSec = 0;
            $sql22 = "SELECT * FROM `trip_times` WHERE iTripId='$iTripId'";
            $db_tripTimes = $obj->MySQLSelect($sql22);
            $runQuery = 1;
            foreach ($db_tripTimes as $dtT) {
                if ($dtT['dPauseTime'] != '' && $dtT['dPauseTime'] != '0000-00-00 00:00:00') {
                    $totalSec += strtotime($dtT['dPauseTime']) - strtotime($dtT['dResumeTime']);
                }
            }
            $years = floor($totalSec / (365 * 60 * 60 * 24));
            $months = floor(($totalSec - $years * 365 * 60 * 60 * 24) / (30 * 60 * 60 * 24));
            $days = floor(($totalSec - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24) / (60 * 60 * 24));
            $hours = floor(($totalSec - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24 - $days * 60 * 60 * 24) / (60 * 60));
            $minuts = floor(($totalSec - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24 - $days * 60 * 60 * 24 - $hours * 60 * 60) / 60);
            $seconds = floor(($totalSec - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24 - $days * 60 * 60 * 24 - $hours * 60 * 60 - $minuts * 60));
            if ($days > 0) {
                $hours = ($days * 24) + $hours;
            }
            if ($hours > 0) {
                $totalTime = $hours . ':' . $minuts . ':' . $seconds;
            } else if ($minuts > 0) {
                $totalTime = $minuts . ':' . $seconds . " " . $languageLabelsArr['LBL_MINUTES_TXT'];
            }
            if ($totalTime < 1) {
                $totalTime = $seconds . " " . $languageLabelsArr['LBL_SECONDS_TXT'];
            }
        } else {
            $days = dateDifference($tStartDate, $tEndDate, '%a');
            $hours = dateDifference($tStartDate, $tEndDate, '%h');
            $minutes = dateDifference($tStartDate, $tEndDate, '%i');
            $seconds = dateDifference($tStartDate, $tEndDate, '%s');
            if ($tripData[0]['eType'] == "Multi-Delivery") {
                $triprtotaltime = secondsToTime($tripData[0]['fDuration'] * 60);
                $days = $triprtotaltime['d'];
                $hours = $triprtotaltime['h'];
                $minutes = $triprtotaltime['m'];
                $seconds = $triprtotaltime['s'];
            }
            $LBL_HOURS_TXT = ($hours > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
            $LBL_MINUTES_TXT = ($minutes > 1) ? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
            $hours = str_pad($hours, 2, '0', STR_PAD_LEFT);
            $minutes = str_pad($minutes, 2, '0', STR_PAD_LEFT);
            $seconds = str_pad($seconds, 2, '0', STR_PAD_LEFT);
            if ($days > 0) {
                $hours = ($days * 24) + $hours;
            }
            if ($hours > 0) {
                //$totalTime = $hours * 60;
                //$totalTime = $hours.':'.$minutes.':'.$seconds." " .$languageLabelsArr['LBL_HOUR'] ;
                $totalTime = $hours . ':' . $minutes . ':' . $seconds . " " . $LBL_HOURS_TXT;
            } else if ($minutes > 0) {
                //$totalTime = $totalTime + $minutes;
                //$totalTime = $minutes.':'.$seconds. " " . $languageLabelsArr['LBL_MINUTES_TXT'];
                $totalTime = $minutes . ':' . $seconds . " " . $LBL_MINUTES_TXT;
            }
            //$totalTime = $totalTime . ":" . $seconds . " " . $languageLabelsArr['LBL_MINUTES_TXT'];
            if ($totalTime < 1) {
                $totalTime = $seconds . " " . $languageLabelsArr['LBL_SECONDS_TXT'];
            }
        }
    }
    $totalTime_hold = "1 " . $languageLabelsArr['LBL_MINUTE'];
    //Added By HJ On 28-12-2018 For Calculate In Transite Hold Time Start
    //if ($ENABLE_INTRANSIT_SHOPPING_SYSTEM == "Yes" && $tripData[0]['eType'] == "Ride") { //Comment By Hasmukh Because Applied Time Not Display
    if ($tripData[0]['eType'] == "Ride") {
        $totalSecTransite = 0;
        if ($runQuery == 0) {
            //Added By HJ On 04-07-2020 For Optimize trip_times Table Query Start
            if (isset($tripDetailsArr["trip_times_" . $iTripId])) {
                $db_tripTimes = array();
                $db_tripTimes = $tripDetailsArr["trip_times_" . $iTripId];
            } else {
                $db_tripTimes = $obj->MySQLSelect("SELECT * FROM `trip_times` WHERE iTripId='" . $iTripId . "'");
                $tripDetailsArr["trip_times_" . $iTripId] = $db_tripTimes;
            }
            //Added By HJ On 04-07-2020 For Optimize trip_times Table Query End
            //$sql22 = "SELECT * FROM `trip_times` WHERE iTripId='$iTripId'";
            //$db_tripTimes = $obj->MySQLSelect($sql22);
        }
        foreach ($db_tripTimes as $dtT) {
            if ($dtT['dPauseTime'] != '' && $dtT['dPauseTime'] != '0000-00-00 00:00:00') {
                $totalSecTransite += strtotime($dtT['dPauseTime']) - strtotime($dtT['dResumeTime']);
            }
        }
        $yearsTransite = floor($totalSecTransite / (365 * 60 * 60 * 24));
        $monthsTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24) / (30 * 60 * 60 * 24));
        $daysTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24 - $monthsTransite * 30 * 60 * 60 * 24) / (60 * 60 * 24));
        $hoursTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24 - $monthsTransite * 30 * 60 * 60 * 24 - $daysTransite * 60 * 60 * 24) / (60 * 60));
        $minutsTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24 - $monthsTransite * 30 * 60 * 60 * 24 - $daysTransite * 60 * 60 * 24 - $hoursTransite * 60 * 60) / 60);
        $secondsTransite = floor(($totalSecTransite - $yearsTransite * 365 * 60 * 60 * 24 - $monthsTransite * 30 * 60 * 60 * 24 - $daysTransite * 60 * 60 * 24 - $hoursTransite * 60 * 60 - $minutsTransite * 60));
        if ($daysTransite > 0) {
            $hoursTransite = ($daysTransite * 24) + $hoursTransite;
        }
        $LBL_HOURS_TXT = ($hoursTransite > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
        if ($hoursTransite > 0) {
            $totalTime_hold = $hoursTransite . ' ' . $LBL_HOURS_TXT;
        }
        if ($minutsTransite > 0) {
            $LBL_MINUTES_TXT = ($minutsTransite > 1) ? $languageLabelsArr['LBL_MINUTES_TXT'] : $languageLabelsArr['LBL_MINUTE'];
            $LBL_HOURS_TXT = ($hoursTransite > 1) ? $languageLabelsArr['LBL_HOURS_TXT'] : $languageLabelsArr['LBL_HOUR_TXT'];
            $totalTime_hold = ($hoursTransite > 0) ? $hoursTransite . ":" . $minutsTransite . " " . $LBL_HOURS_TXT : $minutsTransite . " " . $LBL_MINUTES_TXT;
            if ($hoursTransite > 0) {
                $totalTime_hold = ($minutsTransite > 0) ? $hoursTransite . ":" . $minutsTransite . ":" . $secondsTransite . " " . $LBL_HOURS_TXT : $hoursTransite . " " . $LBL_HOURS_TXT;
            } else {
                $totalTime_hold = $minutsTransite . ":" . $secondsTransite . " " . $LBL_MINUTES_TXT;
            }
        }
        if ($totalTime_hold == "") {
            $totalTime_hold = "1 " . $languageLabelsArr['LBL_MINUTE'];
        }
    }
    //Added By HJ On 28-12-2018 For Calculate In Transite Hold Time End
    if ($tripData[0]['iRentalPackageId'] > 0) {
        $returnArr['carTypeName'] = $vRentalVehicleTypeName;
    } else {
        $returnArr['carTypeName'] = $vVehicleType;
    }
    $returnArr['carImageLogo'] = $vVehicleTypeLogo;
    $TripRating = "0";
    if ($eUserType == "Passenger") {
        $TripRating = get_value('ratings_user_driver', 'vRating1', 'iTripId', $iTripId, " AND eUserType='Driver' AND vRating1 != '' ", 'true');
        //Added By HJ On 25-06-2020 For Optimization register_driver Table Query Start
        if (isset($userDetailsArr['register_driver_' . $tripData[0]['iDriverId']])) {
            $driverData = $userDetailsArr['register_driver_' . $tripData[0]['iDriverId']];
        } else {
            $driverData = $obj->MySQLSelect("SELECT *,iDriverId as iMemberId FROM register_driver WHERE iDriverId='" . $tripData[0]['iDriverId'] . "'");
            $userDetailsArr['register_driver_' . $tripData[0]['iDriverId']] = $driverData;
        }
        //Added By HJ On 25-06-2020 For Optimization register_driver Table Query End
        //$returnArr['vDriverImage'] = get_value('register_driver', 'vImage', 'iTripId', $tripData[0]['iDriverId'], '', 'true');
        $returnArr['vDriverImage'] = $driverData[0]['vImage'];
        //$driverDetailArr = get_value('register_driver', '*', 'iDriverId', $tripData[0]['iDriverId']);
        $eUnit = $tripData[0]['vCountryUnitRider'];
    } else if ($eUserType == "Driver") {
        $TripRating = get_value('ratings_user_driver', 'vRating1', 'iTripId', $iTripId, " AND eUserType='Passenger' AND vRating1 != '' ", 'true');
        //$passgengerDetailArr = get_value('register_user', '*', 'iUserId', $tripData[0]['iUserId']);
        $eUnit = $tripData[0]['vCountryUnitDriver'];
        //$eUnit = $tripData[0]['vCountryUnitRider'];
    } else {
        $eUnit = $CONFIG_OBJ->getConfigurations("configurations", "DEFAULT_DISTANCE_UNIT");
    }
    if ($eUnit == "Miles") {
        $DisplayDistanceTxt = $languageLabelsArr['LBL_MILE_DISTANCE_TXT'];
    } else {
        $DisplayDistanceTxt = $languageLabelsArr['LBL_KM_DISTANCE_TXT'];
    }
    $iFare = $tripData[0]['iFare'];
    //$iFare = $tripData[0]['iFare']+$tripData[0]['fTollPrice'];
    $fPricePerKM = $tripData[0]['fPricePerKM'] * $priceRatio;
    $iBaseFare = $tripData[0]['iBaseFare'] * $priceRatio;
    $fPricePerMin = $tripData[0]['fPricePerMin'] * $priceRatio;
    $fCommision = $tripData[0]['fCommision'];
    $fDistance = $tripData[0]['fDistance'];
    if ($iActive == "Canceled") {
        $totalTime = 0;
    }
    //Added By HJ On 17-07-2019 For Get Tiem and Distance For Display In Ride Pool Invocie Start
    if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
        $totalTime = $tripData[0]['fPoolDuration'] . " " . $languageLabelsArr['LBL_MINUTE'];
        $fDistance = $tripData[0]['fPoolDistance'];
    }
    //Added By HJ On 17-07-2019 For Get Tiem and Distance For Display In Ride Pool Invocie End
    if ($eUnit == "Miles") {
        $fDistance = round($fDistance * 0.621371, 2);
    }
    if ($totalTime == 0) {
        $totalTime = "0.00 " . $languageLabelsArr['LBL_MINUTE'];
    }
    $vDiscount = $tripData[0]['vDiscount']; // 50 $
    $fDiscount = $tripData[0]['fDiscount']; // 50
    $fMinFareDiff = $tripData[0]['fMinFareDiff'] * $priceRatio;
    $fWalletDebit = $tripData[0]['fWalletDebit'];
    $fSurgePriceDiff = $tripData[0]['fSurgePriceDiff'] * $priceRatio;
    $fTripGenerateFare = $tripData[0]['fTripGenerateFare'] * $priceRatio;
    $fPickUpPrice = $tripData[0]['fPickUpPrice'];
    $fNightPrice = $tripData[0]['fNightPrice'];
    $eFlatTrip = $tripData[0]['eFlatTrip'];
    $fFlatTripPrice = $tripData[0]['fFlatTripPrice'] * $priceRatio;
    $fTipPrice = $tripData[0]['fTipPrice'] * $priceRatio;
    $fVisitFee = $tripData[0]['fVisitFee'] * $priceRatio;
    $fMaterialFee = $tripData[0]['fMaterialFee'] * $priceRatio;
    $fMiscFee = $tripData[0]['fMiscFee'] * $priceRatio;
    $fDriverDiscount = $tripData[0]['fDriverDiscount'] * $priceRatio;
    $vVehicleFare = $vVehicleFare * $priceRatio;
    $fCancelPrice = $tripData[0]['fCancellationFare'] * $priceRatio;
    $fWaitingFees = $tripData[0]['fWaitingFees'] * $priceRatio;
    $fTripHoldPrice = $tripData[0]['fTripHoldPrice'] * $priceRatio; // Added By HJ For Intransit Amount On 28-12-2018
    $fTollPrice = $tripData[0]['fTollPrice'] * $priceRatio;
    $fOtherCharges = $tripData[0]['fOtherCharges'] * $priceRatio; //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes
    $fTax1 = $tripData[0]['fTax1'] * $priceRatio;
    $fTax2 = $tripData[0]['fTax2'] * $priceRatio;
    $fWaitingFees = $tripData[0]['fWaitingFees'] * $priceRatio;
    $fOutStandingAmount = $tripData[0]['fOutStandingAmount'] * $priceRatio;
    $fAddedOutstandingamt = $tripData[0]['fAddedOutstandingamt'] * $priceRatio;
    // for hotel
    $fHotelCommision = $tripData[0]['fHotelCommision'] * $priceRatio;
    // added for surge
    $fAirportPickupSurgeAmount = $tripData[0]['fAirportPickupSurgeAmount'] * $priceRatio;
    $fAirportDropoffSurgeAmount = $tripData[0]['fAirportDropoffSurgeAmount'] * $priceRatio;
    $eTollSkipped = $tripData[0]['eTollSkipped'];
    // if ($fTollPrice > 0) {
    //     $eTollSkipped = $tripData[0]['eTollSkipped'];
    // }
    if ($fTollPrice > 0) {
        $eTollSkipped = "No";
    }
    $tUserComment = $tripData[0]['tUserComment'];
    $extraPersonCharge = $tripData[0]['fExtraPersonCharge'] * $priceRatio;

    $tVehicleTypeDataArr = array();
    if ($tripData[0]['tVehicleTypeData'] != "") {
        $tVehicleTypeDataArr = (array)json_decode($tripData[0]['tVehicleTypeData']);
        if (count($tVehicleTypeDataArr) > 0) {
            $tmpTVehicleTypeDataArr = (array)$tVehicleTypeDataArr[0];
            $tUserCommentNew = $tmpTVehicleTypeDataArr['tUserComment'];
            
        }
    }
    if(!empty($tUserCommentNew)){
        $returnArr['tUserCommentNew'] = $tUserCommentNew;
    } else {
        $returnArr['tUserCommentNew'] = "";
    }
    
    $returnArr['tUserComment'] = $tUserComment;
    $returnArr['vVehicleType'] = $vVehicleType;
    $returnArr['eIconType'] = $eIconType;
    $returnArr['vVehicleCategory'] = $vVehicleCategoryData[0]['vCategory'];
    $returnArr['TripTime'] = $TripTime;
    $returnArr['ConvertedTripRequestDate'] = $tTripRequestDate;
    $returnArr['FormattedTripDate'] = $tTripRequestDate;
    $returnArr['tTripRequestDateOrig'] = $tTripRequestDateOrig;
    $returnArr['tEndDateOrig'] = $tEndDateOrig;
    $returnArr['tStartDateOrig'] = $tStartDateOrig;
    $returnArr['tTripRequestDate'] = $tTripRequestDate;
    $returnArr['TripTimeInMinutes'] = $totalTime;
    $returnArr['TripRating'] = $TripRating;
    $returnArr['CurrencySymbol'] = $currencySymbol;
    $returnArr['TripFare'] = formatNum($iFare * $priceRatio);
    $returnArr['iTripId'] = $tripData[0]['iTripId'];
    $returnArr['vTripPaymentMode'] = $tripData[0]['vTripPaymentMode'];
    $returnArr['extraPersonCharge'] = setTwoDecimalPoint($extraPersonCharge);
    // for hotel
    $returnArr['fHotelCommision'] = formatNum($tripData[0]['fHotelCommision']);
    $returnArr['eType'] = $tripData[0]['eType'];
    if ($tripData[0]['eType'] == "UberX" && $tripData[0]['eFareType'] != "Regular") {
        $returnArr['tDaddress'] = "";
    }
    if ($tripData[0]['vBeforeImage'] != "") {
        $returnArr['vBeforeImage'] = $tconfig['tsite_upload_trip_images'] . $tripData[0]['vBeforeImage'];
    }
    if ($tripData[0]['eType'] == "UberX") {
        $returnArr['vLogoVehicleCategoryPath'] = $tconfig['tsite_upload_images_vehicle_category'] . "/" . $iVehicleCategoryId . "/";
        $returnArr['vLogoVehicleCategory'] = $vVehicleCategoryData[0]['vLogo'];
    } else {
        $returnArr['vLogoVehicleCategory'] = "";
        $returnArr['vLogoVehicleCategoryPath'] = "";
    }
    if ($tripData[0]['vAfterImage'] != "") {
        $returnArr['vAfterImage'] = $tconfig['tsite_upload_trip_images'] . $tripData[0]['vAfterImage'];
    }
    $iFare_Detail_Earning = $tripData[0]['fTripGenerateFare'] - $fCommision - $tripData[0]['fTax1'] - $tripData[0]['fTax2'] - $tripData[0]['fOutStandingAmount'] - $tripData[0]['fAddedOutstandingamt'] - $tripData[0]['fHotelCommision'];
    if ($eUserType == "Driver") {
        //$iFare = $tripData[0]['fTripGenerateFare'] + $tripData[0]['fTipPrice'] - $fCommision - $tripData[0]['fTax1'] - $tripData[0]['fTax2'];
        $iFare = $tripData[0]['fTripGenerateFare'] + $tripData[0]['fTipPrice'] - $fCommision - $tripData[0]['fTax1'] - $tripData[0]['fTax2'] - $tripData[0]['fOutStandingAmount'] - $tripData[0]['fAddedOutstandingamt'];
        if ($tripData[0]['iActive'] == "Canceled") {
            $iFare_Detail_Earning = $tripData[0]['fTripGenerateFare'] - $fCommision;
        }
    } else {
        $iFare = $iFare;
    }
    $originalFare = $iFare;
    if ($eUserType == "") {
        //$originalFare = $originalFare + $tripData[0]['fOutStandingAmount']; //added by SP bc outstanding is not calculated in total so do it on 14-07-2020
    }
    $surgePrice = 1;
    if ($tripData[0]['fPickUpPrice'] > 1) {
        $surgePrice = $tripData[0]['fPickUpPrice'];
    } else {
        $surgePrice = $tripData[0]['fNightPrice'];
    }
    //echo $originalFare;die;
    $SurgePriceFactor = strval($surgePrice);
    // added for airport surge
    $fAirportPickupSurge = strval($tripData[0]['fAirportPickupSurge']);
    $fAirportDropoffSurge = strval($tripData[0]['fAirportDropoffSurge']);
    $returnArr['TripFareOfMinutes'] = formatNum($tripData[0]['fPricePerMin'] * $priceRatio);
    $returnArr['TripFareOfDistance'] = formatNum($tripData[0]['fPricePerKM'] * $priceRatio);
    $returnArr['iFare'] = formatNum($iFare * $priceRatio);
    $returnArr['iFare_Detail_Earning'] = formatNum($iFare_Detail_Earning * $priceRatio);
    $returnArr['iOriginalFare_value'] = ($originalFare * $priceRatio);
    $returnArr['iOriginalFare'] = formatNum($originalFare * $priceRatio);
    $returnArr['TotalFare'] = formatNum($iFare * $priceRatio);
    $returnArr['fPricePerKM'] = formatNum($fPricePerKM);
    $returnArr['iBaseFare'] = formatNum($iBaseFare);
    $returnArr['fPricePerMin'] = formatNum($fPricePerMin);
    $returnArr['fCommision'] = formatNum($fCommision * $priceRatio);
    $returnArr['fDistance'] = formatNum($fDistance);
    $returnArr['fDiscount'] = formatNum($fDiscount * $priceRatio);
    $returnArr['fDiscount_value'] = $fDiscount * $priceRatio;
    $returnArr['fMinFareDiff'] = formatNum($fMinFareDiff);
    $returnArr['fWalletDebit'] = formatNum($fWalletDebit * $priceRatio);
    $returnArr['fWalletDebit_value'] = $fWalletDebit * $priceRatio;
    $returnArr['fSurgePriceDiff'] = formatNum($fSurgePriceDiff);
    $returnArr['fTripGenerateFare'] = formatNum($fTripGenerateFare);
    $returnArr['fFlatTripPrice'] = formatNum($fFlatTripPrice);
    $returnArr['fWaitingFees'] = formatNum($fWaitingFees);
    $returnArr['fTripHoldPrice'] = formatNum($fTripHoldPrice); // Added By HJ For Intransit Amount On 28-12-2018
    $returnArr['fOutStandingAmount'] = formatNum($fOutStandingAmount);
    $returnArr['fAddedOutstandingamt'] = formatNum($fAddedOutstandingamt);
    if ($eTollSkipped == "No") {
        $returnArr['fTollPrice'] = formatNum($fTollPrice);
    }
    $returnArr['fOtherCharges'] = formatNum($fOtherCharges); //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes
    if ($fTipPrice > 0) {
        $returnArr['fTipPrice'] = formateNumAsPerCurrency($fTipPrice, $currencycode);
    }
    $returnArr['SurgePriceFactor'] = $SurgePriceFactor;
    $returnArr['fVisitFee'] = formatNum($fVisitFee);
    $returnArr['fMaterialFee'] = formatNum($fMaterialFee);
    $returnArr['fMiscFee'] = formatNum($fMiscFee);
    $returnArr['fDriverDiscount'] = formatNum($fDriverDiscount);
    $returnArr['fCancelPrice'] = formatNum($fCancelPrice);
    $returnArr['fWaitingFees'] = formatNum($fWaitingFees);
    $returnArr['fTax1'] = formatNum($fTax1);
    $returnArr['fTax2'] = formatNum($fTax2);
    $returnArr['DisplayDistanceTxt'] = $DisplayDistanceTxt;
    // added for airport surge
    $returnArr['fAirportPickupSurgeAmount'] = formatNum($fAirportPickupSurgeAmount);
    $returnArr['fAirportDropoffSurgeAmount'] = formatNum($fAirportDropoffSurgeAmount);
    $iDriverId = $tripData[0]['iDriverId'];
    //Added By HJ On 24-06-2020 For Optimize register_driver Table Query Start
    if (isset($userDetailsArr['register_driver_' . $iDriverId])) {
        $driverDetails = $userDetailsArr['register_driver_' . $iDriverId];
    } else {
        $driverDetails = get_value('register_driver', '*', 'iDriverId', $iDriverId);
        $userDetailsArr['register_driver_' . $iDriverId] = $driverDetails;
    }
    //Added By HJ On 24-06-2020 For Optimize register_driver Table Query End
    $driverDetails[0]['vImage'] = ($driverDetails[0]['vImage'] != "" && $driverDetails[0]['vImage'] != "NONE") ? $driverDetails[0]['vImage'] : "";
    $driverDetails[0]['vPhone'] = '+' . $driverDetails[0]['vCode'] . $driverDetails[0]['vPhone'];
    $returnArr['DriverDetails'] = $driverDetails[0];
    $iUserId = $tripData[0]['iUserId'];
    //Added By HJ On 24-06-2020 For Optimize register_user Table Query Start
    if (isset($userDetailsArr['register_user_' . $iUserId])) {
        $passengerDetails = $userDetailsArr['register_user_' . $iUserId];
    } else {
        $passengerDetails = get_value('register_user', '*', 'iUserId', $iUserId);
        $userDetailsArr['register_user_' . $iUserId] = $passengerDetails;
    }
    //Added By HJ On 24-06-2020 For Optimize register_user Table Query End
    $passengerDetails[0]['vImgName'] = ($passengerDetails[0]['vImgName'] != "" && $passengerDetails[0]['vImgName'] != "NONE") ? $passengerDetails[0]['vImgName'] : "";
    $passengerDetails[0]['vPhone'] = '+' . $passengerDetails[0]['vPhoneCode'] . $passengerDetails[0]['vPhone'];
    $returnArr['PassengerDetails'] = $passengerDetails[0];
    if ($eUserType == "Passenger") {
        $returnArr['vImage'] = $driverDetails[0]['vImage'];
    } else {
        $returnArr['vImage'] = $passengerDetails[0]['vImgName'];
    }
    //Commented By HJ On 05-11-2019 For Get Tax Percentage From Trip Table Start
    /* $TaxArr = getMemberCountryTax($iUserId, "Passenger");

      $fUserCountryTax1 = $TaxArr['fTax1'];

      $fUserCountryTax2 = $TaxArr['fTax2']; */ //Commented By HJ On 05-11-2019 For Get Tax Percentage From Trip Table End
    //Added By HJ On 05-11-2019 For Get Tax Percentage From Trip Table Start
    $fUserCountryTax1 = $fUserCountryTax2 = 0;
    if (isset($tripData[0]['fTax1Percentage']) && $tripData[0]['fTax1Percentage'] > 0) {
        $fUserCountryTax1 = $tripData[0]['fTax1Percentage'];
    }
    if (isset($tripData[0]['fTax2Percentage']) && $tripData[0]['fTax2Percentage'] > 0) {
        $fUserCountryTax2 = $tripData[0]['fTax2Percentage'];
    }
    //Added By HJ On 05-11-2019 For Get Tax Percentage From Trip Table End
    $iDriverVehicleId = $tripData[0]['iDriverVehicleId'];
    $sql = "SELECT make.vMake, model.vTitle, dv.*  FROM `driver_vehicle` dv, make, model WHERE dv.iDriverVehicleId='" . $iDriverVehicleId . "' AND dv.`iMakeId` = make.`iMakeId` AND dv.`iModelId` = model.`iModelId`";
    $vehicleDetailsArr = $obj->MySQLSelect($sql);
    $vehicleDetailsArr[0]['vModel'] = $vehicleDetailsArr[0]['vTitle'];
    //if ($eUserType == "Passenger" && $tripData[0]['eType'] == "UberX") {
    if ($tripData[0]['eType'] == "UberX") {
        //$ALLOW_SERVICE_PROVIDER_AMOUNT = $CONFIG_OBJ->getConfigurations("configurations", "ALLOW_SERVICE_PROVIDER_AMOUNT");
        $ALLOW_SERVICE_PROVIDER_AMOUNT = $ePriceType == "Provider" ? "Yes" : "No";
        $fAmount = "0";
        if ($ALLOW_SERVICE_PROVIDER_AMOUNT == "Yes") {
            $sqlServicePro = "SELECT * FROM `service_pro_amount` WHERE iDriverVehicleId='" . $iDriverVehicleId . "' AND iVehicleTypeId='" . $tripData[0]['iVehicleTypeId'] . "'";
            $serviceProData = $obj->MySQLSelect($sqlServicePro);
            $vehicleTypeData = get_value('vehicle_type', 'eFareType,fPricePerHour,fFixedFare', 'iVehicleTypeId', $tripData[0]['iVehicleTypeId']);
            if ($vehicleTypeData[0]['eFareType'] == "Fixed") {
                $fAmount = formateNumAsPerCurrency($vehicleTypeData[0]['fFixedFare'], $currencycode);
            } else if ($vehicleTypeData[0]['eFareType'] == "Hourly") {
                $fAmount = formateNumAsPerCurrency($vehicleTypeData[0]['fPricePerHour'], $currencycode) . "/hour";
            }
            if (count($serviceProData) > 0) {
                $fAmount = $serviceProData[0]['fAmount'];
                $vVehicleFare = $fAmount * $priceRatio;
                $vVehicleFare = formatNum($vVehicleFare);
                if ($vehicleTypeData[0]['eFareType'] == "Fixed") {
                    $fAmount = formateNumAsPerCurrency($fAmount, $currencycode);
                } else if ($vehicleTypeData[0]['eFareType'] == "Hourly") {
                    $fAmount = formateNumAsPerCurrency($fAmount, $currencycode) . "/hour";
                }
            }
            $vehicleDetailsArr[0]['fAmount'] = strval($fAmount);
        }
    }
    $returnArr['DriverCarDetails'] = $vehicleDetailsArr[0];
    if ($iActive == "Canceled" && $eUserType == "Driver") {
        $sql = "SELECT * from trip_outstanding_amount WHERE iTripId = '" . $iTripId . "'";
        $tripCanceledData = $obj->MySQLSelect($sql);
        $fcancelCommision = $tripCanceledData[0]['fCommision'];
        $fDriverPendingAmount = $tripCanceledData[0]['fDriverPendingAmount'];
        $ePaidByPassenger = $tripCanceledData[0]['ePaidByPassenger'];
        $ePaidToDriver = $tripCanceledData[0]['ePaidToDriver'];
        $returnArr['fCommision'] = formatNum($fcancelCommision * $priceRatio);
        $returnArr['iFare'] = formatNum($fDriverPendingAmount * $priceRatio);
    }
    if ($tripData[0]['eFareType'] == "Fixed") {
        $vehilceTypeArr = array();
        $getVehicleTypes = $obj->MySQLSelect("SELECT iVehicleTypeId,vVehicleType_" . $userlangcode . " AS vehicleType FROM vehicle_type WHERE 1=1");
        for ($r = 0; $r < count($getVehicleTypes); $r++) {
            $vehilceTypeArr[$getVehicleTypes[$r]['iVehicleTypeId']] = $getVehicleTypes[$r]['vehicleType'];
        }
    }
    //echo "<pre>";
    //print_r($vehilceTypeArr);die;
    if ($eUserType == "Passenger") {
        $tripFareDetailsArr = array();
        if ($eFlatTrip == "Yes" && $iActive != "Canceled") {
            $i = 0;
            $tripFareDetailsArr[$i][$languageLabelsArr['LBL_FLAT_TRIP_FARE_TXT']] = formateNumAsPerCurrency($returnArr['fFlatTripPrice'], $currencycode);
            if ($fSurgePriceDiff > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                $i++;
            }
            // added for airport surge
            if ($fAirportPickupSurgeAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fAirportDropoffSurgeAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : "--";
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : "--";
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            if ($fDiscount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROMO_DISCOUNT_TITLE']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($fHotelCommision > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                $i++;
            }
            if ($fWalletDebit > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                $i++;
            }
            if ($extraPersonCharge > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode) : "--";
                $i++;
            }
            if ($fTax1 > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                $i++;
            }
            if ($fTax2 > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                $i++;
            }
            if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                $i++;
            }
            if ($fOtherCharges > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                $i++;
            }
            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iFare'], $currencycode) : "--";
        } /* elseif($eFlatTrip == "Yes" && $iActive == "Canceled"){

          $tripFareDetailsArr[0][$languageLabelsArr['LBL_Total_Fare']] = $currencySymbol." 0.00";

        } */
        elseif ($fCancelPrice > 0 || ($iActive == "Canceled" && $fWalletDebit > 0)) {
            if ($fWalletDebit > $fCancelPrice) {
                $CancelPrice = ($fWalletDebit + $fCancelPrice) - ($fWaitingFees + $fTripHoldPrice + $fTax1 + $fTax2); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                $subtotal = formatNum($fCancelPrice);
            } else {
                if ($fWalletDebit > 0) {
                    $CancelPrice = $fCancelPrice + $fWalletDebit - $fTripHoldPrice - $fTax1 - $fTax2; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    // $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice + $fWalletDebit+$fTax1+$fTax2);
                    $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice);
                } else {
                    $CancelPrice = $fCancelPrice;
                    $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice + $fTax1 + $fTax2);
                }
            }
            $tripFareDetailsArr[0][$languageLabelsArr['LBL_CANCELLATION_FEE']] = formateNumAsPerCurrency($CancelPrice, $currencycode);
            $ki = 0;
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $ki++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $ki++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice Start
            if ($fTax1 > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = $currencySymbol . $returnArr['fTax1'];
                $ki++;
            }
            if ($fTax2 > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = $currencySymbol . $returnArr['fTax2'];
                $ki++;
            }
            //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice End
            if ($fWalletDebit > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode);
                $ki++;
            }
            $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = formateNumAsPerCurrency($subtotal, $currencycode);
        } else {
            $i = 0;
            $countUfx = 0;
            if ($tripData[0]['eType'] == "UberX") {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $returnArr['vVehicleCategory'] . "-" . $returnArr['vVehicleType'];
                $countUfx = 1;
            }
            if ($tripData[0]['eFareType'] == "Regular") {
                //$tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = $vVehicleType . " " . $currencySymbol . $returnArr['iBaseFare'];
                if ($tripData[0]['iRentalPackageId'] > 0 && function_exists('getRentalData')) {
                    $rentalData = getRentalData($tripData[0]['iRentalPackageId']);
                    $tripData[0]['vPackageName'] = $rentalData[0]['vPackageName_' . $userlangcode];
                    $tripFareDetailsArr[$i + $countUfx][$tripData[0]['vPackageName'] . " " . $languageLabelsArr['LBL_RENTAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                    if ($countUfx == 1) {
                        $i++;
                    }
                    $TripKilometer = getVehicleCountryUnit($tripData[0]['iVehicleTypeId'], $rentalData[0]['fKiloMeter']);
                    if ($eUnit == "Miles") {
                        $TripKilometer = round($TripKilometer * 0.621371, 2);
                    }
                    if ($fDistance > $TripKilometer) {
                        $extradistance = $fDistance - $TripKilometer;
                    } else {
                        $extradistance = 0;
                    }
                    /*if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
                        if ($extradistance > 0) {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONSL_DISTANCE_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                        }
                        $Extra_Time = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode);
                        $Extra_Time_Val = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode, "Yes");
                        if ($Extra_Time_Val > 0) {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONAL_TIME_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        }
                    } else {*/
                        if ($extradistance > 0) {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONSL_DISTANCE_TXT'] . " (" . $extradistance . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                        }
                        $Extra_Time = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode);
                        $Extra_Time_Val = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode, "Yes");
                        if ($Extra_Time_Val > 0) {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONAL_TIME_TXT'] . " (" . $Extra_Time . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        }
                    /*}*/
                } else {
                    $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                    if ($countUfx == 1) {
                        $i++;
                    }
                    //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $languageLabelsArr['LBL_KM_DISTANCE_TXT'] . ")"] = ($iActive != "Canceled")?$currencySymbol . $returnArr['TripFareOfDistance']:"--";
                    if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                        $i++;
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"]= ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                        $i++;
                    } else {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                        $i++;
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                        $i++;
                    }
                }
            } else if ($tripData[0]['eFareType'] == "Fixed") {
                //  $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = $currencySymbol . ($fTripGenerateFare - $fSurgePriceDiff - $fMinFareDiff);
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details Start
                if (isset($tripData[0]['tVehicleTypeFareData']) && $tripData[0]['tVehicleTypeFareData'] != "" && $SERVICE_PROVIDER_FLOW == "Provider") {
                    $getCategoryName = "";
                    $tVehicleTypeFareData = json_decode($tripData[0]['tVehicleTypeFareData'], true);
                    $tVehicleTypeFareData = $tVehicleTypeFareData['FareData'];
                    for ($fd = 0; $fd < count($tVehicleTypeFareData); $fd++) {
                        $eAllowQty = $tVehicleTypeFareData[$fd]['eAllowQty'];
                        $typeQty = $tVehicleTypeFareData[$fd]['qty'];
                        $typeAmount = $tVehicleTypeFareData[$fd]['amount'] * $typeQty;
                        // $typeAmount = $currencySymbol . formatNum($typeAmount * $priceRatio);
                        $typeAmount = formateNumAsPerCurrency($typeAmount * $priceRatio, $currencycode);
                        //$typeTitle = $tVehicleTypeFareData[$fd]->title;
                        $typeTitle = $vehilceTypeArr[$tVehicleTypeFareData[$fd]['id']];
                        if ($getCategoryName == "") {
                            $getCategoryName = $tVehicleTypeFareData[$fd]['vVehicleCategory'];
                        }
                        $qtyDisplay = "";
                        if ($eAllowQty == "Yes") {
                            $qtyDisplay = " (x" . $typeQty . ")";
                        }
                        if ($typeTitle != $languageLabelsArr['LBL_SUBTOTAL_TXT']) {
                            if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
                                $typeAmount = $tripData[0]['fTripGenerateFare'] - $tripData[0]['fTax1'] - $tripData[0]['fTax2'];
                                $typeAmount = formateNumAsPerCurrency($typeAmount * $priceRatio, $currencycode); //$typeTitle = $tVehicleTypeFareData[$fd]->title;
                                $tripFareDetailsArr[$i + $countUfx][$tripData[0]['vSubCategory']] = $typeAmount;
                            } else {
                                $tripFareDetailsArr[$i + $countUfx][$typeTitle . $qtyDisplay] = $typeAmount;
                            }
                            $i++;
                        }
                    }
                    $returnArr['vVehicleCategory'] = $getCategoryName;
                } else {
                    $vVehicleFare = ($tripData[0]['iFare'] * $priceRatio) + $fDiscount + $fWalletDebit + $fDriverDiscount - $fVisitFee - $fMaterialFee - $fMiscFee - $fOutStandingAmount - $fAddedOutstandingamt - $fWaitingFees - $fTax1 - $fTax2 - $fTripHoldPrice; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                        if ($fSurgePriceDiff == 0) {
                            $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                            $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                            if ($countUfx == 1) {
                                $i++;
                            }
                        }
                    } else {
                        //added by SP for fly stations on 20-08-2019 end
                        $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                        $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                        if ($countUfx == 1) {
                            $i++;
                        }
                    }
                }
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details End
            } else if ($tripData[0]['eFareType'] == "Hourly") {
                $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                if ($countUfx == 1) {
                    $i++;
                }
            }
            if ($fSurgePriceDiff > 0) {
                //added by SP for fly stations on 20-08-2019 start
                if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                } else {
                    $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                    $i++;
                }
                //added by SP for fly stations on 20-08-2019 end
                //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                //$i++;
                //echo "(".$fTripGenerateFare."+".$fDriverDiscount.")-(".$fSurgePriceDiff."+".$fTax1."+".$fTax2."+".$fMinFareDiff."+".$fWaitingFees."+".$fOutStandingAmount."+".$fHotelCommision."+".$fAirportPickupSurgeAmount."+".$fAirportDropoffSurgeAmount."+".$fTripHoldPrice."+".$fMaterialFee."+".$fMiscFee.")";die;
                $normalfare = ($fTripGenerateFare + $fDriverDiscount) - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fHotelCommision + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount + $fTripHoldPrice + $fMaterialFee + $fMiscFee + $fOtherCharges); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                if ($eTollSkipped == "No") {
                    $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fTollPrice + $fOtherCharges + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                }
                $normalfare = formatNum($normalfare);
                //added by SP for fly stations on 20-08-2019 start
                if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                } else {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                }
                //added by SP for fly stations on 20-08-2019 end
                $i++;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                $i++;
            }
            if ($fVisitFee > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_VISIT_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fVisitFee'], $currencycode) : "--";
                $i++;
            }
            // added for airport surge
            if ($fSurgePriceDiff == 0 && ($fAirportPickupSurgeAmount > 0 || $fAirportDropoffSurgeAmount > 0)) {
                $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                $i++;
                $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount + $fOtherCharges);
                if ($eTollSkipped == "No") {
                    $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fTollPrice + $fOtherCharges + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount);
                }
                $normalfare = formatNum($normalfare);
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                $i++;
                if ($fAirportPickupSurgeAmount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fAirportDropoffSurgeAmount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
            } else {
                if ($fAirportPickupSurgeAmount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fAirportDropoffSurgeAmount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
            }
            if ($fMaterialFee > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MATERIAL_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMaterialFee'], $currencycode) : "--";
                $i++;
            }
            if ($fMiscFee > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MISC_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMiscFee'], $currencycode) : "--";
                $i++;
            }
            if ($fDriverDiscount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDriverDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            if ($fMinFareDiff > 0) {
                //$minimamfare = $iBaseFare + $fPricePerKM + $fPricePerMin + $fMinFareDiff;
                //$minimamfare = $fTripGenerateFare;
                $minimamfare = $fTripGenerateFare - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fOtherCharges;
                if ($eTollSkipped == "No") {
                    $minimamfare = $fTripGenerateFare - $fTollPrice - $fOtherCharges - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision;
                }
                //$minimamfare = formatNum($minimamfare);
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MINIMUM'] . " (" . formateNumAsPerCurrency($minimamfare, $currencycode) . ")"] = formateNumAsPerCurrency($returnArr['fMinFareDiff'], $currencycode);
                $returnArr['TotalMinFare'] = ($iActive != "Canceled") ? formateNumAsPerCurrency($minimamfare, $currencycode) : "--";
                $i++;
            }
            if ($extraPersonCharge > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode) : "--";
                $i++;
            }
            if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                $i++;
            }
            if ($fOtherCharges > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                $i++;
            }
            if ($fDiscount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROMO_DISCOUNT_TITLE']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($fTax1 > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                $i++;
            }
            if ($fTax2 > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                $i++;
            }
            if ($fHotelCommision > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                $i++;
            }
            if ($fWalletDebit > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                $i++;
            }
            /* if ($fTipPrice > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIP_AMOUNT']] = ($iActive != "Canceled")?$currencySymbol . $returnArr['fTipPrice']:"--";

              $i++;

            } */
            // $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;
            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iFare'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
        }
        //added by SP for rounding off currency wise on 26-8-2019 start
        //if($userType == "Driver"){
        //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_driver as rd LEFT JOIN country as co ON rd.vCountry = co.vCountryCode  WHERE rd.iDriverId = '" . $iMemberId . "'";
        //    $countryData = $obj->MySQLSelect($sqlp);
        //    $vCountry = $countryData[0]['vCountryCode'];
        //}else{
        //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_user as ru LEFT JOIN country as co ON ru.vCountry = co.vCountryCode WHERE ru.iUserId = '" . $iMemberId . "'";
        //    $countryData = $obj->MySQLSelect($sqlp);
        //    $vCountry = $countryData[0]['vCountryCode'];
        //}
        if ($eUserType == "Driver") {
            //Added By HJ On 25-06-2020 For Optimize register_user Table Query Start
            if (isset($userDetailsArr['register_driver_' . $iMemberId])) {
                $userData = $userDetailsArr['register_driver_' . $iMemberId];
            } else {
                $userData = $obj->MySQLSelect("SELECT * FROM register_driver WHERE iDriverId = '" . $iMemberId . "'");
                $userDetailsArr['register_driver_' . $iMemberId] = $userData;
            }
            $currData = $userData;
            //Added By HJ On 25-06-2020 For Optimize register_user Table Query End
            //Added By HJ On 25-06-2020 For Optimize currency Table Query Start
            $vCurrencyDriver = $currData[0]['vCurrencyDriver'];
            if (isset($currencyAssociateArr[$vCurrencyDriver])) {
                $currencyData[] = $currencyAssociateArr[$vCurrencyDriver];
            } else {
                $currencyData = $obj->MySQLSelect("SELECT * from currency WHERE vName = '" . $vCurrencyDriver . "'");
            }
            $currData[0]['vName'] = $currencyData[0]['vName'];
            $currData[0]['iCurrencyId'] = $currencyData[0]['iCurrencyId'];
            $currData[0]['eRoundingOffEnable'] = $currencyData[0]['eRoundingOffEnable'];
            $currData[0]['ratio'] = $currencyData[0]['Ratio'];
            //Added By HJ On 25-06-2020 For Optimize currency Table Query End
            //$sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver, cu.ratio FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $iMemberId . "'";
            //$currData = $obj->MySQLSelect($sqlp);
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyDriver'] == $driverData[0]['vCurrencyDriver'] && $tripData[0]['vCurrencyDriver'] == $tripData[0]['vCurrencyPassenger']) ? 1 : 0;
        } else if ($eUserType == "Passenger" && $isOrganization == 'Yes') {
            $sql_org = "SELECT org.vCurrency,org.vLang,cu.vSymbol FROM organization as org LEFT JOIN currency as cu ON org.vCurrency = cu.vName WHERE  org.iOrganizationId= '" . $iMemberId . "'";
            $currData = $obj->MySQLSelect($sql_org);
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyPassenger'] == $currData[0]['vCurrencyPassenger']) ? 1 : 0;
        } else {
            //Added By HJ On 25-06-2020 For Optimize register_user Table Query Start
            if (isset($userDetailsArr['register_user_' . $iMemberId])) {
                $userData = $userDetailsArr['register_user_' . $iMemberId];
            } else {
                $userData = $obj->MySQLSelect("SELECT * FROM register_user WHERE iUserId = '" . $iMemberId . "'");
                $userDetailsArr['register_user_' . $iMemberId] = $userData;
            }
            $currData = $userData;
            //Added By HJ On 25-06-2020 For Optimize register_user Table Query End
            //Added By HJ On 25-06-2020 For Optimize currency Table Query Start
            $vCurrencyPassenger = $currData[0]['vCurrencyPassenger'];
            if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
                $currencyData[] = $currencyAssociateArr[$vCurrencyPassenger];
            } else {
                $currencyData = $obj->MySQLSelect("SELECT * from currency WHERE vName = '" . $vCurrencyPassenger . "'");
            }
            $currData[0]['vName'] = $currencyData[0]['vName'];
            $currData[0]['iCurrencyId'] = $currencyData[0]['iCurrencyId'];
            $currData[0]['eRoundingOffEnable'] = $currencyData[0]['eRoundingOffEnable'];
            $currData[0]['ratio'] = $currencyData[0]['Ratio'];
            //Added By HJ On 25-06-2020 For Optimize currency Table Query End
            //$sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger, cu.ratio FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $iMemberId . "'";
            //$currData = $obj->MySQLSelect($sqlp);
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyPassenger'] == $currData[0]['vCurrencyPassenger']) ? 1 : 0;
        }
        //if($currData[0]['eRoundingOffEnable'] == "Yes"){
        if (isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount'] != 0 && $samecur == 1 && $currData[0]['eRoundingOffEnable'] == "Yes" && $MODULES_OBJ->isEnableRoundingMethod()) {
            //$roundingOffTotal_fare_amountArr = getRoundingOffAmount($returnArr['iFare'],$vCurrency);
            //$roundingOffTotal_fare_amountArr = getRoundingOffAmounttripweb($returnArr['iFare'],$tripData[0]['fRoundingAmount'],$tripData[0]['eRoundingType']);////start
            $roundingOffTotal_fare_amountArr = getRoundingOffAmounttripweb($iFare, $tripData[0]['fRoundingAmount'], $tripData[0]['eRoundingType'], $currData[0]['ratio']); ////start
            //$returnArr['roundingOffAmountArr'] = $roundingOffTotal_fare_amount;
            if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                $roundingMethod = "";
            } else {
                $roundingMethod = "-";
            }
            $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
            //echo formatNum($roundingOffTotal_fare_amount);exit;
            $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";
            //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;
            $i++;
            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
            $i++;
            $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
            $i++;
            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($roundingOffTotal_fare_amount, $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
        }
        //added by SP for rounding off currency wise on 26-8-2019 end
        $returnArr['FareSubTotal'] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iOriginalFare'], $currencycode) : "--";
        $returnArr['FareDetailsNewArr'] = $tripFareDetailsArr;
        $FareDetailsArr = array();
        foreach ($tripFareDetailsArr as $data) {
            $FareDetailsArr = array_merge($FareDetailsArr, $data);
        }
        $returnArr['FareDetailsArr'] = $FareDetailsArr;
        $returnArr['HistoryFareDetailsNewArr'] = $tripFareDetailsArr;
        if ($tripData[0]['eType'] == "UberX") {
            if ($iActive != "Canceled") {
                array_splice($returnArr['HistoryFareDetailsNewArr'], 0, 1);
            }
            array_splice($returnArr['FareDetailsNewArr'], 0, 1);
        }
    } else if ($eUserType == "Driver") {
        $tripFareDetailsArr = array();
        if ($eFlatTrip == "Yes" && $iActive != "Canceled") {
            $i = 0;
            $tripFareDetailsArr[$i][$languageLabelsArr['LBL_FLAT_TRIP_FARE_TXT']] = formateNumAsPerCurrency($returnArr['fFlatTripPrice'], $currencycode);
            if ($fSurgePriceDiff > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                $i++;
            }
            // added for airport surge
            if ($fAirportPickupSurgeAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fAirportDropoffSurgeAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            /* if ($fDiscount > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROMO_DISCOUNT_TITLE']] = ($iActive != "Canceled") ? "- " . $currencySymbol . $returnArr['fDiscount'] : "--";

              $i++;

            } */
            if ($fWalletDebit > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                $i++;
            }
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : "--";
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : "--";
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            if ($extraPersonCharge > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode) : "--";
                $i++;
            }
            if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                $i++;
            }
            if ($fOtherCharges > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                $i++;
            }
            /* if($fHotelCommision > 0){

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled")?"-".$currencySymbol . $returnArr['fHotelCommision']:"--";

              $i++;

            } */ /* if($fOutStandingAmount > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled")?"- ".$currencySymbol . $returnArr['fOutStandingAmount']:"--";

              $i++;

            } */ // commented to hide outstanding on the page of history in driver earning page on 27-04
            /*if ($fOutStandingAmount > 0 && $tripData[0]['vTripPaymentMode'] == "Cash") {

                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";

                $i++;

                $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";

                $i++;

                $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;

                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT_WEB']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";

                $i++;

                //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;

                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";

                $i++;

            }*/
            if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0 && $tripData[0]['vTripPaymentMode'] == "Cash") {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                $i++;
                $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                $i++;
                $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT_WEB']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";
                $i++;
                //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                $i++;
            }
        } elseif ($fCancelPrice > 0 || ($iActive == "Canceled" && $fWalletDebit > 0)) {
            if ($fWalletDebit > $fCancelPrice) {
                $CancelPrice = ($fWalletDebit + $fCancelPrice) - ($fWaitingFees + $fTripHoldPrice + $fTax1 + $fTax2); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                $subtotal = ($fCancelPrice);
            } else {
                $CancelPrice = $fCancelPrice - $fWalletDebit - $fTripHoldPrice; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                $subtotal = ($fCancelPrice + $fWaitingFees + $fTripHoldPrice + $fWalletDebit + $fTax1 + $fTax2);
            }
            $i = 0;
            $tripFareDetailsArr[$i][$languageLabelsArr['LBL_CANCELLATION_FEE']] = formateNumAsPerCurrency($CancelPrice, $currencycode);
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice Start
            /*if ($fTax1 > 0) {

                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = "-" . $currencySymbol . $returnArr['fTax1'];

                $i++;

            }

            if ($fTax2 > 0) {

                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = "-" . $currencySymbol . $returnArr['fTax2'];

                $i++;

            }*/ //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice End
            /* if($fWalletDebit > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "- " . $currencySymbol . $returnArr['fWalletDebit'];

              $i++;

            } */
            //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = $currencySymbol.$subtotal;$i++;
        } else {
            $i = 0;
            $countUfx = 0;
            if ($tripData[0]['eType'] == "UberX") {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $returnArr['vVehicleCategory'] . "-" . $returnArr['vVehicleType'];
                $countUfx = 1;
            }
            if ($tripData[0]['eFareType'] == "Regular") {
                //$tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = $vVehicleType . " " . $currencySymbol . $returnArr['iBaseFare'];
                if ($tripData[0]['iRentalPackageId'] > 0 && function_exists('getRentalData')) {
                    if ($PAGE_MODE == "DISPLAY") {
                        $rentalData = getRentalData($tripData[0]['iRentalPackageId']);
                        $tripData[0]['vPackageName'] = $rentalData[0]['vPackageName_' . $userlangcode];
                        $tripFareDetailsArr[$i + $countUfx][$tripData[0]['vPackageName'] . " " . $languageLabelsArr['LBL_RENTAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                        if ($countUfx == 1) {
                            $i++;
                        }
                        $TripKilometer = getVehicleCountryUnit($tripData[0]['iVehicleTypeId'], $rentalData[0]['fKiloMeter']);
                        if ($eUnit == "Miles") {
                            $TripKilometer = round($TripKilometer * 0.621371, 2);
                        }
                        if ($fDistance > $TripKilometer) {
                            $extradistance = $fDistance - $TripKilometer;
                        } else {
                            $extradistance = 0;
                        }
                        /*if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
                            if ($extradistance > 0) {
                                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONSL_DISTANCE_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                                $i++;
                            }
                            $Extra_Time = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode);
                            $Extra_Time_Val = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode, "Yes");
                            if ($Extra_Time_Val > 0) {
                                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONAL_TIME_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                                $i++;
                            }
                        } else {*/
                            if ($extradistance > 0) {
                                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONSL_DISTANCE_TXT'] . " (" . $extradistance . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                                $i++;
                            }
                            $Extra_Time = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode);
                            $Extra_Time_Val = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode, "Yes");
                            if ($Extra_Time_Val > 0) {
                                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONAL_TIME_TXT'] . " (" . $Extra_Time . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                                $i++;
                            }
                       /* }*/
                    } else {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_Total_Fare']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripGenerateFare'], $currencycode) : "--";
                        $i++;
                    }
                } else {
                    // Modified by HV on 04-11-2020 as discussed with KS for driver earning
                    if ($PAGE_MODE == "DISPLAY") {
                        $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                    } else {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_Total_Fare']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripGenerateFare'], $currencycode) : "--";
                    }
                    if ($countUfx == 1) {
                        $i++;
                    }
                    // Modified and added by HV on 04-11-2020 as discussed with KS for driver earning End
                    //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $languageLabelsArr['LBL_KM_DISTANCE_TXT'] . ")"] = ($iActive != "Canceled")?$currencySymbol . $returnArr['TripFareOfDistance']:"--";
                    // Modified and added by HV on 04-11-2020 as discussed with KS for driver earning
                    if ($PAGE_MODE == "DISPLAY") {
                        if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        } else {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        }
                    }
                }
            } else if ($tripData[0]['eFareType'] == "Fixed") {
                if (isset($tripData[0]['tVehicleTypeFareData']) && $tripData[0]['tVehicleTypeFareData'] != "" && $SERVICE_PROVIDER_FLOW == "Provider") {
                    $getCategoryName = "";
                    $tVehicleTypeFareData = json_decode($tripData[0]['tVehicleTypeFareData'], true);
                    $tVehicleTypeFareData = $tVehicleTypeFareData['FareData'];
                    for ($fd = 0; $fd < count($tVehicleTypeFareData); $fd++) {
                        $eAllowQty = $tVehicleTypeFareData[$fd]['eAllowQty'];
                        $typeQty = $tVehicleTypeFareData[$fd]['qty'];
                        $typeAmount = $tVehicleTypeFareData[$fd]['amount'] * $typeQty;
                        $typeAmount = formateNumAsPerCurrency($typeAmount * $priceRatio, $currencycode); //$typeTitle = $tVehicleTypeFareData[$fd]->title;
                        //$typeTitle = $tVehicleTypeFareData[$fd]->title;
                        $typeTitle = $vehilceTypeArr[$tVehicleTypeFareData[$fd]['id']];
                        if ($getCategoryName == "") {
                            $getCategoryName = isset($tVehicleTypeFareData[$fd]['vVehicleCategory']) ? $tVehicleTypeFareData[$fd]['vVehicleCategory'] : '';
                        }
                        $qtyDisplay = "";
                        if ($eAllowQty == "Yes") {
                            $qtyDisplay = " (x" . $typeQty . ")";
                        }
                        if ($typeTitle != $languageLabelsArr['LBL_SUBTOTAL_TXT']) {
                            if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
                                $typeAmount = $tripData[0]['fTripGenerateFare'] - $tripData[0]['fTax1'] - $tripData[0]['fTax2'];
                                $typeAmount = formateNumAsPerCurrency($typeAmount * $priceRatio, $currencycode); //$typeTitle = $tVehicleTypeFareData[$fd]->title;
                                $tripFareDetailsArr[$i + $countUfx][$tripData[0]['vSubCategory']] = $typeAmount;
                            } else {
                                $tripFareDetailsArr[$i + $countUfx][$typeTitle . $qtyDisplay] = $typeAmount;
                            }
                            $i++;
                        } else if ($PAGE_MODE != 'HISTORY') {
                            $i--;
                        }
                    }
                    $returnArr['vVehicleCategory'] = $getCategoryName;
                } else {
                    $vVehicleFare = ($tripData[0]['iFare'] * $priceRatio) + $fDiscount + $fWalletDebit + $fDriverDiscount - $fVisitFee - $fMaterialFee - $fMiscFee - $fOutStandingAmount - $fAddedOutstandingamt - $fWaitingFees - $fTax1 - $fTax2 - $fTripHoldPrice; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                        if ($fSurgePriceDiff == 0) {
                            $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                            $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                            if ($countUfx == 1) {
                                $i++;
                            }
                        }
                    } else {
                        //added by SP for fly stations on 20-08-2019 end
                        $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                        $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                        if ($countUfx == 1) {
                            $i++;
                        }
                    }
                }
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details End
            } else if ($tripData[0]['eFareType'] == "Hourly") {
                $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                if ($countUfx == 1) {
                    $i++;
                }
            }
            // Modified by HV on 04-11-2020 as discussed with KS for driver earning
            if ($PAGE_MODE == "DISPLAY") {
                if ($extraPersonCharge > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode) : "--";
                    $i++;
                }
                if ($fSurgePriceDiff > 0) {
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                    } else {
                        $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                        $i++;
                    }
                    //added by SP for fly stations on 20-08-2019 end
                    //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                    //$i++;
                    $normalfare = ($fTripGenerateFare + $fDriverDiscount) - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount + $fMaterialFee + $fMiscFee + $fOtherCharges); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    if ($eTollSkipped == "No") {
                        $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fTollPrice + $fOtherCharges + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    }
                    $normalfare = formatNum($normalfare);
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                    } else {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                    }
                    //added by SP for fly stations on 20-08-2019 end
                    //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                    $i++;
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                    $i++;
                }
                if ($fVisitFee > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_VISIT_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fVisitFee'], $currencycode) : "--";
                    $i++;
                }
                // added for airport surge
                if ($fSurgePriceDiff == 0 && ($fAirportPickupSurgeAmount > 0 || $fAirportDropoffSurgeAmount > 0)) {
                    $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount + $fOtherCharges);
                    if ($eTollSkipped == "No") {
                        $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fTollPrice + $fOtherCharges + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount);
                    }
                    // $normalfare = formatNum($normalfare);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                    $i++;
                    if ($fAirportPickupSurgeAmount > 0) {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                        $i++;
                    }
                    if ($fAirportDropoffSurgeAmount > 0) {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                        $i++;
                    }
                } else {
                    if ($fAirportPickupSurgeAmount > 0) {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                        $i++;
                    }
                    if ($fAirportDropoffSurgeAmount > 0) {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                        $i++;
                    }
                }
                //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
                if ($fTripHoldPrice > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                    $i++;
                }
                //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            }
            if ($tripData[0]['eFareType'] != "Regular") {
                if ($fMaterialFee > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MATERIAL_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMaterialFee'], $currencycode) : "--";
                    $i++;
                }
                if ($fMiscFee > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MISC_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMiscFee'], $currencycode) : "--";
                    $i++;
                }
                if ($fDriverDiscount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDriverDiscount'], $currencycode) : "--";
                    $i++;
                }
                if ($fWaitingFees > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                    $i++;
                }
            }
            if ($PAGE_MODE == "DISPLAY") { // added 30-03-2022 to remove minimum fare from the provider invoice
                if ($fMinFareDiff > 0) {
                    //$minimamfare = $fTripGenerateFare;
                    $minimamfare = $fTripGenerateFare - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision - $fOtherCharges;
                    if ($eTollSkipped == "No") {
                        $minimamfare = $fTripGenerateFare - $fTollPrice - $fOtherCharges - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision;
                    }
                    $minimamfare = formatNum($minimamfare);
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MINIMUM'] . " (" . formateNumAsPerCurrency($minimamfare, $currencycode) . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMinFareDiff'], $currencycode) : "--";
                    $returnArr['TotalMinFare'] = formateNumAsPerCurrency($minimamfare, $currencycode);
                    $i++;
                }
            }
            // Modified by HV on 04-11-2020 as discussed with KS for driver earning
            if ($PAGE_MODE == "DISPLAY") {
                if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                    $i++;
                }
            }
            // Modified by HV on 04-11-2020 as discussed with KS for driver earning End
            //Added By HJ On 29-08-2020 For Manual Toll and Other Charges Related Changes End
            if ($PAGE_MODE == "DISPLAY") {
                if ($fOtherCharges > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                    $i++;
                }
                if ($fDiscount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                    $i++;
                }
                if ($fTax1 > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                    $i++;
                }
                if ($fTax2 > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                    $i++;
                }
                if ($fOutStandingAmount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    $i++;
                }
                if ($fWalletDebit > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                    $i++;
                }
                if ($fHotelCommision > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                    $i++;
                }
            } else {
                /*if ($fOutStandingAmount > 0 && $tripData[0]['vTripPaymentMode'] == "Cash") {

                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";

                    $i++;

                    $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";

                    $i++;

                    $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;

                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT_WEB']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";

                    $i++;

                    //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;

                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";

                    $i++;

                }*/
                // Modified and added by HV on 04-11-2020 as discussed with KS for driver earning
                if ($PAGE_MODE == "DISPLAY") {
                    $tripFareDetailsArr[]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";
                    $i++;
                } else {
                    if ($tripData[0]['eType'] != "UberX") {
                        if ($fTax1 > 0) {
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                            $i++;
                        }
                        if ($fTax2 > 0) {
                            $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                            $i++;
                        }
                    } else {
                        if ($tripData[0]['eFareType'] == "Regular") {
                            if ($fTax1 > 0) {
                                $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                                $i++;
                            }
                            if ($fTax2 > 0) {
                                $tripFareDetailsArr[][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                                $i++;
                            }
                        }
                    }
                    if ($fHotelCommision > 0) {
                        $tripFareDetailsArr[][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                        $i++;
                    }
                }
                // Modified and added by HV on 04-11-2020 as discussed with KS for driver earning End
                if ($fOutStandingAmount > 0) {
                    $tripFareDetailsArr[][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0 && $tripData[0]['vTripPaymentMode'] == "Cash") {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    $i++;
                    $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                    $i++;
                    $totfare_for_earn = $fTripGenerateFare - $fTax1 - $fTax2 - $fHotelCommision;
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT_WEB']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($totfare_for_earn, $currencycode) : "--";
                    $i++;
                    //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                    $i++;
                }
            }
        }
        $returnArr['FareSubTotal'] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iOriginalFare'], $currencycode) : "--";
        $returnArr['FareDetailsNewArr'] = $tripFareDetailsArr;
        $FareDetailsArr = array();
        foreach ($tripFareDetailsArr as $data) {
            $FareDetailsArr = array_merge($FareDetailsArr, $data);
        }
        $returnArr['FareDetailsArr'] = $FareDetailsArr;
        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_Commision']] = "-" . formateNumAsPerCurrency($returnArr['fCommision'], $currencycode);
        $i++;
        //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;
        if ($iActive == "Canceled") {
            $returnArr['iFare_Detail_Earning'] = 0.0;
            if ($iActive == "Canceled" && ($tripData[0]['fCancellationFare'] > 0 || $tripData[0]['fWalletDebit'] > 0)) {
                //$returnArr['iFare_Detail_Earning'] = $CancelPrice + $tripData[0]['fTipPrice'] - $fCommision;
                $returnArr['iFare_Detail_Earning'] = $CancelPrice + $fTipPrice - $returnArr['fCommision'] - $fOutStandingAmount - $fAddedOutstandingamt; //so here al are after counting ratio
                if ($CancelPrice == 0) {
                    $returnArr['iFare_Detail_Earning'] = 0;
                }
                //$returnArr['iFare_Detail_Earning'] = $tripData[0]['fTripGenerateFare'] - $fCommision - $fTax1 - $fTax2;
            }
        }
        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EARNED_AMOUNT']] = formateNumAsPerCurrency($returnArr['iFare_Detail_Earning'], $currencycode);
        $returnArr['HistoryFareDetailsNewArr'] = $tripFareDetailsArr;
        if ($tripData[0]['eType'] == "UberX") {
            if ($iActive != "Canceled") {
                array_splice($returnArr['HistoryFareDetailsNewArr'], 0, 1);
            }
        }
    } else {
        $tripFareDetailsArr = array();
        if ($eFlatTrip == "Yes" && $iActive != "Canceled") {
            $i = 0;
            $tripFareDetailsArr[$i][$languageLabelsArr['LBL_FLAT_TRIP_FARE_TXT']] = formateNumAsPerCurrency($returnArr['fFlatTripPrice'], $currencycode);
            if ($fSurgePriceDiff > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                $i++;
            }
            // added for airport surge
            if ($fAirportPickupSurgeAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fAirportDropoffSurgeAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            if ($fDiscount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROMO_DISCOUNT_TITLE']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($extraPersonCharge > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode) : "--";
                $i++;
            }
            if ($fTax1 > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                $i++;
            }
            if ($fTax2 > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                $i++;
            }
            if ($fHotelCommision > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                $i++;
            }
            if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                $i++;
            }
            if ($fOtherCharges > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                $i++;
            }
            if ($fWalletDebit > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                $i++;
            }
        } /* else if($eFlatTrip == "Yes" && $iActive == "Canceled") {

          $tripFareDetailsArr[0][$languageLabelsArr['LBL_Total_Fare']] = $currencySymbol." 0.00";

        } */
        elseif ($fCancelPrice > 0 || ($iActive == "Canceled" && $fWalletDebit > 0)) {
            if ($fWalletDebit > $fCancelPrice) {
                $CancelPrice = ($fWalletDebit + $fCancelPrice) - ($fWaitingFees + $fTripHoldPrice + $fTax1 + $fTax2); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                $subtotal = formatNum($fCancelPrice);
            } else {
                if ($fWalletDebit > 0) {
                    $CancelPrice = $fCancelPrice + $fWalletDebit - $fTripHoldPrice - $fTax1 - $fTax2; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    // $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice + $fWalletDebit+$fTax1+$fTax2);
                    $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice);
                } else {
                    $CancelPrice = $fCancelPrice;
                    $subtotal = formatNum($fCancelPrice + $fWaitingFees + $fTripHoldPrice + $fTax1 + $fTax2);
                }
            }
            $tripFareDetailsArr[0][$languageLabelsArr['LBL_CANCELLATION_FEE']] = formateNumAsPerCurrency($CancelPrice, $currencycode);
            $ki = 0;
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $ki++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $ki++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice Start
            if ($fTax1 > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = $currencySymbol . $returnArr['fTax1'];
                $ki++;
            }
            if ($fTax2 > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = $currencySymbol . $returnArr['fTax2'];
                $ki++;
            }
            //Added By HJ On 30-07-2020 For Dispay Tax Data In Invoice End
            if ($fWalletDebit > 0) {
                $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode);
                $ki++;
            }
            $tripFareDetailsArr[$ki + 1][$languageLabelsArr['LBL_SUBTOTAL_TXT']] = formateNumAsPerCurrency($subtotal, $currencycode);
        } else {
            $i = 0;
            $countUfx = 0;
            //heni
            //echo $tripData[0]['eType'];die;
            if ($tripData[0]['eType'] == "UberX") {
                $tripFareDetailsArr[$i][$languageLabelsArr['LBL_VEHICLE_TYPE_SMALL_TXT']] = $returnArr['vVehicleCategory'] . "-" . $returnArr['vVehicleType'];
                $countUfx = 1;
            }
            if ($tripData[0]['eFareType'] == "Regular") {
                if ($tripData[0]['iRentalPackageId'] > 0 && function_exists('getRentalData')) {
                    $rentalData = getRentalData($tripData[0]['iRentalPackageId']);
                    $tripData[0]['vPackageName'] = $rentalData[0]['vPackageName_' . $userlangcode];
                    $tripFareDetailsArr[$i + $countUfx][$tripData[0]['vPackageName'] . " " . $languageLabelsArr['LBL_RENTAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                    if ($countUfx == 1) {
                        $i++;
                    }
                    $TripKilometer = getVehicleCountryUnit($tripData[0]['iVehicleTypeId'], $rentalData[0]['fKiloMeter']);
                    if ($eUnit == "Miles") {
                        $TripKilometer = round($TripKilometer * 0.621371, 2);
                    }
                    if ($fDistance > $TripKilometer) {
                        $extradistance = $fDistance - $TripKilometer;
                    } else {
                        $extradistance = 0;
                    }
                   /* if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
                        if ($extradistance > 0) {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONSL_DISTANCE_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                        }
                        $Extra_Time = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode);
                        $Extra_Time_Val = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode, "Yes");
                        if ($Extra_Time_Val > 0) {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONAL_TIME_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        }
                    } else {*/
                        if ($extradistance > 0) {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONSL_DISTANCE_TXT'] . " (" . $extradistance . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                            $i++;
                        }
                        $Extra_Time = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode);
                        $Extra_Time_Val = calculateAdditionalTime($tripData[0]['tStartDate'], $tripData[0]['tEndDate'], $rentalData[0]['fHour'], $userlangcode, "Yes");
                        if ($Extra_Time_Val > 0) {
                            $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ADDITIONAL_TIME_TXT'] . " (" . $Extra_Time . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                            $i++;
                        }
                    /*}*/
                } else {
                    //$tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = $vVehicleType . " " . $currencySymbol . $returnArr['iBaseFare'];
                    $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_BASE_FARE_SMALL_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['iBaseFare'], $currencycode) : "--";
                    if ($countUfx == 1) {
                        $i++;
                    }
                    //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $languageLabelsArr['LBL_KM_DISTANCE_TXT'] . ")"] = ($iActive != "Canceled")?$currencySymbol . $returnArr['TripFareOfDistance']:"--";
                    if ($ePoolRide == "Yes" && $POOL_ENABLE == "Yes") {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                        $i++;
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                        $i++;
                    } else {
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_DISTANCE_TXT'] . " (" . $returnArr['fDistance'] . " " . $DisplayDistanceTxt . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfDistance'], $currencycode) : "--";
                        $i++;
                        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                        $i++;
                    }
                }
            } else if ($tripData[0]['eFareType'] == "Fixed") {
                //$tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = $currencySymbol . ($fTripGenerateFare - $fSurgePriceDiff - $fMinFareDiff);
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details Start
                if (isset($tripData[0]['tVehicleTypeFareData']) && $tripData[0]['tVehicleTypeFareData'] != "" && $SERVICE_PROVIDER_FLOW == "Provider") {
                    $getCategoryName = "";
                    $tVehicleTypeFareData = json_decode($tripData[0]['tVehicleTypeFareData'], true);
                    $tVehicleTypeFareData = $tVehicleTypeFareData['FareData'];
                    //echo "<pre>";print_r($tVehicleTypeFareData);die;
                    for ($fd = 0; $fd < count($tVehicleTypeFareData); $fd++) {
                        $eAllowQty = $tVehicleTypeFareData[$fd]['eAllowQty'];
                        $typeQty = $tVehicleTypeFareData[$fd]['qty'];
                        $typeAmount = $tVehicleTypeFareData[$fd]['amount'] * $typeQty;
                        $typeAmount = formateNumAsPerCurrency($typeAmount * $priceRatio, $currencycode);
                        $typeTitle = $vehilceTypeArr[$tVehicleTypeFareData[$fd]['id']];
                        if ($getCategoryName == "") {
                            //$getCategoryName = $tVehicleTypeFareData[$fd]['vVehicleCategory'];
                        }
                        $qtyDisplay = "";
                        if ($eAllowQty == "Yes") {
                            $qtyDisplay = " (x" . $typeQty . ")";
                        }
                        if ($typeTitle != $languageLabelsArr['LBL_SUBTOTAL_TXT']) {
                            if ($MODULES_OBJ->isEnableVideoConsultingService() && $tripData[0]['isVideoCall'] == 'Yes') {
                                $typeAmount = $tripData[0]['fTripGenerateFare'] - $tripData[0]['fTax1'] - $tripData[0]['fTax2'];
                                $typeAmount = formateNumAsPerCurrency($typeAmount * $priceRatio, $currencycode); //$typeTitle = $tVehicleTypeFareData[$fd]->title;
                                $tripFareDetailsArr[$i + $countUfx][$tripData[0]['vSubCategory']] = $typeAmount;
                            } else {
                                $tripFareDetailsArr[$i + $countUfx][$typeTitle . $qtyDisplay] = $typeAmount;
                            }
                            $i++;
                        } else if ($PAGE_MODE != 'HISTORY') {
                            $i--;
                        }
                    }
                    $returnArr['vVehicleCategory'] = $getCategoryName;
                } else {
                    $vVehicleFare = ($tripData[0]['iFare'] * $priceRatio) + $fDiscount + $fWalletDebit + $fDriverDiscount - $fVisitFee - $fMaterialFee - $fMiscFee - $fOutStandingAmount - $fAddedOutstandingamt - $fWaitingFees - $fTax1 - $fTax2 - $fTripHoldPrice; // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    //added by SP for fly stations on 20-08-2019 start
                    if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                        if ($fSurgePriceDiff == 0) {
                            $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                            $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                            if ($countUfx == 1) {
                                $i++;
                            }
                        }
                    } else {
                        //added by SP for fly stations on 20-08-2019 end
                        $SERVICE_COST = ($tripData[0]['iQty'] > 1) ? $tripData[0]['iQty'] . ' X ' . formateNumAsPerCurrency($vVehicleFare, $currencycode) : formateNumAsPerCurrency($vVehicleFare, $currencycode);
                        $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? $SERVICE_COST : "--";
                        if ($countUfx == 1) {
                            $i++;
                        }
                    }
                }
                //Added By HJ On 04-01-2019 For Set Vehicle Type Wise Fare Details End
            } else if ($tripData[0]['eFareType'] == "Hourly") {
                $tripFareDetailsArr[$i + $countUfx][$languageLabelsArr['LBL_TIME_TXT'] . " (" . $returnArr['TripTimeInMinutes'] . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['TripFareOfMinutes'], $currencycode) : "--";
                if ($countUfx == 1) {
                    $i++;
                }
            }
            if ($fSurgePriceDiff > 0) {
                //added by SP for fly stations on 20-08-2019 start
                if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                } else {
                    $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                    $i++;
                }
                //added by SP for fly stations on 20-08-2019 end
                //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                //$i++;
                $normalfare = ($fTripGenerateFare + $fDriverDiscount) - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount + $fMaterialFee + $fMiscFee + $fOtherCharges); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                if ($eTollSkipped == "No") {
                    $normalfare = ($fTripGenerateFare + $fDriverDiscount) - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fTollPrice + $fOtherCharges + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount + $fMaterialFee + $fMiscFee); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                    // $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fTollPrice + $fOtherCharges + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount); // $fTripHoldPrice Variable For In Transite Amount By HJ On 28-12-2018
                }
                $normalfare = formatNum($normalfare);
                //added by SP for fly stations on 20-08-2019 start
                if (!empty($tripData[0]['iFromStationId']) && !empty($tripData[0]['iToStationId'])) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SERVICE_COST']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                } else {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                }
                //added by SP for fly stations on 20-08-2019 end
                $i++;
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_SURGE'] . " x" . $SurgePriceFactor] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fSurgePriceDiff'], $currencycode) : "--";
                $i++;
            }
            if ($fVisitFee > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_VISIT_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fVisitFee'], $currencycode) : "--";
                $i++;
            }
            // added for airport surge
            if ($fSurgePriceDiff == 0 && ($fAirportPickupSurgeAmount > 0 || $fAirportDropoffSurgeAmount > 0)) {
                $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";
                $i++;
                $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount + $fOtherCharges);
                if ($eTollSkipped == "No") {
                    $normalfare = $fTripGenerateFare - ($fSurgePriceDiff + $fTax1 + $fTax2 + $fMinFareDiff + $fWaitingFees + $fOutStandingAmount + $fAddedOutstandingamt + $fTollPrice + $fOtherCharges + $fHotelCommision + $fTripHoldPrice + $fAirportPickupSurgeAmount + $fAirportDropoffSurgeAmount);
                }
                $normalfare = formatNum($normalfare);
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_NORMAL_FARE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($normalfare, $currencycode) : "--";
                $i++;
                if ($fAirportPickupSurgeAmount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fAirportDropoffSurgeAmount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
            } else {
                if ($fAirportPickupSurgeAmount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportPickupSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportPickupSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
                if ($fAirportDropoffSurgeAmount > 0) {
                    $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_SURGE'] . " x" . $fAirportDropoffSurge] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAirportDropoffSurgeAmount'], $currencycode) : "--";
                    $i++;
                }
            }
            if ($fMaterialFee > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MATERIAL_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMaterialFee'], $currencycode) : "--";
                $i++;
            }
            if ($fMiscFee > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MISC_FEE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fMiscFee'], $currencycode) : "--";
                $i++;
            }
            if ($fDriverDiscount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROVIDER_DISCOUNT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDriverDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($fWaitingFees > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WAITING_FEE_TXT'] . " (" . $waitingTime . " )"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode) : formateNumAsPerCurrency($returnArr['fWaitingFees'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice Start
            if ($fTripHoldPrice > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_INTRANSIT_TRIP_HOLD_FEE'] . " (" . $totalTime_hold . ")"] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode) : formateNumAsPerCurrency($returnArr['fTripHoldPrice'], $currencycode);
                $i++;
            }
            //Added By HJ On 28-12-2018 For Dispay In Transite Data In Invoice End
            if ($fMinFareDiff > 0) {
                //$minimamfare = $iBaseFare + $fPricePerKM + $fPricePerMin + $fMinFareDiff;
                //$minimamfare = $fTripGenerateFare;
                $minimamfare = $fTripGenerateFare - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision - $fOtherCharges;
                if ($eTollSkipped == "No") {
                    $minimamfare = $fTripGenerateFare - $fTollPrice - $fOtherCharges - $fOutStandingAmount - $fAddedOutstandingamt - $fTax1 - $fTax2 - $fHotelCommision;
                }
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_MINIMUM'] . " (" . formateNumAsPerCurrency($minimamfare, $currencycode) . ")"] = formateNumAsPerCurrency($returnArr['fMinFareDiff'], $currencycode);
                $returnArr['TotalMinFare'] = ($iActive != "Canceled") ? formateNumAsPerCurrency($minimamfare, $currencycode) : "--";
                $i++;
            }
            if ($extraPersonCharge > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EXTRA_PERSON_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($extraPersonCharge, $currencycode) : "--";
                $i++;
            }
            if ($eTollSkipped == "No" && $returnArr['fTollPrice'] > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TOLL_PRICE_TOTAL']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTollPrice'], $currencycode) : "--";
                $i++;
            }
            if ($fOtherCharges > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OTHER_CHARGES']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOtherCharges'], $currencycode) : "--";
                $i++;
            }
            if ($fDiscount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROMO_DISCOUNT_TITLE']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fDiscount'], $currencycode) : "--";
                $i++;
            }
            if ($fTax1 > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX1_TXT'] . " @ " . $fUserCountryTax1 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax1'], $currencycode) : "--";
                $i++;
            }
            if ($fTax2 > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TAX2_TXT'] . " @ " . $fUserCountryTax2 . " % "] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fTax2'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fOutStandingAmount'], $currencycode) : "--";
                $i++;
            }
            if ($fOutStandingAmount == 0 && $fAddedOutstandingamt > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fAddedOutstandingamt'], $currencycode) : "--";
                $i++;
            }
            if ($fHotelCommision > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_HOTEL_SERVICE_CHARGE']] = ($iActive != "Canceled") ? formateNumAsPerCurrency($returnArr['fHotelCommision'], $currencycode) : "--";
                $i++;
            }
            if ($fWalletDebit > 0) {
                $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled") ? "- " . formateNumAsPerCurrency($returnArr['fWalletDebit'], $currencycode) : "--";
                $i++;
            }
            /* if ($fDiscount > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_PROMO_DISCOUNT_TITLE']] = ($iActive != "Canceled")?"- " . $currencySymbol . $returnArr['fDiscount']:"--";

              $i++;

              }

              if ($fWalletDebit > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = ($iActive != "Canceled")?"- " . $currencySymbol . $returnArr['fWalletDebit']:"--";

              $i++;

          } */
            /* if ($fTipPrice > 0) {

              $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_TIP_AMOUNT']] = ($iActive != "Canceled")?$currencySymbol . $returnArr['fTipPrice']:"--";

              $i++;

          } */
        }
        //$tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes"; $i++;
        if ($iActive == "Canceled") {
            $returnArr['FareSubTotal'] = formateNumAsPerCurrency($subtotal, $currencycode);
        } else {
            $returnArr['FareSubTotal'] = formateNumAsPerCurrency($returnArr['iOriginalFare'], $currencycode, 2); //issue#944 = 3 decimal change to 2
        }
        $returnArr['FareDetailsNewArr'] = $tripFareDetailsArr;
        $FareDetailsArr = array();
        foreach ($tripFareDetailsArr as $data) {
            $FareDetailsArr = array_merge($FareDetailsArr, $data);
        }
        $returnArr['FareDetailsArr'] = $FareDetailsArr;
        //Commision Commented By HJ On 05-09-2019 And In admin Invoice Display Same As Tip Amount As Per Discuss With KS Sir Start
        //$tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_Commision']] = "-" . $currencySymbol . $returnArr['fCommision'];
        //$i++;
        //Commision Commented By HJ On 05-09-2019 And In admin Invoice Display Same As Tip Amount As Per Discuss With KS Sir End
        /* if($iActive == "Canceled"){

          $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EARNED_AMOUNT']] = $currencySymbol.$returnArr['fCancelPrice'];

        } else { */ //added by SP for rounding off currency wise on 26-8-2019 start
        //if($userType == "Driver"){
        //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_driver as rd LEFT JOIN country as co ON rd.vCountry = co.vCountryCode  WHERE rd.iDriverId = '" . $iMemberId . "'";
        //    $countryData = $obj->MySQLSelect($sqlp);
        //    $vCountry = $countryData[0]['vCountryCode'];
        //}else{
        //    $sqlp = "SELECT co.vCountry,co.vCountryCode,co.eRoundingOffEnable FROM register_user as ru LEFT JOIN country as co ON ru.vCountry = co.vCountryCode WHERE ru.iUserId = '" . $iMemberId . "'";
        //    $countryData = $obj->MySQLSelect($sqlp);
        //    $vCountry = $countryData[0]['vCountryCode'];
        //}
        if ($eUserType == "Driver") {
            //Added By HJ On 25-06-2020 For Optimize register_user Table Query Start
            if (isset($userDetailsArr['register_driver_' . $tripData[0]['iDriverId']])) {
                $userData = $userDetailsArr['register_driver_' . $tripData[0]['iDriverId']];
            } else {
                $userData = $obj->MySQLSelect("SELECT * FROM register_driver WHERE iDriverId = '" . $tripData[0]['iDriverId'] . "'");
                $userDetailsArr['register_driver_' . $tripData[0]['iDriverId']] = $userData;
            }
            $currData = $userData;
            //Added By HJ On 25-06-2020 For Optimize register_user Table Query End
            //Added By HJ On 25-06-2020 For Optimize currency Table Query Start
            $vCurrencyDriver = $currData[0]['vCurrencyDriver'];
            if (isset($currencyAssociateArr[$vCurrencyDriver])) {
                $currencyData[] = $currencyAssociateArr[$vCurrencyDriver];
            } else {
                $currencyData = $obj->MySQLSelect("SELECT * from currency WHERE vName = '" . $vCurrencyDriver . "'");
            }
            $currData[0]['vName'] = $currencyData[0]['vName'];
            $currData[0]['iCurrencyId'] = $currencyData[0]['iCurrencyId'];
            $currData[0]['eRoundingOffEnable'] = $currencyData[0]['eRoundingOffEnable'];
            $currData[0]['ratio'] = $currencyData[0]['Ratio'];
            //Added By HJ On 25-06-2020 For Optimize currency Table Query End
            //$sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, rd.vCurrencyDriver, cu.ratio FROM register_driver AS rd LEFT JOIN currency AS cu ON rd.vCurrencyDriver = cu.vName WHERE rd.iDriverId = '" . $tripData[0]['iDriverId'] . "'";
            //$currData = $obj->MySQLSelect($sqlp);
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyDriver'] == $driverData[0]['vCurrencyDriver'] && $tripData[0]['vCurrencyDriver'] == $tripData[0]['vCurrencyPassenger']) ? 1 : 0;
        } else {
            //Added By HJ On 25-06-2020 For Optimize register_user Table Query Start
            if (isset($userDetailsArr['register_user_' . $tripData[0]['iUserId']])) {
                $userData = $userDetailsArr['register_user_' . $tripData[0]['iUserId']];
            } else {
                $userData = $obj->MySQLSelect("SELECT * FROM register_user WHERE iUserId = '" . $tripData[0]['iUserId'] . "'");
                $userDetailsArr['register_user_' . $tripData[0]['iUserId']] = $userData;
            }
            $currData = $userData;
            //Added By HJ On 25-06-2020 For Optimize register_user Table Query End
            //Added By HJ On 25-06-2020 For Optimize currency Table Query Start
            $vCurrencyPassenger = $currData[0]['vCurrencyPassenger'];
            if (isset($currencyAssociateArr[$vCurrencyPassenger])) {
                $currencyData[] = $currencyAssociateArr[$vCurrencyPassenger];
            } else {
                $currencyData = $obj->MySQLSelect("SELECT * from currency WHERE vName = '" . $vCurrencyPassenger . "'");
            }
            $currData[0]['vName'] = $currencyData[0]['vName'];
            $currData[0]['iCurrencyId'] = $currencyData[0]['iCurrencyId'];
            $currData[0]['eRoundingOffEnable'] = $currencyData[0]['eRoundingOffEnable'];
            $currData[0]['ratio'] = $currencyData[0]['Ratio'];
            //Added By HJ On 25-06-2020 For Optimize currency Table Query End
            //echo "<pre>";print_r($currData);die;
            //$sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger, cu.ratio FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $tripData[0]['iUserId'] . "'";
            //$currData = $obj->MySQLSelect($sqlp);
            $vCurrency = $currData[0]['vName'];
            $samecur = ($tripData[0]['vCurrencyPassenger'] == $currData[0]['vCurrencyPassenger']) ? 1 : 0;
        }
        //if($currData[0]['eRoundingOffEnable'] == "Yes"){
        /* if(isset($tripData[0]['fRoundingAmount']) && !empty($tripData[0]['fRoundingAmount']) && $tripData[0]['fRoundingAmount']!=0 && $samecur==1 && $currData[0]['eRoundingOffEnable'] == "Yes") {

          //$roundingOffTotal_fare_amountArr = getRoundingOffAmount($returnArr['iFare_Subtotal'],$vCurrency);

          $roundingOffTotal_fare_amountArr = getRoundingOffAmounttripweb($returnArr['TotalFare'],$tripData[0]['fRoundingAmount'],$tripData[0]['eRoundingType']);////start

          //$returnArr['roundingOffAmountArr'] = $roundingOffTotal_fare_amount;

          if($roundingOffTotal_fare_amountArr['method'] == "Addition"){

          $roundingMethod = "";

          }else{

          $roundingMethod = "-";

          }

          $roundingOffTotal_fare_amount = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";

          $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";

          //$Fare_data[0]['total_fare'] = $roundingOffTotal_fare_amount;

          $i++;

          $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = ($iActive != "Canceled") ? $roundingMethod." ". $currencySymbol . $rounding_diff : $currencySymbol . $returnArr['fWaitingFees'];

          $i++;

          $tripFareDetailsArr[$i + 1]['eDisplaySeperator'] = "Yes";

          $i++;

          $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_ROUNDING_NET_TOTAL_TXT']] = ($iActive != "Canceled") ? $currencySymbol."". $roundingOffTotal_fare_amount : $currencySymbol . $returnArr['fWaitingFees'];

          $i++;

        } */
        //added by SP for rounding off currency wise on 26-8-2019 end
        $iFare_company = $tripData[0]['fTripGenerateFare'] + $tripData[0]['fTipPrice'] - $fCommision - $tripData[0]['fTax1'] - $tripData[0]['fTax2'] - $tripData[0]['fOutStandingAmount'] - $tripData[0]['fAddedOutstandingamt'];
        $tripFareDetailsArr[$i + 1][$languageLabelsArr['LBL_EARNED_AMOUNT']] = formateNumAsPerCurrency($iFare_company, $currencycode);
        /* } */
        $returnArr['HistoryFareDetailsNewArr'] = $tripFareDetailsArr;
        if ($tripData[0]['eType'] == "UberX") {
            if ($iActive != "Canceled") {
                array_splice($returnArr['HistoryFareDetailsNewArr'], 0, 1);
            }
        }
    }
    $HistoryFareDetailsArr = array();
    foreach ($tripFareDetailsArr as $inner) {
        $HistoryFareDetailsArr = array_merge($HistoryFareDetailsArr, $inner);
    }
    $returnArr['HistoryFareDetailsArr'] = $HistoryFareDetailsArr;
    //drivertripfarehistorydetails
    return $returnArr;
}

function getRoundingOffAmounttripweb($originalFare, $rAmt, $rtype, $ratio = 1)
{
    global $lang_label, $lang_code, $obj;
    $originalFare = setTwoDecimalPoint($originalFare * $ratio, 2);
    //$rAmt = setTwoDecimalPoint($rAmt * $ratio,2);
    $rAmt = setTwoDecimalPoint($rAmt, 2);
    if ($rtype == 'Addition') {
        $fare = $originalFare + $rAmt;
    } else if ($rtype == 'Substraction') {
        $fare = $originalFare - $rAmt;
    }
    $DataArr['originalFareValue'] = $originalFare;
    $DataArr['method'] = $rtype;
    $DataArr['differenceValue'] = abs($rAmt);
    $DataArr['finalFareValue'] = setTwoDecimalPoint($fare, 2);
    return $DataArr;
}

function getTripStopOverPointData($iTripId)
{
    global $obj;
    $sqlp = "SELECT tActualDAddress,tDAddress,tReachedTime,DATE_FORMAT(tReachedTime,'%h:%i %p') tReachedTime1 FROM trips_stopoverpoint_location WHERE iTripId = '" . $iTripId . "' AND eReached='Yes' AND eCanceled='No'";
    $trips_stopoverpoint_locationData = $obj->MySQLSelect($sqlp);
    $data = array();
    if (!empty($trips_stopoverpoint_locationData) && isset($trips_stopoverpoint_locationData)) {
        return $trips_stopoverpoint_locationData;
    }
    return $data;
}

function getGeneralVarAll_IconBannerWeb()
{
    global $obj, $APP_TYPE;
    $ssql = "";
    $wri_usql = "SELECT iSettingId,vName,TRIM(vValue) as vValue,eImageType,eRentalType FROM configurations_cubejek where 1" . $ssql;
    $wri_ures = $obj->MySQLSelect($wri_usql);
    return $wri_ures;
}

function CheckRideDeliveryFeatureDisableWeb()
{
    global $obj, $APP_TYPE, $MODULES_OBJ;
    $eShowRideVehicles = $eShowDeliveryVehicles = "Yes";
    $RideDeliveryBothFeatureDisable = "No";
    if ($APP_TYPE == "Ride-Delivery-UberX") {
        $RideDeliveryIconArr = getGeneralVarAll_IconBannerWeb();
        for ($i = 0; $i < count($RideDeliveryIconArr); $i++) {
            $vName = $RideDeliveryIconArr[$i]['vName'];
            $vValue = $RideDeliveryIconArr[$i]['vValue'];
            $$vName = $vValue;
            $Data[0][$vName] = $$vName;
        }
        $Data[0]['RENTAL_SHOW_SELECTION'] = $Data[0]['MOTO_RENTAL_SHOW_SELECTION'] = $Data[0]['DELIVERY_SHOW_SELECTION'] = '';
        if (ENABLE_RENTAL_OPTION == 'No') {
            $Data[0]['RENTAL_SHOW_SELECTION'] = 'None';
            $Data[0]['MOTO_RENTAL_SHOW_SELECTION'] = 'None';
        }
        if (isset($Data[0]['RIDE_SHOW_SELECTION']) && $Data[0]['RIDE_SHOW_SELECTION'] == 'None' && $Data[0]['RENTAL_SHOW_SELECTION'] == 'None' && $Data[0]['MOTO_RIDE_SHOW_SELECTION'] == 'None' && $Data[0]['MOTO_RENTAL_SHOW_SELECTION'] == 'None') {
            $eShowRideVehicles = "No";
        }
        if (isset($Data[0]['DELIVERY_SHOW_SELECTION']) && $Data[0]['DELIVERY_SHOW_SELECTION'] == 'None' && $Data[0]['MOTO_DELIVERY_SHOW_SELECTION'] == 'None') {
            $eShowDeliveryVehicles = "No";
        }
    }
    //if ($eShowRideVehicles == "No" && $eShowDeliveryVehicles == "No") {
    if (($eShowRideVehicles == "No" && $eShowDeliveryVehicles == "No") || (!$MODULES_OBJ->isRideFeatureAvailable() && !$MODULES_OBJ->isDeliveryFeatureAvailable() && !$MODULES_OBJ->isDeliverAllFeatureAvailable())) {
        $RideDeliveryBothFeatureDisable = "Yes";
    }
    $returnArr['eShowRideVehicles'] = $eShowRideVehicles;
    $returnArr['eShowDeliveryVehicles'] = $eShowDeliveryVehicles;
    $returnArr['RideDeliveryBothFeatureDisable'] = $RideDeliveryBothFeatureDisable;
    return $returnArr;
}

function FetchDeliveryRecepientDetails($iTripId, $iMemberId, $eUserType = 'Passenger', $iTripDeliveryLocationId = "", $isOrganization = '')
{
    global $obj, $tconfig, $vSystemDefaultLangCode, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $tripDetailsArr, $currencyAssociateArr, $userDetailsArr, $LANG_OBJ;
    $returnArr = array();
    $userlangcode = $currencycode = "";
    if ($iMemberId != "") {
        if ($eUserType == "Passenger" && $isOrganization != "Yes") {
            $tblname = "register_user";
            $vLang = "vLang";
            $iUserId = "iUserId";
            $vCurrency = "vCurrencyPassenger";
            //$currencycode = get_value("trips", $vCurrency, "iTripId", $iTripId, '', 'true');
            //$sqlp = "SELECT ru.vCurrencyPassenger,ru.vLang,cu.vSymbol FROM register_user as ru LEFT JOIN currency as cu ON ru.vCurrencyPassenger = cu.vName WHERE iUserId = '" . $iMemberId . "'";
            //$passengerData = $obj->MySQLSelect($sqlp);
            //$currencycode = $passengerData[0]['vCurrencyPassenger'];
            //$userlangcode = $passengerData[0]['vLang'];
            //$currencySymbol = $passengerData[0]['vSymbol'];
        } else if ($eUserType == "Driver") {
            $tblname = "register_driver";
            $vLang = "vLang";
            $iUserId = "iDriverId";
            $vCurrency = "vCurrencyDriver";
            //$currencycode = get_value($tblname, $vCurrency, $iUserId, $iMemberId, '', 'true');
            //$sqld = "SELECT rd.vCurrencyDriver,rd.vLang,cu.vSymbol FROM register_driver as rd LEFT JOIN currency as cu ON rd.vCurrencyDriver = cu.vName WHERE iDriverId = '" . $iMemberId . "'";
            //$driverData = $obj->MySQLSelect($sqld);
            //$currencycode = $driverData[0]['vCurrencyDriver'];
            //$userlangcode = $driverData[0]['vLang'];
            //$currencySymbol = $driverData[0]['vSymbol'];
        } else if ($eUserType == "Passenger" && $isOrganization == 'Yes') {
            $tblname = "organization";
            $vLang = "vLang";
            $iUserId = "iOrganizationId";
            $vCurrency = "vCurrency";
            //$currencycode = get_value("trips", $vCurrency, "iTripId", $iTripId, '', 'true');
            //$sql_org = "SELECT org.vCurrency,org.vLang,cu.vSymbol FROM organization as org LEFT JOIN currency as cu ON org.vCurrency = cu.vName WHERE  org.iOrganizationId= '" . $iMemberId . "'";
            //$organizationData = $obj->MySQLSelect($sql_org);
            //$currencycode = $organizationData[0]['vCurrency'];
            //$userlangcode = $organizationData[0]['vLang'];
            //$currencySymbol = $organizationData[0]['vSymbol'];
        }
        //Added By HJ On 25-06-2020 For Optimize User/Driver/Organization Table Query Start
        if (isset($userDetailsArr[$tblname . '_' . $iMemberId])) {
            $memberData = $userDetailsArr[$tblname . '_' . $iMemberId];
        } else {
            $memberData = $obj->MySQLSelect("SELECT * FROM " . $tblname . " WHERE $iUserId='" . $iMemberId . "'");
        }
        $currencycode = $memberData[0][$vCurrency];
        $userlangcode = $memberData[0]['vLang'];
        if (isset($currencyAssociateArr[$currencycode])) {
            $currencySymbol = $currencyAssociateArr[$currencycode]['vSymbol'];
            $currencyRatio = $currencyAssociateArr[$currencycode]['Ratio'];
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio from currency WHERE vName = '" . $currencycode . "'");
            $currencySymbol = $currencyData[0]['vSymbol'];
            $currencyRatio = $currencyData[0]['Ratio'];
        }
        //Added By HJ On 25-06-2020 For Optimize User/Driver/Organization Table Query End
    }
    //$userlangcode = get_value($tblname, $vLang, $iUserId, $iMemberId, '', 'true');
    if ($userlangcode == "" || $userlangcode == null) {
        //Added By HJ On 25-06-2020 For Optimize language_master Table Query Start
        if (!empty($vSystemDefaultLangCode)) {
            $userlangcode = $vSystemDefaultLangCode;
        } else {
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
            $userlangcode = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
            //$userlangcode = get_value('language_master', 'vCode', 'eDefault', 'Yes', '', 'true');
        }
        //Added By HJ On 25-06-2020 For Optimize language_master Table Query End
    }
    if (isset($_SESSION['sess_lang']) && stripos($_SERVER['REQUEST_URI'], WEBSERVICE_API_FILE_NAME) === false) {
        $userlangcode = $_SESSION['sess_lang'];
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($userlangcode, "1");
    if ($currencycode == "" || $currencycode == null) {
        //Added By HJ On 08-06-2020 For Optimization currency Table Query Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
            $currencyRatio = $vSystemDefaultCurrencyRatio;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio from currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $currencyRatio = $currencyData[0]['Ratio'];
        }
    }
    //Added By HJ On 25-06-2020 For Optimized trips Table Query Start
    if (isset($tripDetailsArr['trips_' . $iTripId])) {
        $db_trips = $tripDetailsArr['trips_' . $iTripId];
    } else {
        $db_trips = $obj->MySQLSelect("SELECT * FROM trips WHERE iTripId = " . $iTripId);
        $tripDetailsArr['trips_' . $iTripId] = $db_trips;
    }
    //Added By HJ On 25-06-2020 For Optimized trips Table Query End
    $dsql = $fsql = "";
    // echo $iTripDeliveryLocationId;
    if ($iTripDeliveryLocationId != "") {
        $dsql = " and tdl.iTripDeliveryLocationId = '$iTripDeliveryLocationId'";
        $fsql = " and iTripDeliveryLocationId = '$iTripDeliveryLocationId'";
    }
    $sql = "SELECT tdl.* FROM trips_delivery_locations as tdl WHERE tdl.`iTripId`='" . $iTripId . "' $dsql order by tdl.iTripDeliveryLocationId ASC";
    $Data_tripLocations = $obj->MySQLSelect($sql);
    // echo "<pre>";print_r($languageLabelsArr);exit;
    $sql = "select * from trip_delivery_fields where iTripId ='$iTripId' $fsql";
    $db_trip_fields = $obj->MySQLSelect($sql);
    //Added By HJ On 18-01-2020 For Optimized Code Start
    $getDeliverFields = $obj->MySQLSelect("select iDeliveryFieldId,vFieldName_$userlangcode as vFieldName,eInputType from delivery_fields");
    $deliveryFieldsArr = $packageDataArr = array();
    for ($h = 0; $h < count($getDeliverFields); $h++) {
        $deliveryFieldsArr[$getDeliverFields[$h]['iDeliveryFieldId']][] = $getDeliverFields[$h];
    }
    //echo "<pre>";print_r($deliveryFieldsArr);exit;
    $getPackageData = $obj->MySQLSelect("SELECT iPackageTypeId,iDeliveryFieldId,vName_$userlangcode as vName FROM `package_type`");
    for ($p = 0; $p < count($getPackageData); $p++) {
        $packageDataArr[$getPackageData[$p]['iPackageTypeId']][$getPackageData[$p]['iDeliveryFieldId']][] = $getPackageData[$p];
    }
    //Added By HJ On 18-01-2020 For Optimized Code End
    $Data_Field = array();
    if (count($db_trip_fields) > 0) {
        for ($j = 0; $j < count($Data_tripLocations); $j++) {
            $k = 0;
            for ($i = 0; $i < count($db_trip_fields); $i++) {
                if ($Data_tripLocations[$j]['iTripDeliveryLocationId'] == $db_trip_fields[$i]['iTripDeliveryLocationId']) {
                    //Commented By HJ On 18-01-20202 For Optimized Code Start
                    //$sql = "select vFieldName_$userlangcode as vFieldName,eInputType from delivery_fields where iDeliveryFieldId='" . $db_trip_fields[$i]['iDeliveryFieldId'] . "'";
                    //$db_fields_data = $obj->MySQLSelect($sql);
                    //Commented By HJ On 18-01-20202 For Optimized Code End
                    //Added By HJ On 18-01-2020 For Optimized Code Start
                    $db_fields_data = array();
                    if (isset($deliveryFieldsArr[$db_trip_fields[$i]['iDeliveryFieldId']])) {
                        $db_fields_data = $deliveryFieldsArr[$db_trip_fields[$i]['iDeliveryFieldId']];
                    }
                    //echo "<pre>";print_r($db_fields_data);exit;
                    //Added By HJ On 18-01-2020 For Optimized Code End
                    $Data_Field[$j][$k]['vFieldName'] = $db_fields_data[0]['vFieldName'];
                    $Data_Field[$j][$k]['vValue'] = $db_trip_fields[$i]['vValue'];
                    if ($db_trip_fields[$i]['iDeliveryFieldId'] == "3") {
                        $Data_Field[$j][$k]['vValue'] = "+" . $dataUser[0]['vCode'] . $db_trip_fields[$i]['vValue'];
                    }
                    if ($Data_Field[$j][$k]['vValue'] == "") {
                        $Data_Field[$j][$k]['vValue'] = "---";
                    }
                    $Data_Field[$j][$k]['iDeliveryFieldId'] = $db_trip_fields[$i]['iDeliveryFieldId'];
                    if ($db_trip_fields[$i]['iDeliveryFieldId'] == "2") {
                        if ($Data_tripLocations[0]['ePaymentBy'] == "Receiver" && $Data_tripLocations[$j]['ePaymentByReceiver'] == "Yes" && ($Data_tripLocations[$j]['iTripDeliveryLocationId'] == $db_trip_fields[$i]['iTripDeliveryLocationId'])) { //Added By HJ On 04-06-2019 As Per Changed By PM
                            //if ($Data_tripLocations[0]['ePaymentBy'] == "Receiver" && $Data_tripLocations[$j]['ePaymentByReceiver'] == "Yes") { //Commented By HJ On 04-06-2019 As Per Changed By PM
                            $PaymentPerson = $db_trip_fields[$i]['vValue'];
                            $ReceNo = $j + 1;
                        }
                        $vReceiverName = $db_trip_fields[$i]['vValue'];
                    }
                    if ($db_fields_data[0]['eInputType'] == "Select") {
                        //Commented By HJ On 18-01-20202 For Optimized Code Start
                        //$sql = "SELECT vName_$userlangcode as vName FROM `package_type` where iDeliveryFieldId='" . $db_trip_fields[$i]['iDeliveryFieldId'] . "' and iPackageTypeId='" . $db_trip_fields[$i]['vValue'] . "'";
                        //$db_data = $obj->MySQLSelect($sql);
                        //Commented By HJ On 18-01-20202 For Optimized Code End
                        //Added By HJ On 18-01-2020 For Optimized Code Start
                        $db_data = array();
                        if (isset($packageDataArr[$db_trip_fields[$i]['vValue']][$db_trip_fields[$i]['iDeliveryFieldId']])) {
                            $db_data = $packageDataArr[$db_trip_fields[$i]['vValue']][$db_trip_fields[$i]['iDeliveryFieldId']];
                        }
                        $pkgName = "";
                        if (isset($db_data[0]['vName']) && $db_data[0]['vName'] != "") {
                            $pkgName = $db_data[0]['vName'];
                        }
                        $Data_Field[$j][$k]['vValue'] = $pkgName;
                        //Added By HJ On 18-01-2020 For Optimized Code End
                    }
                    $k++;
                }
                if ($Data_tripLocations[0]['ePaymentBy'] == "Receiver" && $Data_tripLocations[$j]['ePaymentByReceiver'] == "Yes" && ($Data_tripLocations[$j]['iTripDeliveryLocationId'] == $db_trip_fields[$i]['iTripDeliveryLocationId'])) { //Added By HJ On 04-06-2019 As Per Changed By PM
                    //if ($Data_tripLocations[0]['ePaymentBy'] == "Receiver" && $Data_tripLocations[$j]['ePaymentByReceiver'] == "Yes") { //Commented By HJ On 04-06-2019 As Per Changed By PM
                    if ($db_trip_fields[$i]['iDeliveryFieldId'] == "2") {
                        $PaymentPerson = $db_trip_fields[$i]['vValue'];
                        $ReceNo = $j + 1;
                    }
                }
            }
            $total_reci_count = count($Data_tripLocations);
            $Data_Field[$j][$k]['vFieldName'] = $languageLabelsArr['LBL_DROPOFF_LOCATION'];
            $Data_Field[$j][$k]['vValue'] = $Data_tripLocations[$j]['tDaddress'];
            $Data_Field[$j][$k]['tSaddress'] = $Data_tripLocations[$j]['tSaddress'];
            $Data_Field[$j][$k]['tDaddress'] = $Data_tripLocations[$j]['tDaddress'];
            $Data_Field[$j][$k]['ePaymentByReceiver'] = $Data_tripLocations[$j]['ePaymentByReceiver'];
            $Data_Field[$j][$k]['iTripDeliveryLocationId'] = $Data_tripLocations[$j]['iTripDeliveryLocationId'];
            $Data_Field[$j][$k]['iActive'] = $Data_tripLocations[$j]['iActive'];
            $Data_Field[$j][$k]['tStartTime'] = $Data_tripLocations[$j]['tStartTime'];
            $Data_Field[$j][$k]['tEndTime'] = $Data_tripLocations[$j]['tEndTime'];
            $Data_Field[$j][$k]['vReceiverName'] = $vReceiverName;
            $Data_Field[$j][$k]['eCancelled'] = $Data_tripLocations[$j]['eCancelled'];
            $Data_Field[$j][$k]['ePaymentBy'] = $Data_tripLocations[$j]['ePaymentBy'];
            $Data_Field[$j][$k]['vDeliveryConfirmCode'] = $Data_tripLocations[$j]['vDeliveryConfirmCode'];
            $Receipent_Signature = "";
            // if($Data_tripLocations[$j]['ePaymentByReceiver'] == 'Yes') {
            // $Data_Field[$j][$k]['ePaymentBySender'] = 'No';
            if ($Data_tripLocations[0]['ePaymentBy'] == "Individual") {
                $Data_Field[$j][$k]['PaymentPerson'] = $languageLabelsArr['LBL_EACH_RECIPIENT'];
                $fare_individual = round(($db_trips[0]['iFare'] / $total_reci_count), 2);
                $fare_individual = $fare_individual * $currencyRatio;
                $Data_Field[$j][$k]['PaymentAmount'] = formateNumAsPerCurrency($fare_individual, $currencycode, 2);
            } else {
                $Data_Field[$j][$k]['PaymentPerson'] = $languageLabelsArr['LBL_RECEIPENT_TXT'] . $ReceNo . " (" . $PaymentPerson . ")";
            }
            // }
            if ((file_exists($tconfig["tsite_upload_trip_signature_images_path"] . $Data_tripLocations[$j]['vSignImage'])) && $Data_tripLocations[$j]['vSignImage'] != "") {
                $Receipent_Signature = $tconfig["tsite_upload_trip_signature_images"] . $Data_tripLocations[$j]['vSignImage'];
            }
            $Data_Field[$j][$k]['Receipent_Signature'] = $Receipent_Signature;
        }
    }
    return $Data_Field;
}

function Update_Price_Individual($iTripId)
{
    global $obj, $tconfig;
    $sql = "select ePaymentBy from trips_delivery_locations where iTripId='$iTripId'";
    $Data_loc = $obj->MySQLSelect($sql);
    if ($Data_loc[0]['ePaymentBy'] == "Individual") {
        $iFare = get_value('trips', 'iFare', 'iTripId', $iTripId, '', 'true');
        $total_reci_count = count($Data_loc);
        $fare_individual = round(($iFare / $total_reci_count), 2);
        $where = " iTripId = '" . $iTripId . "'";
        $data_update['fIndividualAmount'] = $fare_individual;
        $obj->MySQLQueryPerform("trips_delivery_locations", $data_update, 'update', $where);
    }
}

function getDriverCurrencyLanguageDetailsWeb($iDriverId = "", $iOrderId = 0)
{
    global $obj, $tconfig, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $LANG_OBJ;
    $returnArr = array();
    if ($iDriverId != "") {
        $sqlp = "SELECT rd.vCurrencyDriver,rd.vLang,cu.vSymbol,cu.Ratio FROM register_driver as rd LEFT JOIN currency as cu ON rd.vCurrencyDriver = cu.vName WHERE iDriverId = '" . $iDriverId . "'";
        $passengerData = $obj->MySQLSelect($sqlp);
        $currencycode = $passengerData[0]['vCurrencyDriver'];
        $vLanguage = $passengerData[0]['vLang'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $Ratio = $passengerData[0]['Ratio'];
        if ($iOrderId > 0) {
            $sql = "SELECT fRatio_" . $currencycode . " as Ratio FROM orders WHERE iOrderId = '" . $iOrderId . "'";
            $CurrencyData = $obj->MySQLSelect($sql);
            $Ratio = $CurrencyData[0]['Ratio'];
        }
        if ($vLanguage == "" || $vLanguage == null) {
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
            //$vLanguage = get_value('language_master', 'vCode', 'eDefault', 'Yes', '', 'true');
        }
        if ($currencycode == "" || $currencycode == null) {
            //Added By HJ On 09-09-2020 For Optimize currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencycode = $vSystemDefaultCurrencyName;
                $currencySymbol = $vSystemDefaultCurrencySymbol;
                $Ratio = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
                $currencycode = $currencyData[0]['vName'];
                $currencySymbol = $currencyData[0]['vSymbol'];
                $Ratio = $currencyData[0]['Ratio'];
            }
            //Added By HJ On 09-09-2020 For Optimize currency Table Query End
        }
    } else {
        //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
        //$vLanguage = get_value('language_master', 'vCode', 'eDefault', 'Yes', '', 'true');
        //Added By HJ On 09-09-2020 For Optimize currency Table Query Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
            $Ratio = $vSystemDefaultCurrencyRatio;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        }
        //Added By HJ On 09-09-2020 For Optimize currency Table Query End
    }
    $returnArr['currencycode'] = $currencycode;
    $returnArr['currencySymbol'] = $currencySymbol;
    $returnArr['Ratio'] = $Ratio;
    $returnArr['vLang'] = $vLanguage;
    return $returnArr;
}

function FetchOrderFareDetailsForWeb($iOrderId, $iMemberId = '', $eUserType = '')
{
    global $obj, $tconfig, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $orderDetailsArr, $LANG_OBJ, $MODULES_OBJ;
    $OrderFareDetailsArr = $returnArrData = array();
    //Added By HJ On 09-09-2020 For Optimize Order Table Query Start
    if (isset($orderDetailsArr['orders_' . $iOrderId])) {
        $data_order = $orderDetailsArr['orders_' . $iOrderId];
    } else {
        $data_order = $obj->MySQLSelect("SELECT * FROM orders WHERE iOrderId='" . $iOrderId . "'");
        $orderDetailsArr['orders_' . $iOrderId] = $data_order;
    }
    //Added By HJ On 09-09-2020 For Optimize Order Table Query End
    if (empty($data_order)) {
        return 0;
    }
    $iCompanyId = $data_order[0]['iCompanyId'];
    $iDriverId = $data_order[0]['iDriverId'];
    $iUserId = $data_order[0]['iUserId'];
    $iServiceId = $data_order[0]['iServiceId'];
    $returnArrData = array_merge($data_order[0], $returnArrData);
    $tQuery = "SELECT ePaidByPassenger,vOrderAdjusmentId,vTripAdjusmentId  FROM trip_outstanding_amount WHERE iOrderId='" . $iOrderId . "'";
    $OutStandingData = $obj->MySQLSelect($tQuery);
    if (!empty($OutStandingData[0])) {
        $returnArrData = array_merge($OutStandingData[0], $returnArrData);
    }
    $ssql1 = '';
    if ($eUserType == "Passenger") {
        if ($iMemberId == '') {
            $iMemberId = $iUserId;
        }
        $UserDetailsArr = getUserCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    } else if ($eUserType == "Driver") {
        if ($iMemberId == '') {
            $iMemberId = $iDriverId;
        }
        $ssql1 .= "AND eAvailable = 'Yes'";
        $UserDetailsArr = getDriverCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    } else if ($eUserType == "Company") {
        if ($iMemberId == '') {
            $iMemberId = $iCompanyId;
        }
        $UserDetailsArr = getCompanyCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    }
    if (!empty($UserDetailsArr)) {
        $vSymbol = $UserDetailsArr['currencySymbol'];
        $priceRatio = $UserDetailsArr['Ratio'];
        $vLang = $UserDetailsArr['vLang'];
        $currencycode = $UserDetailsArr['currencycode'];
    } else {
        //Added By HJ On 09-09-2020 For Optimize currency Table Query Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $vSymbol = $vSystemDefaultCurrencySymbol;
            $priceRatio = $vSystemDefaultCurrencyRatio;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio from currency WHERE eDefault = 'Yes'");
            $vSymbol = $currencyData[0]['vSymbol'];
            $currencycode = $currencyData[0]['vName'];
            $priceRatio = $currencyData[0]['Ratio'];
        }
        //Added By HJ On 09-09-2020 For Optimize currency Table Query End
        //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
        $userlangcode = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
        $vLang = $userlangcode;
    }
    //this will be changed bc order status is not translated..
    if (isset($_SESSION['sess_lang'])) {
        $vLangstatus = $_SESSION['sess_lang'];
    } else {
        $vLangstatus = $default_lang;
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabelsWeb($vLangstatus, "1", $iServiceId);
    $returnArrData['currencycode'] = $currencycode;
    $returnArrData['vSymbol'] = $vSymbol;
    $returnArrData['priceRatio'] = $priceRatio;
    $returnArrData['vLang'] = $vLang;
    if ($iDriverId > 0) {
        $DriverData = get_value('register_driver', 'concat(vName," ",vLastName) as drivername', 'iDriverId', $iDriverId);
        $DriverName = $DriverData[0]['drivername'];
        $returnArrData['DriverName'] = $DriverName;
        $driver_vehicle_info = getDriverVehicleInfo($iOrderId);
        $returnArrData['DriverVehicle'] = $driver_vehicle_info[0]['DriverVehicle'];
        //$returnArrData['DriverVehicleMake'] = $driver_vehicle_info[0]['vMake'];
        $returnArrData['DriverVehicleLicencePlate'] = $driver_vehicle_info[0]['vLicencePlate'];
    }
    $UserData = get_value('register_user', 'concat(vName," ",vLastName) as UserName', 'iUserId', $iUserId);
    $UserName = $UserData[0]['UserName'];
    $returnArrData['UserName'] = $UserName;
    $restFields = 'vCompany,vCaddress as vRestuarantLocation,vPhone,vCode,vRestuarantLocationLat,vRestuarantLocationLong';
    $CompanyData = get_value('company', $restFields, 'iCompanyId', $iCompanyId);
    $returnArrData['CompanyName'] = $CompanyData[0]['vCompany'];
    $returnArrData['vRestuarantLocation'] = $CompanyData[0]['vRestuarantLocation'];
    $returnArrData['vRestuarantLocationLat'] = $CompanyData[0]['vRestuarantLocationLat'];
    $returnArrData['vRestuarantLocationLong'] = $CompanyData[0]['vRestuarantLocationLong'];
    $UserAddressArr = GetUserAddressDetailWeb($iUserId, "Passenger", $data_order[0]['iUserAddressId']);
    //print_r($UserAddressArr);die;
    $returnArrData['DeliveryAddress'] = $UserAddressArr['UserAddress'];
    $returnArrData['vLatitude'] = $UserAddressArr['vLatitude'];
    $returnArrData['vLongitude'] = $UserAddressArr['vLongitude'];
    if (strtoupper($data_order[0]['eOrderplaced_by']) == "KIOSK") {
        $returnArrData['UserName'] = $data_order[0]['vName'] . ' ' . $data_order[0]['vLastName'];
        $returnArrData['vLatitude'] = $CompanyData[0]['vRestuarantLocationLat'];
        $returnArrData['vLongitude'] = $CompanyData[0]['vRestuarantLocationLong'];
    }
    $returnArrData['vStatus'] = getOrderStatusWeb($iOrderId, $vLangstatus, $CompanyData[0]['vCompany']);
    $serverTimeZone = date_default_timezone_get();
    if ($data_order[0]['vTimeZone'] == '') {
        $data_order[0]['vTimeZone'] = $serverTimeZone;
    }
    $date = converToTz($data_order[0]['tOrderRequestDate'], $data_order[0]['vTimeZone'], $serverTimeZone, "Y-m-d H:i:s");
    $OrderTime = date('d M, Y h:iA', strtotime($date));
    $returnArrData['tOrderRequestDate_Org'] = $date;
    $returnArrData['OrderRequestDate'] = $OrderTime;
    if ($data_order[0]['tOrderRequestDate'] > 0 && $data_order[0]['vTimeZone'] != "") {
        $tOrderRequestDatenew = converToTz($data_order[0]['tOrderRequestDate'], $data_order[0]['vTimeZone'], $serverTimeZone);
    } else {
        $tOrderRequestDatenew = $data_order[0]['tOrderRequestDate'];
    }
    if ($data_order[0]['dDeliveryDate'] > 0 && $data_order[0]['vTimeZone'] != "") {
        $dDeliveryDate = converToTz($data_order[0]['dDeliveryDate'], $data_order[0]['vTimeZone'], $serverTimeZone);
    } else {
        $dDeliveryDate = $data_order[0]['dDeliveryDate'];
    }
    $returnArrData['OrderRequestDatenew'] = $tOrderRequestDatenew;
    $returnArrData['DeliveryDate'] = $dDeliveryDate;
    $orderDetailId = $obj->MySQLSelect("SELECT iOrderDetailId FROM order_details WHERE iOrderId = '" . $iOrderId . "' $ssql1");
    $returnArrData['TotalItems'] = strval(count($orderDetailId));
    foreach ($orderDetailId as $k => $val) {
        $ItemLists[] = DisplayOrderDetailItemList($val['iOrderDetailId'], $iMemberId, $eUserType, $iOrderId, $vLangstatus);
    }
    $all_data_new = array();

    if ($ItemLists != '') {
        foreach ($ItemLists as $k => $item) {
            if ($item['iQty'] == 0) continue;
            $iQty = ($item['iQty'] != '') ? $item['iQty'] : '';
            $MenuItem = ($item['MenuItem'] != '') ? $item['MenuItem'] : '';
            $fPrice = ($item['fPrice'] != '') ? $item['fPrice'] : '';
            $fTotPrice = ($item['fTotPrice'] != '') ? $item['fTotPrice'] : '';
            $eAvailable = ($item['eAvailable'] != '') ? $item['eAvailable'] : '';
            $AddOnItemArr = ($item['AddOnItemArr'] != '') ? $item['AddOnItemArr'] : '';
            $OptionsArr = ($item['OptionsArr'] != '') ? $item['OptionsArr'] : '';
            $iOrderDetailId = ($item['iOrderDetailId'] != '') ? $item['iOrderDetailId'] : '';
            $eFoodType = ($item['eFoodType'] != '') ? $item['eFoodType'] : '';
            $all_data_new[$k]['iOrderDetailId'] = $iOrderDetailId;
            $all_data_new[$k]['iQty'] = $iQty;
            $all_data_new[$k]['MenuItem'] = $MenuItem;
            $all_data_new[$k]['fPrice'] = $fPrice;
            $all_data_new[$k]['fTotPrice'] = $fTotPrice;
            $all_data_new[$k]['eAvailable'] = $eAvailable;
            $all_data_new[$k]['eFoodType'] = $eFoodType;
            $vOptionName = (!empty($item['vOptionName'])) ? $item['vOptionName'] : '';
            $addonTitleArr = array();
            $addonTitle = '';
            if (!empty($AddOnItemArr)) {
                $addonTitleArr = array();
                foreach ($AddOnItemArr as $addonkey => $addonvalue) {
                    $addonTitleArr[] = $addonvalue['vAddOnItemName'];
                }
                $addonTitle = implode(",", $addonTitleArr);
            }
            if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
                $optionTitleArr = array();
                $optionTitle = "";
                if (!empty($OptionsArr)) {
                    foreach ($OptionsArr as $optionkey => $optionvalue) {
                        $optionTitleArr[] = $optionvalue['vOptionName'];
                    }
                    $optionTitle = implode(",", $optionTitleArr);
                }
                if ($optionTitle != '' && $addonTitle == '') {
                    $all_data_new[$k]['SubTitle'] = $optionTitle;
                } else if ($optionTitle == '' && $addonTitle != '') {
                    $all_data_new[$k]['SubTitle'] = $addonTitle;
                } else if ($optionTitle != '' && $addonTitle != '') {
                    $all_data_new[$k]['SubTitle'] = $optionTitle . ", " . $addonTitle;
                } else {
                    $all_data_new[$k]['SubTitle'] = '';
                }
                $all_data_new[$k]['MenuItemOptions'] = $optionTitle;
            } else {
                if ($vOptionName != '' && $addonTitle == '') {
                    $all_data_new[$k]['SubTitle'] = $vOptionName;
                } else if ($vOptionName == '' && $addonTitle != '') {
                    $all_data_new[$k]['SubTitle'] = $addonTitle;
                } else if ($vOptionName != '' && $addonTitle != '') {
                    $all_data_new[$k]['SubTitle'] = $vOptionName . ", " . $addonTitle;
                } else {
                    $all_data_new[$k]['SubTitle'] = '';
                }
                //Added By HJ On 05-02-2020 For Get Options and Topping Data Start
                $all_data_new[$k]['MenuItemOptions'] = $vOptionName;
            }
            if ($data_order[0]['eBuyAnyService'] == "Yes") {
                $all_data_new[$k]['eConfirm'] = $item['eConfirm'];
                $all_data_new[$k]['eDecline'] = $item['eDecline'];
                $all_data_new[$k]['fTotPriceWithoutSymbol'] = $item['fTotPriceWithoutSymbol'];
                $all_data_new[$k]['eItemAvailable'] = $item['eItemAvailable'];
                $all_data_new[$k]['eExtraPayment'] = $item['eExtraPayment'];
            }
        }
    }
    // print_R($all_data_new);die;
    $returnArrData['itemlist'] = $all_data_new;
    $returnArr['subtotal'] = $data_order[0]['fSubTotal'] * $priceRatio;
    $returnArr['PackingCharge'] = $data_order[0]['fPackingCharge'] * $priceRatio;
    $returnArr['DeliveryCharge'] = $data_order[0]['fDeliveryCharge'] * $priceRatio;
    $returnArr['Tax'] = $data_order[0]['fTax'] * $priceRatio;
    $returnArr['TotalGenerateFare'] = $data_order[0]['fTotalGenerateFare'] * $priceRatio;
    $returnArr['Discount'] = $data_order[0]['fDiscount'] * $priceRatio;
    $returnArr['fNetTotal'] = $data_order[0]['fNetTotal'] * $priceRatio;
    $returnArr['WalletDebit'] = $data_order[0]['fWalletDebit'] * $priceRatio;
    $returnArr['OutStandingAmount'] = $data_order[0]['fOutStandingAmount'] * $priceRatio;
    $returnArr['fCommision'] = $data_order[0]['fCommision'] * $priceRatio;
    $returnArr['fOffersDiscount'] = $data_order[0]['fOffersDiscount'] * $priceRatio;
    $returnArr['fRefundAmount'] = $data_order[0]['fRefundAmount'] * $priceRatio;
    $returnArr['fRestaurantPaidAmount'] = $data_order[0]['fRestaurantPaidAmount'] * $priceRatio;
    $returnArr['fCancellationCharge'] = $data_order[0]['fCancellationCharge'] * $priceRatio;
    $returnArr['fDriverPaidAmount'] = $data_order[0]['fDriverPaidAmount'] * $priceRatio;
    $returnArr['fDeliveryChargeCancelled'] = $data_order[0]['fDeliveryChargeCancelled'] * $priceRatio;
    $subtotal = ($returnArr['subtotal']);
    $fPackingCharge = ($returnArr['PackingCharge']);
    $fDeliveryCharge = ($returnArr['DeliveryCharge']);
    //echo "<pre>";print_r($iOrderId);die;
    $fTax = ($returnArr['Tax']);
    $fTotalGenerateFare = ($returnArr['TotalGenerateFare']);
    $fNetTotal = ($returnArr['fNetTotal']);
    $fDiscount = ($returnArr['Discount']);
    $fWalletDebit = ($returnArr['WalletDebit']);
    $fOutStandingAmount = ($returnArr['OutStandingAmount']);
    $fCommision = ($returnArr['fCommision']);
    $fOffersDiscount = ($returnArr['fOffersDiscount']);
    $fRefundAmount = ($returnArr['fRefundAmount']);
    $fRestaurantPaidAmount = ($returnArr['fRestaurantPaidAmount']);
    $fCancellationCharge = ($returnArr['fCancellationCharge']);
    $fDriverPaidAmount = ($returnArr['fDriverPaidAmount']);
    $returnArrData['RefundAmount'] = formateNumAsPerCurrency($fRefundAmount, $currencycode);
    $returnArrData['RestaurantPaidAmount'] = formateNumAsPerCurrency($fRestaurantPaidAmount, $currencycode);
    $returnArrData['CancellationCharge'] = formateNumAsPerCurrency($fCancellationCharge, $currencycode);
    $returnArrData['DriverPaidAmount'] = formateNumAsPerCurrency($fDriverPaidAmount, $currencycode);
    //$returnArrData['fTipAmount'] = get_value('orders', 'fTipAmount', 'iOrderId', $iOrderId, '', 'true');
    //$returnArrData['fTipAmount'] = $data_order[0]['fTipAmount'];
    $returnArrData['fTipAmount'] = $data_order[0]['fTipAmount'] * $priceRatio;
    //$returnArrData['eTipIncludedAtOrderRequest'] = get_value('orders', 'eTipIncludedAtOrderRequest', 'iOrderId', $iOrderId, '', 'true');
    $returnArrData['eTipIncludedAtOrderRequest'] = $data_order[0]['eTipIncludedAtOrderRequest'];
    // [HP] start 25-10-2021 #region : disply pickup time in left section
    $pickupTime = $obj->MySQLSelect("SELECT dDate from order_status_logs WHERE iStatusCode = 5 AND iOrderId = '" . $iOrderId . "'");
    if (count($pickupTime) > 0) {
        $dDate = converToTz($pickupTime[0]['dDate'], $data_order[0]['vTimeZone'], $serverTimeZone);
        $returnArrData['pickupTime'] = $dDate;
    } else {
        $pickupTime = $obj->MySQLSelect("SELECT dDate from order_status_logs WHERE iStatusCode = 6 AND iOrderId = '" . $iOrderId . "'");
        if (count($pickupTime) > 0) {
            $dDate = converToTz($pickupTime[0]['dDate'], $data_order[0]['vTimeZone'], $serverTimeZone);
            $returnArrData['pickupTime'] = $dDate;
        }
    }
    // [HP] end 25-10-2021 #region : disply pickup time in left section
    if ($data_order[0]['eBuyAnyService'] == "Yes") {
        $orderStatusCodes = $obj->MySQLSelect("SELECT GROUP_CONCAT(iStatusCode) as statusCodes FROM order_status_logs WHERE iOrderId = " . $iOrderId);
        $order_status_codes = explode(',', $orderStatusCodes[0]['statusCodes']);
        if (count(array_intersect($order_status_codes, [1, 2])) > 0 && count(array_intersect($order_status_codes, [13, 14, 5])) == 0) {
            $fCancellationCharge = 0;
        } else {
            $fCancellationCharge = $data_order[0]['fDeliveryChargeCancelled'] * $priceRatio;
        }
        $returnArrData['CancellationCharge'] = formateNumAsPerCurrency($fCancellationCharge, $currencycode);
        $item_subtotal = 0;
        if ($data_order[0]['ePaymentOption'] == "Card") {
            $order_buy_anything = $obj->MySQLSelect("SELECT * FROM order_items_buy_anything WHERE iOrderId = '" . $iOrderId . "'");
            if (count($order_buy_anything) > 0) {
                foreach ($order_buy_anything as $oItem) {
                    if ($oItem['eConfirm'] == "Yes") {
                        $item_subtotal += $oItem['fItemPrice'];
                    }
                }
            }
        }
        if ($data_order[0]['genieUserApproved'] == "No" && $data_order[0]['eCheckUserWallet'] == "Yes") {
            $fNetTotal = $data_order[0]['fDeliveryCharge'] + $data_order[0]['fTax'] + $data_order[0]['fOutStandingAmount'];
            $fNetTotal = $fNetTotal - $data_order[0]['fWalletDebit'];
            $returnArr['fNetTotal'] = $fNetTotal * $priceRatio;
            $fNetTotal = formatNum($returnArr['fNetTotal']);
        } elseif ($data_order[0]['genieUserApproved'] == "Yes" && $data_order[0]['eCheckUserWallet'] == "Yes") {
            $fNetTotal = $data_order[0]['fTotalGenerateFare'] - $data_order[0]['fWalletDebit'];
            $returnArr['fNetTotal'] = $fNetTotal * $priceRatio;
            $fNetTotal = formatNum($returnArr['fNetTotal']);
        } elseif ($data_order[0]['genieUserApproved'] == "No" && $data_order[0]['eCheckUserWallet'] == "No") {
            $fNetTotal = $data_order[0]['fDeliveryCharge'] + $data_order[0]['fTax'] + $data_order[0]['fOutStandingAmount'];
            $returnArr['fNetTotal'] = $fNetTotal * $priceRatio;
            $fNetTotal = formatNum($returnArr['fNetTotal']);
        }
    }
    $arrindex = 0;
    if ($eUserType == "Driver") {
        $DataTrips = $obj->MySQLSelect("SELECT fDeliveryCharge,iVehicleTypeId FROM trips WHERE iOrderId='" . $iOrderId . "' ORDER BY iTripId DESC");
        $fDeliveryChargeDriver = $DataTrips[0]['fDeliveryCharge'];
        $fCustomDeliveryCharge = get_value('order_delivery_charge_details', 'fDeliveryCharge', 'iOrderId', $iOrderId, '', 'true');
        $fDeliveryChargeVehicle = get_value('vehicle_type', 'fDeliveryCharge', 'iVehicleTypeId', $DataTrips[0]['iVehicleTypeId'], '', 'true');
        // $fDeliveryChargeDriver = $fDeliveryChargeDriver - ($fDeliveryChargeDriver - ($fCustomDeliveryCharge + $fDeliveryChargeVehicle));
        $returnArr['DeliveryChargeDriver'] = $fDeliveryChargeDriver * $priceRatio;
        $fDeliveryChargesDriver = formatNum($returnArr['DeliveryChargeDriver']);
        if ($returnArrData['fTipAmount'] > 0) {
            if ($returnArr['DeliveryChargeDriver'] > 0) {
                $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_EARNING_APP']] = formateNumAsPerCurrency($returnArr['DeliveryChargeDriver'], $currencycode);
            }
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_TIP_TXT']] = formateNumAsPerCurrency($returnArrData['fTipAmount'], $currencycode);
            $totalEarning = $returnArr['DeliveryChargeDriver'] + $returnArrData['fTipAmount'];
            $OrderFareDetailsArr[$languageLabelsArr['LBL_TOTAL_EARNINGS_FRONT']] = formateNumAsPerCurrency($totalEarning, $currencycode);
        } else {
            if ($data_order[0]['eBuyAnyService'] == "Yes" && $data_order[0]['ePaymentOption'] == "Card") {
                $OrderFareDetailsArr[$languageLabelsArr['LBL_BILL_SUB_TOTAL']] = formateNumAsPerCurrency($item_subtotal * $priceRatio, $currencycode);
            }
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_EARNING_APP']] = formateNumAsPerCurrency($returnArr['DeliveryChargeDriver'], $currencycode);
            if ($data_order[0]['eBuyAnyService'] == "Yes") {
                $delivery_earning = $returnArr['DeliveryChargeDriver'] + $fCommision;
                $returnArr['DeliveryChargeDriver'] = ($returnArr['DeliveryChargeDriver'] / $priceRatio) + $item_subtotal;
                $returnArr['DeliveryChargeDriver'] = $returnArr['DeliveryChargeDriver'] * $priceRatio;
                $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_EARNING_APP']] = formateNumAsPerCurrency($delivery_earning, $currencycode);
                $OrderFareDetailsArr[$languageLabelsArr['LBL_SITE_COMMISION']] = "-" . formateNumAsPerCurrency($fCommision, $currencycode);
            }
            $OrderFareDetailsArr[$languageLabelsArr['LBL_TOTAL_EARNINGS_FRONT']] = formateNumAsPerCurrency($returnArr['DeliveryChargeDriver'], $currencycode);
        }
    } else if ($eUserType == "Passenger") {
        if ($data_order[0]['fSubTotal'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_BILL_SUB_TOTAL']] = formateNumAsPerCurrency($subtotal, $currencycode);
        }
        if ($data_order[0]['fOffersDiscount'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_OFFERS_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fOffersDiscount, $currencycode);
        }
        if ($data_order[0]['fPackingCharge'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_PACKING_CHARGE']] = formateNumAsPerCurrency($fPackingCharge, $currencycode);
        }
        if ($data_order[0]['fDeliveryCharge'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_CHARGES_TXT']] = formateNumAsPerCurrency($fDeliveryCharge, $currencycode);
        }
        if ($data_order[0]['fOutStandingAmount'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = formateNumAsPerCurrency($fOutStandingAmount, $currencycode);
        }
        if ($data_order[0]['fTax'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_TOTAL_TAX_TXT']] = formateNumAsPerCurrency($fTax, $currencycode);
        }
        if ($data_order[0]['fDiscount'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fDiscount, $currencycode);
        }
        if ($returnArrData['fTipAmount'] > 0 && $returnArrData['eTipIncludedAtOrderRequest'] == 'Yes') {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_TIP_TXT']] = formateNumAsPerCurrency($returnArrData['fTipAmount'], $currencycode);
        }
        if ($fWalletDebit > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "-" . formateNumAsPerCurrency($fWalletDebit, $currencycode);
        }
        if ($returnArrData['fTipAmount'] > 0 && $returnArrData['eTipIncludedAtOrderRequest'] == 'No') {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_TIP_TXT']] = formateNumAsPerCurrency($returnArrData['fTipAmount'], $currencycode);
        }
        //added by SP for rounding off currency wise on 19-11-2019 start
        $DataTrips = $obj->MySQLSelect("SELECT vCurrencyPassenger FROM trips WHERE iOrderId='" . $iOrderId . "'");
        $sqlp = "SELECT cu.vName, cu.iCurrencyId, cu.eRoundingOffEnable, ru.vCurrencyPassenger, cu.ratio FROM register_user AS ru LEFT JOIN currency AS cu ON ru.vCurrencyPassenger = cu.vName WHERE ru.iUserId = '" . $data_order[0]['iUserId'] . "'";
        $currData = $obj->MySQLSelect($sqlp);
        $vCurrency = $currData[0]['vName'];
        $samecur = (!empty($DataTrips) && $DataTrips[0]['vCurrencyPassenger'] == $currData[0]['vCurrencyPassenger']) ? 1 : 0;
        if (isset($data_order[0]['fRoundingAmount']) && !empty($data_order[0]['fRoundingAmount']) && $data_order[0]['fRoundingAmount'] != 0 && $currData[0]['eRoundingOffEnable'] == "Yes" && $samecur == 1 && $MODULES_OBJ->isEnableRoundingMethod()) {
            $roundingOffTotal_fare_amountArr['method'] = $data_order[0]['eRoundingType'];
            $roundingOffTotal_fare_amountArr['differenceValue'] = $data_order[0]['fRoundingAmount'];
            $roundingOffTotal_fare_amountArr = getRoundingOffAmounttripweb($fNetTotal, $data_order[0]['fRoundingAmount'], $data_order[0]['eRoundingType']); ////start
            if ($roundingOffTotal_fare_amountArr['method'] == "Addition") {
                $roundingMethod = "";
            } else {
                $roundingMethod = "-";
            }
            $fNetTotal = isset($roundingOffTotal_fare_amountArr['finalFareValue']) && $roundingOffTotal_fare_amountArr['finalFareValue'] != '' ? $roundingOffTotal_fare_amountArr['finalFareValue'] : "0.00";
            $rounding_diff = isset($roundingOffTotal_fare_amountArr['differenceValue']) && $roundingOffTotal_fare_amountArr['differenceValue'] != '' ? $roundingOffTotal_fare_amountArr['differenceValue'] : "0.00";
            $OrderFareDetailsArrTotal[$languageLabelsArr['LBL_ROUNDING_DIFF_TXT']] = $roundingMethod . " " . formateNumAsPerCurrency($rounding_diff, $currencycode);
        }
        //added by SP for rounding off currency wise on 19-11-2019 end
        if ($data_order[0]['fTotalGenerateFare'] > 0) {
            $OrderFareDetailsArrTotal[$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT']] = formateNumAsPerCurrency($fNetTotal, $currencycode);
        }
        $returnArrData['History_Arr_first'] = $OrderFareDetailsArrTotal;
    } else if ($eUserType == "Company") {
        if ($data_order[0]['fSubTotal'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_BILL_SUB_TOTAL']] = formateNumAsPerCurrency($subtotal, $currencycode);
        }
        if ($data_order[0]['fOffersDiscount'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_OFFERS_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fOffersDiscount, $currencycode);
        }
        if ($data_order[0]['fPackingCharge'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_PACKING_CHARGE']] = formateNumAsPerCurrency($fPackingCharge, $currencycode);
        }
        if ($data_order[0]['fTax'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_TOTAL_TAX_TXT']] = formateNumAsPerCurrency($fTax, $currencycode);
        }
        if ($data_order[0]['fSubTotal'] > 0) {
            //added by SP on 08-09-2020 because solving mantis bugs 0013929 - wrong calculation
            $fTotalGenerateFare_new = $fTotalGenerateFare - $fDeliveryCharge - $fOffersDiscount - $fOutStandingAmount - $data_order[0]['fTipAmount'];
            // echo $fTotalGenerateFare_new; exit;
            // $fTotalGenerateFare_new = ($fTotalGenerateFare - $fDeliveryCharge - $fOutStandingAmount) - $data_order[0]['fTipAmount'];
            $OrderFareDetailsArrTotal[$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT']] = formateNumAsPerCurrency($fTotalGenerateFare_new, $currencycode);
        }
        if ($fCommision > 0) {
            $OrderFareDetailsArrTotal[$languageLabelsArr['LBL_SITE_COMMISION']] = "-" . formateNumAsPerCurrency($fCommision, $currencycode);
        }
        //added by SP on 24-02-2021 >> commission not shown in store panel solved mantis point 0018699
        //$OrderFareDetailsArrTotal[$languageLabelsArr['LBL_SITE_COMMISION']] = "-" . formateNumAsPerCurrency($fCommision, $currencycode);
        //added by SP on 08-09-2020 because solving mantis bugs 0013929 - wrong calculation
        //$earnedAmount = ($fTotalGenerateFare - $fCommision - $fDeliveryCharge - $fOffersDiscount - $fOutStandingAmount) - $data_order[0]['fTipAmount'];
        // $earnedAmount = ($fTotalGenerateFare - $fCommision - $fDeliveryCharge - $fOutStandingAmount) - $data_order[0]['fTipAmount'];
        // $earnedAmount = ($fTotalGenerateFare - $fDeliveryCharge - $fOffersDiscount - $fOutStandingAmount) - $data_order[0]['fTipAmount'];
        $earnedAmount = ($fTotalGenerateFare - $fCommision - $fDeliveryCharge - $fOffersDiscount - $fOutStandingAmount) - $data_order[0]['fTipAmount'];
        $OrderFareDetailsArrEarned[$languageLabelsArr['LBL_EARNED_AMOUNT']] = formateNumAsPerCurrency($earnedAmount, $currencycode);
        // $OrderFareDetailsArrTotal['Offer Amount'] = "-".$vSymbol." ".$fOffersDiscount;
        $returnArrData['History_Arr_first'] = $OrderFareDetailsArrTotal;
        $returnArrData['History_Arr_second'] = $OrderFareDetailsArrEarned;
    } else {
        if ($data_order[0]['fSubTotal'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_BILL_SUB_TOTAL']] = formateNumAsPerCurrency($subtotal, $currencycode);
        }
        if ($data_order[0]['fOffersDiscount'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_OFFERS_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fOffersDiscount, $currencycode);
        }
        if ($data_order[0]['fPackingCharge'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_PACKING_CHARGE']] = formateNumAsPerCurrency($fPackingCharge, $currencycode);
        }
        if ($data_order[0]['fDeliveryCharge'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_CHARGES_TXT']] = formateNumAsPerCurrency($fDeliveryCharge, $currencycode);
        }
        if ($data_order[0]['fOutStandingAmount'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_OUTSTANDING_AMOUNT_TXT']] = formateNumAsPerCurrency($fOutStandingAmount, $currencycode);
        }
        if ($data_order[0]['fTax'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_TOTAL_TAX_TXT']] = formateNumAsPerCurrency($fTax, $currencycode);
        }
        if ($data_order[0]['fDiscount'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DISCOUNT_TXT']] = "-" . formateNumAsPerCurrency($fDiscount, $currencycode);
        }
        if ($returnArrData['fTipAmount'] > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_DELIVERY_TIP_TXT']] = formateNumAsPerCurrency($returnArrData['fTipAmount'], $currencycode);
        }
        if ($fWalletDebit > 0) {
            $OrderFareDetailsArr[$languageLabelsArr['LBL_WALLET_ADJUSTMENT']] = "-" . formateNumAsPerCurrency($fWalletDebit, $currencycode);
        }
        if ($data_order[0]['fTotalGenerateFare'] > 0) {
            $OrderFareDetailsArrTotal[$languageLabelsArr['LBL_TOTAL_BILL_AMOUNT_TXT']] = formateNumAsPerCurrency($fNetTotal, $currencycode);
        }
        $OrderFareDetailsArrTotal[$languageLabelsArr['LBL_SITE_COMMISION']] = formateNumAsPerCurrency($fCommision, $currencycode);
        // $OrderFareDetailsArrTotal['Offer Amount'] = "-".$vSymbol." ".$fOffersDiscount;
        $earnedAmount = ($fTotalGenerateFare - $fCommision - $fDeliveryCharge - $fOffersDiscount);
        $OrderFareDetailsArrEarned[$languageLabelsArr['LBL_RES_EARNED_AMOUNT']] = formateNumAsPerCurrency($earnedAmount, $currencycode);
        /*if($returnArrData['fTipAmount'] > 0) {

            $OrderFareDetailsArrTotal[$languageLabelsArr['LBL_DELIVERY_TIP_TXT']] = formateNumAsPerCurrency($returnArrData['fTipAmount'], $currencycode);



        }*/
        $returnArrData['History_Arr_first'] = $OrderFareDetailsArrTotal;
        $returnArrData['History_Arr_second'] = $OrderFareDetailsArrEarned;
    }
    //print_r($OrderFareDetailsArr);die;
    $returnArrData['History_Arr'] = $OrderFareDetailsArr;
    return $returnArrData;
}

function getDriverVehicleInfo($iOrderId)
{
    global $obj;
    $sql = "SELECT  concat(vTitle,' ',vMake) as DriverVehicle ,vLicencePlate  from orders JOIN trips  ON orders.iOrderId = trips.iOrderId join driver_vehicle on trips.iDriverVehicleId=driver_vehicle.iDriverVehicleId  JOIN make  ON driver_vehicle.iMakeId = make.iMakeId  JOIN  model ON driver_vehicle.iModelId = model.iModelId  WHERE orders.iOrderId=$iOrderId ";
    $driver_vehicle_info = $obj->MySQLSelect($sql);
    return $driver_vehicle_info;
}

function GetUserAddressDetailWeb($iUserId, $eUserType = "Passenger", $iUserAddressId)
{
    global $obj, $tconfig;
    $returnArr = array();
    if ($eUserType == "Passenger") {
        $UserType = "Rider";
    } else {
        $UserType = "Driver";
    }
    $sql = "SELECT * from user_address WHERE iUserId = '" . $iUserId . "' AND eUserType = '" . $UserType . "' AND iUserAddressId = '" . $iUserAddressId . "'";
    $result_Address = $obj->MySQLSelect($sql);
    $ToTalAddress = count($result_Address);
    if ($ToTalAddress > 0) {
        $vAddressType = $result_Address[0]['vAddressType'];
        $vBuildingNo = $result_Address[0]['vBuildingNo'];
        $vLandmark = $result_Address[0]['vLandmark'];
        $vServiceAddress = $result_Address[0]['vServiceAddress'];
        $PickUpAddress = ($vAddressType != "") ? $vAddressType . "\n" : "";
        $PickUpAddress .= ($vBuildingNo != "") ? $vBuildingNo . "," : "";
        $PickUpAddress .= ($vLandmark != "") ? $vLandmark . "\n" : "";
        $PickUpAddress .= ($vServiceAddress != "") ? $vServiceAddress : "";
        $result_Address[0]['UserAddress'] = $PickUpAddress;
        $returnArr = $result_Address[0];
    } else if ($iUserAddressId > 0) {
        //Added By HJ On 07-06-2019 For Get User Fav Address Data Start
        $result_Address = $obj->MySQLSelect("SELECT * from user_fave_address WHERE iUserId = '" . $iUserId . "' AND iUserFavAddressId = '" . $iUserAddressId . "'");
        $ToTalAddress = count($result_Address);
        if ($ToTalAddress > 0) {
            $result_Address[0]['UserAddress'] = $result_Address[0]['vAddress'];
            $returnArr = $result_Address[0];
        }
        //Added By HJ On 07-06-2019 For Get User Fav Address Data End
    }
    return $returnArr;
}

function getOrderStatusWeb($iOrderId, $vLang, $vCompany)
{
    global $obj;
    if (!empty($vLang) && !empty($vCompany)) {
        $sql = "SELECT os.vStatus_" . $vLang . " as vStatus FROM order_status as os LEFT JOIN orders as ord ON os.iStatusCode = ord.iStatusCode WHERE ord.iOrderId = '" . $iOrderId . "'";
        $OrderStatus = $obj->MySQLSelect($sql);
        $vStatus = str_replace("#STORE#", $vCompany, $OrderStatus[0]['vStatus']);
    } else {
        $sql = "SELECT os.vStatus FROM order_status as os LEFT JOIN orders as ord ON os.iStatusCode = ord.iStatusCode WHERE ord.iOrderId = '" . $iOrderId . "'";
        $OrderStatus = $obj->MySQLSelect($sql);
        $vStatus = $OrderStatus[0]['vStatus'];
    }
    return $vStatus;
}

function getrating($iOrderId)
{
    global $obj;
    $returnArr = array();
    $rsql = "SELECT iRatingId,vRating1,eFromUserType,eToUserType FROM ratings_user_driver WHERE iOrderId = '" . $iOrderId . "' AND vRating1 != '' ";
    $OrderRatingData = $obj->MySQLSelect($rsql);
    foreach ($OrderRatingData as $k => $val) {
        if ($val['eToUserType'] == 'Driver') {
            $driverrating = $val['vRating1'];
            $returnArr['DriverRate'] = $driverrating;
        }
        if ($val['eToUserType'] == 'Passenger') {
            $userrating = $val['vRating1'];
            $returnArr['UserRate'] = $userrating;
        }
        if ($val['eToUserType'] == 'Company') {
            $companyrating = $val['vRating1'];
            $returnArr['CompanyRate'] = $companyrating;
        }
    }
    return $returnArr;
}

function getUserCurrencyLanguageDetailsWeb($iUserId = "", $iOrderId = 0)
{
    global $obj, $tconfig, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $LANG_OBJ;
    $returnArr = array();
    if ($iUserId != "") {
        $sqlp = "SELECT ru.vCurrencyPassenger,ru.vLang,cu.vSymbol,cu.Ratio FROM register_user as ru LEFT JOIN currency as cu ON ru.vCurrencyPassenger = cu.vName WHERE iUserId = '" . $iUserId . "'";
        $passengerData = $obj->MySQLSelect($sqlp);
        $currencycode = $passengerData[0]['vCurrencyPassenger'];
        $vLanguage = $passengerData[0]['vLang'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $Ratio = $passengerData[0]['Ratio'];
        if ($iOrderId > 0) {
            $CurrencyData = $obj->MySQLSelect("SELECT fRatio_" . $currencycode . " as Ratio FROM orders WHERE iOrderId = '" . $iOrderId . "'");
            $Ratio = $CurrencyData[0]['Ratio'];
        }
        if ($vLanguage == "" || $vLanguage == null) {
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
            //$vLanguage = get_value('language_master', 'vCode', 'eDefault', 'Yes', '', 'true');
        }
        if ($currencycode == "" || $currencycode == null) {
            //Added By HJ On 09-09-2020 For Optimize currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencycode = $vSystemDefaultCurrencyName;
                $currencySymbol = $vSystemDefaultCurrencySymbol;
                $Ratio = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
                $currencycode = $currencyData[0]['vName'];
                $currencySymbol = $currencyData[0]['vSymbol'];
                $Ratio = $currencyData[0]['Ratio'];
            }
            //Added By HJ On 09-09-2020 For Optimize currency Table Query End
        }
    } else {
        //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
        //$vLanguage = get_value('language_master', 'vCode', 'eDefault', 'Yes', '', 'true');
        //Added By HJ On 09-09-2020 For Optimize currency Table Query Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
            $Ratio = $vSystemDefaultCurrencyRatio;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        }
        //Added By HJ On 09-09-2020 For Optimize currency Table Query End
    }
    $returnArr['currencycode'] = $currencycode;
    $returnArr['currencySymbol'] = $currencySymbol;
    $returnArr['Ratio'] = $Ratio;
    $returnArr['vLang'] = $vLanguage;
    return $returnArr;
}

function DisplayOrderDetailItemListWeb($iOrderDetailId, $iMemberId, $eUserType = "Passenger", $iOrderId = 0, $lang = '')
{
    global $obj, $MODULES_OBJ, $tconfig;
    $returnArr = array();
    $ssql = "";
    if ($eUserType == "Passenger") {
        $UserDetailsArr = getUserCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    } else if ($eUserType == "Driver") {
        $UserDetailsArr = getDriverCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    } else {
        $UserDetailsArr = getCompanyCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    }
    $currencySymbol = $UserDetailsArr['currencySymbol'];
    $Ratio = $UserDetailsArr['Ratio'];
    $vLang = !empty($lang) ? $lang : $UserDetailsArr['vLang'];
    $currencycode = $UserDetailsArr['currencycode'];
    $sql = "select od.*,mi.vItemType_" . $vLang . " as MenuItem,mi.eFoodType, mi.vItemTypeBuyAnyService, mi.eBuyAnyService from `order_details` as od LEFT JOIN  `menu_items` as mi ON od.iMenuItemId=mi.iMenuItemId where od.iOrderDetailId='" . $iOrderDetailId . "'";
    $data_order_detail = $obj->MySQLSelect($sql);
    $MenuItem = ($data_order_detail[0]['eBuyAnyService'] == "No") ? $data_order_detail[0]['MenuItem'] : $data_order_detail[0]['vItemTypeBuyAnyService'];
    $eFoodType = $data_order_detail[0]['eFoodType'];
    $fPrice = $data_order_detail[0]['fPrice'];
    $eAvailable = $data_order_detail[0]['eAvailable'];
    $fPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $fPrice, $iOrderId);
    $fPricenew = $fPriceArr['fPricewithsymbol'];
    $vsymbol = $fPriceArr['currencySymbol'];
    $fPricewithoutsymbol = $fPriceArr['fPrice'];
    $fTotalprice = $data_order_detail[0]['fTotalPrice'];
    $returnArr['iQty'] = $data_order_detail[0]['iQty'];
    $returnArr['MenuItem'] = $MenuItem;
    $returnArr['eFoodType'] = $eFoodType;
    $returnArr['fPrice'] = $fPricenew;
    $returnArr['fTotPrice'] = formateNumAsPerCurrency($fTotalprice * $Ratio, $currencycode);
    $returnArr['eAvailable'] = $eAvailable;
    $returnArr['iOrderDetailId'] = $iOrderDetailId;
    $vOptionId = $data_order_detail[0]['vOptionId'];
    if ($vOptionId != "") {
        $vOptionName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $vOptionId, '', 'true');
        $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $vOptionId, '', 'true');
        if (!empty($tOptionNameLang)) {
            $tOptionNameLang = json_decode(trim($tOptionNameLang, '"'), true);
            if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                $vOptionName = $tOptionNameLang['tOptionNameLang_' . $vLang];
            }
        }
        $vOptionPrice = $data_order_detail[0]['vOptionPrice'];
        $vOptionPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $vOptionPrice, $iOrderId);
        $vOptionPrice = $vOptionPriceArr['fPricewithsymbol'];
        $returnArr['vOptionName'] = $vOptionName;
        $returnArr['vOptionPrice'] = $vOptionPrice;
    } else {
        $returnArr['vOptionName'] = "";
        $returnArr['vOptionPrice'] = "";
    }
    if ($MODULES_OBJ->isEnableMultiOptionsToppings()) {
        $tOptionIdOrigPrice = $data_order_detail[0]['tOptionIdOrigPrice'];
        if ($tOptionIdOrigPrice != "") {
            $OptionItemsArr = array();
            $OptionItemsDetailArr = explode(",", $tOptionIdOrigPrice);
            for ($i = 0; $i < count($OptionItemsDetailArr); $i++) {
                $OptionItemsStrArr = explode("#", $OptionItemsDetailArr[$i]);
                $OptionItemsId = $OptionItemsStrArr[0];
                $OptionItemsPrice = $OptionItemsStrArr[1];
                $OptionItemsPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $OptionItemsPrice, $iOrderId);
                $OptionItemPrice = $OptionItemsPriceArr['fPricewithsymbol'];
                $OptionItemName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $OptionItemsId, '', 'true');
                $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $OptionItemsId, '', 'true');
                if (!empty($tOptionNameLang)) {
                    $tOptionNameLang = json_decode($tOptionNameLang, true);
                    if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                        $OptionItemName = $tOptionNameLang['tOptionNameLang_' . $vLang];
                    }
                }
                $OptionItemsArr[$i]['vOptionItemName'] = $OptionItemName;
                $OptionItemsArr[$i]['OptionItemPrice'] = $OptionItemPrice;
            }
            $returnArr['OptionItemArr'] = $OptionItemsArr;
        } else {
            $returnArr['OptionItemArr'] = array();
        }
    }
    $tAddOnIdOrigPrice = $data_order_detail[0]['tAddOnIdOrigPrice'];
    if ($tAddOnIdOrigPrice != "") {
        $AddonItemsArr = array();
        $AddonItemsDetailArr = explode(",", $tAddOnIdOrigPrice);
        for ($i = 0; $i < count($AddonItemsDetailArr); $i++) {
            $AddonItemsStrArr = explode("#", $AddonItemsDetailArr[$i]);
            $AddonItemsId = $AddonItemsStrArr[0];
            $AddonItemsPrice = $AddonItemsStrArr[1];
            $AddonItemsPriceArr = getPriceUserCurrency($iMemberId, $eUserType, $AddonItemsPrice, $iOrderId);
            $AddonItemPrice = $AddonItemsPriceArr['fPricewithsymbol'];
            $AddonItemName = get_value('menuitem_options', 'vOptionName', 'iOptionId', $AddonItemsId, '', 'true');
            $tOptionNameLang = get_value('menuitem_options', 'tOptionNameLang', 'iOptionId', $AddonItemsId, '', 'true');
            if (!empty($tOptionNameLang)) {
                $tOptionNameLang = json_decode(trim($tOptionNameLang, '"'), true);
                if (isset($tOptionNameLang['tOptionNameLang_' . $vLang]) && !empty($tOptionNameLang['tOptionNameLang_' . $vLang])) {
                    $AddonItemName = $tOptionNameLang['tOptionNameLang_' . $vLang];
                }
            }
            $AddonItemsArr[$i]['vAddOnItemName'] = $AddonItemName;
            $AddonItemsArr[$i]['AddonItemPrice'] = $AddonItemPrice;
        }
        $returnArr['AddOnItemArr'] = $AddonItemsArr;
    } else {
        $returnArr['AddOnItemArr'] = array();
    }
    $eBuyAnyService = get_value('orders', 'eBuyAnyService', 'iOrderId', $data_order_detail[0]['iOrderId'], '', 'true');
    if ($eBuyAnyService == "Yes") {
        $order_buy_anything = $obj->MySQLSelect("SELECT * FROM order_items_buy_anything WHERE iOrderId = " . $data_order_detail[0]['iOrderId'] . " AND iOrderDetailId = " . $data_order_detail[0]['iOrderDetailId']);
        if (count($order_buy_anything) > 0 && !empty($order_buy_anything)) {
            $fTotalprice = $order_buy_anything[0]['fItemPrice'];
            $fTotalprice = setTwoDecimalPoint($fTotalprice * $Ratio);
            $returnArr['fTotPriceWithoutSymbol'] = $fTotalprice;
            $returnArr['fTotPrice'] = formateNumAsPerCurrency($fTotalprice, $currencycode);
            $returnArr['fPriceOrig'] = $order_buy_anything[0]['fItemPrice'];
            $itemImgUrl = $tconfig['tsite_upload_order_buy_anything'];
            if (!empty($order_buy_anything[0]['vItemImage'])) {
                $returnArr['vImage'] = $itemImgUrl . $order_buy_anything[0]['vItemImage'];
                $returnArr['vImageUploaded'] = "Yes";
            } else {
                $returnArr['vImage'] = $tconfig["tsite_url"] . "webimages/upload/DefaultImg/items.png";
                $returnArr['vImageUploaded'] = "No";
            }
            $returnArr['eConfirm'] = $order_buy_anything[0]['eConfirm'];
            $returnArr['eDecline'] = $order_buy_anything[0]['eDecline'];
            $returnArr['eItemAvailable'] = $order_buy_anything[0]['eItemAvailable'];
            $returnArr['eExtraPayment'] = $order_buy_anything[0]['eExtraPayment'];
        }
    }
    return $returnArr;
}

function getPriceUserCurrency($iMemberId, $eUserType = "Passenger", $fPrice, $iOrderId = 0)
{
    global $obj, $tconfig;
    $returnArr = array();
    if ($eUserType == "Passenger") {
        $UserDetailsArr = getUserCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    } else if ($eUserType == "Driver") {
        $UserDetailsArr = getDriverCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    } else {
        $UserDetailsArr = getCompanyCurrencyLanguageDetailsWeb($iMemberId, $iOrderId);
    }
    $currencycode = $UserDetailsArr['currencycode'];
    $currencySymbol = $UserDetailsArr['currencySymbol'];
    $Ratio = $UserDetailsArr['Ratio'];
    $fPrice = round(($fPrice * $Ratio), 2);
    $fPricewithsymbol = formateNumAsPerCurrency($fPrice, $currencycode);
    $returnArr['fPrice'] = $fPrice;
    $returnArr['fPricewithsymbol'] = $fPricewithsymbol;
    $returnArr['currencySymbol'] = $currencySymbol;
    $returnArr['currencycode'] = $currencycode;
    return $returnArr;
}

function getCompanyCurrencyLanguageDetailsWeb($iCompanyId = "", $iOrderId = 0)
{
    global $obj, $tconfig, $vSystemDefaultCurrencyName, $vSystemDefaultCurrencySymbol, $vSystemDefaultCurrencyRatio, $LANG_OBJ;
    $returnArr = array();
    if ($iCompanyId != "") {
        $sqlp = "SELECT co.vCurrencyCompany,co.vLang,cu.vSymbol,cu.Ratio FROM company as co LEFT JOIN currency as cu ON co.vCurrencyCompany = cu.vName WHERE iCompanyId = '" . $iCompanyId . "'";
        $passengerData = $obj->MySQLSelect($sqlp);
        $currencycode = $passengerData[0]['vCurrencyCompany'];
        $vLanguage = $passengerData[0]['vLang'];
        $currencySymbol = $passengerData[0]['vSymbol'];
        $Ratio = $passengerData[0]['Ratio'];
        if ($iOrderId > 0) {
            $sql = "SELECT fRatio_" . $currencycode . " as Ratio FROM orders WHERE iOrderId = '" . $iOrderId . "'";
            $CurrencyData = $obj->MySQLSelect($sql);
            $Ratio = $CurrencyData[0]['Ratio'];
        }
        if ($vLanguage == "" || $vLanguage == null) {
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
            $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
            //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
            //$vLanguage = get_value('language_master', 'vCode', 'eDefault', 'Yes', '', 'true');
        }
        if ($currencycode == "" || $currencycode == null) {
            //Added By HJ On 09-09-2020 For Optimize currency Table Query Start
            if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
                $currencycode = $vSystemDefaultCurrencyName;
                $currencySymbol = $vSystemDefaultCurrencySymbol;
                $Ratio = $vSystemDefaultCurrencyRatio;
            } else {
                $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
                $currencycode = $currencyData[0]['vName'];
                $currencySymbol = $currencyData[0]['vSymbol'];
                $Ratio = $currencyData[0]['Ratio'];
            }
            //Added By HJ On 09-09-2020 For Optimize currency Table Query End
        }
    } else {
        //Added By HJ On 09-09-2020 For Optimize language_master Table Query Start
        $vLanguage = $LANG_OBJ->FetchDefaultLangData("vCode");
        //Added By HJ On 09-09-2020 For Optimize language_master Table Query End
        //$vLanguage = get_value('language_master', 'vCode', 'eDefault', 'Yes', '', 'true');
        //Added By HJ On 09-09-2020 For Optimize currency Table Query Start
        if (!empty($vSystemDefaultCurrencyName) && !empty($vSystemDefaultCurrencySymbol) && !empty($vSystemDefaultCurrencyRatio)) {
            $currencycode = $vSystemDefaultCurrencyName;
            $currencySymbol = $vSystemDefaultCurrencySymbol;
            $priceRatio = $vSystemDefaultCurrencyRatio;
            $Ratio = $priceRatio;
        } else {
            $currencyData = $obj->MySQLSelect("SELECT vName,vSymbol,Ratio FROM currency WHERE eDefault = 'Yes'");
            $currencycode = $currencyData[0]['vName'];
            $currencySymbol = $currencyData[0]['vSymbol'];
            $Ratio = $currencyData[0]['Ratio'];
        }
        //Added By HJ On 09-09-2020 For Optimize currency Table Query End
    }
    $returnArr['currencycode'] = $currencycode;
    $returnArr['currencySymbol'] = $currencySymbol;
    $returnArr['Ratio'] = $Ratio;
    $returnArr['vLang'] = $vLanguage;
    return $returnArr;
}

function getCancelReason($iCancelReasonId, $langCode)
{
    $vCancelReason = get_value('cancel_reason', "vTitle_" . $langCode, 'iCancelReasonId', $iCancelReasonId, '', 'true');
    $returnArr['vCancelReason'] = $vCancelReason;
    return $returnArr;
}

function setTwoDecimalPoint($value)
{
    return number_format(floatval($value), 2, ".", "");
}

function getAllTableArray()
{
    global $obj, $GLB_DB_ALL_TABLES_ARR;
    if (!empty($GLB_DB_ALL_TABLES_ARR)) {
        return $GLB_DB_ALL_TABLES_ARR;
    }
    $checkTable = $obj->MysqlSelect("SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = '" . TSITE_DB . "';");
    $tablesArr = array();
    for ($r = 0; $r < count($checkTable); $r++) {
        $tablesArr[] = $checkTable[$r]['TABLE_NAME'];
    }
    $GLB_DB_ALL_TABLES_ARR = $tablesArr;
    return $tablesArr;
}

function checkTableExists($tableName, $tablesArr)
{
    $return = 0;
    if (in_array($tableName, $tablesArr)) {
        $return = 1;
    }
    return $return;
}

function checksevicelock_driver($file_path, $iDriverId)
{
    $servicefile = fopen($file_path, "r");
    while ($line = fgets($servicefile)) {
        $linearr = explode("_", $line);
        $driverid = $linearr[count($linearr) - 1];
        if ($driverid == $iDriverId) {
            fclose($servicefile);
            return false;
        }
    }
    fclose($servicefile);
    return true;
}

function checkServiceLock($iCabRequestId, $iCabBookingId, $isDeliverAll = false, $isDriver = false, $iDriverId = '')
{
    global $tconfig;
    $serviceId = empty($iCabRequestId) ? $iCabBookingId : $iCabRequestId;
    if ($isDriver == true) {
        $fileName = "Driver_" . $iCabRequestId;
    } else {
        $fileName = $isDeliverAll == true ? "Order_" . $iCabRequestId : (empty($iCabRequestId) ? "CabBooking_" . $iCabBookingId : "CabRequest_" . $iCabRequestId);
    }
    $fileName .= "_" . $_SERVER['HTTP_HOST'];
    $file_name = md5($fileName) . ".txt";
    $file_path = $tconfig["tpanel_path"] . "webimages/lockFile/" . $file_name;
    if (file_exists($file_path)) {
        if (!empty($iDriverId)) {
            if (checksevicelock_driver($file_path, $iDriverId)) {
                return true;
            } else {
                return false;
            }
        } else {
            return true;
        }
    } else {
        // sleep(2);
        //sleep(rand(2,7));
        if (file_exists($file_path)) {
            if (!empty($iDriverId)) {
                if (checksevicelock_driver($file_path, $iDriverId)) {
                    return true;
                } else {
                    return false;
                }
            } else {
                return true;
            }
        }
        $servicefile = fopen($file_path, "a+");
        if (flock($servicefile, LOCK_EX)) {
            if (filesize($file_path) == 0) {
                if (!empty($iDriverId)) {
                    $fileName = $fileName . "_" . $iDriverId;
                } else {
                    $fileName = $fileName;
                }
                fwrite($servicefile, $fileName);
                flock($servicefile, LOCK_UN);
                fclose($servicefile);
                return false;
            } else {
                fclose($servicefile);
                return true;
            }
        } else {
            fclose($servicefile);
            return true;
        }
    }
    return false;
}

function searchnReplaceWord($searchWord, $replaceWith, $tableName = "")
{
    global $obj, $tconfig;
    $projectNameArr = array(
        $searchWord => $replaceWith, 'projectName' => $replaceWith, 'ProjectName' => $replaceWith
    );
    $search_keywords = $projectNameArr;
    $ignore_db_tables = array("administrators", "admin_permissions", "admin_pro_permission_display_groups", "admin_pro_permissions", "cab_booking", "cab_request_now", "city", "model", "company", "register_user", "register_driver", "setup_info");
    (ReplaceWord::getInstance())->replace($search_keywords, $ignore_db_tables);
    $obj->sql_query("UPDATE setup_info SET vProjectName = '$replaceWith' ");
}

function gethomeContentData($vCode)
{
    global $obj, $cacheKeysArr, $oCache;
    if ($vCode != '') {
        $table_name = getAppTypeWiseHomeTable();
        //$table_name = 'home_content';
        //Added By HJ On 24-10-2020 For Store homecontent Data into Cache Start
        /*$homecontentApcKey = md5($cacheKeysArr['homecontent']);

        $getCategoryCacheData = $oCache->getData($homecontentApcKey);

        if (!empty($getCategoryCacheData) && count($getCategoryCacheData) > 0) {

            $data = $getCategoryCacheData;

        } else {

            $data = $obj->MySQLSelect("SELECT * FROM " . $table_name . " WHERE vCode = '" . $vCode . "'");

            $setCategoryCacheData = $oCache->setData($homecontentApcKey, $data);

        }*/
        $data = $obj->MySQLSelect("SELECT * FROM " . $table_name . " WHERE vCode = '" . $vCode . "'");
        //Added By HJ On 24-10-2020 For Store homecontent Data into Cache End
        //echo"<pre>";print_r($data);exit;
        if (count($data) > 0) {
            $data['meta_title'] = isset($data[0]["vPagetitle"]) ? $data[0]["vPagetitle"] : "";
            $data['meta_keyword'] = '';
            $data['meta_desc'] = isset($data[0]["tDescription"]) ? $data[0]["tDescription"] : "";
        }
    }
    return $data;
}

function getAppTypeWiseHomeTable()
{
    global $APP_TYPE, $iMasterVehicleCategoryId, $THEME_OBJ;
    $table_name = '';
    if ($APP_TYPE == 'UberX') {
        $table_name = 'home_content_' . strtolower($APP_TYPE);
    } else if ($APP_TYPE == 'Ride-Delivery') {
        $table_name = 'home_content_ride_delivery';
    } else if ($APP_TYPE == 'Ride-Delivery-UberX') {
        // $table_name = 'homecontent_cubejek';
        $table_name = 'homecontent';
    } else if ($APP_TYPE == 'Ride') {
        $table_name = 'home_content_' . strtolower($APP_TYPE);
    } else if ($APP_TYPE == 'Delivery') {
        $table_name = 'home_content_delivery';
    }
    //added by SP for theme changes on 07-08-2019
    if ($THEME_OBJ->isCubexThemeActive() == 'Yes' || $THEME_OBJ->isCubeXv2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_cubex';
    } else if ($THEME_OBJ->isCubeJekXThemeActive() == 'Yes') { //added by SP on 05-12-2019 for checking CubeJek is on or not
        $table_name = 'homecontent_cubejekx';
    } else if ($THEME_OBJ->isCubeJekXv2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_cubejekx_v2';
    } else if ($THEME_OBJ->isCubeJekXv3ThemeActive() == 'Yes') {
        $table_name = 'homecontent_cubejekx_v3';
    } else if ($THEME_OBJ->isCubeJekXv3ProThemeActive() == 'Yes') {
        $table_name = 'homecontent_cubejekx_v3Pro';
    } else if ($THEME_OBJ->isCJXDoctorv2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_cjx_doctor_v2';
    } else if ($THEME_OBJ->isMedicalServicev2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_medicalservice_v2';
    } else if ($THEME_OBJ->isRideCXThemeActive() == 'Yes') {
        $table_name = 'homecontent_ridecx';
    } else if ($THEME_OBJ->isRideCXv2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_ridecx_v2';
    } else if ($THEME_OBJ->isRideDeliveryXThemeActive() == 'Yes') {
        $table_name = 'homecontent_ridedeliveryx';
    } else if ($THEME_OBJ->isDeliveryXThemeActive() == 'Yes' || $THEME_OBJ->isDeliveryXv2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_deliveryx';
    } else if ($THEME_OBJ->isDeliveryKingThemeActive() == 'Yes') {
        $table_name = 'homecontent_deliveryking';
    } else if ($THEME_OBJ->isDeliveryKingXv2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_deliveryking';
    }
    else if ($THEME_OBJ->isServiceXThemeActive() == 'Yes' || $THEME_OBJ->isServiceXv2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_servicex';
        //Added By HJ On 28-10-2020 For Get Particular Service Table Name Start
        if ($iMasterVehicleCategoryId > 0) {
            $table_name = $table_name . "_" . $iMasterVehicleCategoryId;
            if (!checkTableExistsDatabase($table_name)) {
                $table_name = 'homecontent_servicex';
            }
        }
        //Added By HJ On 28-10-2020 For Get Particular Service Table Name End
    } elseif ($THEME_OBJ->isMedicalServicev2ThemeActive() == 'Yes') {
        $table_name = 'homecontent_medicalservice_v2';
    } elseif ($THEME_OBJ->isPXTProThemeActive() == 'Yes') {
        $table_name = 'homecontent_ride_pro';
    } elseif ($THEME_OBJ->isPXRDProThemeActive() == 'Yes') {
        $table_name = 'homecontent_ridedelivery_pro';
    } elseif ($THEME_OBJ->isPXCProThemeActive() == 'Yes') {
        $table_name = 'homecontent_cubex_pro';
    } else if ($THEME_OBJ->isPROSPThemeActive() == 'Yes') {
        $table_name = 'homecontent_uberx_pro';
        if ($iMasterVehicleCategoryId > 0) {
            $table_name = $table_name . "_" . $iMasterVehicleCategoryId;
            if (!checkTableExistsDatabase($table_name)) {
                $table_name = 'homecontent_uberx_pro';
            }
        }
    } elseif ($THEME_OBJ->isProDeliveryThemeActive() == 'Yes') {
        $table_name = 'homecontent_delivery_pro';
    } elseif ($THEME_OBJ->isProDeliveryKingThemeActive() == 'Yes') {
        $table_name = 'homecontent_deliveryking_pro';
    }



    if (!checkTableExistsDatabase($table_name) && $THEME_OBJ->isXThemeActive() == "No") {
        $table_name = 'home_content';
    }
    if (!checkTableExistsDatabase($table_name) && $THEME_OBJ->isXThemeActive() == "Yes") {

        $table_name = 'homecontent';
    }
    if (ONLYDELIVERALL == 'Yes') {
        // include_once('configuration.php');
        $serviceCategories_data = json_decode(serviceCategories);
        if (!empty($serviceCategories_data) && count($serviceCategories_data) > 0) {
            $table_name = 'homecontentfood_deliverall';
            if ($THEME_OBJ->isDeliverallXThemeActive() == 'Yes' || $THEME_OBJ->isDeliverallXv2ThemeActive() == 'Yes') {
                $table_name = 'homecontentfood_deliverallx';
            }

            if ($THEME_OBJ->isProDeliverallThemeActive() == 'Yes') {
                $table_name = 'homecontentfood_prodeliverallx';
            }
            if (count($serviceCategories_data) == 1) {
                $vService = $serviceCategories_data[0]->vService;
                $table_name .= '_' . strtolower($vService);
            }

            if (!checkTableExistsDatabase($table_name)) {
                $table_name = 'homecontentfood';
                if ($THEME_OBJ->isDeliverallXThemeActive() == 'Yes' || $THEME_OBJ->isDeliverallXv2ThemeActive() == 'Yes') {
                    $table_name = 'homecontentfoodx';
                }
            }
        }
        if (!checkTableExistsDatabase($table_name) && $THEME_OBJ->isXThemeActive() == "Yes") {
            $table_name = 'homecontentfood';
        }
    }
    return $table_name;
}

function checkTableExistsDatabase($table_name)
{
    global $obj, $TABLES_OF_DATABASE_THEME;
    if ($table_name != '') {
        if (empty($TABLES_OF_DATABASE_THEME)) {
            //$data  = $obj->MySQLSelect("SHOW TABLES LIKE '".$table_name."'");
            $data = $obj->MySQLSelect("SHOW TABLES");
            foreach ($data as $data_tmp) {
                $TABLES_OF_DATABASE_THEME[] = $data_tmp['Tables_in_' . TSITE_DB];
            }
        }
        if (in_array($table_name, $TABLES_OF_DATABASE_THEME)) {
            return true;
        }
    }
    return false;
}

//added by SP for fly stations on 14-08-2019 start
function getCentroidOfPolygon($geometry)
{
    $cx = 0;
    $cy = 0;
    for ($ri = 0, $rl = sizeof($geometry->rings); $ri < $rl; $ri++) {
        $ring = $geometry->rings[$ri];
        for ($vi = 0, $vl = sizeof($ring); $vi < $vl; $vi++) {
            $thisx = $ring[$vi][0];
            $thisy = $ring[$vi][1];
            $nextx = $ring[($vi + 1) % $vl][0];
            $nexty = $ring[($vi + 1) % $vl][1];
            $p = ($thisx * $nexty) - ($thisy * $nextx);
            $cx += ($thisx + $nextx) * $p;
            $cy += ($thisy + $nexty) * $p;
        }
    }
    // last step of centroid: divide by 6*A
    $area = getAreaOfPolygon($geometry);
    $cx = -$cx / (6 * $area);
    $cy = -$cy / (6 * $area);
    // done!
    return array($cx, $cy);
}

function getAreaOfPolygon($geometry)
{
    $area = 0;
    for ($ri = 0, $rl = sizeof($geometry->rings); $ri < $rl; $ri++) {
        $ring = $geometry->rings[$ri];
        for ($vi = 0, $vl = sizeof($ring); $vi < $vl; $vi++) {
            $thisx = $ring[$vi][0];
            $thisy = $ring[$vi][1];
            $nextx = $ring[($vi + 1) % $vl][0];
            $nexty = $ring[($vi + 1) % $vl][1];
            $area += ($thisx * $nexty) - ($thisy * $nextx);
        }
    }
    // done with the rings: "sign" the area and return it
    $area = abs(($area / 2));
    return $area;
}

//added by SP for fly stations on 14-08-2019 end
/* This function use to check recaptch is valied or not server side */
function isRecaptchaValid($secretKey, $recaptch_key)
{
    $verifyResponse = file_get_contents('https://www.google.com/recaptcha/api/siteverify?secret=' . $secretKey . '&response=' . $recaptch_key);
    $responseData = json_decode($verifyResponse);
    if ($responseData->success) {
        return true;
    } else {
        return false;
    }
}

function get_client_ip()
{
    if ($_SERVER['SERVER_ADDR'] == "192.168.1.131" || $_SERVER['SERVER_ADDR'] == "192.168.1.141") {
        return "14.102.161.227";
    }
    $ipaddress = '';
    if (isset($_SERVER['HTTP_CLIENT_IP'])) $ipaddress = $_SERVER['HTTP_CLIENT_IP'];
    else if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) $ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];
    else if (isset($_SERVER['HTTP_X_FORWARDED'])) $ipaddress = $_SERVER['HTTP_X_FORWARDED'];
    else if (isset($_SERVER['HTTP_FORWARDED_FOR'])) $ipaddress = $_SERVER['HTTP_FORWARDED_FOR'];
    else if (isset($_SERVER['HTTP_FORWARDED'])) $ipaddress = $_SERVER['HTTP_FORWARDED'];
    else if (isset($_SERVER['REMOTE_ADDR'])) $ipaddress = $_SERVER['REMOTE_ADDR'];
    else

        $ipaddress = 'UNKNOWN';
    return $ipaddress;
}

function checkMemberDataInfo($email, $pass, $userType, $countryCode, $id = "", $eSystem = "", $deleteAccount = 0)
{
    global $obj, $ENABLE_EMAIL_OPTIONAL, $ENABLE_PHONE_LOGIN_VIA_COUNTRY_SELECTION_METHOD, $AUTH_OBJ, $MODULES_OBJ;

    if ($ENABLE_EMAIL_OPTIONAL != "Yes") {
        if (empty($email) || (empty($countryCode) && empty($pass))) {
            return array('status' => 0, 'MSG_TYPE' => 'SHOW_INVLID_ACC_DETAILS_MSG');
        }
    }
    // if ((empty($countryCode) && empty($pass)) || (!empty($countryCode) && !empty($pass))) { //NM 9/7/20
    if ((empty($countryCode) && empty($pass))) {
        return array('status' => 0, 'MSG_TYPE' => 'INVALID_DATA_PASS');
    }
    $sqlid = "";
    $phoneField = "vPhone";
    if (strtoupper($userType) == "RIDER" || strtoupper($userType) == "PASSENGER") {
        $tableName = "register_user";
        $fields = 'iUserId, vName, vEmail, eStatus, vCurrencyPassenger, vPhone,vPassword,vLang,vCountry';
        if ($id != "") {
            $sqlid = ' AND iUserId !=' . $id;
        }
        if ($deleteAccount == 1) {
            $sqlid = ' AND iUserId =' . $id;
        }
    } else if (strtoupper($userType) == "DRIVER") {
        $trackService = '';
        if($MODULES_OBJ->isEnableTrackServiceFeature()){
            $trackService = "iTrackServiceCompanyId,";
        }
        $tableName = "register_driver";
        $fields = $trackService . 'iDriverId,vCompany, iCompanyId, vName, vLastName, vEmail, vPhone,eStatus, vCurrencyDriver,vPassword,vLang,vCountry';
        if ($id != "") {
            $sqlid = ' AND iDriverId !=' . $id;
        }
        if ($deleteAccount == 1) {
            $sqlid = ' AND iDriverId =' . $id;
        }
    } else if (strtoupper($userType) == "COMPANY") {
        $tableName = "company";
        $fields = 'iCompanyId,vCompany, vName, vLang, vLastName, vEmail,vPhone, eStatus,vPassword,eSystem,vCountry';
        if ($id != "") {
            $sqlid = ' AND iCompanyId !=' . $id;
        }
        if ($deleteAccount == 1) {
            $sqlid = ' AND iCompanyId =' . $id;
        }
    } else if (strtoupper($userType) == "ORGANIZATION") {
        $tableName = "organization";
        $fields = "iOrganizationId,vCompany, vLang, vEmail,vPhone, eStatus,vPassword,vCountry";
        if ($id != "") {
            $sqlid = ' AND iOrganizationId !=' . $id;
        }
        if ($deleteAccount == 1) {
            $sqlid = ' AND iOrganizationId =' . $id;
        }
    } else if (strtoupper($userType) == "TRACKING_COMPANY") {
        $tableName = "track_service_company";
        $fields = 'iTrackServiceCompanyId,vCompany, vLang, vEmail,vPhone, vPassword,vCountry';
        if ($id != "") {
            $sqlid = ' AND iTrackServiceCompanyId !=' . $id;
        }
        if ($deleteAccount == 1) {
            $sqlid = ' AND iTrackServiceCompanyId =' . $id;
        }
    } else if (strtoupper($userType) == "TRACKING") {


        $tableName = "track_service_users";
        $fields = 'iTrackServiceUserId, vName, vEmail, eStatus, vPhone,vPassword,vLang,vCountry';
        if ($id != "") {
            $sqlid = ' AND iTrackServiceUserId !=' . $id;
        }
        if ($deleteAccount == 1) {
            $sqlid = ' AND iTrackServiceUserId =' . $id;
        }
    } else if (strtoupper($userType) == "ADMIN") {
        $tableName = "administrators";
        $phoneField = "vContactNo";
        $fields = "iAdminId, vEmail,vContactNo, eStatus,vPassword,vCountry";
        if ($id != "") {
            $sqlid = ' AND iAdminId !=' . $id;
        }
        if ($deleteAccount == 1) {
            $sqlid = ' AND iAdminId =' . $id;
        }
    } else {
        return array('status' => 0, 'MSG_TYPE' => 'SHOW_INVLID_ACC_DETAILS_MSG l');
    }


    $ssql = $where = "";
    // if (empty($countryCode)) {
    //     $ssql = " ($phoneField = '" . $email . "' AND vCountry != '')";
    // } else {
    //     $ssql = " ($phoneField = '" . $email . "' AND vCountry='" . $countryCode . "')";
    // }
    // if (trim($eSystem) != "" && strtoupper($userType) == "COMPANY") {
    //     $ssql .= " AND eSystem='" . $eSystem . "'";
    // }
    $ssql = "";

    if ($ENABLE_PHONE_LOGIN_VIA_COUNTRY_SELECTION_METHOD == 'Yes') {
        $ssql = " (vEmail= '" . $email . "' AND vCountry != '')";
        if (isOnlyDigitsStrSGF($email) && !empty($countryCode)) {
            $countryData = get_value('country', 'vPhoneCode', 'vCountryCode', $countryCode);
            $data = AllowphoneNumWithZero($userType, $email, $phoneField, $tableName, $countryData[0]['vPhoneCode']);
            $ssql = " (( $phoneField = '" . $email . "' {$data}) AND vCountry='" . $countryCode . "')";
        }
        if (trim($eSystem) != "" && strtoupper($userType) == "COMPANY") {
            $ssql .= " AND eSystem='" . $eSystem . "'";
        }
        if ($deleteAccount == 1) {
            $ssql = " ($phoneField = '" . $email . "' AND vCountry='" . $countryCode . "')";
        }

        $data = $obj->MySQLSelect("SELECT $fields FROM $tableName WHERE (" . $ssql . " " . $sqlid . " ) AND eStatus != 'Deleted'");

    } else {
        // echo "ELSE";exit;
        if (empty($countryCode)) {
            $ssql = " ($phoneField = '" . $email . "' AND vCountry != '')";
        } else {
            $ssql = " ($phoneField = '" . $email . "' AND vCountry LIKE '" . $countryCode . "' AND vCountry != '')";
        }
        if (trim($eSystem) != "" && strtoupper($userType) == "COMPANY") {
            $ssql .= " AND eSystem='" . $eSystem . "'";
        }
        $data = $obj->MySQLSelect("SELECT $fields FROM $tableName WHERE ((vEmail = '" . $email . "' " . $sqlid . ") OR " . $ssql . " " . $sqlid . " ) AND eStatus != 'Deleted'");
    }
    // echo "SELECT $fields FROM $tableName WHERE (" . $ssql . " " . $sqlid . " ) AND eStatus != 'Deleted'";
    // exit;
    // echo "SELECT $fields FROM $tableName WHERE (" . $ssql . " " . $sqlid . " )";exit;
    //echo "SELECT $fields FROM $tableName WHERE ((vEmail = '" . $email . "' ".$sqlid.") OR " . $ssql . " ".$sqlid." )";exit;
    //$data = $obj->MySQLSelect("SELECT $fields FROM $tableName WHERE (vEmail = '" . $email . "' OR " . $ssql . ")");
    //echo "SELECT $fields FROM $tableName WHERE ((vEmail = '" . $email . "' " . $sqlid . ") OR " . $ssql . " " . $sqlid . " )";die;
    // echo "<pre>"; print_r($data);exit;
    if ($_REQUEST['type'] == "signIn" && empty($data) && count($data) == 0) {
        return array('status' => 0, 'MSG_TYPE' => 'SHOW_INVLID_ACC_DETAILS_MSG');
    } else if ($deleteAccount == 1 && count($data) > 0) { // For Signup
        return array('status' => 1);
    } else if ($deleteAccount == 1 && count($data) == 0) { // For Signup
        return array('status' => 0);
    } else if ($_REQUEST['type'] != "signIn" && !empty($countryCode) && count($data) > 0) { // For Signup
        return array('status' => 0, 'MSG_TYPE' => 'MULTI_ACC_FOUND');
    } else if ($_REQUEST['type'] != "signIn" && !empty($countryCode) && count($data) == 0) { // For Signup
        return array('status' => 1);
    } else if (empty($data) && count($data) == 0) { //Check Sign In Process
        return array('status' => 0, 'MSG_TYPE' => 'SHOW_INVLID_ACC_DETAILS_MSG');
    }
    /* if (!empty($countryCode) && count($data) > 0) { // For Signup

        return array('status' => 0, 'MSG_TYPE' => 'MULTI_ACC_FOUND');

    }

    if (!empty($countryCode) && count($data) == 0) { // For Signup

        return array('status' => 1);

    }

    if (empty($data) && count($data) == 0) { //Check Sign In Process

        return array('status' => 0, 'MSG_TYPE' => 'SHOW_INVLID_ACC_DETAILS_MSG');

    } */
    if (!empty($pass)) {
        // Step 2 - Match password
        $match_pass_data_arr = array();
        foreach ($data as $data_item) {
            if ($AUTH_OBJ->VerifyPassword($pass, $data_item['vPassword'])) {
                $match_pass_data_arr[] = $data_item;
            }
        }
        if (count($match_pass_data_arr) == 0) {
            return array('status' => 0, 'MSG_TYPE' => 'SHOW_INVLID_ACC_DETAILS_MSG');
        } else if (count($match_pass_data_arr) == 1) {
            return array('status' => 1, 'USER_DATA' => $data[0]);
        }
    }
    if (empty($countryCode)) {
        // Step 3 - Get country from Ip address
        $ip_address = get_client_ip();
        $responseData = json_decode(file_get_contents('http://www.geoplugin.net/json.gp?ip=' . $ip_address));
        if (isset($responseData->geoplugin_countryCode) && !empty($responseData->geoplugin_countryCode)) {
            $match_country_data_arr = array();
            foreach ($data as $data_item) {
                if ($responseData->geoplugin_countryCode == $data_item['vCountry']) {
                    $match_country_data_arr[] = $data_item;
                }
            }
            if (count($match_country_data_arr) == 0 || count($match_country_data_arr) > 1) {
               
                return array('status' => 2, 'MSG_TYPE' => 'SHOW_MULTI_ACC_ERR_MSG');
            } else {
                return array('status' => 1, 'USER_DATA' => $match_country_data_arr[0]);
            }
        } else {
            return array('status' => 0, 'MSG_TYPE' => 'SHOW_INVLID_ACC_DETAILS_MSG');
        }
    }
    return array('status' => 0, 'MSG_TYPE' => 'SHOW_INVLID_ACC_DETAILS_MSG');
}

function createUserLog($userType, $eAutoLogin="No", $iMemberId, $deviceType, $eMemberLoginType = "WebLogin",$eFor= "SignIn")
{
    global $obj;
    //Commented BY HJ On 06-09-2019 As Per Discuss with KS Sir Start
    /* /if (SITE_TYPE != "Demo") {

      return "";

    } */
    //Commented BY HJ On 06-09-2019 As Per Discuss with KS Sir End
    $data = array();
    $data['iMemberId'] = $iMemberId;
    $data['eMemberType'] = $userType;
    $data['eMemberLoginType'] = $eMemberLoginType;
    $data['eDeviceType'] = $deviceType;
    $data['eAutoLogin'] = $eAutoLogin;
    $data['eFor'] = $eFor;
    $data['vIP'] = get_client_ip();
    $id = $obj->MySQLQueryPerform("member_log", $data, 'insert');
}


function generateSessionForGeo($member_id, $userType)
{
    if (!empty($_REQUEST['Redis'])) {
        echo "BeforeDate:" . date('Y-m-d H:i:s') . "<BR/><BR/>";
        $redis = new Redis();
        $redis->connect('127.0.0.1', 6379);
    }
}

function formateNumAsPerCurrency($amount, $code, $decimals = 2)
{
    global $obj, $CURRENCY_DATA_ARR_FORMATTER, $Data_ALL_currency_Arr, $currencyAssociateArr;
    //echo "<pre>";print_r($currencyAssociateArr);die;
    if (count($currencyAssociateArr) > 0) {
        $CURRENCY_DATA_ARR_FORMATTER = $currencyAssociateArr;
    }
    if (empty($CURRENCY_DATA_ARR_FORMATTER)) {
        if (count($Data_ALL_currency_Arr) > 0) {
            $CURRENCY_DATA_ARR_FORMATTER_TMP = $Data_ALL_currency_Arr;
        } else {
            $CURRENCY_DATA_ARR_FORMATTER_TMP = $obj->MySQLSelect("SELECT eReverseformattingEnable,vSymbol,vName,eReverseSymbolEnable,eDefault from  `currency`");
        }
        foreach ($CURRENCY_DATA_ARR_FORMATTER_TMP as $CURRENCY_ITEM) {
            $CURRENCY_DATA_ARR_FORMATTER[$CURRENCY_ITEM['vName']] = $CURRENCY_ITEM;
        }
    }
    if (empty($code)) {
        foreach ($CURRENCY_DATA_ARR_FORMATTER as $CURRENCY_ITEM => $value) {
            if (strtoupper($value['eDefault']) == "YES") {
                $code = $value['vName'];
                break;
            }
        }
    }
    //echo "<pre>";print_r($CURRENCY_DATA_ARR_FORMATTER);die;
    if (empty($CURRENCY_DATA_ARR_FORMATTER[$code])) {
        $currency_data = $obj->MySQLSelect("SELECT eReverseformattingEnable,vSymbol,vName,eReverseSymbolEnable,eDefault from `currency` WHERE  vName = '" . $code . "'");
        $CURRENCY_DATA_ARR_FORMATTER[$code] = $currency_data[0];
    }
    $db_sql_fn = $CURRENCY_DATA_ARR_FORMATTER[$code];
    //Added By HJ On 16-12-2019 For Solved 141 Bug Id = 2344 Start
    if (strpos($amount, ',') !== false) {
        $amount = str_replace(",", "", $amount);
    }
    //Added By HJ On 16-12-2019 For Solved 141 Bug Id = 2344 End
    if ($db_sql_fn['eReverseformattingEnable'] == "Yes") {
        $totalvalue = number_format($amount, $decimals, ',', '.');
    } else {
        $totalvalue = number_format($amount, $decimals, '.', ',');
    }
    if ($db_sql_fn['eReverseSymbolEnable'] == "Yes") {
        $symbolvalue = $totalvalue . " " . $db_sql_fn['vSymbol'];
    } else {
        $symbolvalue = $db_sql_fn['vSymbol'] . " " . $totalvalue;
    }
    if (stripos($symbolvalue, "-") !== false) {
        $symbolvalue = "- " . str_replace("-", "", $symbolvalue);
    }
    return $symbolvalue;
}

function getVehicleCategoryTblName()
{
    global $APP_TYPE;

    $sql_table_name = "vehicle_category";
    if (strtoupper($APP_TYPE) == "RIDE-DELIVERY") {
        $sql_table_name = "vehicle_category_ride_delivery";
    } else if (strtoupper($APP_TYPE) == "DELIVERY" || strtoupper($APP_TYPE) == "DELIVER") {
        $sql_table_name = "vehicle_category_delivery";
    } else if (strtoupper($APP_TYPE) == "UBERX") {
        $sql_table_name = "vehicle_category_uberx";
    }
    if ($sql_table_name != "vehicle_category") {
        $isTableExist = checkTableExists($sql_table_name, getAllTableArray());
        if (!$isTableExist) {
            $sql_table_name = "vehicle_category";
        }
    }
    return $sql_table_name;
}

function getProperDataValueWithoutClean($text)
{
    global $obj;
    if (strtoupper(gettype($text)) != "STRING") {
        return $text;
    }
    return htmlspecialchars_decode(html_entity_decode(stripcslashes($text)), ENT_QUOTES);
}

function getProperDataValue($text)
{
    global $obj;
    if (strtoupper(gettype($text)) != "STRING") {
        return $text;
    }
    return clean(htmlspecialchars_decode(html_entity_decode(stripcslashes($text)), ENT_QUOTES));
}

function getJsonFromAnArr($dataArr)
{
    foreach ($dataArr as $key => $value) {
        if (is_array($value)) {
            $dataArr[$key] = json_decode(getJsonFromAnArr($value), true);
        } else {
            $dataArr[$key] = trim(preg_replace('/\t+/', '', getProperDataValue($value)));
        }
    }
    return str_replace("\\'", "'", json_encode($dataArr, JSON_UNESCAPED_UNICODE));
}

function getJsonFromAnArrWithoutClean($dataArr)
{
    foreach ($dataArr as $key => $value) {
        if (is_array($value)) {
            $dataArr[$key] = json_decode(getJsonFromAnArr($value), true);
        } else {
            $dataArr[$key] = trim(preg_replace('/\t+/', '', getProperDataValueWithoutClean($value)));
        }
    }
    return str_replace("\\'", "'", json_encode($dataArr, JSON_UNESCAPED_UNICODE));
}

function isJsonText($text_str)
{
    return is_string($text_str) && is_array(json_decode($text_str, true)) && (json_last_error() == JSON_ERROR_NONE) ? true : false;
}

function startsWith($string, $startString)
{
    $len = strlen($startString);
    return (substr($string, 0, $len) === $startString);
}

function endsWith($haystack, $needle)
{
    $length = strlen($needle);
    if ($length == 0) {
        return true;
    }
    return (substr($haystack, -$length) === $needle);
}

function rNGfm99RfAqifzEoqjYY9NPszcDnpChRWu($tableName, $cus_obj)
{
    global $obj;
    if (empty($cus_obj)) {
        $cus_obj = $obj;
    }
    $cus_obj->sql_query("DELETE FROM " . $tableName . " WHERE `vLabel`=''");
    $sql_find_duplicates = "SELECT vLabel, COUNT( * ) as totalCount FROM " . $tableName . " WHERE vCode =  'EN' GROUP BY vLabel, vCode HAVING COUNT( * ) >1 ORDER BY vLabel";
    $duplicatesData = $cus_obj->MysqlSelect($sql_find_duplicates);
    foreach ($duplicatesData as $duplicatesData_item) {
        $limitOfLabel = $duplicatesData_item['totalCount'] - 1;
        $cus_obj->sql_query("DELETE FROM " . $tableName . " WHERE `vLabel`='" . $duplicatesData_item['vLabel'] . "' AND `vCode` = 'EN' LIMIT " . $limitOfLabel);
    }
}

function getContentCMSHomeTable()
{
    global $APP_TYPE, $THEME_OBJ;
    $table_name = '';
    if ($THEME_OBJ->isCubexThemeActive() == 'Yes' || $THEME_OBJ->isCubeXv2ThemeActive() == 'Yes') {
        $table_name = 'content_cubex_details';
    } else if ($THEME_OBJ->isCubeJekXThemeActive() == 'Yes' || $THEME_OBJ->isCubeJekXv2ThemeActive() == 'Yes' || $THEME_OBJ->isCubeJekXv3ThemeActive() == 'Yes') {
        $table_name = 'content_cubejekx_details';
    } else if ($THEME_OBJ->isCubeJekXv3ProThemeActive() == 'Yes') {
        $table_name = 'content_cjx_details';
    }else if ($THEME_OBJ->isCJXDoctorv2ThemeActive() == 'Yes') {
        $table_name = 'content_cjx_doctor_details';
    } else if ($THEME_OBJ->isMedicalServicev2ThemeActive() == 'Yes') {
        $table_name = 'content_medicalservice_details';
    } else if ($THEME_OBJ->isServiceXThemeActive() == 'Yes' || $THEME_OBJ->isServiceXv2ThemeActive() == 'Yes' || $THEME_OBJ->isProSPThemeActive() == "Yes") {
        $table_name = 'content_servicex_details';
    } else if ($THEME_OBJ->isDeliveryKingThemeActive() == 'Yes') {
        $table_name = 'content_deliveryking_details';
    } else if ($THEME_OBJ->isDeliveryKingXv2ThemeActive() == 'Yes' || $THEME_OBJ->isProDeliveryKingThemeActive() == 'Yes') {
        $table_name = 'content_deliveryking_details';
    } else if ($THEME_OBJ->isPXCProThemeActive() == 'Yes') {
        $table_name = 'content_cubexpro_details';
    }
    return $table_name;
}

function getSeviceCategoryDataForHomepage($categoryIds = '', $notin = 0, $customurl = 0, $isAdmin = "No")
{
    global $obj, $parent_ufx_catid, $APP_TYPE, $MODULES_OBJ, $LANG_OBJ, $THEME_OBJ, $cPage, $innerPage, $serviceBidPage;
    $lang = isset($_SESSION['sess_lang']) ? $_SESSION['sess_lang'] : "EN";
    $medicalservices = isset($_REQUEST['medical_services']) ? $_REQUEST['medical_services'] : "0";
    $videoconsultingservices = isset($_REQUEST['video-consulting']) ? $_REQUEST['video-consulting'] : "0";
    $iMedicalVehicleCategoryId = isset($_REQUEST['iMedicalVehicleCategoryId']) ? $_REQUEST['iMedicalVehicleCategoryId'] : "";
    if ($videoconsultingservices == 1 && $THEME_OBJ->isMedicalServicev2ThemeActive() == 'Yes') {
        $categoryIds = $iMedicalVehicleCategoryId;
    }
    $defaultlang = $LANG_OBJ->FetchDefaultLangData('VCODE');
    $ssql = '';
    $ssql .= " AND eCatType != 'Donation'";
    if (!$MODULES_OBJ->isAirFlightModuleAvailable('', $isAdmin)) {
        $ssql .= " AND eCatType != 'Fly'";
    }
    if (!$MODULES_OBJ->isEnableAnywhereDeliveryFeature($isAdmin)) {
        $ssql .= " AND eCatType!='Genie' AND eCatType!='Runner' AND eCatType!='Anywhere'";
    }
    if (!$MODULES_OBJ->isUberXFeatureAvailable($isAdmin)) {
        $ssql .= " AND eCatType != 'ServiceProvider'";
    }


    if($serviceBidPage == 1) {
        $ssql .= " AND eCatType = 'ServiceBid' ";
    } else {
        if (!empty($categoryIds)) {
            //it is for some ids will be shown before
            if ($notin == 1) {
                $ssql .= " AND iVehicleCategoryId NOT IN($categoryIds)";
            } else {
                $ssql .= " AND iVehicleCategoryId IN($categoryIds)";
            }
        }
    }
    
    //Added By HJ On 28-10-2020 For Get Particular Service Data Start - Discuss with KS Sir
    if ($parent_ufx_catid > 0) {
        $ssql .= " AND iVehicleCategoryId IN ($parent_ufx_catid)";
    }
    //Added By HJ On 28-10-2020 For Get Particular Service Data End - Discuss with KS Sir
    $tablename = getVehicleCategoryTblName();
    if (strtoupper($APP_TYPE) == "UBERX" && $THEME_OBJ->isServiceXv2ThemeActive() == 'No') {
        $sql_display = "iDisplayOrder";
    } else {
        $sql_display = "iDisplayOrderHomepage";
    }
    $status_sql = "  AND eStatus = 'Active' ";
    $slect_sql = "";
    if($videoconsultingservices == 1 || strtoupper($isAdmin) == "YES") {
        $slect_sql = " iVehicleCategoryId as iVehicle_Category_Id,(SELECT IF(COUNT(*) > 0, 'Yes', 'No') FROM $tablename vc WHERE  vc.iParentId = iVehicle_Category_Id AND eVideoConsultEnable = 'Yes' ) As eSubVideoConsultEnable, ";    
    }

    $parent_id_sql = " AND iParentId = 0 ";
    if(!empty($iMedicalVehicleCategoryId)) {
        $parent_id_sql = "";
    }
    
    if (strtoupper($isAdmin) == "YES") {
        $status_sql = " AND eStatus != 'Deleted' ";
    }
    if ($THEME_OBJ->isCubexThemeActive() == 'Yes' || $THEME_OBJ->isCubeXv2ThemeActive() == 'Yes' || $THEME_OBJ->isPXCProThemeActive() == 'Yes' || $THEME_OBJ->isProSPThemeActive() == 'Yes') {
        $catquery = "SELECT iParentId,eForMedicalService,vHomepageLogoOurServices,vLogo2,vLogo,vHomepageLogo,vListLogo3,vListLogo2,vCategory_" . $lang . " as vCatName,vCategory_" . $defaultlang . " as vCatNameDefaultlang,iVehicleCategoryId,vCatNameHomepage,vCatTitleHomepage,vServiceCatTitleHomepage,vServiceHomepageBanner,vHomepageBanner,vCatSloganHomepage,lCatDescHomepage,vCatDescbtnHomepage,eCatType,iServiceId,eFor,iDisplayOrderHomepage FROM  $tablename WHERE iParentId = 0 $status_sql $ssql ORDER BY " . $sql_display . " ASC";
    } else {
        $catquery = " SELECT $slect_sql iParentId,tMedicalServiceInfo,eForMedicalService,vHomepageLogoOurServices,vLogo2,vLogo,vListLogo3,vListLogo2,vHomepageLogo,vCategory_" . $lang . " as vCatName, vCategory_" . $defaultlang . " as vCatNameDefaultlang,iVehicleCategoryId,vCatNameHomepage,vCatTitleHomepage,vServiceCatTitleHomepage,vServiceHomepageBanner,eCatType,iServiceId,eFor,iDisplayOrderHomepage,eVideoConsultEnable FROM $tablename WHERE 1 = 1 $parent_id_sql $status_sql $ssql ORDER BY " . $sql_display . " ASC";
    }
    if ($medicalservices == 1 && $cPage == 1) {
        $catquery = "SELECT  iParentId,eForMedicalService,vHomepageLogoOurServices,vLogo2,vLogo,vListLogo3,vListLogo2,vHomepageLogo,vCategory_" . $lang . " as vCatName, vCategory_" . $defaultlang . " as vCatNameDefaultlang,iVehicleCategoryId,vCatNameHomepage,vCatTitleHomepage,vServiceCatTitleHomepage,vServiceHomepageBanner,'MedicalService' as eCatType,iServiceId,eFor,iDisplayOrderHomepage,eVideoConsultEnable FROM $tablename WHERE 1 = 1 $status_sql $ssql ORDER BY " . $sql_display . " ASC";
    }
    $vcatdata = $obj->MySQLSelect($catquery);

    if ($THEME_OBJ->isMedicalServicev2ThemeActive() == "Yes") {
        $ServiceProvidercatquery = "SELECT vHomepageLogoOurServices,vHomepageLogo,vCategory_" . $lang . " as vCatName, vCategory_" . $defaultlang . " as vCatNameDefaultlang,iVehicleCategoryId,vCatNameHomepage,vCatTitleHomepage,vServiceCatTitleHomepage,vServiceHomepageBanner,eCatType,iServiceId,eFor,iDisplayOrderHomepage,eVideoConsultEnable FROM $tablename WHERE iParentId = 0 $status_sql AND eCatType = 'ServiceProvider'    ORDER BY " . $sql_display . " ASC";
        $ServiceProvidercatqueryData = $obj->MySQLSelect($ServiceProvidercatquery);
        if (isset($ServiceProvidercatqueryData) && !empty($ServiceProvidercatqueryData)) {
            $vcatDataKeys = array_search('ServiceProvider', array_column($ServiceProvidercatqueryData, 'eCatType'));
            $iParentId = $ServiceProvidercatqueryData[$vcatDataKeys]['iVehicleCategoryId'];
            if ($iParentId != 0 && $iParentId != "") {
                $iVehicleCategoryIdArr = array_column($vcatdata, 'iVehicleCategoryId');
                if (in_array($iParentId, $iVehicleCategoryIdArr)) {
                    $UnsetId = array_search($iParentId, array_column($vcatdata, 'iVehicleCategoryId'));
                    unset($vcatdata[$UnsetId]);
                }
            }
            $MedicalServiceSubCatSql = "SELECT tMedicalServiceInfo,vHomepageLogoOurServices,vHomepageLogo,vCategory_" . $lang . " as vCatName, vCategory_" . $defaultlang . " as vCatNameDefaultlang,iVehicleCategoryId,vCatNameHomepage,vCatTitleHomepage,vServiceCatTitleHomepage,vServiceHomepageBanner,eCatType,iServiceId,eFor,iDisplayOrderHomepage,eVideoConsultEnable FROM $tablename WHERE iParentId = $iParentId $status_sql $ssql ORDER BY " . $sql_display . " ASC";
            $MedicalServiceSubcategoryData = $obj->MySQLSelect($MedicalServiceSubCatSql);
            $vcatdata = array_merge($vcatdata, $MedicalServiceSubcategoryData);
        }
    }

    if (ENABLE_DYNAMIC_CREATE_PAGE == "Yes") {
        if ($customurl == 1) {
            $urlCat = array('Ride' => 'taxi', 'Rental' => 'taxi', 'Delivery' => 'delivery', 'MultipleDelivery' => 'delivery', 'MoreDelivery' => 'delivery', 'Fly' => 'fly');
            $adminurlCat = array('Ride' => 'home_content_taxi_action.php', 'Rental' => 'home_content_taxi_action.php', 'Delivery' => 'home_content_delivery_action.php', 'MultipleDelivery' => 'home_content_delivery_action.php', 'MoreDelivery' => 'home_content_delivery_action.php', 'Fly' => 'home_content_fly_action.php');
            if ($THEME_OBJ->isCJXDoctorv2ThemeActive() == 'Yes' || $THEME_OBJ->isMedicalServicev2ThemeActive() == 'Yes') {
                $adminurlCat = array('Ride' => 'home_content_deliverall_dynamic.php', 'Rental' => 'home_content_deliverall_dynamic.php', 'Delivery' => 'home_content_deliverall_dynamic.php', 'MultipleDelivery' => 'home_content_deliverall_dynamic.php', 'MoreDelivery' => 'home_content_deliverall_dynamic.php', 'Fly' => 'home_content_fly_action.php');
            }
            for ($i = 0; $i < count($vcatdata); $i++) {
                $tMedicalServiceInfoArr = json_decode($vcatdata[$i]['tMedicalServiceInfo'], true);
                if ($THEME_OBJ->isCubexThemeActive() == 'Yes' || $THEME_OBJ->isCubeXv2ThemeActive() == 'Yes') {
                    $vServiceCatTitleHomepage = json_decode($vcatdata[$i]['vServiceCatTitleHomepage'], true);
                    $vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $lang] : ucwords(strtolower($vcatdata[$i]['vCatName']));
                } else {
                    $vServiceCatTitleHomepage = json_decode($vcatdata[$i]['vServiceCatTitleHomepage'], true);
                    $vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $lang] : ucwords(strtolower($vcatdata[$i]['vCatName']));
                }
                if ($THEME_OBJ->isDeliveryKingXv2ThemeActive() == 'Yes' || $THEME_OBJ->isCubeJekXv2ThemeActive() == 'Yes' || $THEME_OBJ->isCubeJekXv3ThemeActive() == 'Yes' || $THEME_OBJ->isCubeJekXv3ProThemeActive() == 'Yes' || $THEME_OBJ->isCJXDoctorv2ThemeActive() == 'Yes' || $THEME_OBJ->isMedicalServicev2ThemeActive() == 'Yes'  || $THEME_OBJ->isPXCProThemeActive() == "Yes" || $THEME_OBJ->isProSPThemeActive() == "Yes" || $THEME_OBJ->isProDeliveryKingThemeActive() == "Yes") {
                    $vServiceCatTitleHomepage = json_decode($vcatdata[$i]['vServiceCatTitleHomepage'], true);
                    $vcatdata[$i]['vCatSubName'] = !empty($vServiceCatTitleHomepage['vServiceCatSubTitleHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vServiceCatSubTitleHomepage_' . $lang] : '';
                }
                $vcatdata[$i]['vCatNameDefaultlang'] = !empty($vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $defaultlang]) ? $vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $defaultlang] : ucwords(strtolower($vcatdata[$i]['vCatNameDefaultlang']));
                $vcatdata[$i]['catid'] = $vcatdata[$i]['iVehicleCategoryId'];
                $vcatdata[$i]['commonadminurl'] = ""; //it is for common page for deliverall and serviceprovider like for serviceprovider there is one common page which is shown in any otherservice page, if for that specific page is not created.

                if ($vcatdata[$i]['eCatType'] == 'DeliverAll' || ($vcatdata[$i]['eCatType'] == 'MoreDelivery' && $vcatdata[$i]['eFor'] == 'DeliverAllCategory')) {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['iVehicleCategoryId'];
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'deliverall_dynamic_page.php?iVehicleCategoryId=' . $vcatdata[$i]['iVehicleCategoryId'];
                        $vcatdata[$i]['commonadminurl'] = 'deliverall_dynamic_page.php';
                        $vcatdata[$i]['includeurl'] = 'deliverall_page.php';
                    } else {
                       $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_deliverall_dynamic.php?iVehicleCategoryId=' . $vcatdata[$i]['iVehicleCategoryId'];
                        $vcatdata[$i]['commonadminurl'] = 'home_content_deliverall_dynamic.php';
                        $vcatdata[$i]['includeurl'] = 'cx-deliverall.php'; 
                    }
                }

                if ($vcatdata[$i]['eCatType'] == 'ServiceProvider') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'otherservices_content_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'otherservices_content_action.php';
                        $vcatdata[$i]['includeurl'] = 'otherservices.php';
                    } else {
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_otherservices_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'home_content_otherservices_action.php';
                        $vcatdata[$i]['includeurl'] = 'cx-otherservices.php';
                    }
                }

                if ($vcatdata[$i]['eCatType'] == 'VideoConsult' || ($videoconsultingservices == 1 && $tMedicalServiceInfoArr['VideoConsult'] == 'Yes')) {

                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];

                    if($THEME_OBJ->isProThemeActive() == 'Yes'){

                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'videoconsult_content_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'videoconsult_content_action.php';
                        $vcatdata[$i]['includeurl'] = 'videoconsult-page.php';

                    } else {

                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_videoconsult_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'home_content_otherservices_action.php';
                        $vcatdata[$i]['includeurl'] = 'cx-videoconsult.php';

                    }

                }

                if ($vcatdata[$i]['eCatType'] == 'MedicalService') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'medical_content_services_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'medical_content_services_action.php';
                        $vcatdata[$i]['includeurl'] = 'medical_page.php';
                    } else {
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_medical_services_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'home_content_medical_services_action.php';
                        $vcatdata[$i]['includeurl'] = 'cx-medical_services.php';
                    }
                }

                if ($THEME_OBJ->isMedicalServicev2ThemeActive() == 'Yes' && $vcatdata[$i]['eCatType'] == 'ServiceProvider' && $videoconsultingservices == 0) {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_medical_services_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['commonadminurl'] = 'home_content_medical_services_action.php';
                    $vcatdata[$i]['includeurl'] = 'cx-medical_services.php';
                }

                if ($vcatdata[$i]['eCatType'] == 'ServiceBid') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'servicebid_content_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'servicebid_content_action.php';
                        $vcatdata[$i]['includeurl'] = 'servicebid_page.php';
                    } else {
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_servicebid_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'home_content_otherservices_action.php';
                        $vcatdata[$i]['includeurl'] = 'cx-servicebid.php';
                    }
                }

                if ($vcatdata[$i]['eCatType'] == 'MotoRide' || $vcatdata[$i]['eCatType'] == 'MotoDelivery' || $vcatdata[$i]['eCatType'] == 'MotoRental') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'moto_content_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'moto_content_action.php';
                        $vcatdata[$i]['includeurl'] = 'moto_page.php';
                    } else {
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_moto_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'home_content_moto_action.php';
                        $vcatdata[$i]['includeurl'] = 'cx-moto.php';
                    }
                }

                if ($vcatdata[$i]['eCatType'] == 'Ride' || $vcatdata[$i]['eCatType'] == 'Rental' || $vcatdata[$i]['eCatType'] == 'RidePool') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                  
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'taxi_content_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'taxi_content_action.php';   
                        $vcatdata[$i]['includeurl'] = 'taxi-page.php';
                    } else {
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_taxi_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'home_content_taxi_action.php';
                        $vcatdata[$i]['includeurl'] = 'cx-taxi.php';
                    }
                }
                
                if ($vcatdata[$i]['eCatType'] == 'Genie' || $vcatdata[$i]['eCatType'] == 'Runner' || $vcatdata[$i]['eCatType'] == 'Anywhere') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'deliverygenie_content_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'deliverygenie_content_action.php';
                        $vcatdata[$i]['includeurl'] = 'genie-page.php';
                    } else {
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_deliverygenie_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'home_content_deliverygenie_action.php';
                        $vcatdata[$i]['includeurl'] = 'cx-genie.php';
                    }
                }

                if (($vcatdata[$i]['eCatType'] == 'MoreDelivery' && $vcatdata[$i]['eFor'] == 'DeliveryCategory') || $vcatdata[$i]['eCatType'] == 'Delivery') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'delivery_content_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['commonadminurl'] = 'delivery_content_action.php';   
                        $vcatdata[$i]['includeurl'] = 'delivery-page.php';
                    } else {
                        $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_delivery_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['includeurl'] = 'cx-delivery.php';
                    }
                }

                if ($vcatdata[$i]['eCatType'] == 'Fly') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_fly_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['includeurl'] = 'cx-fly.php';
                    
                }


                if ($THEME_OBJ->isCJXDoctorv2ThemeActive() == 'Yes') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_doctor_dynamic.php?iVehicleCategoryId=' . $vcatdata[$i]['iVehicleCategoryId'];
                    $vcatdata[$i]['commonadminurl'] = 'home_content_doctor_dynamic.php';
                    $vcatdata[$i]['includeurl'] = 'cx-doctor.php';
                }

                //this section is for adding extra data like eCatType is other than mentioned above
                if (empty($urlCat[$vcatdata[$i]['eCatType']])) {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_services_dynamic.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['commonadminurl'] = 'home_content_services_dynamic.php';
                    $vcatdata[$i]['includeurl'] = 'cx-dynamicservices.php';
                }

                if (isset($vcatdata[$i]['eSubVideoConsultEnable']) && $vcatdata[$i]['eSubVideoConsultEnable'] == 'Yes') {
                    if($THEME_OBJ->isProThemeActive() == 'Yes'){
                        $vcatdata[$i]['adminvideoconsulturl'] = 'videoconsult_content_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['includeurl'] = 'videoconsult-page.php';
                    } else {
                        $vcatdata[$i]['adminvideoconsulturl'] = 'home_content_videoconsult_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                        $vcatdata[$i]['includeurl'] = 'cx-videoconsult.php';
                    }
                }

                if ($vcatdata[$i]['eCatType'] == 'RentItem' || $vcatdata[$i]['eCatType'] == 'RentEstate' || $vcatdata[$i]['eCatType'] == 'RentCars') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'buysellrent_service_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['includeurl'] = 'buysellrent-page.php';                    
                }

                if ($vcatdata[$i]['eCatType'] == 'NearBy') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'nearby_service_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['includeurl'] = 'nearby-page.php';                    
                }

                if ($vcatdata[$i]['eCatType'] == 'TrackService' || $vcatdata[$i]['eCatType'] == 'TrackAnyService') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'track_service_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['includeurl'] = 'trackservice-page.php';
                }

                if ($vcatdata[$i]['eCatType'] == 'RideShare') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'rideshare_service_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['includeurl'] = 'rideshare-page.php';                    
                }

                if ($vcatdata[$i]['eCatType'] == 'MoreService') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'more_service_action.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['includeurl'] = 'moreservice-page.php';                    
                }

                $url = $urlCat[$vcatdata[$i]['eCatType']];
                $vcatdata[$i]['url'] = $url;
                $vcatdata[$i]['adminurl'] = $adminurlCat[$vcatdata[$i]['eCatType']];
            }
        }
    } else {
        if ($customurl == 1) {
            //$urlCat = array('174' => 'taxi', '178' => 'delivery', '175' => 'moto', '276' => 'fly', '182' => 'food', '183' => 'grocery');
            $urlCat = array('Ride' => 'taxi', 'Rental' => 'taxi', 'MotoRental' => 'taxi', 'Delivery' => 'delivery', 'MultipleDelivery' => 'delivery', 'MotoDelivery' => 'delivery', 'MoreDelivery' => 'otherservices', 'MotoRide' => 'moto', 'Fly' => 'fly');
            for ($i = 0; $i < count($vcatdata); $i++) {
                if ($vcatdata[$i]['eCatType'] == 'DeliverAll') {
                    if ($vcatdata[$i]['iServiceId'] == 1) $urlCat['DeliverAll'] = 'food';
                    else if ($vcatdata[$i]['iServiceId'] == 2) $urlCat['DeliverAll'] = 'grocery';
                }
                if ($vcatdata[$i]['eCatType'] == 'MoreDelivery' && $vcatdata[$i]['eFor'] == 'DeliveryCategory') {
                    $urlCat['MoreDelivery'] = 'delivery';
                }
                if (empty($urlCat[$vcatdata[$i]['eCatType']])) $urlCat[$vcatdata[$i]['eCatType']] = 'otherservices';
                $url = $urlCat[$vcatdata[$i]['eCatType']];
                $vServiceCatTitleHomepage = json_decode($vcatdata[$i]['vServiceCatTitleHomepage'], true);
                //$vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $lang] : ucfirst(strtolower($vcatdata[$i]['vCatName']));
            //    $vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vCatNameHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vCatNameHomepage_' . $lang] : ucfirst(strtolower($vcatdata[$i]['vCatName']));  
				$vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vCatNameHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vCatNameHomepage_' . $lang] : mb_convert_case($vcatdata[$i]['vCatName'], MB_CASE_TITLE, 'UTF-8');
                $vcatdata[$i]['url'] = $url;
                $vcatdata[$i]['catid'] = $vcatdata[$i]['iVehicleCategoryId'];
            }
        }
    }
    return $vcatdata;
}
function getCatNameForTitle($iVehicleCategoryId, $eServiceCategory = "")
{
    global $obj, $THEME_OBJ, $BIDDING_OBJ, $innerPage;
    $lang = isset($_SESSION['sess_lang']) ? $_SESSION['sess_lang'] : "EN";
    $tablename = getVehicleCategoryTblName();
    $ssql = " and iVehicleCategoryId=" . $iVehicleCategoryId;
    $parent_id_sql = " AND iParentId = 0 ";
    if($eServiceCategory == "SubCategory") {
        $parent_id_sql = "";
    }
    $catquery = "SELECT vCategory_" . $lang . " as vCatName,iVehicleCategoryId,vCatNameHomepage,vServiceCatTitleHomepage FROM $tablename WHERE 1=1 $parent_id_sql and eStatus = 'Active' $ssql ORDER BY iDisplayOrderHomepage ASC";
    $vcatdata = $obj->MySQLSelect($catquery);
    if ($THEME_OBJ->isCubexThemeActive() == 'Yes' || $THEME_OBJ->isCubeXv2ThemeActive() == 'Yes') {
        $vServiceCatTitleHomepage = json_decode($vcatdata[0]['vCatNameHomepage'], true);
        $vCatName = !empty($vServiceCatTitleHomepage['vCatNameHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vCatNameHomepage_' . $lang] : ucwords(strtolower($vcatdata[0]['vCatName']));
    } else {
        $vServiceCatTitleHomepage = json_decode($vcatdata[0]['vServiceCatTitleHomepage'], true);
        $vCatName = !empty($vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $lang] : ucwords(strtolower($vcatdata[0]['vCatName']));
        if(!empty($innerPage) && $innerPage == "Yes" && in_array($vcatdata[0]['iVehicleCategoryId'], [182, 280])) {
            $vCatName = ucwords(strtolower($vcatdata[0]['vCatName']));
        }
    }

    if(!empty($eServiceCategory) && $eServiceCategory == "Bidding") {
        $serviceBidData = $BIDDING_OBJ->getBiddingMaster('', " AND iBiddingId = '$iVehicleCategoryId'", 0, 0, $lang);
        $vCatName = $serviceBidData[0]['vTitle'];
    }
    return $vCatName;
}

function getProviderDocumentServiceWise($iDriverId, $db_vehicle)
{
    global $obj;
    $docNameArray = array_column($db_vehicle, 'doc_name');
    $docNameArrayCount = array_count_values($docNameArray);
    $getProviderDocumentServiceWise = $obj->MySQLSelect("SELECT   vt.iVehicleCategoryId   FROM driver_vehicle as dv LEFT JOIN vehicle_type as vt ON find_in_set(vt.iVehicleTypeId,dv.vCarType) WHERE 1 = 1 AND vt.iVehicleCategoryId IS NOT NULL AND dv.eType = 'UberX' AND iDriverId = '$iDriverId'");
    $getProviderRequestedServices = $obj->MySQLSelect("SELECT vt.iVehicleCategoryId  FROM driver_service_request dsr LEFT JOIN vehicle_type as vt ON dsr.iVehicleCategoryId =vt.iVehicleTypeId  WHERE 1 = 1 AND iDriverId = '$iDriverId'");
    if (count($getProviderDocumentServiceWise) > 0 && count($getProviderRequestedServices) > 0) {
        $getProviderDocumentServiceWise = array_merge($getProviderDocumentServiceWise, $getProviderRequestedServices);
    } else if (count($getProviderDocumentServiceWise) > 0) {
        $getProviderDocumentServiceWise = $getProviderDocumentServiceWise;
    } else {
        $getProviderDocumentServiceWise = $getProviderRequestedServices;
    }
    $getProviderDocumentServiceWise = array_values(array_unique($getProviderDocumentServiceWise, SORT_REGULAR));
    if (!empty($getProviderDocumentServiceWise) && count($getProviderDocumentServiceWise) > 0) {
        $vehicleCategoryIdArray = array();
        $totalCount = count($getProviderDocumentServiceWise);
        for ($i = 0; $i < $totalCount; $i++) {
            $db_iVehicleCategoryId = $getProviderDocumentServiceWise[$i]['iVehicleCategoryId'];
            $iParentId = get_value('vehicle_category', 'iParentId', 'iVehicleCategoryId', $db_iVehicleCategoryId, '', 'true');
            $iVehicleCategoryId = ($iParentId != 0) ? $iParentId : $db_iVehicleCategoryId;
            foreach ($db_vehicle as $key => $value) {
                if (array_key_exists($value['doc_name'], $docNameArrayCount)) {
                    $value['isShowInfo'] = "No";
                    if ($docNameArrayCount[$value['doc_name']] > 1) {
                        $value['isShowInfo'] = "Yes";
                    }
                }
                //if (( $value['iVehicleCategoryId'] == 0 || $value['iVehicleCategoryId'] == $iVehicleCategoryId ) && $vehicleCategoryIdArray[$key]['iVehicleCategoryId'] != $value['iVehicleCategoryId']) {
                if ((($value['iVehicleCategoryId'] == 0 && $value['iBiddingId'] == 0) || $value['iVehicleCategoryId'] == $iVehicleCategoryId)) {
                    array_push($vehicleCategoryIdArray, $value);
                }
            }
        }
        $vehicleCategoryIdArray = array_values(array_unique($vehicleCategoryIdArray, SORT_REGULAR));
        return $vehicleCategoryIdArray;
    } else {
        if (!empty($db_vehicle) && count($db_vehicle) > 0) {
            $vehicleCategoryIdArray = array();
            $totalCount = count($db_vehicle);
            for ($i = 0; $i < $totalCount; $i++) {
                $eDocServiceType = $db_vehicle[$i]['eDocServiceType'];
                foreach ($db_vehicle as $key => $value) {
                    if ($value['eDocServiceType'] == "General") {
                        array_push($vehicleCategoryIdArray, $value);
                    }
                }
            }
            $vehicleCategoryIdArray = array_values(array_unique($vehicleCategoryIdArray, SORT_REGULAR));
            return $vehicleCategoryIdArray;
        }
    }
}

function isServiceWiseDocumentAvailable($vehicleTypeArray)
{
    global $obj;
    $vCarType = $vehicleTypeArray['vCarType'];
    $getProviderVehicleCategoryIds = $obj->MySQLSelect("SELECT iVehicleCategoryId from vehicle_type  WHERE iVehicleTypeId IN ($vCarType) AND iVehicleCategoryId IS NOT NULL AND eType = 'UberX'");
    $getProviderVehicleCategoryIds = array_values(array_unique($getProviderVehicleCategoryIds, SORT_REGULAR));
    if (!empty($getProviderVehicleCategoryIds) && count($getProviderVehicleCategoryIds) > 0) {
        $vehicleCategoryIdArray = array();
        $totalCount = count($getProviderVehicleCategoryIds);
        for ($i = 0; $i < $totalCount; $i++) {
            $db_iVehicleCategoryId = $getProviderVehicleCategoryIds[$i]['iVehicleCategoryId'];
            $iParentId = get_value('vehicle_category', 'iParentId', 'iVehicleCategoryId', $db_iVehicleCategoryId, '', 'true');
            $iVehicleCategoryId = ($iParentId != 0) ? $iParentId : $db_iVehicleCategoryId;
            array_push($vehicleCategoryIdArray, $iVehicleCategoryId);
        }
        $vehicleCategoryIds = implode(",", $vehicleCategoryIdArray);
        $getProviderDocument = $obj->MySQLSelect("SELECT doc_masterid from document_master  WHERE   iVehicleCategoryId IN ($vehicleCategoryIds) AND eDocServiceType = 'ServiceSpecific'");

        if (!empty($getProviderDocument)) {
            return "Yes";
        } else {
            return "No";
        }
    } else {
        return "No";
    }
}

function getCurrentActiveServiceCategoriesIds()
{
    $serviceCategories_arr = json_decode(serviceCategories, true);
    $iServiceIds = "";
    foreach ($serviceCategories_arr as $serviceCategories_arr_item) {
        $iServiceId_tmp = $serviceCategories_arr_item['iServiceId'];
        $iServiceIds = empty($iServiceIds) ? $iServiceId_tmp : $iServiceIds . "," . $iServiceId_tmp;
    }
    return $iServiceIds;
}

function getSupportedCurrencyAmt($amount, $currencyCode)
{
    global $DEFAULT_CURRENCY_CONVERATION_ENABLE, $DEFAULT_CURRENCY_CONVERATION_CODE_RATIO, $DEFAULT_CURRENCY_CONVERATION_CODE;
    if (strtoupper($DEFAULT_CURRENCY_CONVERATION_ENABLE) == 'YES' && !empty($DEFAULT_CURRENCY_CONVERATION_CODE_RATIO) && !empty($DEFAULT_CURRENCY_CONVERATION_CODE) && $DEFAULT_CURRENCY_CONVERATION_CODE_RATIO > 0) {
        $DefaultConverationRatio = $DEFAULT_CURRENCY_CONVERATION_CODE_RATIO;
        $price_new = $price_new / 100;
        $price_new = ((setTwoDecimalPoint(($price_new * $DefaultConverationRatio), 2)) * 100);
        $currency = $DEFAULT_CURRENCY_CONVERATION_CODE;
        $amount = $price_new;
        $currencyCode = $currency;
    }
    $returnArr['AMOUNT'] = $amount;
    $returnArr['CURRENCY_CODE'] = $currencyCode;
    return $returnArr;
}

function getDataForHomepageCubex($categoryIds = '', $notin = 0, $customurl = 0)
{
    global $obj, $MODULES_OBJ, $LANG_OBJ;
    $lang = isset($_SESSION['sess_lang']) ? $_SESSION['sess_lang'] : "EN";
    $defaultlang = $LANG_OBJ->FetchDefaultLangData('VCODE');
    $ssql = '';
    if (!$MODULES_OBJ->isAirFlightModuleAvailable()) {
        $ssql .= " AND eCatType != 'Fly'";
    }
    if (!empty($categoryIds)) {
        if ($notin == 1) {
            $ssql .= " AND iVehicleCategoryId NOT IN($categoryIds)";
        } else {
            $ssql .= " AND iVehicleCategoryId IN($categoryIds)";
        }
    } else { //put bc when not translated then all data will be shown in our service menu
        return;
    }
    $catquery = "SELECT vHomepageLogo,vCategory_" . $lang . " as vCatName,vCategory_" . $defaultlang . " as vCatNameDefaultlang,iVehicleCategoryId,vCatNameHomepage,vCatTitleHomepage,vServiceCatTitleHomepage,vServiceHomepageBanner,vHomepageBanner,vCatSloganHomepage,lCatDescHomepage,vCatDescbtnHomepage,eCatType,iServiceId FROM  `vehicle_category` WHERE iParentId = 0 and eStatus = 'Active' $ssql ORDER BY iDisplayOrderHomepage ASC";
    //$catquery = "SELECT  FROM  `vehicle_category` WHERE iParentId = 0 and eStatus = 'Active' $ssql and iVehicleCategoryId IN($vehicleFirstImage) ORDER BY iDisplayOrderHomepage ASC";
    $vcatdata = $obj->MySQLSelect($catquery);
    if (ENABLE_DYNAMIC_CREATE_PAGE == "Yes") {
        if ($customurl == 1) {
            $urlCat = array('Ride' => 'taxi', 'Rental' => 'taxi', 'Delivery' => 'delivery', 'MultipleDelivery' => 'delivery', 'MoreDelivery' => 'delivery', 'Fly' => 'fly');
            $adminurlCat = array('Ride' => 'home_content_taxi_action.php', 'Rental' => 'home_content_taxi_action.php', 'Delivery' => 'home_content_delivery_action.php', 'MultipleDelivery' => 'home_content_delivery_action.php', 'MoreDelivery' => 'home_content_delivery_action.php', 'Fly' => 'home_content_fly_action.php');
            for ($i = 0; $i < count($vcatdata); $i++) {
                $vServiceCatTitleHomepage = json_decode($vcatdata[$i]['vCatNameHomepage'], true);
                $vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vCatNameHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vCatNameHomepage_' . $lang] :mb_convert_case($vcatdata[$i]['vCatName'], MB_CASE_TITLE, 'UTF-8');
			//   $vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vCatNameHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vCatNameHomepage_' . $lang] : ucfirst(strtolower($vcatdata[$i]['vCatName']));
               // $vcatdata[$i]['vCatNameDefaultlang'] = !empty($vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $defaultlang]) ? $vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $defaultlang] : ucfirst(strtolower($vcatdata[$i]['vCatNameDefaultlang']));
			   $vcatdata[$i]['vCatNameDefaultlang'] = !empty($vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $defaultlang]) ? $vServiceCatTitleHomepage['vServiceCatTitleHomepage_' . $defaultlang] : mb_convert_case($vcatdata[$i]['vCatNameDefaultlang'], MB_CASE_TITLE, 'UTF-8'); 
                $vcatdata[$i]['commonadminurl'] = ""; //it is for common page for deliverall and serviceprovider like for serviceprovider there is one common page which is shown in any otherservice page, if for that specific page is not created.
                if ($vcatdata[$i]['eCatType'] == 'DeliverAll' || ($vcatdata[$i]['eCatType'] == 'MoreDelivery' && $vcatdata[$i]['eFor'] == 'DeliverAllCategory')) {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'services/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['iVehicleCategoryId'];
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_deliverall_dynamic.php?iVehicleCategoryId=' . $vcatdata[$i]['iVehicleCategoryId'];
                    $vcatdata[$i]['commonadminurl'] = 'home_content_deliverall_dynamic.php';
                }
                if ($vcatdata[$i]['eCatType'] == 'ServiceProvider') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'otherservices/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_otherservices_dynamic.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['commonadminurl'] = 'home_content_otherservices_dynamic.php';
                }
                if ($vcatdata[$i]['eCatType'] == 'MotoRide' || $vcatdata[$i]['eCatType'] == 'MotoDelivery' || $vcatdata[$i]['eCatType'] == 'MotoRental') {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'moto/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_moto_dynamic.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['commonadminurl'] = 'home_content_moto_dynamic.php';
                }
                //this section is for adding extra data like eCatType is other than mentioned above
                if (empty($urlCat[$vcatdata[$i]['eCatType']])) {
                    $urlCat[$vcatdata[$i]['eCatType']] = 'otherservices/' . replace_content($vcatdata[$i]['vCatNameDefaultlang']) . '/' . $vcatdata[$i]['catid'];
                    $adminurlCat[$vcatdata[$i]['eCatType']] = 'home_content_otherservices_dynamic.php?iVehicleCategoryId=' . $vcatdata[$i]['catid'];
                    $vcatdata[$i]['commonadminurl'] = 'home_content_otherservices_dynamic.php';
                }
                $url = $urlCat[$vcatdata[$i]['eCatType']];
                $vcatdata[$i]['url'] = $url;
                $vcatdata[$i]['adminurl'] = $adminurlCat[$vcatdata[$i]['eCatType']];
            }
        }
    } else {
        if ($customurl == 1) {
            //$urlCat = array('174' => 'taxi', '178' => 'delivery', '175' => 'moto', '276' => 'fly', '182' => 'food', '183' => 'grocery');
            $urlCat = array('Ride' => 'taxi', 'Rental' => 'taxi', 'MotoRental' => 'taxi', 'Delivery' => 'delivery', 'MultipleDelivery' => 'delivery', 'MotoDelivery' => 'delivery', 'MoreDelivery' => 'delivery', 'MotoRide' => 'moto', 'Fly' => 'fly');
            for ($i = 0; $i < count($vcatdata); $i++) {
                if ($vcatdata[$i]['eCatType'] == 'DeliverAll') {
                    if ($vcatdata[$i]['iServiceId'] == 1) $urlCat['DeliverAll'] = 'food';
                    else if ($vcatdata[$i]['iServiceId'] == 2) $urlCat['DeliverAll'] = 'grocery';
                }
                if (empty($urlCat[$vcatdata[$i]['eCatType']])) $urlCat[$vcatdata[$i]['eCatType']] = 'otherservices';
                $url = $urlCat[$vcatdata[$i]['eCatType']];
                $vServiceCatTitleHomepage = json_decode($vcatdata[$i]['vCatNameHomepage'], true);
                //$vServiceCatTitleHomepage = json_decode($vcatdata[$i]['vServiceCatTitleHomepage'], true);
                $vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vCatNameHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vCatNameHomepage_' . $lang] :mb_convert_case($vcatdata[$i]['vCatName'], MB_CASE_TITLE, 'UTF-8');
              //   $vcatdata[$i]['vCatName'] = !empty($vServiceCatTitleHomepage['vCatNameHomepage_' . $lang]) ? $vServiceCatTitleHomepage['vCatNameHomepage_' . $lang] : ucfirst(strtolower($vcatdata[$i]['vCatName']));
                $vcatdata[$i]['url'] = $url;
            }
        }
    }
    return $vcatdata;
}

//Added By HJ On 13-11-2019 For Check Driver Profile Edit Status Start
function getEditDriverProfileStatus($eStatus)
{
    global $ENABLE_EDIT_DRIVER_PROFILE;
    $status = "No";
    if ($ENABLE_EDIT_DRIVER_PROFILE == "Yes") {
        $status = "Yes";
    } else if ($ENABLE_EDIT_DRIVER_PROFILE == "No" && $eStatus == "inactive") {
        $status = "Yes";
    }
    return $status;
}

//Added By HJ On 13-11-2019 For Check Driver Profile Edit Status End
function getUnUsedPromocode($promoCode)
{
    global $obj;
    $setcurrentTime = date('Y-m-d H:i:s');
    $where_condition = " AND eStatus != 'Completed' AND eStatus != 'Cancel' AND dBooking_date >= '$setcurrentTime' group by vCouponCode";
    $sql = "SELECT vCouponCode,count(vCouponCode) as vCouponCodeUsedCount from  `cab_booking` WHERE  vCouponCode IN  (" . $promoCode . ") $where_condition";
    $dbPromoCodeArray = $obj->MySQLSelect($sql);
    $activeCouponArray = array();
    if (!empty($dbPromoCodeArray) && count($dbPromoCodeArray) > 0) {
        for ($i = 0; $i < count($dbPromoCodeArray); $i++) {
            $activeCouponArray[$dbPromoCodeArray[$i]['vCouponCode']] = $dbPromoCodeArray[$i]['vCouponCodeUsedCount'];
        }
    }
    return $activeCouponArray;
}

function checkDocumentIsUploadedByProvider($iDriverId, $vCountry)
{
    global $obj;
    $getProviderDocumentData = getProviderDocumentList($iDriverId, $vCountry);
    $getProviderDocumentIds = $getProviderDocumentData['documentListIds'];
    $getProviderDocumentIdsCount = $getProviderDocumentData['TotalDocument'];
    //$sql1 = "SELECT doc_id as total FROM `document_list` WHERE `doc_usertype` ='driver' AND `doc_userid` = '$iDriverId'";
    $sql1 = "SELECT dl.doc_id total FROM document_master dm left join (SELECT * FROM `document_list` where doc_userid='" . $iDriverId . "' ) dl on dl.doc_masterid=dm.doc_masterid  where dl.doc_usertype='driver' and dm.status='Active'";
    $doc_count_query = $obj->MySQLSelect($sql1);
    $providerUploadedDocumentCount = count($doc_count_query);
    if ($providerUploadedDocumentCount == $getProviderDocumentIdsCount) {
        return 1;
    } else {
        return 0;
    }
}

function getProviderDocumentList($iDriverId, $driverCountry)
{
    global $obj;
    $sql1 = "SELECT dm.doc_masterid masterid FROM document_master dm left join (SELECT * FROM `document_list` where doc_userid='" . $iDriverId . "' ) dl on dl.doc_masterid=dm.doc_masterid  where dm.doc_usertype='driver' and dm.status='Active' and (dm.country ='" . $driverCountry . "' OR dm.country ='All')";
    $documentData = $obj->MySQLSelect($sql1);
    $documentListIdsArray = array();
    if (!empty($documentData)) {
        for ($i = 0; $i < count($documentData); $i++) {
            array_push($documentListIdsArray, $documentData[$i]['masterid']);
        }
        $documentListIds = implode(",", $documentListIdsArray);
    }
    return array("documentListIds" => $documentListIds, "TotalDocument" => count($documentData));
}

function checkServicesIsSelectedByProvider($iDriverId)
{
    global $obj;
    if ($iDriverId > 0) {
        $ServicesIsSelectedByProviderArray = $obj->MySQLSelect("SELECT  (if(vCarType != '',1,0)) as returnValue  FROM `driver_vehicle` WHERE `iDriverId` = '" . $iDriverId . "'");
        $providerServicesIsSelectedCount = ($ServicesIsSelectedByProviderArray[0]['returnValue'] == 1) ? 1 : 0;
    } else {
        $providerServicesIsSelectedCount = array();
        $ServicesIsSelectedByProviderArray = $obj->MySQLSelect("SELECT  (if(vCarType != '',1,0)) as returnValue,iDriverId  FROM `driver_vehicle`");
        for ($d = 0; $d < count($ServicesIsSelectedByProviderArray); $d++) {
            $providerServicesIsSelectedCountV = ($ServicesIsSelectedByProviderArray[$d]['returnValue'] == 1) ? 1 : 0;
            $providerServicesIsSelectedCount[$ServicesIsSelectedByProviderArray[$d]['iDriverId']][] = $providerServicesIsSelectedCountV;
        }
    }
    return $providerServicesIsSelectedCount;
}

function checkTimeAvailabilityIsSelectedByProvider($iDriverId)
{
    global $obj;
    if ($iDriverId > 0) {
        $timeAvailabilityIsSelectedByProviderArray = $obj->MySQLSelect("SELECT  iDriverTimingId as returnValue  FROM `driver_manage_timing` WHERE `iDriverId` = '$iDriverId'");
        $timeAvailabilityIsSelectedByProviderCount = count($timeAvailabilityIsSelectedByProviderArray);
    } else {
        $timeAvailabilityIsSelectedByProviderCount = array();
        $getDriverTime = $obj->MySQLSelect("SELECT iDriverTimingId as returnValue,iDriverId  FROM `driver_manage_timing`");
        for ($d = 0; $d < count($getDriverTime); $d++) {
            $timeAvailabilityIsSelectedByProviderCount[$getDriverTime[$d]['iDriverId']][] = $getDriverTime[$d]['returnValue'];
        }
    }
    return $timeAvailabilityIsSelectedByProviderCount;
}

//Added By HJ On 14-03-2020 For Create Alternative PHP Cache (APC) Start
function generateAPC($key, $val)
{
    if (apc_exists($key)) {
        $fetchValue = apc_fetch($key);
        //echo $val."====".$fetchValue."<br>";
        $result = 1;
        if (trim($fetchValue) == $val) { // If Request already assigned to same driver
            $result = 0;
        }
    } else {
        apc_add($key, $val);
        $result = 0;
    }
    return $result;
}

//Added By HJ On 14-03-2020 For Create Alternative PHP Cache (APC) End
//Added By HJ On 14-03-2020 For Delete Alternative PHP Cache (APC) Start
function deleteAPC($key)
{
    apc_delete($key);
}

//Added By HJ On 14-03-2020 For Delete Alternative PHP Cache (APC) End
function getStoreDataForSystemStoreSelection($serviceId = 0)
{
    global $obj;
    $ssql = '';
    //if(!empty($_REQUEST['iServiceId'])) {
    //    $ssql = " AND iServiceId=".$_REQUEST['iServiceId'];
    //}
    if ($serviceId > 0) {
        $ssql .= " AND iServiceId=" . $serviceId;
    }
    $sql = "SELECT iServiceId,iCompanyId,vCompany,vCoverImage,vCaddress,vAvgRating,vRestuarantLocationLat,vRestuarantLocationLong FROM `company` WHERE eSystem = 'DeliverAll' AND eStatus='Active' $ssql ORDER BY iCompanyId ASC LIMIT 1";
    $store_data = $obj->MySQLSelect($sql);
    //print_r($store_data);die;
    if ($serviceId > 0) {
        $companyId = 0;
        if (count($store_data) > 0) {
            $companyId = $store_data[0];
        }
        return $companyId;
    }
    return $store_data;
}

function addOrderOutstandingAmount($payment_id)
{
    global $obj;
    $sql = "SELECT tPaymentUserID,iOrderId FROM payments WHERE tPaymentUserID = '" . $payment_id . "'";
    $sqlData = $obj->MySQLSelect($sql);
    $iOrderId = $sqlData[0]['iOrderId'];
    $sql = "SELECT iUserId,fNetTotal FROM orders WHERE iOrderId = '" . $iOrderId . "'";
    $ordersData = $obj->MySQLSelect($sql);
    $amount = $ordersData[0]['fNetTotal'];
    $iUserId = $ordersData[0]['iUserId'];
    $data_insert['iOrderId'] = $iOrderId;
    $data_insert['iTripId'] = 0;
    $data_insert['iUserId'] = $iUserId;
    $data_insert['fPendingAmount'] = $amount;
    $currencyListSql = "SELECT * FROM currency WHERE eStatus = 'Active'";
    $currencyList = $obj->MySQLSelect($currencyListSql);
    for ($i = 0; $i < count($currencyList); $i++) {
        $currencyCode = $currencyList[$i]['vName'];
        $data_insert['fRatio_' . $currencyCode] = $currencyList[$i]['Ratio'];
    }
    $insertData = $obj->MySQLQueryPerform("trip_outstanding_amount", $data_insert, 'insert');
    return true;
}

function stripos_arr($haystack, $needle, $offset = 0)
{
    if (!is_array($needle)) {
        $needle = array($needle);
    }
    foreach ($needle as $query) {
        if (stripos($haystack, $query, $offset) !== false) return true; // stop on first true result
    }
    return false;
}

function strpos_arr($haystack, $needle, $offset = 0)
{
    if (!is_array($needle)) {
        $needle = array($needle);
    }
    foreach ($needle as $query) {
        if (strpos($haystack, $query, $offset) !== false) return true; // stop on first true result
    }
    return false;
}

function addOrdinalNumberSuffix($num)
{
    if (!in_array(($num % 100), array(11, 12, 13))) {
        switch ($num % 10) {
            case 1:
                return $num . 'st';
            case 2:
                return $num . 'nd';
            case 3:
                return $num . 'rd';
        }
    }
    return $num . 'th';
}

function partition(array $list, $p)
{
    $listlen = count($list);
    $partlen = floor($listlen / $p);
    $partrem = $listlen % $p;
    $partition = array();
    $mark = 0;
    for ($px = 0; $px < $p; $px++) {
        $incr = ($px < $partrem) ? $partlen + 1 : $partlen;
        $partition[$px] = array_slice($list, $mark, $incr);
        $mark += $incr;
    }
    return $partition;
}

function getMasterServiceCategoryQuery($eType, $check = "No", $menu = "No")
{
    global $MODULES_OBJ;

    if($MODULES_OBJ->isEnableAppHomeScreenLayoutV3()) {
        return getMasterServiceCategoryQueryV1($eType, $check, $menu);
    } else {
        $ssql = "";
        if ($eType == "Ride") {
            if ($MODULES_OBJ->isRideFeatureAvailable($check) && $MODULES_OBJ->isAirFlightModuleAvailable('', $check)) {
                $ssql .= " AND (eCatType = 'Ride' OR eCatType = 'MotoRide' OR eCatType = 'Rental' OR eCatType = 'MotoRental' OR eCatType = 'Fly' OR eCatType = 'RidePool' OR eCatType = 'RideSchedule')";
            } elseif ($MODULES_OBJ->isRideFeatureAvailable($check) && !$MODULES_OBJ->isAirFlightModuleAvailable('', $check)) {
                $ssql .= " AND (eCatType = 'Ride' OR eCatType = 'MotoRide' OR eCatType = 'Rental' OR eCatType = 'MotoRental' OR eCatType = 'RidePool' OR eCatType = 'RideSchedule')";
            } elseif (!$MODULES_OBJ->isRideFeatureAvailable($check) && $MODULES_OBJ->isAirFlightModuleAvailable('', $check)) {
                $ssql .= " AND (eCatType = 'Fly')";
            } elseif (!$MODULES_OBJ->isRideFeatureAvailable($check) && !$MODULES_OBJ->isAirFlightModuleAvailable('', $check)) {
                $ssql .= " AND eCatType = ''";
            }
        } elseif ($eType == "Deliver" && $menu == "No") {
            if ($MODULES_OBJ->isDeliveryFeatureAvailable($check) && $MODULES_OBJ->isDeliverAllFeatureAvailable($check) && $MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
                $ssql .= " AND (eCatType = 'Delivery' OR eCatType = 'MultipleDelivery' OR eCatType = 'MotoDelivery' OR eCatType = 'MoreDelivery' OR eCatType = 'DeliverAll' OR eCatType = 'Genie' OR eCatType = 'Runner' OR eCatType = 'Anywhere')";
            } else if (!$MODULES_OBJ->isDeliveryFeatureAvailable($check) && $MODULES_OBJ->isDeliverAllFeatureAvailable($check) && $MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
                $ssql .= " AND (eCatType = 'DeliverAll' OR eCatType = 'Genie' OR eCatType = 'Runner' OR eCatType = 'Anywhere')";
            } else if ($MODULES_OBJ->isDeliveryFeatureAvailable($check) && !$MODULES_OBJ->isDeliverAllFeatureAvailable($check) && $MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
                $ssql .= " AND (eCatType = 'Delivery' OR eCatType = 'MultipleDelivery' OR eCatType = 'MotoDelivery' OR eCatType = 'MoreDelivery' OR eCatType = 'Genie' OR eCatType = 'Runner' OR eCatType = 'Anywhere')";
            } else if ($MODULES_OBJ->isDeliveryFeatureAvailable($check) && $MODULES_OBJ->isDeliverAllFeatureAvailable($check) && !$MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
                $ssql .= " AND (eCatType = 'Delivery' OR eCatType = 'MultipleDelivery' OR eCatType = 'MotoDelivery' OR eCatType = 'MoreDelivery' OR eCatType = 'DeliverAll')";
            } else if ($MODULES_OBJ->isDeliveryFeatureAvailable($check) && !$MODULES_OBJ->isDeliverAllFeatureAvailable($check) && !$MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
                $ssql .= " AND (eCatType = 'Delivery' OR eCatType = 'MultipleDelivery' OR eCatType = 'MotoDelivery' OR eCatType = 'MoreDelivery')";
            } else if (!$MODULES_OBJ->isDeliveryFeatureAvailable($check) && $MODULES_OBJ->isDeliverAllFeatureAvailable($check) && !$MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
                $ssql .= " AND (eCatType = 'DeliverAll')";
            } else if (!$MODULES_OBJ->isDeliveryFeatureAvailable($check) && !$MODULES_OBJ->isDeliverAllFeatureAvailable($check) && $MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
                $ssql .= " AND (eCatType = 'Genie' OR eCatType = 'Runner' OR eCatType = 'Anywhere')";
            } else if (!$MODULES_OBJ->isDeliveryFeatureAvailable($check) && !$MODULES_OBJ->isDeliverAllFeatureAvailable($check) && !$MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
                $ssql .= " AND eCatType = ''";
            }
        } elseif ($eType == "DeliverAll" && $menu == "Yes") {
            $ssql .= " AND (eCatType = 'Delivery' OR eCatType = 'MultipleDelivery' OR eCatType = 'MotoDelivery'  OR eCatType = 'DeliverAll' OR eCatType = 'Anywhere')";
        } elseif ($eType == "DeliverAll") {
            $ssql .= " AND (eCatType = 'DeliverAll') ";
        } elseif ($eType == "Deliver" && $menu == "Yes") {
            $ssql .= " AND (eCatType = 'MoreDelivery' OR eCatType = 'Genie' OR eCatType = 'Runner')";
        } elseif ($eType == "UberX") {
            if ($MODULES_OBJ->isUberXFeatureAvailable($check)) {
                $ssql .= " AND eCatType = 'ServiceProvider' AND eVideoConsultEnable = 'No'";
            } else {
                $ssql .= " AND eCatType = ''";
            }
        } elseif ($eType == "VideoConsult" && $check == "Yes") {
            $ssql .= " AND eCatType = 'ServiceProvider' AND eVideoConsultEnable = 'Yes'";
        }
        return $ssql;
    }
}

function getMasterServiceCategoryQueryV1($eType, $check = "No", $menu = "No")
{
    global $MODULES_OBJ;

    $ssql = "";
    if ($eType == "Ride") {
        if ($MODULES_OBJ->isRideFeatureAvailable($check) && $MODULES_OBJ->isAirFlightModuleAvailable('', $check)) {
            $ssql .= " AND (eCatType = 'Ride' OR eCatType = 'MotoRide' OR eCatType = 'Rental' OR eCatType = 'MotoRental' OR eCatType = 'Fly' OR eCatType = 'RidePool' OR eCatType = 'RideSchedule' OR eCatType = 'CorporateRide' OR eCatType = 'RideSomeoneElse')";
        } elseif ($MODULES_OBJ->isRideFeatureAvailable($check) && !$MODULES_OBJ->isAirFlightModuleAvailable('', $check)) {
            $ssql .= " AND (eCatType = 'Ride' OR eCatType = 'MotoRide' OR eCatType = 'Rental' OR eCatType = 'MotoRental' OR eCatType = 'RidePool' OR eCatType = 'RideSchedule' OR eCatType = 'CorporateRide' OR eCatType = 'RideSomeoneElse')";
        } elseif (!$MODULES_OBJ->isRideFeatureAvailable($check) && $MODULES_OBJ->isAirFlightModuleAvailable('', $check)) {
            $ssql .= " AND (eCatType = 'Fly')";
        } elseif (!$MODULES_OBJ->isRideFeatureAvailable($check) && !$MODULES_OBJ->isAirFlightModuleAvailable('', $check)) {
            $ssql .= " AND eCatType = ''";
        }
    } elseif ($eType == "Deliver" && $menu == "No") {
        if ($MODULES_OBJ->isDeliveryFeatureAvailable($check) && $MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
            $ssql .= " AND (eCatType = 'Delivery' OR eCatType = 'MultipleDelivery' OR eCatType = 'MotoDelivery' OR eCatType = 'MoreDelivery' OR eCatType = 'Genie' OR eCatType = 'Runner' OR eCatType = 'Anywhere')";
        } else if (!$MODULES_OBJ->isDeliveryFeatureAvailable($check) && $MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
            $ssql .= " AND (eCatType = 'Genie' OR eCatType = 'Runner' OR eCatType = 'Anywhere')";
        } else if ($MODULES_OBJ->isDeliveryFeatureAvailable($check) && !$MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
            $ssql .= " AND (eCatType = 'Delivery' OR eCatType = 'MultipleDelivery' OR eCatType = 'MotoDelivery' OR eCatType = 'MoreDelivery')";
        } else if (!$MODULES_OBJ->isDeliveryFeatureAvailable($check) && !$MODULES_OBJ->isEnableAnywhereDeliveryFeature($check)) {
            $ssql .= " AND eCatType = ''";
        }
    } elseif ($eType == "DeliverAll" && $menu == "No") {
        if ($MODULES_OBJ->isDeliverAllFeatureAvailable($check)) {
            $ssql .= " AND (eCatType = 'DeliverAll')";
        } else {
            $ssql .= " AND eCatType = ''";
        }
    } elseif ($eType == "DeliverAll" && $menu == "Yes") {
        $ssql .= " AND (eCatType = 'DeliverAll')";
    } elseif ($eType == "Deliver" && $menu == "Yes") {
        $ssql .= " AND (eCatType = 'MoreDelivery' OR eCatType = 'Genie' OR eCatType = 'Runner')";
    } elseif ($eType == "UberX") {
        if ($MODULES_OBJ->isUberXFeatureAvailable($check)) {
            $ssql .= " AND eCatType = 'ServiceProvider' AND eVideoConsultEnable = 'No'";
        } else {
            $ssql .= " AND eCatType = ''";
        }
    } elseif ($eType == "VideoConsult" && $check == "Yes") {
        $ssql .= " AND eCatType = 'ServiceProvider' AND eVideoConsultEnable = 'Yes'";
    }
    return $ssql;
}

function isMasterServiceCategoryAvailable($eType)
{
    global $obj,$MODULES_OBJ, $master_service_category_tbl;
    $master_service_category_available = false;
    $mServiceCategory = $obj->MySQLSelect("SELECT eType,eStatus FROM $master_service_category_tbl WHERE eType = '$eType'");

    if (!empty($mServiceCategory) && count($mServiceCategory) > 0) {
        $master_service_category_available = $mServiceCategory[0]['eStatus'] == "Active" ? true : false;
    }
    return $master_service_category_available;
}

function getCompanyDetailsDashboard()
{
    global $obj;
    $cmp_ssql = "";
    // if(SITE_TYPE =='Demo'){
    // $cmp_ssql = " And tRegistrationDate > '".WEEK_DATE."'";
    // }
    $sql = "SELECT COUNT(iCompanyId) AS Total FROM company WHERE eStatus != 'Deleted' AND eSystem =  'General' AND eBuyAnyService = 'No' $cmp_ssql";
    $data = $obj->MySQLSelect($sql);
    return $data[0]['Total'];
    $data[0]['Total'];
}

function getStoreDetailsDashboard($status = "", $startDate = "", $endDate = "")
{
    //global $obj, $ENABLE_BUY_ANY_SERVICE_MODULE;
    global $MODULES_OBJ,$obj, $ENABLE_BUY_ANY_SERVICE_MODULE,$enablesevicescategory;
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And c.tRegistrationDate > '" . WEEK_DATE . "'";
    }
    $ssl = "";
    if (isset($status) && $status != "" && $status == "active") {
        $ssl = " AND c.eStatus = '" . $status . "'";
    } else if (isset($status) && $status != "" && $status == "inactive") {
        $ssl = " AND c.eStatus = '" . $status . "'";
    }
    $ssql1 = "AND (c.vEmail != '' OR c.vPhone != '')";
    if ($startDate != "" && $endDate != "") {
        $ssql1 .= " AND c.tRegistrationDate BETWEEN '" . $startDate . "' AND '" . $endDate . "' ";
    }

    $service_sql1 = " AND sc.eStatus='Active'";
    $ssql = "";
    
    if (strtoupper($ENABLE_BUY_ANY_SERVICE_MODULE) == 'YES') {
        $ssql = " AND eBuyAnyService = 'No' ";
    }

    if ($MODULES_OBJ->isEnableStoreMultiServiceCategories()) {
        $ssql1 .= " AND c.eBuyAnyService = 'No' AND (c.iServiceId IN ($enablesevicescategory)";
        $enablesevicescategory = str_replace(",", "|", $enablesevicescategory);
        $ssql1 .= " OR c.iServiceIdMulti REGEXP '(^|,)(" . $enablesevicescategory . ")(,|$)') ";
        $service_sql = " left join service_categories as sc on FIND_IN_SET(sc.iServiceId, c.iServiceId) OR FIND_IN_SET(sc.iServiceId, c.iServiceIdMulti) ";
    } else {
        $ssql1 .= " AND c.eBuyAnyService = 'No' AND c.iServiceId IN ($enablesevicescategory)";
        $service_sql = " left join service_categories as sc on c.iServiceId = sc.iServiceId";
    }

    $sql = "SELECT count(DISTINCT(c.iCompanyId)) as Total FROM company as c $service_sql WHERE c.eStatus != 'Deleted' AND c.eSystem ='DeliverAll' " . $service_sql1 . $ssl . $ssql1 . $cmp_ssql . $ssql;
  
    $data = $obj->MySQLSelect($sql);
    return $data[0]['Total'];

    // $service_sql = " left join service_categories as sc on c.iServiceId = sc.iServiceId";
    // $service_sql1 = " AND sc.eStatus='Active'";
    // $ssql = "";
    // if (strtoupper($ENABLE_BUY_ANY_SERVICE_MODULE) == 'YES') {
    //     $ssql = " AND eBuyAnyService = 'No' ";
    // }
    // $sql = "SELECT count(c.iCompanyId) as Total FROM company as c $service_sql WHERE c.eStatus != 'Deleted' AND c.eSystem ='DeliverAll' " . $service_sql1 . $ssl . $ssql1 . $cmp_ssql . $ssql;
    // $data = $obj->MySQLSelect($sql);
    // return $data[0]['Total'];
}

function getCompanycount()
{
    global $obj;
    $eSystem = " AND eSystem = 'General'";
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tRegistrationDate > '" . WEEK_DATE . "'";
    }
    $data = $obj->MySQLSelect("SELECT count(iCompanyId) tot_company FROM company WHERE eStatus != 'Deleted' $eSystem $cmp_ssql ");
    return $data;
}

function getDrivercount($status)
{
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And rd.tRegistrationDate > '" . WEEK_DATE . "'";
    }
    global $obj;
    $ssl = "";
    if ($status != "" && $status == "active") {
        $ssl = " AND rd.eStatus = '" . $status . "'";
    } else if ($status != "" && $status == "inactive") {
        $ssl = " AND rd.eStatus = '" . $status . "'";
    }
    $sql = "SELECT count(rd.iDriverId) as tot_driver FROM register_driver rd LEFT JOIN company c ON rd.iCompanyId = c.iCompanyId and c.eStatus != 'Deleted' WHERE  rd.eStatus != 'Deleted'" . $ssl . $cmp_ssql;
    $data = $obj->MySQLSelect($sql);
    return $data;
}

function getRiderCount($status = "", $startDate = "", $endDate = "")
{
    global $obj;
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tRegistrationDate > '" . WEEK_DATE . "'";
    }
    $ssql1 = "AND (vEmail != '' OR vPhone != '') AND eHail='No'";
    if ($startDate != "" && $endDate != "") {
        $ssql1 = " AND tRegistrationDate BETWEEN '" . $startDate . "' AND '" . $endDate . "' ";
    }
    if ($status == "all") $sql = "SELECT count(iUserId) as tot_rider FROM register_user WHERE 1 = 1 " . $ssql1 . $cmp_ssql;
    else

        $sql = "SELECT count(iUserId) FROM register_user WHERE eStatus != 'Deleted'" . $ssql1 . $cmp_ssql;
    $data = $obj->MySQLSelect($sql);
    return $data;
}

function getUpcomingRideDashboard()
{
    global $obj, $default_lang, $MODULES_OBJ;
    $start_date = date('Y-m-d H:i:s', strtotime("-30 minutes"));
    $duration_sql_1 = " AND cb.dBooking_date > '" . $start_date . "'";
    $adm_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $adm_ssql = " And cb.dAddredDate > '" . WEEK_DATE . "'";
    }
    $ssql = "";
    if (!$MODULES_OBJ->isUberXFeatureAvailable()) {
        $ssql .= " AND cb.eType != 'UberX'";
    }
    if (!$MODULES_OBJ->isAirFlightModuleAvailable(1)) {
        $ssql .= " AND cb.iFromStationId = '0' AND cb.iToStationId = '0'";
    }
    if (!$MODULES_OBJ->isRideFeatureAvailable()) {
        $ssql .= " AND cb.eType != 'Ride'";
    }
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable()) {
        $ssql .= " AND cb.eType != 'Deliver' AND cb.eType != 'Multi-Delivery'";
    }
    if (!empty($userObj) && count($userObj->locations) > 0) {
        $locations = implode(', ', $userObj->locations);
        $ssql .= " AND vt.iLocationid IN(-1, {$locations}) ";
    }
    $sql = "SELECT cb.iCabBookingId,cb.vBookingNo,cb.eStatus,cb.dBooking_date,cb.vSourceAddresss,cb.tDestAddress,cb.eType,cb.eBookingFrom,cb.vTimeZone,cb.iRentalPackageId,cb.tVehicleTypeFareData,cb.eType,cb.iFromStationId,cb.iToStationId, CONCAT(ru.vName,' ', ru.vLastName) as rider,ru.vAvgRating, CONCAT(rd.vName,' ',rd.vLastName) as driver,vt.vVehicleType,vt.vRentalAlias_" . $default_lang . " as vRentalVehicleTypeName FROM cab_booking as cb LEFT JOIN register_user as ru on ru.iUserId=cb.iUserId LEFT JOIN register_driver as rd on rd.iDriverId=cb.iDriverId LEFT JOIN vehicle_type as vt on vt.iVehicleTypeId=cb.iVehicleTypeId WHERE 1=1 AND cb.eStatus IN ('Pending', 'Assign', 'Accepted') $ssql $adm_ssql $duration_sql_1 ORDER BY cb.dBooking_date";
//     echo "<pre>";
//     print_r($sql);
//     exit;
    $getBookingData = $obj->MySQLSelect($sql);
    return $getBookingData;
}

function getOrganizationCount()
{
    global $obj;
    $sql = "SELECT COUNT(iOrganizationId) AS count FROM organization AS c WHERE 1 = 1 AND eStatus != 'Deleted'";
    return $obj->MySQLSelect($sql);
}

function clearCmpName($text)
{
    if (SITE_TYPE == "Demo") {
        if (isset($_REQUEST['ENABLE_READ_MODE_nsakj']) && strtoupper($_REQUEST['ENABLE_READ_MODE_nsakj']) == "YES") {
            return $text;
        }
        //Added By HJ On 29-11-2019 For Mask 70% String Start
        $text = trim($text);
        $wordCount = strlen($text);
        $char = floor(($wordCount * 70) / 100);
        $orgChar = $wordCount - $char;
        $output = substr($text, 0, $orgChar);
        return $output . str_repeat("*", $char);
        //Added By HJ On 29-11-2019 For Mask 70% String End
    } else {
        return $text;
    }
}

function getTripStates($tripStatus = NULL, $startDate = "", $endDate = "", $dashbord_chart = "")
{
    $cmp_ssql = $dsql = $ssl = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tTripRequestDate > '" . WEEK_DATE . "'";
    }
    global $obj;
    $data = array();
    if ($startDate != "" && $endDate != "" && $dashbord_chart == "") {
        //$dsql = " AND tTripRequestDate BETWEEN '" . $startDate . "' AND '" . $endDate . "'";
        $dsql = " AND Date(tTripRequestDate) >= '" . $startDate . "' OR Date(tTripRequestDate) <= '" . $endDate . "' ";
    }
    if ($startDate != "" && $endDate != "" && $dashbord_chart == "1") {
        $dsql = " AND tEndDate BETWEEN '" . $startDate . "' AND '" . $endDate . "' ";
    }
    global $userObj;
    $locations_where = "";
    if (count($userObj->locations) > 0) {
        $locations = implode(', ', $userObj->locations);
        $locations_where = " AND EXISTS(SELECT * FROM vehicle_type WHERE trips.iVehicleTypeId = vehicle_type.iVehicleTypeId AND vehicle_type.iLocationid IN(-1, {$locations}))";
    }
    if ($tripStatus != "") {
        if ($tripStatus == "on ride") {
            $ssl = " AND (iActive = 'On Going Trip' OR iActive = 'Active') AND eCancelled='No'";
        } else if ($tripStatus == "cancelled") {
            $ssl = " AND (iActive = 'Canceled' OR eCancelled='yes')";
        } else if ($tripStatus == "finished") {
            $ssl = " AND iActive = 'Finished' AND eCancelled='No'";
        }
        $sql = "SELECT COUNT(iTripId) as tot FROM trips WHERE 1 = 1 AND eSystem = 'General'" . $cmp_ssql . $ssl . $dsql . $locations_where;
        // echo "<pre>";
        // print_r( $sql);
        // exit;
        $data = $obj->MySQLSelect($sql);
    }
    return $data[0]['tot'];
}

function getStoreTripStates($OrderStatus = "", $tOrderRequestDate = "", $dDeliveryDate = "", $dashbord_chart = "")
{
    global $MODULES_OBJ;
    $cmp_ssql = "";
    $dsql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tOrderRequestDate > '" . WEEK_DATE . "'";
    }
    global $obj;
    $data = array();
    if ($tOrderRequestDate != "" && $dDeliveryDate != "") {
        //$dsql = " AND tOrderRequestDate BETWEEN '" . $tOrderRequestDate . "' AND '" . $dDeliveryDate . "'";
        $dsql = " AND Date(tOrderRequestDate) >= '" . $tOrderRequestDate . "' AND Date(tOrderRequestDate) <= '" . $dDeliveryDate . "' ";
    }
    if ($tOrderRequestDate != "" && $dDeliveryDate != "" && $dashbord_chart = "1") {
        //$dsql = " AND tOrderRequestDate BETWEEN '" . $tOrderRequestDate . "' AND '" . $dDeliveryDate . "'";
        $dsql = " AND Date(tOrderRequestDate) >= '" . $tOrderRequestDate . "' AND Date(tOrderRequestDate) <= '" . $dDeliveryDate . "' ";
    }
    $processing_status_array = array('1', '2', '4', '5');
    $all_status_array = array('1', '2', '4', '5', '6', '7', '8', '9', '11', '12');
    if ($MODULES_OBJ->isEnableAnywhereDeliveryFeature()) {
        $processing_status_array = array('1', '2', '4', '5', '13', '14');
        $all_status_array = array('1', '2', '4', '5', '6', '7', '8', '9', '11', '12', '13', '14');
    }
    if ($OrderStatus == 'on going order') {
        $iStatusCode = '(' . implode(',', $processing_status_array) . ')';
    } else {
        $iStatusCode = '(' . implode(',', $all_status_array) . ')';
    }
    if ($OrderStatus != "") {
        $ssl = "";
        if ($OrderStatus == "on going order") {
            $ssl .= " Where IF(o.eTakeaway = 'Yes' && os.iStatusCode = 6, os.eTakeaway='Yes', os.eTakeaway != 'Yes') AND IF(o.eBuyAnyService = 'Yes' && os.iStatusCode IN (1,4,13,14), os.eBuyAnyService = 'Yes', os.eBuyAnyService = 'No') AND o.iStatusCode IN $iStatusCode";
        } else if ($OrderStatus == "Cancelled") {
            $ssl .= " Where o.iStatusCode IN ('9','8','7') AND IF(o.eTakeaway = 'Yes' && os.iStatusCode = 6, os.eTakeaway='Yes', os.eTakeaway != 'Yes')";
        } else if ($OrderStatus == "Delivered") {
            $ssl .= " Where o.iStatusCode = '6' AND IF(o.eTakeaway = 'Yes' && os.iStatusCode = 6, os.eTakeaway='Yes', os.eTakeaway != 'Yes')";
        } else {
            $ssl .= " Where IF(o.eTakeaway = 'Yes' && os.iStatusCode = 6, os.eTakeaway='Yes', os.eTakeaway != 'Yes')  AND IF(o.eBuyAnyService = 'Yes' && os.iStatusCode IN (1,4,13,14), os.eBuyAnyService = 'Yes', os.eBuyAnyService = 'No') AND o.iStatusCode IN $iStatusCode";
        }
        $sql = "SELECT COUNT(o.iOrderId) as tot FROM orders o LEFT JOIN order_status os ON o.iStatusCode = os.iStatusCode " . $cmp_ssql . $ssl . $dsql;
        //if ($OrderStatus == 'total') { echo $sql; }
        $data = $obj->MySQLSelect($sql);
    }
    return $data[0]['tot'];
}

function getTripStatescount($tripStatus = NULL, $startDate = "", $endDate = "")
{
    global $obj, $userObj, $MODULES_OBJ;
    $cmp_ssql = $etypeSql = $dsql = $location_where = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tTripRequestDate > '" . WEEK_DATE . "'";
    }
    if (!$MODULES_OBJ->isRideFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Ride'";
    }
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Deliver' AND eType != 'Multi-Delivery'";
    }
    if (!$MODULES_OBJ->isUberXFeatureAvailable()) {
        $etypeSql .= " AND eType != 'UberX'";
    }
    $data = array();
    if ($startDate != "" && $endDate != "") {
        //$dsql = " AND tTripRequestDate BETWEEN '".$startDate."' AND '".$endDate."'";
        $dsql = " AND Date(tTripRequestDate) >='" . $startDate . "'";
        $dsql .= " AND Date(tTripRequestDate) <='" . $endDate . "'";
    }
    //if(count($userObj->locations) > 0){
    //    $locations = implode(', ', $userObj->locations);
    //    $location_where = " AND EXISTS(SELECT * FROM vehicle_type WHERE trips.iVehicleTypeId = vehicle_type.iVehicleTypeId AND vehicle_type.iLocationid IN(-1, {$locations}))";
    //}
    $ssl = "";
    if ($tripStatus != "") {
        if ($tripStatus == "on ride") {
            $ssl = " AND (iActive = 'On Going Trip' OR iActive = 'Active') AND eCancelled='No'";
        } else if ($tripStatus == "cancelled") {
            $ssl = " AND (iActive = 'Canceled' OR eCancelled='yes')";
        } else if ($tripStatus == "finished") {
            $ssl = " AND iActive = 'Finished' AND eCancelled='No'";
        }
        $data = $obj->MySQLSelect("SELECT count(iTripId) tot_trip FROM trips WHERE 1 = 1 AND eSystem = 'General'" . $cmp_ssql . $ssl . $dsql . $location_where . $etypeSql);
    }
    return $data;
}

function getTotalEarns($startDate = "", $EndDate = "")
{
    global $obj, $MODULES_OBJ;
    global $userObj;
    $location_where = "";
    if (count($userObj->locations) > 0) {
        $locations = implode(', ', $userObj->locations);
        $location_where = " AND EXISTS(SELECT * FROM vehicle_type WHERE trips.iVehicleTypeId = vehicle_type.iVehicleTypeId AND vehicle_type.iLocationid IN(-1, {$locations}))";
    }
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tEndDate > '" . WEEK_DATE . "'";
    }
    $etypeSql = "";
    if (!$MODULES_OBJ->isRideFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Ride'";
    }
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Deliver' AND eType != 'Multi-Delivery'";
    }
    if (!$MODULES_OBJ->isUberXFeatureAvailable()) {
        $etypeSql .= " AND eType != 'UberX'";
    }
    if ($startDate != "" && $EndDate != "") {
        //$dsql = " AND tOrderRequestDate BETWEEN '" . $tOrderRequestDate . "' AND '" . $dDeliveryDate . "'";
        $cmp_ssql .= " AND tEndDate BETWEEN '" . $startDate . "' AND '" . $EndDate . "' ";
    }
    $sql = "SELECT SUM( `fCommision` ) AS total FROM trips WHERE (iActive ='Finished' OR (iActive ='Canceled' AND iFare > 0) OR (iActive ='Canceled' AND fWalletDebit > 0 AND iFare = 0)) AND eSystem = 'General' {$location_where} " . $cmp_ssql . $etypeSql;
 
    $data = $obj->MySQLSelect($sql);
    //$result = $data[0]['total'];
    if (isset($data[0]['total']) && !empty($data[0]['total'])) {
        $result = $data[0]['total'];
    } else {
        $result = 0;
    }
    return $result;
}

function getStoreTotalEarns($startDate = "", $EndDate = "")
{
    global $obj;
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And dDeliveryDate > '" . WEEK_DATE . "'";
    }

    if ($startDate != "" && $EndDate != "") {
        $cmp_ssql .= " AND tOrderRequestDate BETWEEN '" . $startDate . "' AND '" . $EndDate . "' ";
    }
    $sql = "SELECT SUM( `fCommision` ) AS total FROM orders WHERE 1 = 1 AND (iStatusCode = '6')" . $cmp_ssql;
    $data = $obj->MySQLSelect($sql);
    $result = $data[0]['total'];
    return $result;
}

function org_outstanding_report()
{
    global $obj;
    $sql = "SELECT org.vCompany,org.vEmail,org.vCode,org.vPhone, toa.iOrganizationId,COUNT(toa.iTripOutstandId) AS Total, SUM(toa.fPendingAmount) as allSum, (SELECT SUM(toa1.fPendingAmount) FROM trip_outstanding_amount as toa1 WHERE toa1.iOrganizationId=toa.iOrganizationId AND toa1.vTripPaymentMode = 'Organization' AND (toa1.eBillGenerated ='No' AND toa1.ePaidByOrganization ='No') AND toa1.iOrganizationId != '') as Remaining from trip_outstanding_amount AS toa LEFT JOIN organization org ON org.iOrganizationId = toa.iOrganizationId WHERE toa.iOrganizationId > 0 AND toa.iOrganizationId != '' AND toa.vTripPaymentMode = 'Organization' GROUP BY toa.iOrganizationId HAVING remaining>0 ORDER BY org.vCompany ASC";
    $result = $obj->MySQLSelect($sql);
    $total = 0;
    foreach ($result as $res) {
        $total += $res['Remaining'];
    }
    return str_replace(',', '', $total);
}

function outstanding_report()
{
    global $obj;
    $sql = "SELECT toa.iUserId,concat(ru.vName,' ',ru.vLastName) as riderName,ru.vEmail,CONCAT('(+',ru.vPhoneCode,')',ru.vPhone) as userphone,ru.vCurrencyPassenger as userCurrency,cur.Ratio as currencyRatio, SUM(toa.fPendingAmount) as allSum, (SELECT SUM(toa1.fPendingAmount) FROM trip_outstanding_amount as toa1 WHERE toa1.iUserId=toa.iUserId AND toa1.vTripPaymentMode != 'Organization' AND toa1.ePaidByPassenger ='No' AND toa1.iUserId != '') as Remaining, concat(ru.vName,' ',ru.vLastName) as riderName from trip_outstanding_amount AS toa LEFT JOIN register_user AS ru ON toa.iUserId = ru.iUserId LEFT JOIN currency as cur ON cur.vName=ru.vCurrencyPassenger WHERE toa.iUserId > 0 AND toa.iUserId != '' AND toa.vTripPaymentMode != 'Organization' AND ru.vName!='NULL' GROUP BY toa.iUserId HAVING remaining >0 ORDER BY riderName ASC";
    $result = $obj->MySQLSelect($sql);
    $total = 0;
    foreach ($result as $res) {
        $total += $res['Remaining'];
    }
    return str_replace(',', '', $total);
}

function getTripDateStates($time)
{
    global $obj, $MODULES_OBJ;
    $data = array();
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tEndDate > '" . WEEK_DATE . "'";
    }
    if ($time == "month") {
        $startDate = date('Y-m-01 00:00:00');
        $endDate = date('Y-m-t 23:59:59');
        //$ssl = " AND tTripRequestDate BETWEEN '" . $startDate . "' AND '" . $endDate . "'";
        $ssl = " AND Date(tTripRequestDate) >='" . $startDate . "' AND Date(tTripRequestDate) <='" . $endDate . "'";
    } else if ($time == "year") {
        $startDate1 = date('Y') . "-00-01 00:00:00";
        $endDate1 = date('Y') . "-12-31 23:59:59";
        //$ssl = " AND tTripRequestDate BETWEEN '" . $startDate1 . "' AND '" . $endDate1 . "'";
        $ssl = " AND Date(tTripRequestDate) >='" . $startDate1 . "' AND Date(tTripRequestDate) <='" . $endDate1 . "'";
    } else {
        $startDate2 = date('Y-m-d') . " 00:00:00";
        $endDate2 = date('Y-m-d') . " 23:59:59";
        //$ssl = " AND tTripRequestDate BETWEEN '" . $startDate2 . "' AND '" . $endDate2 . "'";
        $ssl = " AND Date(tTripRequestDate) >='" . $startDate2 . "' AND Date(tTripRequestDate) <='" . $endDate2 . "'";
    }
    global $userObj;
    $location_where = "";
    if (count($userObj->locations) > 0) {
        $locations = implode(', ', $userObj->locations);
        $location_where = " AND EXISTS(SELECT * FROM vehicle_type WHERE trips.iVehicleTypeId = vehicle_type.iVehicleTypeId AND vehicle_type.iLocationid IN(-1, {$locations}))";
    }
    $etypeSql = "";
    if (!$MODULES_OBJ->isRideFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Ride'";
    }
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Deliver' AND eType != 'Multi-Delivery'";
    }
    if (!$MODULES_OBJ->isUberXFeatureAvailable()) {
        $etypeSql .= " AND eType != 'UberX'";
    }
    $sql = "SELECT count(iTripId) as total FROM trips WHERE 1 = 1 AND eSystem = 'General' " . $ssl . $cmp_ssql . $etypeSql . $location_where;
    $data = $obj->MySQLSelect($sql);
    return $data[0]['total'];
}

function getOrderDateStates($time)
{
    global $obj;
    $data = array();
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And dDeliveryDate > '" . WEEK_DATE . "'";
    }
    if ($time == "month") {
        $startDate = date('Y-m-01 00:00:00');
        $endDate = date('Y-m-t 23:59:59');
        //$ssl = " AND tOrderRequestDate BETWEEN '" . $startDate . "' AND '" . $endDate . "'";
        $ssl = " AND Date(tOrderRequestDate) >='" . $startDate . "' AND Date(tOrderRequestDate) <='" . $endDate . "'";
    } else if ($time == "year") {
        $startDate1 = date('Y') . "-00-01 00:00:00";
        $endDate1 = date('Y') . "-12-31 23:59:59";
        //$ssl = " AND tOrderRequestDate BETWEEN '" . $startDate1 . "' AND '" . $endDate1 . "'";
        $ssl = " AND Date(tOrderRequestDate) >='" . $startDate1 . "' AND Date(tOrderRequestDate) <='" . $endDate1 . "'";
    } else {
        $startDate2 = date('Y-m-d') . " 00:00:00";
        $endDate2 = date('Y-m-d') . " 23:59:59";
        //$ssl = " AND tOrderRequestDate BETWEEN '" . $startDate2 . "' AND '" . $endDate2 . "'";
        $ssl = " AND Date(tOrderRequestDate) >='" . $startDate2 . "' AND Date(tOrderRequestDate) <='" . $endDate2 . "'";
    }
    $sql = "SELECT count(iOrderId) as total FROM orders WHERE 1 = 1 " . $ssl . $cmp_ssql;
    $data = $obj->MySQLSelect($sql);
    return $data[0]['total'];
}

function getDriverDateStatus($time)
{
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And rd.tRegistrationDate > '" . WEEK_DATE . "'";
    }
    global $obj;
    $data = array();
    if ($time == "month") {
        $startDate = date('Y-m-01 00:00:00');
        $endDate = date('Y-m-t 23:59:59');
        $ssl = " AND rd.tRegistrationDate BETWEEN '" . $startDate . "' AND '" . $endDate . "'";
    } else if ($time == "year") {
        $startDate1 = date('Y') . "-00-00 00:00:00";
        $endDate1 = date('Y') . "-12-31 23:59:59";
        $ssl = " AND rd.tRegistrationDate BETWEEN '" . $startDate1 . "' AND '" . $endDate1 . "'";
    } else {
        $startDate2 = date('Y-m-d') . " 00:00:00";
        $endDate2 = date('Y-m-d') . " 23:59:59";
        $ssl = " AND rd.tRegistrationDate BETWEEN '" . $startDate2 . "' AND '" . $endDate2 . "'";
    }
    $ssql1 = "AND (rd.vEmail != '' OR rd.vPhone != '')";
    $sql = "SELECT rd.*, c.vCompany companyFirstName, c.vLastName companyLastName FROM register_driver rd LEFT JOIN company c ON rd.iCompanyId = c.iCompanyId and c.eStatus != 'Deleted' WHERE  rd.eStatus != 'Deleted'" . $ssl . $ssql1 . $cmp_ssql;
    $data = $obj->MySQLSelect($sql);
    return $data;
}

function getStoreDateStatus($time)
{
    global $obj, $ENABLE_BUY_ANY_SERVICE_MODULE;
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tRegistrationDate > '" . WEEK_DATE . "'";
    }
    $data = array();
    if ($time == "month") {
        $startDate = date('Y-m-01 00:00:00');
        $endDate = date('Y-m-t 23:59:59');
        $ssl = " AND tRegistrationDate BETWEEN '" . $startDate . "' AND '" . $endDate . "'";
    } else if ($time == "year") {
        $startDate1 = date('Y') . "-00-00 00:00:00";
        $endDate1 = date('Y') . "-12-31 23:59:59";
        $ssl = " AND tRegistrationDate BETWEEN '" . $startDate1 . "' AND '" . $endDate1 . "'";
    } else {
        $startDate2 = date('Y-m-d') . " 00:00:00";
        $endDate2 = date('Y-m-d') . " 23:59:59";
        $ssl = " AND tRegistrationDate BETWEEN '" . $startDate2 . "' AND '" . $endDate2 . "'";
    }
    $ssql1 = "AND (vEmail != '' OR vPhone != '')";
    $ssql = "";
    if (strtoupper($ENABLE_BUY_ANY_SERVICE_MODULE) == 'YES') {
        $ssql = " AND eBuyAnyService = 'No' ";
    }
    $sql = "SELECT iCompanyId FROM company WHERE eStatus != 'Deleted' AND eSystem = 'DeliverAll' " . $ssl . $ssql1 . $cmp_ssql . $ssql;
    $data = $obj->MySQLSelect($sql);
    return $data;
}

function getDriverDetailsDashboard($status = "", $startDate = "", $endDate = "")
{
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And rd.tRegistrationDate > '" . WEEK_DATE . "'";
    }
    global $obj;
    $ssl = "";
    if (isset($status) && $status != "" && $status == "active") {
        $ssl = " AND rd.eStatus = '" . $status . "'";
    } else if (isset($status) && $status != "" && $status == "inactive") {
        $ssl = " AND rd.eStatus = '" . $status . "'";
    }
    $ssql1 = "AND (rd.vEmail != '' OR rd.vPhone != '') AND rd.iTrackServiceCompanyId = 0";
    if ($startDate != "" && $endDate != "") {
        $ssql1 .= " AND rd.tRegistrationDate BETWEEN '" . $startDate . "' AND '" . $endDate . "' ";
    }
    $sql = "SELECT count(rd.iDriverId) as Total FROM register_driver rd LEFT JOIN company c ON rd.iCompanyId = c.iCompanyId and c.eStatus != 'Deleted' WHERE  rd.eStatus != 'Deleted'" . $ssl . $ssql1 . $cmp_ssql;

    
    $data = $obj->MySQLSelect($sql);
    return $data[0]['Total'];
}

function set_hour_min($times)
{
    $hour = 0;
    $second = 0;
    $minute = floor($times / 60);
    if ($times < 60) {
        $minute = 0;
    }
    if ($minute > 60) {
        $hour = floor($minute / 60);
        $minute = floor($minute % 60);
    } else {
        $second = floor($times % 60);
    }
    $ansdata = array("hour" => $hour, "minute" => $minute, "second" => $second);
    return $ansdata;
}

function getLocationName($Name, $Id)
{
    $cmp_ssql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tRegistrationDate > '" . WEEK_DATE . "'";
    }
    global $obj;
    if ($Name == "country") {
        $sql = "SELECT vCountry FROM country WHERE iCountryId=" . $Id;
        $data = $obj->MySQLSelect($sql);
        if (count($data) > 0) {
            return $data[0]['vCountry'];
        } else {
            return "-";
        }
    } elseif ($Name == "state") {
        $sql = "SELECT vState FROM state WHERE iStateId=" . $Id;
        $data = $obj->MySQLSelect($sql);
        if (count($data) > 0) {
            return $data[0]['vState'];
        } else {
            return "-";
        }
    } else {
        $sql = "SELECT vCity FROM city WHERE iCityId=" . $Id;
        $data = $obj->MySQLSelect($sql);
        if (count($data) > 0) {
            return $data[0]['vCity'];
        } else {
            return "-";
        }
    }
}

function get_left_days_jobsave($dend, $dstart)
{
    $dayinpass = $dstart;
    $today = strtotime($dend);
    $dayinpass = strtotime($dayinpass);
    return round(abs($today - $dayinpass));
    // return round(abs($today-$dayinpass)/60/60);
}

function DateTimeAdmin($text, $time = 'yes')
{
    if ($text == "" || $text == "0000-00-00 00:00:00" || $text == "0000-00-00") return "---";
    $date = @date('jS F, Y', @strtotime($text));
    if ($time == 'yes') {
        $date .= " " . @date('h:i a', @strtotime($text));;
    }
    return $date;
}

function getTransforAmountbyRestaurant($id, $ssql)
{
    global $obj;
    $total = '0.00';
    if ($id != "") {
        //Added By HJ On 21-09-2020 For Optimize Loop Query of restaurants_pay_report.php Start
        if (is_array($id)) {
            $companyIds = implode(",", array_unique($id));
            //$sql = "SELECT IFNULL( SUM( IFNULL( fTotalGenerateFare, 0 ) ), 0 ) - IFNULL( SUM( IFNULL( fCommision, 0 ) ) , 0 )  - IFNULL( SUM( IFNULL( fAdminfeeAmount, 0 ) ) , 0 ) - IFNULL( SUM( IFNULL( fDeliveryCharge, 0 ) ) , 0 ) - IFNULL( SUM( IFNULL( fOutStandingAmount, 0 ) ) , 0 )- IFNULL( SUM( IFNULL( fTipAmount, 0 ) ) , 0 )- IFNULL( SUM( IFNULL( fOffersDiscount, 0 ) ) , 0 ) AS amounts,iCompanyId FROM orders  AS o WHERE eRestaurantPaymentStatus = 'Unsettled' AND (o.iStatusCode = '6') AND iCompanyId IN ($companyIds)" . $ssql . " GROUP BY iCompanyId"; // OR o.fRestaurantPayAmount > 0
            $sql = "SELECT 



                      IFNULL( SUM( CASE WHEN `eOrderplaced_by`='kiosk' THEN IFNULL( fTotalGenerateFare, 0 ) ELSE  0 END  ), 0 ) 

                         - IFNULL( SUM( CASE WHEN `eOrderplaced_by`='kiosk' THEN  IFNULL( fDeliveryCharge, 0 ) ELSE 0 END )  , 0 ) 

                          - IFNULL( SUM( CASE WHEN `eOrderplaced_by`='kiosk' THEN  IFNULL( fOutStandingAmount, 0 ) ELSE 0 END )  , 0 ) 

                           - IFNULL( SUM( CASE WHEN `eOrderplaced_by`='kiosk' THEN  IFNULL( fTipAmount, 0 ) ELSE 0 END )  , 0 ) 

                            - IFNULL( SUM( CASE WHEN `eOrderplaced_by`='kiosk' THEN  IFNULL( fOffersDiscount, 0 ) ELSE 0 END )  , 0 ) 

                      AS 'kiosk' ,

                        IFNULL( SUM( IFNULL( fTotalGenerateFare, 0 ) ), 0 ) 

                        - IFNULL( SUM( IFNULL( fCommision, 0 ) ) , 0 ) 

                        - IFNULL( SUM( IFNULL( fDeliveryCharge, 0 ) ) , 0 ) 

                        - IFNULL( SUM( IFNULL( fOutStandingAmount, 0 ) ) , 0 )

                        - IFNULL( SUM( IFNULL( fTipAmount, 0 ) ) , 0 )

                        - IFNULL( SUM( IFNULL( fOffersDiscount, 0 ) ) , 0 ) AS amounts,iCompanyId FROM orders  AS o WHERE eRestaurantPaymentStatus = 'Unsettled' AND (o.iStatusCode = '6') AND iCompanyId IN ($companyIds)" . $ssql . " GROUP BY iCompanyId"; // OR o.fRestaurantPayAmount > 0
            $companyData = $obj->MySQLSelect($sql);
            $companyAmountArr = array();
            for ($c = 0; $c < count($companyData); $c++) {
                // $companyAmountArr[$companyData[$c]['iCompanyId']] = $companyData[$c]['amounts'];
                $companyAmountArr[$companyData[$c]['iCompanyId']] = $companyData[$c]['amounts'] - $companyData[$c]['kiosk'];
            }
            //echo "<pre>";print_r($companyAmountArr);die;
            return $companyAmountArr;
            //Added By HJ On 21-09-2020 For Optimize Loop Query of restaurants_pay_report.php End
        } else {
            $sql = "SELECT IFNULL( SUM( IFNULL( fTotalGenerateFare, 0 ) ), 0 ) - IFNULL( SUM( IFNULL( fCommision, 0 ) ) , 0 ) - IFNULL( SUM( IFNULL( fDeliveryCharge, 0 ) ) , 0 ) - IFNULL( SUM( IFNULL( fOutStandingAmount, 0 ) ) , 0 )- IFNULL( SUM( IFNULL( fTipAmount, 0 ) ) , 0 )- IFNULL( SUM( IFNULL( fOffersDiscount, 0 ) ) , 0 ) AS amounts FROM orders  AS o WHERE eRestaurantPaymentStatus = 'Unsettled' AND (o.iStatusCode = '6') AND iCompanyId = '" . $id . "'" . $ssql; // OR o.fRestaurantPayAmount > 0
            $data = $obj->MySQLSelect($sql);
            $amounts = ($data[0]['amounts'] != "") ? $data[0]['amounts'] : '0.00';
            $total = $amounts;
        }
    }
    return $total;
}

function CalculateStoreExpectedAmount($id, $ssql)
{
    $total = '0.00';
    global $obj;
    if ($id != "") {
        //Added By HJ On 21-09-2020 For Optimize Loop Query of restaurants_pay_report.php Start
        if (is_array($id)) {
            $companyIds = implode(",", array_unique($id));
            $companyAmountArr = $obj->MySQLSelect("SELECT o.iOrderId,o.vOrderNo,o.iCompanyId,o.iDriverId,o.iUserId,o.tOrderRequestDate,o.fRestaurantPayAmount,o.fRestaurantPaidAmount,o.fTotalGenerateFare,o.fDeliveryCharge,o.fOffersDiscount,o.fCommision,o.eRestaurantPaymentStatus,o.ePaymentOption,o.iStatusCode,o.fOutStandingAmount,o.fTipAmount FROM orders  AS o WHERE o.eRestaurantPaymentStatus = 'Unsettled' AND (o.iStatusCode = '6' OR o.fRestaurantPayAmount > 0) AND o.iCompanyId IN ($companyIds)" . $ssql);
            //echo "<pre>";print_r($companyAmountArr);die;
            $companyDataAmtArr = array();
            for ($c = 0; $c < count($companyAmountArr); $c++) {
                $fCommision = $companyAmountArr[$c]['fCommision'];
                $fTotalGenerateFare = $companyAmountArr[$c]['fTotalGenerateFare'];
                $fDeliveryCharge = $companyAmountArr[$c]['fDeliveryCharge'];
                $fOffersDiscount = $companyAmountArr[$c]['fOffersDiscount'];
                $fRestaurantPayAmount = $companyAmountArr[$c]['fRestaurantPayAmount'];
                $fOutStandingAmount = $companyAmountArr[$c]['fOutStandingAmount'];
                $fTipAmount = $companyAmountArr[$c]['fTipAmount'];
                $iCompanyId = $companyAmountArr[$c]['iCompanyId'];
                $fRestaurantPaidAmount = $companyAmountArr[$c]['fRestaurantPaidAmount'];
                if ($companyAmountArr[$c]['iStatusCode'] == '7' || $companyAmountArr[$c]['iStatusCode'] == '8') {
                    $amounts = $fRestaurantPaidAmount;
                } else {
                    $amounts = $fTotalGenerateFare - ($fCommision + $fDeliveryCharge + $fOffersDiscount + $fOutStandingAmount);
                }
                if (isset($companyDataAmtArr[$iCompanyId])) {
                    $companyDataAmtArr[$iCompanyId] += $amounts;
                } else {
                    $companyDataAmtArr[$iCompanyId] = $amounts;
                }
            }
            //echo "<pre>";print_r($companyDataAmtArr);die;
            return $companyDataAmtArr;
        } else {
            $sql = "SELECT o.iOrderId,o.vOrderNo,o.iCompanyId,o.iDriverId,o.iUserId,o.tOrderRequestDate,o.fRestaurantPayAmount,o.fRestaurantPaidAmount,o.fTotalGenerateFare,o.fDeliveryCharge,o.fOffersDiscount,o.fCommision,o.eRestaurantPaymentStatus,o.ePaymentOption,o.iStatusCode,o.fOutStandingAmount,o.fTipAmount FROM orders  AS o WHERE o.eRestaurantPaymentStatus = 'Unsettled' AND (o.iStatusCode = '6' OR o.fRestaurantPayAmount > 0) AND o.iCompanyId = '" . $id . "'" . $ssql;
            $data = $obj->MySQLSelect($sql);
            foreach ($data as $key => $value) {
                $fCommision = $value['fCommision'];
                $fTotalGenerateFare = $value['fTotalGenerateFare'];
                $fDeliveryCharge = $value['fDeliveryCharge'];
                $fOffersDiscount = $value['fOffersDiscount'];
                $fRestaurantPayAmount = $value['fRestaurantPayAmount'];
                $fOutStandingAmount = $value['fOutStandingAmount'];
                $fTipAmount = $value['fTipAmount'];
                $fRestaurantPaidAmount = $value['fRestaurantPaidAmount'];
                if ($value['iStatusCode'] == '7' || $value['iStatusCode'] == '8') {
                    $amounts = $fRestaurantPaidAmount;
                } else {
                    $amounts = $fTotalGenerateFare - ($fCommision + $fDeliveryCharge + $fOffersDiscount + $fOutStandingAmount);
                }
                $total += $amounts;
            }
        }
    }
    return $total;
}

/* New added For Driver */
function getTransforAmountbyDeliveryDriverId($id, $ssql, $tip = '')
{
    global $obj, $MODULES_OBJ;
    $etypeSql = "";
    if (!$MODULES_OBJ->isRideFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Ride'";
    }
    //Added By HJ On 29-07-2020 For Solved Issue sheet Issue 1574 B'Coz In Deliverall Order's Insert eType = Ride Start
    if ($MODULES_OBJ->isDeliverAllFeatureAvailable()) {
        $etypeSql = "";
    }
    //Added By HJ On 29-07-2020 For Solved Issue sheet Issue 1574 B'Coz In Deliverall Order's Insert eType = Ride End
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Deliver' AND eType != 'Multi-Delivery'";
    }
    if (!$MODULES_OBJ->isUberXFeatureAvailable()) {
        $etypeSql .= " AND eType != 'UberX'";
    }
    $total = '0.00';
    if ($id != "") {
        //Added By HJ On 22-09-2020 For Optimize For Loop Query Start
        if (is_array($id)) {
            $driverIds = implode(",", array_unique($id));
            $driverDataArr = $obj->MySQLSelect("SELECT SUM(tr.fDeliveryCharge) AS totalAmount,sum(o.fTipAmount) as totaltip,tr.iDriverId FROM trips AS tr LEFT JOIN orders as o on o.iOrderId=tr.iOrderId WHERE tr.eDriverPaymentStatus = 'Unsettelled' AND o.iStatusCode = 6 AND tr.iDriverId IN ($driverIds)" . $ssql . $etypeSql . " GROUP BY tr.iDriverId");
            $driverDataAmtArr = array();
            for ($c = 0; $c < count($driverDataArr); $c++) {
                $total = 0;
                $orderDataArr = $obj->MySQLSelect("SELECT o.eBuyAnyService,o.ePaymentOption,o.iOrderId FROM orders as o LEFT JOIN trips as tr ON o.iOrderId=tr.iOrderId WHERE o.iStatusCode = 6 AND o.eBuyAnyService = 'Yes' AND o.ePaymentOption = 'Card' AND o.iDriverId = '" . $driverDataArr[$c]['iDriverId'] . "' AND tr.eDriverPaymentStatus='Unsettelled'");
                $subtotal = 0;
                foreach ($orderDataArr as $orderkey => $orderval) {
                    $order_buy_anything = $obj->MySQLSelect("SELECT * FROM order_items_buy_anything WHERE iOrderId = '" . $orderval['iOrderId'] . "'");
                    if (count($order_buy_anything) > 0) {
                        foreach ($order_buy_anything as $oItem) {
                            if ($oItem['eConfirm'] == "Yes" && !empty($oItem['fItemPrice'])) {
                                $subtotal += $oItem['fItemPrice'];
                            }
                        }
                    }
                }
                $iDriverId = $driverDataArr[$c]['iDriverId'];
                $DelvieryCharges = ($driverDataArr[$c]['totalAmount'] != "") ? $driverDataArr[$c]['totalAmount'] : '0.00';
                $tipamount = ($driverDataArr[$c]['totaltip'] != "") ? $driverDataArr[$c]['totaltip'] : '0.00';
                if ($tipamount != '') {
                    $total = $DelvieryCharges + $tipamount;
                } else {
                    $total = $DelvieryCharges;
                }
                $driverDataAmtArr[$iDriverId] = $total + $subtotal;
            }
            return $driverDataAmtArr;
            //Added By HJ On 22-09-2020 For Optimize For Loop Query End
        } else {
            $data = $obj->MySQLSelect("SELECT SUM(tr.fDeliveryCharge) AS totalAmount,sum(o.fTipAmount) as totaltip FROM trips AS tr LEFT JOIN orders as o on o.iOrderId=tr.iOrderId WHERE tr.eDriverPaymentStatus = 'Unsettelled' AND o.iStatusCode = 6 AND tr.iDriverId = '" . $id . "'" . $ssql . $etypeSql);
            $DelvieryCharges = ($data[0]['totalAmount'] != "") ? $data[0]['totalAmount'] : '0.00';
            $tipamount = ($data[0]['totaltip'] != "") ? $data[0]['totaltip'] : '0.00';
            if ($tipamount != '') {
                $total = $DelvieryCharges + $tipamount;
            } else {
                $total = $DelvieryCharges;
            }
        }
    }
    return $total;
}

function GetDriverPayment($iOrderId)
{
    global $obj;
    //Added By HJ On 23-09-2020 For Optimize For Loop Query Start
    if (is_array($iOrderId)) {
        $implodeIds = implode(",", $iOrderId);
        $data = $obj->MySQLSelect("SELECT trips.fDeliveryCharge,orders.fTipAmount,orders.iOrderId FROM orders JOIN trips on orders.iOrderId=trips.iOrderId WHERE orders.iOrderId IN ($implodeIds)");
        $orderChargeArr = array();
        for ($f = 0; $f < count($data); $f++) {
            $orderChargeArr[$data[$f]['iOrderId']] = $data[$f]['fDeliveryCharge'] + $data[$f]['fTipAmount'];
        }
        return $orderChargeArr;
        //echo "<pre>";print_r($orderChargeArr);die;
        //Added By HJ On 23-09-2020 For Optimize For Loop Query End
    } else {
        $sql = "SELECT trips.fDeliveryCharge,orders.fTipAmount FROM orders JOIN trips on orders.iOrderId=trips.iOrderId WHERE orders.iOrderId = $iOrderId";
        $data = $obj->MySQLSelect($sql);
        if (count($data) > 0) {
            $fDeliveryCharge = $data[0]['fDeliveryCharge'] + $data[0]['fTipAmount'];
            return $fDeliveryCharge;
        } else {
            return "0";
        }
    }
}

function GetStorePayment($iOrderId)
{
    global $obj;
    $eConfirm = checkOrderStatus($iOrderId, "2"); //it is done bc when store has not accepted ordr and admin cancel order at that time store payout is 0
    if ($eConfirm == 'No') {
        return "0";
    }
    $sql = "SELECT fTotalGenerateFare,fOffersDiscount,fDeliveryCharge,fCommision,fOutStandingAmount,fTipAmount  FROM orders WHERE orders.iOrderId = $iOrderId and iStatusCode!=1";
    $data = $obj->MySQLSelect($sql);
    if (count($data) > 0) {
        $payment_to_restaurant = $data[0]['fTotalGenerateFare'] - $data[0]['fOffersDiscount'] - $data[0]['fDeliveryCharge'] - $data[0]['fCommision'] - $data[0]['fOutStandingAmount'] - $data[0]['fTipAmount'];
        return $payment_to_restaurant;
    } else {
        return "0";
    }
}

function getUnitToMiles($fPricePerKM, $eUnit)
{
    if ($eUnit == "Miles") {
        $PricePerKM = $fPricePerKM * 0.621371;
    } else {
        $PricePerKM = $fPricePerKM;
    }
    return $PricePerKM;
}

function TimeDifference($text1, $text2)
{
    // $t1 = $text1;
    // $t2 = $text2;
    if ($text1 == "" || $text1 == "0000-00-00 00:00:00" || $text1 == "0000-00-00") return "---";
    else if ($text2 == "" || $text2 == "0000-00-00 00:00:00" || $text2 == "0000-00-00") return "---";
    // echo $text1." ".$text2;exit;
    $text1 = @strtotime($text1);
    $text2 = @strtotime($text2);
    $time_diff = $text2 - $text1;
    $diff = secondsToTime($time_diff);
    return str_pad($diff['h'], 2, "0", STR_PAD_LEFT) . ":" . str_pad($diff['m'], 2, "0", STR_PAD_LEFT) . ":" . str_pad($diff['s'], 2, "0", STR_PAD_LEFT);
}

function getaddress($lat, $lng)
{
    $url = 'http://maps.googleapis.com/maps/api/geocode/json?latlng=' . trim($lat) . ',' . trim($lng) . '&sensor=false';
    $json = @file_get_contents($url);
    $data = json_decode($json);
    //echo "<pre>"; print_r($data); exit;
    //$status = $data->status;
    if (isset($data->status) && $data->status == "OK") return $data->results[0]->formatted_address;
    else

        return false;
}

function getTotalEarnsDashboard()
{
    global $obj, $userObj, $MODULES_OBJ;
    $cmp_ssql = $location_where = $etypeSql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tEndDate > '" . WEEK_DATE . "'";
    }
    if (!$MODULES_OBJ->isRideFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Ride'";
    }
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Deliver' AND eType != 'Multi-Delivery'";
    }
    if (!$MODULES_OBJ->isUberXFeatureAvailable()) {
        $etypeSql .= " AND eType != 'UberX'";
    }
    //if(count($userObj->locations) > 0){
    //    $locations = implode(', ', $userObj->locations);
    //    $location_where = " AND EXISTS(SELECT * FROM vehicle_type WHERE trips.iVehicleTypeId = vehicle_type.iVehicleTypeId AND vehicle_type.iLocationid IN(-1, {$locations}))";
    //}
    $sql = "SELECT SUM(`fCommision`) AS total FROM trips WHERE iActive = 'Finished' AND eSystem = 'General' AND eCancelled = 'No' " . $cmp_ssql . $location_where . $etypeSql;
    $data = $obj->MySQLSelect($sql);
    $result = $data[0]['total'];
    return $result;
}

function FetchTripGeneratedFare($startDate, $endDate, $payment_method = "")
{
    global $obj, $userObj, $MODULES_OBJ;
    $cmp_ssql = $etypeSql = $psql = $dsql = "";
    if (SITE_TYPE == 'Demo') {
        $cmp_ssql = " And tTripRequestDate > '" . WEEK_DATE . "'";
    }
    if (!$MODULES_OBJ->isRideFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Ride'";
    }
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable()) {
        $etypeSql .= " AND eType != 'Deliver' AND eType != 'Multi-Delivery'";
    }
    if (!$MODULES_OBJ->isUberXFeatureAvailable()) {
        $etypeSql .= " AND eType != 'UberX'";
    }
    $data = array();
    if ($startDate != "" && $endDate != "") {
        //$dsql = " AND tTripRequestDate BETWEEN '".$startDate."' AND '".$endDate."' ";
        $dsql = " AND Date(tTripRequestDate) >='" . $startDate . "'";
        $dsql .= " AND Date(tTripRequestDate) <='" . $endDate . "'";
    }
    if ($payment_method != "") {
        $psql = " AND vTripPaymentMode = '" . $payment_method . "' ";
    }
    $ssl = " AND iActive = 'Finished' AND eCancelled='No' ";
    $locations_where = "";
    if (count($userObj->locations) > 0) {
        $locations = implode(', ', $userObj->locations);
        $locations_where = " AND EXISTS(SELECT * FROM vehicle_type WHERE trips.iVehicleTypeId = vehicle_type.iVehicleTypeId AND vehicle_type.iLocationid IN(-1, {$locations}))";
    }
    $data = $obj->MySQLSelect("SELECT iTripId, fTripGenerateFare, fDiscount,fWalletDebit, iFare, vTripPaymentMode FROM trips WHERE 1 = 1 AND eSystem = 'General' " . $cmp_ssql . $ssl . $dsql . $psql . $locations_where . $etypeSql);
    return $data;
}

function FetchDefaultCurrency()
{
    global $obj;
    $data = $obj->MySQLSelect("SELECT vName,vSymbol FROM  `currency` WHERE  `eDefault` =  'Yes' AND  `eStatus` =  'Active' LIMIT 0 , 1");
    return $data;
}

function GetFileData($file_path)
{
    global $tconfig;
    $myfile = fopen($file_path, "r");
    $data = fread($myfile, filesize($file_path));
    fclose($myfile);
    return $data;
}

function WriteToFile($file_path, $data, $filemode = "w")
{
    $myfile = fopen($file_path, $filemode);
    fwrite($myfile, $data);
    fclose($myfile);
}

/* class.general.php functions End */
// new our service header start //
function ourService()
{
    global $obj, $default_lang, $CONFIG_OBJ, $MODULES_OBJ, $langage_lbl, $master_service_category_tbl;
    if (isset($_SESSION['sess_lang']) && !empty($_SESSION['sess_lang'])) {
        $default_lang = $_SESSION['sess_lang'];
    }
    $ssql = '';
    if (($CONFIG_OBJ->isOnlyCashPaymentModeAvailable() && $MODULES_OBJ->isEnableVideoConsultingService()) || !$MODULES_OBJ->isEnableVideoConsultingService()) {
        $ssql .= " AND eType != 'VideoConsult' ";
    }
    if (!$MODULES_OBJ->isRideFeatureAvailable()) {
        $ssql .= " AND eType != 'Ride' ";
    }
    if (!$MODULES_OBJ->isDeliverAllFeatureAvailable()) {
        $ssql .= " AND eType != 'DeliverAll' ";
    }
    if (!$MODULES_OBJ->isDeliveryFeatureAvailable()) {
        $ssql .= " AND eType != 'Deliver' ";
    }
    if (!$MODULES_OBJ->isUberXFeatureAvailable()) {
        $ssql .= " AND eType != 'UberX' ";
    }
    if (!$MODULES_OBJ->isEnableBiddingServices()) {
        $ssql .= " AND eType != 'Bidding' ";
    }
    if (!$MODULES_OBJ->isEnableMedicalServices()) {
        $ssql .= " AND eType != 'MedicalServices' ";
    }

    if (!$MODULES_OBJ->isEnableRentItemService()) {
        $ssql .= " AND eType != 'RentItem' ";
    }

    if (!$MODULES_OBJ->isEnableRentEstateService()) {
        $ssql .= " AND eType != 'RentEstate' ";
    }

    if (!$MODULES_OBJ->isEnableRentCarsService()) {
        $ssql .= " AND eType != 'RentCars' ";
    }

    if (!$MODULES_OBJ->isEnableRideShareService()) {
        $ssql .= " AND eType != 'RideShare' ";
    }

    if (!$MODULES_OBJ->isEnableTrackAnyServiceFeature()) {
        $ssql .= " AND eType != 'TrackAnyService' ";
    }

    if (!$MODULES_OBJ->isEnableNearByService()) {
        $ssql .= " AND eType != 'NearBy' ";
    }
    
    
    $Sql = "SELECT *,JSON_UNQUOTE(JSON_VALUE(vTitle, '$.vTitle_" . $default_lang . "')) as vTitle FROM `master_service_menu` WHERE iParentId = 0 AND eStatus = 'Active' $ssql ORDER BY iDisplayOrder ASC";
    $data = $obj->MySQLSelect($Sql);

    if (!empty($data) && count($data) > 0) {
        $i = 0;
        foreach ($data as $d) {
            if ($d['eType'] == "Bidding") {
                $Sql_2 = "SELECT eStatus FROM $master_service_category_tbl WHERE eType = '" . $d['eType'] . "' AND eStatus != 'Inactive' ";
                $master_service_category = $obj->MySQLSelect($Sql_2);
                if (count($master_service_category) > 0) {
                    $Sql_1 = "SELECT bs.iBiddingId  as iVehicleCategoryId,

                    sm.iServiceId,

                    JSON_UNQUOTE(JSON_VALUE(sm.vTitle, '$.vTitle_" . $default_lang . "')) as vTitle,

                                JSON_UNQUOTE(JSON_VALUE(bs.vTitle, '$.vTitle_" . $default_lang . "')) as vCategory, vImage

                                FROM `master_service_menu` as sm 

                                JOIN bidding_service as bs ON  bs.iBiddingId = sm.iServiceId WHERE sm.eStatus != 'Inactive' AND bs.eStatus != 'Inactive'  AND sm.iParentId = " . $d['iServiceMenuId'] . " ORDER BY sm.iDisplayOrder = 0,sm.iDisplayOrder ASC ";
                    $dd = $obj->MySQLSelect($Sql_1);
                    $data[$i]['subcategory'] = $dd;
                }
            }  else if (in_array($d['eType'], ['NearBy', 'TrackService', 'TrackAnyService', 'RideShare', 'RentItem', 'RentEstate', 'RentCars'])) {
                $Sql_2 = "SELECT eStatus FROM $master_service_category_tbl WHERE eType = '" . $d['eType'] . "' AND eStatus != 'Inactive' ";
                $master_service_category = $obj->MySQLSelect($Sql_2);

                if (count($master_service_category) > 0) {
                    $Sql_1 = "SELECT sm.iServiceId,JSON_UNQUOTE(JSON_VALUE(sm.vTitle, '$.vTitle_" . $default_lang . "')) as vTitle,vc.iVehicleCategoryId,vCategory_" . $default_lang . " as vCategory FROM `master_service_menu` as sm JOIN vehicle_category as vc ON  vc.iVehicleCategoryId = sm.iServiceId WHERE sm.eStatus != 'Inactive'  AND vc.eStatus NOT IN ('Deleted','Inactive') AND sm.iServiceMenuId = " . $d['iServiceMenuId'] . " $sub_ssql ORDER BY sm.iDisplayOrder = 0,sm.iDisplayOrder ASC";
                    $dd = $obj->MySQLSelect($Sql_1);
                    foreach ($dd as $ddkey => $ddvalue) {
                        if($ddvalue['vTitle'] != ""){
                            $dd[$ddkey]['vTitle'] = $langage_lbl['LBL_CLICK_TO_SEE_MORE'];
                        }
                    }
                    $data[$i]['subcategory'] = $dd;
                }
            } else {
                $Sql_2 = "SELECT eStatus FROM $master_service_category_tbl WHERE eType = '" . $d['eType'] . "' AND eStatus != 'Inactive' ";
                $master_service_category = $obj->MySQLSelect($Sql_2);
                if (count($master_service_category) > 0 || $d['eType'] == 'DeliverAll') {
                    $medicalServices = $sub_ssql = '';
                    if ($d['eType'] == "MedicalServices") {
                        $medicalServices = "AND vc.tMedicalServiceInfo != ''";
                    }
                    if (in_array($d['eType'], ['UberX', 'VideoConsult']) && $MODULES_OBJ->isEnableMedicalServices()) {
                        $sub_ssql .= " AND vc.iVehicleCategoryId NOT IN (3,22,26,158) ";
                    }
                    if ($d['eType'] == "DeliverAll" && $MODULES_OBJ->isEnableMedicalServices()) {
                        $sub_ssql .= " AND vc.iServiceId NOT IN (5, 11) ";
                    }
                    $Sql_1 = "SELECT vc.tMedicalServiceInfo,sm.iServiceId,JSON_UNQUOTE(JSON_VALUE(sm.vTitle, '$.vTitle_" . $default_lang . "')) as vTitle,vc.iVehicleCategoryId,vCategory_" . $default_lang . " as vCategory, vc.eVideoConsultEnable FROM `master_service_menu` as sm 

                                JOIN vehicle_category as vc ON  vc.iVehicleCategoryId = sm.iServiceId WHERE sm.eStatus != 'Inactive'  AND vc.eStatus NOT IN ('Deleted','Inactive') AND sm.iParentId = " . $d['iServiceMenuId'] . " $medicalServices $sub_ssql ORDER BY sm.iDisplayOrder ASC";
                    $dd = $obj->MySQLSelect($Sql_1);
                    if ($d['eType'] == "MedicalServices") {
                        $OnDemandServicesArr = $VideoConsultServicesArr = $MoreServicesArr = array();
                        foreach ($dd as $med_service) {
                            if (!empty($med_service['tMedicalServiceInfo'])) {
                                $tMedicalServiceInfoArr = json_decode($med_service['tMedicalServiceInfo'], true);
                                if ($med_service['eVideoConsultEnable'] == "Yes" && $tMedicalServiceInfoArr['VideoConsult'] == "Yes") {
                                    $med_service['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderVC'];
                                    $VideoConsultServicesArr[] = $med_service;
                                }
                                if ($tMedicalServiceInfoArr['BookService'] == "Yes") {
                                    $med_service['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderBS'];
                                    $med_service['eVideoConsultEnable'] = 'No';
                                    $OnDemandServicesArr[] = $med_service;
                                }
                                if ($tMedicalServiceInfoArr['MoreService'] == "Yes") {
                                    $med_service['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderMS'];
                                    $MoreServicesArr[] = $med_service;
                                }
                            }
                        }
                        $ms_display_order = array_column($OnDemandServicesArr, 'ms_display_order');
                        array_multisort($ms_display_order, SORT_ASC, $OnDemandServicesArr);
                        $ms_display_order = array_column($VideoConsultServicesArr, 'ms_display_order');
                        array_multisort($ms_display_order, SORT_ASC, $VideoConsultServicesArr);
                        $ms_display_order = array_column($MoreServicesArr, 'ms_display_order');
                        array_multisort($ms_display_order, SORT_ASC, $MoreServicesArr);
                        $MEDICAL_SERVICES_ARR = array(
                            array(
                                'vTitle' => $langage_lbl['LBL_ON_DEMAND_MEDICAL_SERVICES_TITLE'],
                                'Services' => $OnDemandServicesArr,
                            ),
                            array(
                                'vTitle' => $langage_lbl['LBL_VIDEO_CONSULT_MEDICAL_SERVICES_TITLE'],
                                'Services' => $VideoConsultServicesArr,
                            ),
                            array(
                                'vTitle' => $langage_lbl['LBL_MEDICAL_MORE_SERVICES_TITLE'],
                                'Services' => $MoreServicesArr,
                            ),
                        );
                        $data[$i]['subcategory'] = $MEDICAL_SERVICES_ARR;
                    } else {
                        $data[$i]['subcategory'] = $dd;
                    }
                }
            }
            $i++;
        }
    }

    return $data;
}

function ourService_medicalallinone()
{
    global $obj, $default_lang, $langage_lbl;
    if (isset($_SESSION['sess_lang']) && !empty($_SESSION['sess_lang'])) {
        $default_lang = $_SESSION['sess_lang'];
    }
    $Sql_1 = "SELECT vc.eCatType,vc.tMedicalServiceInfo,vc.iVehicleCategoryId,vCategory_" . $default_lang . " as vCategory, vc.eVideoConsultEnable FROM vehicle_category as vc  WHERE    vc.eStatus NOT IN ('Deleted','Inactive')  AND vc.tMedicalServiceInfo != '' ";
    $dd = $obj->MySQLSelect($Sql_1);
    $OnDemandServicesArr = $VideoConsultServicesArr = $MoreServicesArr = array();
    foreach ($dd as $med_service) {
        if (!empty($med_service['tMedicalServiceInfo'])) {
            $tMedicalServiceInfoArr = json_decode($med_service['tMedicalServiceInfo'], true);
            if ($med_service['eVideoConsultEnable'] == "Yes" && $tMedicalServiceInfoArr['VideoConsult'] == "Yes") {
                $med_service['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderVC'];
                $VideoConsultServicesArr[] = $med_service;
            }
            if ($tMedicalServiceInfoArr['BookService'] == "Yes") {
                $med_service['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderBS'];
                $med_service['eVideoConsultEnable'] = 'No';
                $OnDemandServicesArr[] = $med_service;
            }
            if ($tMedicalServiceInfoArr['MoreService'] == "Yes") {
                $med_service['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderMS'];
                $MoreServicesArr[] = $med_service;
            }
        }
    }
    $ms_display_order = array_column($OnDemandServicesArr, 'ms_display_order');
    array_multisort($ms_display_order, SORT_ASC, $OnDemandServicesArr);
    $ms_display_order = array_column($VideoConsultServicesArr, 'ms_display_order');
    array_multisort($ms_display_order, SORT_ASC, $VideoConsultServicesArr);
    $ms_display_order = array_column($MoreServicesArr, 'ms_display_order');
    array_multisort($ms_display_order, SORT_ASC, $MoreServicesArr);
    $MEDICAL_SERVICES_ARR = array(
        array(
            'vTitle' => $langage_lbl['LBL_ON_DEMAND_MEDICAL_SERVICES_TITLE'],
            'Services' => $OnDemandServicesArr,
        ),
        array(
            'vTitle' => $langage_lbl['LBL_VIDEO_CONSULT_MEDICAL_SERVICES_TITLE'],
            'Services' => $VideoConsultServicesArr,
        ),
        array(
            'vTitle' => $langage_lbl['LBL_MEDICAL_MORE_SERVICES_TITLE'],
            'Services' => $MoreServicesArr,
        ),
    );
    $MEDICAL_SERVICES_ARR;
    return $MEDICAL_SERVICES_ARR;
}

// new our service header end//
function setGlobalVars($all_variables)
{
    foreach ($all_variables as $var => $value) {
        global $$var;
        $$var = $value;
    }
}

function setCurrentScopeVars()
{
    $super_global_variables_arr = array('GLOBALS', '_ENV', 'HTTP_ENV_VARS', '_POST', 'HTTP_POST_VARS', '_GET', 'HTTP_GET_VARS', '_COOKIE', 'HTTP_COOKIE_VARS', '_SERVER', 'HTTP_SERVER_VARS', '_FILES', 'HTTP_POST_FILES', '_REQUEST', 'HTTP_SESSION_VARS', '_SESSION');
    $returnArr = array();
    foreach ($GLOBALS as $var => $value) {
        if (!in_array($var, $super_global_variables_arr)) {
            $returnArr[$var] = $value;
        }
    }
    return $returnArr;
}

function validateApiRequest()
{
    if (!(isset($_REQUEST['GeneralUserType']) && !empty($_REQUEST['GeneralUserType']) && isset($_REQUEST['GeneralDeviceType']) && !empty($_REQUEST['GeneralDeviceType']) && isset($_REQUEST['GeneralAppVersion']) && !empty($_REQUEST['GeneralAppVersion']))) {
        $returnArr['Action'] = "0";
        $returnArr['message'] = "LBL_TRY_AGAIN_LATER";
        setDataResponse($returnArr, 'Yes');
    }
}

function xss_clean($data)
{
    // Fix &entity\n;
    $data = str_replace(array('&amp;', '&lt;', '&gt;'), array('&amp;amp;', '&amp;lt;', '&amp;gt;'), $data);
    $data = preg_replace('/(&#*\w+)[\x00-\x20]+;/u', '$1;', $data);
    $data = preg_replace('/(&#x*[0-9A-F]+);*/iu', '$1;', $data);
    $data = html_entity_decode($data, ENT_COMPAT, 'UTF-8');
    // Remove any attribute starting with "on" or xmlns
    $data = preg_replace('#(<[^>]+?[\x00-\x20"\'])(?:on|xmlns)[^>]*+>#iu', '$1>', $data);
    // Remove javascript: and vbscript: protocols
    $data = preg_replace('#([a-z]*)[\x00-\x20]*=[\x00-\x20]*([`\'"]*)[\x00-\x20]*j[\x00-\x20]*a[\x00-\x20]*v[\x00-\x20]*a[\x00-\x20]*s[\x00-\x20]*c[\x00-\x20]*r[\x00-\x20]*i[\x00-\x20]*p[\x00-\x20]*t[\x00-\x20]*:#iu', '$1=$2nojavascript...', $data);
    $data = preg_replace('#([a-z]*)[\x00-\x20]*=([\'"]*)[\x00-\x20]*v[\x00-\x20]*b[\x00-\x20]*s[\x00-\x20]*c[\x00-\x20]*r[\x00-\x20]*i[\x00-\x20]*p[\x00-\x20]*t[\x00-\x20]*:#iu', '$1=$2novbscript...', $data);
    $data = preg_replace('#([a-z]*)[\x00-\x20]*=([\'"]*)[\x00-\x20]*-moz-binding[\x00-\x20]*:#u', '$1=$2nomozbinding...', $data);
    // Only works in IE: <span style="width: expression(alert('Ping!'));"></span>
    $data = preg_replace('#(<[^>]+?)style[\x00-\x20]*=[\x00-\x20]*[`\'"]*.*?expression[\x00-\x20]*\([^>]*+>#i', '$1>', $data);
    $data = preg_replace('#(<[^>]+?)style[\x00-\x20]*=[\x00-\x20]*[`\'"]*.*?behaviour[\x00-\x20]*\([^>]*+>#i', '$1>', $data);
    $data = preg_replace('#(<[^>]+?)style[\x00-\x20]*=[\x00-\x20]*[`\'"]*.*?s[\x00-\x20]*c[\x00-\x20]*r[\x00-\x20]*i[\x00-\x20]*p[\x00-\x20]*t[\x00-\x20]*:*[^>]*+>#iu', '$1>', $data);
    // Remove namespaced elements (we do not need them)
    $data = preg_replace('#</*\w+:\w[^>]*+>#i', '', $data);
    do {
        // Remove really unwanted tags
        $old_data = $data;
        $data = preg_replace('#</*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|i(?:frame|layer)|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|title|xml)[^>]*+>#i', '', $data);
    } while ($old_data !== $data);
    // we are done...
    return $data;
}

// point number 2769 add getXssValidation function to prevent html code in input field -- SP (01-03-2022)
function getXssValidation($fieldVal, $ReplaceText, $MainText)
{
    if ($fieldVal != strip_tags($fieldVal)) {
        $message = str_replace('#FIELDNAME#', $ReplaceText, $MainText);
        $returnArr['Action'] = "0";
        $returnArr['message'] = $message;
        setDataResponse($returnArr);
    }
}

function validName($newstr)
{
    $newstr = preg_replace('/(?:<|&lt;)\/?([a-zA-Z]+) *[^<\/]*?(?:>|&gt;)/', '', $newstr);
    $newstr = strip_tags($newstr);
    //$newstr = preg_replace('/<[^>]*>/', ' ', $newstr);
    $newstr = preg_replace("/[$&+,:;=?@#|<>.^*()%!-]/", '', $newstr);
    return $newstr;
}

function getServiceCategoriesCubeX($Data, $lang)
{
    global $obj, $MODULES_OBJ, $VIDEO_CONSULT_OBJ, $BIDDING_OBJ, $languageLabelsArrCubeX, $tconfig, $master_service_category_tbl;
    $DataNewArr = array();
    $master_service_categories = $obj->MySQLSelect("SELECT *, JSON_UNQUOTE(JSON_VALUE(vCategoryName, '$.vCategoryName_" . $lang . "')) as vCategoryName FROM $master_service_category_tbl WHERE eStatus = 'Active'");
    foreach ($master_service_categories as $mServiceCategory) {
        if ($mServiceCategory['eType'] == "Ride") {
            $mServiceCategoryArr = array();
            $mServiceCategoryArr['vTitle'] = $languageLabelsArrCubeX['LBL_BOOK_SERVICE_TITLE'];
            $mServiceCategoryArr['eShowType'] = 'Header';
            $DataNewArr[] = $mServiceCategoryArr;
        }
        $mServiceCategoryArr = array();
        $mServiceCategoryArr['vCategoryName'] = $mServiceCategory['vCategoryName'];
        if ($mServiceCategory['eType'] == "Ride") {
            $mServiceCategoryArr['vCategoryTitle'] = $languageLabelsArrCubeX['LBL_TAXI_CATEGORY_TITLE'];
        } elseif ($mServiceCategory['eType'] == "Deliver") {
            $mServiceCategoryArr['vCategoryTitle'] = $languageLabelsArrCubeX['LBL_DELIVERY_CATEGORY_TITLE'];
        }
        $mServiceCategoryArr['vCategory'] = "";
        $mServiceCategoryArr['eShowType'] = "CubeXList";
        $mServiceCategoryArr['vBgColor'] = $mServiceCategory['vBgColor'];
        $mServiceCategoryArr['vTextColor'] = $mServiceCategory['vTextColor'];
        $mServiceCategoryArr['ListMaxCount'] = $mServiceCategory['iListMaxCount'];
        $mServiceCategoryArr['vIconImage'] = $mServiceCategoryArr['vBgImage'] = "";
        if (!empty($mServiceCategory['vIconImage']) && file_exists($tconfig["tsite_upload_app_home_screen_images_path"] . $mServiceCategory['vIconImage'])) {
            $mServiceCategoryArr['vIconImage'] = $tconfig["tsite_upload_app_home_screen_images"] . $mServiceCategory['vIconImage1'];
        }
        $mServiceCategoryArr['SubCategories'] = array();
        $vCount = 0;
        foreach ($Data as $skey => $SubCategories) {
            $Data[$skey]['eShowType'] = "Icon";
            $Data[$skey]['eCatViewType'] = "List";
            $Data[$skey]['vLogo_image'] = $Data[$skey]['vListLogo'];
            if ($mServiceCategory['eType'] == "Ride" && (in_array($SubCategories['eCatType'], ['Ride', 'MotoRide', 'Rental', 'MotoRental', 'RidePool']) || ($MODULES_OBJ->isAirFlightModuleAvailable() && $SubCategories['eCatType'] == 'Fly'))) {
                $mServiceCategoryArr['SubCategories'][] = $Data[$skey];
            } elseif ($mServiceCategory['eType'] == "Deliver") {
                if (($MODULES_OBJ->isDeliveryFeatureAvailable() && in_array($SubCategories['eCatType'], ['Delivery', 'MotoDelivery', 'MultipleDelivery', 'MoreDelivery'])) || ($MODULES_OBJ->isDeliverAllFeatureAvailable() && in_array($SubCategories['eCatType'], ['DeliverAll'])) || ($MODULES_OBJ->isEnableAnywhereDeliveryFeature() && in_array($SubCategories['eCatType'], ['Genie', 'Runner', 'Anywhere']))) {
                    if ($SubCategories['iVehicleCategoryId'] != '185') {
                        $mServiceCategoryArr['SubCategories'][] = $Data[$skey];
                    }
                }
            }
        }
        $DataNewArr[] = $mServiceCategoryArr;
    }
    return $DataNewArr;
}

function getServiceCategoriesDeliveryKingX($Data, $lang)
{
    global $obj, $MODULES_OBJ, $VIDEO_CONSULT_OBJ, $BIDDING_OBJ, $languageLabelsArrDeliveryKingX, $tconfig;
    $DataNewArr = array();
    $mServiceCategoryArr = array();
    $mServiceCategoryArr['vTitle'] = $languageLabelsArrDeliveryKingX['LBL_HEADER_ORDER_SERVICE_TITLE'];
    $mServiceCategoryArr['eShowType'] = 'Header';
    $DataNewArr[] = $mServiceCategoryArr;
    $mServiceCategoryArr = array();
    $mServiceCategoryArr['vCategoryName'] = "";
    $mServiceCategoryArr['vCategoryTitle'] = "";
    $mServiceCategoryArr['vCategory'] = "";
    $mServiceCategoryArr['eShowType'] = "Service_Icon";
    $mServiceCategoryArr['SubCategories'] = array();
    $vCount = 0;
    $exclude_service = array();
    foreach ($Data as $skey => $SubCategories) {
        $Data[$skey]['vLogo_image'] = $Data[$skey]['vListLogo'];
        if ($MODULES_OBJ->isDeliverAllFeatureAvailable() && in_array($SubCategories['eCatType'], ['DeliverAll'])) {
            if ($SubCategories['eCatViewType'] == "Icon") {
                $Data[$skey]['eShowType'] = "Service_Icon";
                $mServiceCategoryArr['SubCategories'][] = $Data[$skey];
                $exclude_service[] = $Data[$skey]['iVehicleCategoryId'];
            }
        }
    }
    $DataNewArr[] = $mServiceCategoryArr;
    foreach ($Data as $skey => $SubCategories) {
        $mServiceCategoryArr = array();
        $mServiceCategoryArr['vCategoryName'] = $SubCategories['vCategory'];
        $mServiceCategoryArr['vCategoryTitle'] = "";
        $mServiceCategoryArr['vCategory'] = "";
        $mServiceCategoryArr['vLogo_image'] = $SubCategories['vListLogo'];
        if (($MODULES_OBJ->isDeliverAllFeatureAvailable() && in_array($SubCategories['eCatType'], ['DeliverAll'])) || ($MODULES_OBJ->isDeliveryFeatureAvailable() && in_array($SubCategories['eCatType'], ['Delivery', 'MotoDelivery', 'MultipleDelivery', 'MoreDelivery'])) || ($MODULES_OBJ->isEnableAnywhereDeliveryFeature() && in_array($SubCategories['eCatType'], ['Genie', 'Runner', 'Anywhere']))) {
            if ($SubCategories['eCatViewType'] == "List") {
                $Data[$skey]['eShowType'] = "Service_List";
                $mServiceCategoryArr = array_merge($mServiceCategoryArr, $Data[$skey]);
                $DataNewArr[] = $mServiceCategoryArr;
            }
        }
    }
    return $DataNewArr;
}

function getValidDiscountForTrip($tVehicle_TypeFare_Data, $vChargesDetailData)
{
    global $obj, $currencyratioDriver, $currencyvNameDriver, $tripData, $LANG_OBJ, $lang, $fDriverDiscountDefaultCurrency, $fDriverDiscount, $TripId, $type;
    if (isset($_REQUEST['vGeneralLang']) && !empty($_REQUEST['vGeneralLang'])) {
        $lang = $_REQUEST['vGeneralLang'];
    } else {
        $lang = $LANG_OBJ->FetchDefaultLangData("vCode");
    }
    $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($lang, "1", "");
    $CostcalculateTripCostCommision = calculateTripCostCommision($TripId);
    $fMaterialFeeDefaultCurrency = 0;
    if (isset($vChargesDetailData['fMaterialFee']) && !empty($vChargesDetailData['fMaterialFee'])) {
        $fMaterialFeeDefaultCurrency = $vChargesDetailData['fMaterialFee'];
    }
    $fMiscFeeDefaultCurrency = 0;
    if (isset($vChargesDetailData['fMiscFee']) && !empty($vChargesDetailData['fMiscFee'])) {
        $fMiscFeeDefaultCurrency = $vChargesDetailData['fMiscFee'];
    }
    $FareCommision = 0;
    $serviceCostDefaultCurrency = $CostcalculateTripCostCommision['FinalFare_UFX_Commission'];
    if ($tVehicle_TypeFare_Data['eFareTypeServices'] == 'Fixed') {
        $serviceCostDefaultCurrency = $tVehicle_TypeFare_Data['originalFareTotal'];
    }
    if (isset($CostcalculateTripCostCommision['fCommision']) && !empty($CostcalculateTripCostCommision['fCommision'])) {
        $FareCommision = $CostcalculateTripCostCommision['fCommision'];
    }
    $UberX_Trip_Charge = DisplayTripChargeForUberX($TripId);
    $serviceCostDefaultCurrency = $UberX_Trip_Charge['TotalFareUberXSystemDefault'];
    $validDiscount = (($fMaterialFeeDefaultCurrency + $fMiscFeeDefaultCurrency + $serviceCostDefaultCurrency) - $FareCommision);
    if ($validDiscount < 0) {
        $validDiscount = 0;
    }
    if ($fDriverDiscountDefaultCurrency > (String)$validDiscount) {
        $validDiscount = formateNumAsPerCurrency($validDiscount * $currencyratioDriver, $currencyvNameDriver);
        $returnArr['message'] = str_replace("#AMOUNT#", $validDiscount, $languageLabelsArr['LBL_PROVIDER_MAX_DISCOUNT_ALLOWED_MSG']);
        $returnArr['Action'] = "0";
        setDataResponse($returnArr);
    }
}

function calculateTripCostCommision($tripId)
{
    global $obj, $currencyvNameDriver, $MODULES_OBJ, $currencyratioDriver, $fMaterialFee, $fMiscFee, $fDriverDiscount;
    $userId = isset($_REQUEST["PassengerId"]) ? $_REQUEST["PassengerId"] : '';
    if (isset($tripDetailsArr['trips_' . $tripId])) {
        $trip_start_data_arr = $tripDetailsArr['trips_' . $tripId];
    } else {
        $trip_start_data_arr = $obj->MySQLSelect("SELECT *,fRatio_" . $currencyvNameDriver . " as fRatioDriver FROM trips WHERE iTripId='" . $tripId . "'");
        $tripDetailsArr['trips_' . $tripId] = $trip_start_data_arr;
    }
    $tripDistance = calcluateTripDistance($tripId);
    $sourcePointLatitude = $trip_start_data_arr[0]['tStartLat'];
    $sourcePointLongitude = $trip_start_data_arr[0]['tStartLong'];
    $startDate = $trip_start_data_arr[0]['tStartDate'];
    $tDriverArrivedDate = $trip_start_data_arr[0]['tDriverArrivedDate'];
    $waiting_time_diff = strtotime($startDate) - strtotime($tDriverArrivedDate);
    $waitingTime = floor($waiting_time_diff / 60);
    $vehicleTypeID = $trip_start_data_arr[0]['iVehicleTypeId'];
    $eFareType = $trip_start_data_arr[0]['eFareType'];
    $eType = $trip_start_data_arr[0]['eType'];
    $eFlatTrip = $trip_start_data_arr[0]['eFlatTrip'];
    $fFlatTripPrice = $trip_start_data_arr[0]['fFlatTripPrice'];
    $eHailTrip = $trip_start_data_arr[0]['eHailTrip'];
    $eType = $trip_start_data_arr[0]['eType'];
    $eServiceEnd = $trip_start_data_arr[0]['eServiceEnd'];
    $UberXtripEndDate = $trip_start_data_arr[0]['tEndDate'];
    $ePoolRide = $trip_start_data_arr[0]['ePoolRide'];
    $iPersonSize = $trip_start_data_arr[0]['iPersonSize'];
    $iVehicleTypeId = $trip_start_data_arr[0]['iVehicleTypeId'];
    $tStartLat = $trip_start_data_arr[0]['tStartLat'];
    $tStartLong = $trip_start_data_arr[0]['tStartLong'];
    $iFromStationId = $trip_start_data_arr[0]['iFromStationId'];
    $iToStationId = $trip_start_data_arr[0]['iToStationId'];
    $isVideoCall = $trip_start_data_arr[0]['isVideoCall'];
    $eTollSkipped = $trip_start_data_arr[0]['eTollSkipped'];
    $eType = $trip_start_data_arr[0]['eType'];
    $eFareGenerated = $trip_start_data_arr[0]['eFareGenerated'];
    $destination_lat = $trip_start_data_arr[0]['tEndLat'];
    $destination_lon = $trip_start_data_arr[0]['tEndLong'];
    $endDateOfTrip = $trip_start_data_arr[0]['tEndDate'];
    $couponCode = trim($trip_start_data_arr[0]['vCouponCode']);
    $discountValue = 0;
    $discountValueType = "cash";
    if ($couponCode != '') {
        $getCouponCode = $obj->MySQLSelect("SELECT fDiscount,eType FROM coupon WHERE vCouponCode='" . $couponCode . "' AND eStatus='Active'");
        if (count($getCouponCode) > 0) {
            $discountValue = $getCouponCode[0]['fDiscount'];
            $discountValueType = $getCouponCode[0]['eType'];
        }
    }
    if ($endDateOfTrip == "0000-00-00 00:00:00" || $eType == "Multi-Delivery") {
        $endDateOfTrip = @date("Y-m-d H:i:s");
    }
    $totalHoldTimeInMinutes_trip = 0;
    if ($eType == "UberX") {
        $endDateOfTrip = $UberXtripEndDate;
    }
    if (strtoupper(PACKAGE_TYPE) == "SHARK") {
        if ($eType == "Ride" && $ENABLE_INTRANSIT_SHOPPING_SYSTEM == "Yes") {
            $totalHoldTimeInMinutes_trip = InTransitMinutes($tripId);
        }
    }
    if ($eFareType == 'Hourly') {
        $db_tripTimes = $obj->MySQLSelect("SELECT * FROM `trip_times` WHERE iTripId='" . $tripId . "'");
        $totalSec = 0;
        $iTripTimeId = '';
        foreach ($db_tripTimes as $dtT) {
            if ($dtT['dPauseTime'] != '' && $dtT['dPauseTime'] != '0000-00-00 00:00:00') {
                $totalSec += strtotime($dtT['dPauseTime']) - strtotime($dtT['dResumeTime']);
            }
        }
        $totalTimeInMinutes_trip = @round(abs($totalSec) / 60, 2);
    } else {
        $totalTimeInMinutes_trip = @round(abs(strtotime($startDate) - strtotime($endDateOfTrip)) / 60, 2);
    }
    if ($totalTimeInMinutes_trip <= 1) {
        $FinalDistance = $tripDistance;
    } else {
        $FinalDistanceArr = getDistanceInfoFromGoogleDirections($tripDistance, $sourcePointLatitude, $sourcePointLongitude, $destination_lat, $destination_lon, "0", "", true);
        $FinalDistance = $FinalDistanceArr['Distance'];
    }
    $tripDistance = $FinalDistance;
    $onlyCommissionGet = 1;
    return $Fare_data = calculateTripCost($totalTimeInMinutes_trip, $tripDistance, $vehicleTypeID, $userId, 1, $startDate, $endDateOfTrip, $couponCode, $tripId, $fMaterialFee, $fMiscFee, $fDriverDiscount, $waitingTime, $totalHoldTimeInMinutes_trip, '', $onlyCommissionGet);
}

function getPaymentDefaultCard($iMemberId, $eUserType, $iPaymentInfoId = 0)
{
    global $obj, $SYSTEM_PAYMENT_ENVIRONMENT, $USER_APP_PAYMENT_METHOD;
    $ssql_c = " AND eDefault = 'Yes' ";
    if (!empty($iPaymentInfoId) && $iPaymentInfoId > 0) {
        $ssql_c = " AND iPaymentInfoId = '$iPaymentInfoId' ";
    }
    $userPaymentInfo = $obj->MySQLSelect("SELECT iPaymentInfoId, tCardNum, tCardToken, vCardBrand FROM user_payment_info WHERE iMemberId = '" . $iMemberId . "' AND eUserType = '$eUserType' AND vPaymentMethod = '" . $USER_APP_PAYMENT_METHOD . "' AND eStatus = 'Active' AND ePaymentEnv = '" . $SYSTEM_PAYMENT_ENVIRONMENT . "' $ssql_c");
    return $userPaymentInfo;
}

function getPaymentCustomerInfo($iMemberId, $eUserType)
{
    global $obj, $SYSTEM_PAYMENT_ENVIRONMENT, $USER_APP_PAYMENT_METHOD;
    $userPaymentInfo = $obj->MySQLSelect("SELECT tCustomerId FROM payment_customer_info WHERE iMemberId = '" . $iMemberId . "' AND eUserType = '$eUserType' AND vPaymentMethod = '" . $USER_APP_PAYMENT_METHOD . "' AND ePaymentEnv = '" . $SYSTEM_PAYMENT_ENVIRONMENT . "'");
    return $userPaymentInfo;
}

function convertMinToHoursToDays($num, $Text,$short = 0)
{
    global $langLabels;

    $returnText = '';
    if ($Text == "Hours") {
        $seconds = $num * 60 * 60;
    } elseif ($Text == "Minutes") {
        $seconds = $num * 60;
    }
    $dt1 = new DateTime("@0");
    $dt2 = new DateTime("@$seconds");
    $days = $dt1->diff($dt2)->format('%a');
    $hours = $dt1->diff($dt2)->format('%h');
    $minutes = $dt1->diff($dt2)->format('%i');
    if ($days >= 1) {
        if ($days == 1) {
            $day_text = $langLabels['LBL_DAY_TXT'];
        } else {
            $day_text = $langLabels['LBL_DAYS_TXT'];
        }
        if($short == 1){
            $day_text = $days == 1 ? 'day' : 'days';
        }
        $returnText .= $days . ' ' . $day_text;
    }
    if ($hours >= 1) {
        if ($hours == 1) {
            $hour_text = $langLabels['LBL_HOUR_TXT'];
        } else {
            $hour_text = $langLabels['LBL_HOURS_TXT'];
        }
        if($short == 1){
            $hour_text = 'hr';
        }
        $returnText .= ' ' . $hours . ' ' . $hour_text;
    }
    if ($minutes >= 1) {
        $MINUTES_TXT = $langLabels['LBL_MINUTES_TXT'];
        if($short == 1){
            $MINUTES_TXT = 'min';
        }
        $returnText .= ' ' . $minutes . ' ' . $MINUTES_TXT;
    }
    if(empty($returnText)) {
        $returnText = "0 min";
    }
    return $returnText;
}

function file_ext_new($file_name)
{
    $filecheck = basename($file_name);
    $fileextarr = explode(".", $filecheck);
    $ext = strtolower($fileextarr[count($fileextarr) - 1]);
    if ($ext == "jpg" || $ext == "gif" || $ext == "png" || $ext == "jpeg" || $ext == "bmp" || $ext == "svg") {
        $check_ext = 'is_image';
    } else if ($ext == "pdf") {
        $check_ext = 'is_pdf';
    } else if ($ext == "doc" || $ext == "docx") {
        $check_ext = 'is_doc';
    } else {
        $check_ext = 'is_image';
    }
    return $check_ext;
}

function removehtml($newstr)
{
    $newstr = preg_replace('/(?:<|&lt;)\/?([a-zA-Z]+) *[^<\/]*?(?:>|&gt;)/', '', $newstr);
    $newstr = strip_tags($newstr);
    return $newstr;
}

function delivery_fields($vLanguage = 'EN')
{
    global $obj;
    $sql = "select vFieldName_$vLanguage as vFieldName,eInputType,eAllowFloat,eRequired,eEditable,iOrder,tDesc,eStatus,iDeliveryFieldId from delivery_fields where eStatus='Active' order by iOrder ASC";
    $db_fields = $obj->MySQLSelect($sql);
    $Data_Field = [];
    if (count($db_fields) > 0) {
        for ($i = 0; $i < count($db_fields); $i++) {
            if ($db_fields[$i]['eInputType'] == "Select") {
                $sql = "SELECT iPackageTypeId,vName_$vLanguage as vName FROM `package_type` where iDeliveryFieldId='" . $db_fields[$i]['iDeliveryFieldId'] . "' and eStatus='Active'";
                $db_field_values = $obj->MySQLSelect($sql);
                $Data_Field[$i]['Options'] = $db_field_values;
            }
            $Data_Field[$i]['vFieldName'] = $db_fields[$i]['vFieldName'];
            $Data_Field[$i]['eInputType'] = $db_fields[$i]['eInputType'];
            $Data_Field[$i]['eAllowFloat'] = $db_fields[$i]['eAllowFloat'];
            $Data_Field[$i]['eRequired'] = $db_fields[$i]['eRequired'];
            // $Data_Field[$i]['tDesc'] = $db_fields[$i]['tDesc'];
            $Data_Field[$i]['tDesc'] = $db_fields[$i]['vFieldName'];
            $Data_Field[$i]['iDeliveryFieldId'] = $db_fields[$i]['iDeliveryFieldId'];
        }
    }
    return $Data_Field;
}

function getNumber($text)
{
    return preg_replace('/[^0-9-.]+/', '', $text);
}

function getCardBrandName($vCardBrand, $languageLabelsArr)
{
    switch ($vCardBrand) {
        case 'visa':
            return $languageLabelsArr['LBL_VISA_TXT'];
            break;
        case 'visaelectron':
            return $languageLabelsArr['LBL_VISAELECTRON_TXT'];
            break;
        case 'verve':
            return $languageLabelsArr['LBL_VERVE_TXT'];
            break;
        case 'unionpay':
            return $languageLabelsArr['LBL_UNIONPAY_TXT'];
            break;
        case 'mastercard':
            return $languageLabelsArr['LBL_MASTERCARD_TXT'];
            break;
        case 'maestro':
            return $languageLabelsArr['LBL_MAESTRO_TXT'];
            break;
        case 'mada':
            return $languageLabelsArr['LBL_MADA_TXT'];
            break;
        case 'jcb':
            return $languageLabelsArr['LBL_JCB_TXT'];
            break;
        case 'forbrugsforeningen':
            return $languageLabelsArr['LBL_FORBRUGSFORENINGEN_TXT'];
            break;
        case 'discover':
            return $languageLabelsArr['LBL_DISCOVER_TXT'];
            break;
        case 'dinersclub':
            return $languageLabelsArr['LBL_DINERSCLUB_TXT'];
            break;
        case 'diners':
            return $languageLabelsArr['LBL_DINERSCLUB_TXT'];
            break;
        case 'dankort':
            return $languageLabelsArr['LBL_DANKORT_TXT'];
            break;
        case 'amex':
            return $languageLabelsArr['LBL_AMEX_TXT'];
            break;
        default:
            return '(' . $languageLabelsArr['LBL_CARD'] . ')';
            break;
    }
}

function checkUsedMake($iMakeId)
{
    global $obj;
    $userPaymentInfo = $obj->MySQLSelect("SELECT iDriverVehicleId FROM `driver_vehicle` WHERE  iMakeId = $iMakeId AND eStatus != 'Deleted'");
    return $userPaymentInfo;
}

function checkUsedModel($iModelId)
{
    global $obj;
    $userPaymentInfo = $obj->MySQLSelect("SELECT iDriverVehicleId FROM `driver_vehicle` WHERE  iModelId = $iModelId AND eStatus != 'Deleted'");
    return $userPaymentInfo;
}

/*------------------- store item import ------------------*/
function grab_image($url, $saveto)
{
    $url = urldecode($url);
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_BINARYTRANSFER, 1);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10); //timeout in seconds
    $raw = curl_exec($ch);
    $error_msg = curl_error($ch);
    if (!empty($error_msg)) {
    }
    curl_close($ch);
    if (file_exists($saveto)) {
        //unlink($saveto);
    }
    $fp = fopen($saveto, 'w');
    fwrite($fp, $raw);
    fclose($fp);
}

function reconstruct_url($url)
{
    $url_parts = parse_url($url);
    $constructed_url = $url_parts['scheme'] . '://' . $url_parts['host'] . $url_parts['path'];
    return $constructed_url;
}

/*------------------- store item import ------------------*/
function sortNestedArrayAssoc(&$a)
{
    if (!is_array($a)) {
        return false;
    }
    ksort($a);
    foreach ($a as $k => $v) {
        sortNestedArrayAssoc($a[$k]);
    }
    array_walk_recursive($a, function (&$value) {
        $value = !is_null($value) ? $value : "";
    });
    return true;
}

function dateDiffInDays($date1, $date2)
{
    // Calculating the difference in timestamps
    $diff = strtotime($date2) - strtotime($date1);
    // 1 day = 24 hours
    // 24 * 60 * 60 = 86400 seconds
    return abs(round($diff / 86400));
}

function getMissingdate($myDates, $vDate)
{
    $missingDates = array();
    $month = date('Y-m', strtotime($vDate));
    $max_month = date('Y-m');
    $month_days = date('t', strtotime($vDate));
    if ($month == $max_month) {
        $month_days = date('d');
    }
    $month_arr = array();
    for ($i = 1; $i <= $month_days; $i++) {
        $day = str_pad($i, 2, 0, STR_PAD_LEFT);
        $month_arr[] = date('Y-m-' . $day, strtotime($month));
    }
    $missingDates = array_values(array_diff($month_arr, array_unique($myDates)));
    return $missingDates;
}

function getEarningDates($myDates)
{
    $earningDates = array_values(array_unique($myDates));
    return $earningDates;
}

function AllowphoneNumWithZero($UserType, $phoneNumber, $field, $tableName, $vPhoneCode, $selectedfield = '')
{
    global $obj, $findNumber;
    $first = substr($phoneNumber, 0, 1);
    if ($first == "0") {
        $emailorphoneData_ = substr($phoneNumber, 1);
    } else {
        $emailorphoneData_ = '0' . $phoneNumber;
    }
    $selectedfield_sql = $sql = '';
    $sql .= " OR {$field} = '$emailorphoneData_' ";
    if (!empty($selectedfield)) {
        $selectedfield_sql .= " OR {$selectedfield} = '$emailorphoneData_' ";
    }
    if ($UserType == 'Driver') {
        $getfield = 'vCountry,vCode,iDriverId,vEmail,vName,vLastName,vPhone,vImage';
        $codeField = 'vCode';
    }
    if ($UserType == 'Company') {
        $getfield = 'vCountry,vCode,vEmail,vName,vLastName,vPhone,vImage';
        $codeField = 'vCode';
    }
    if ($UserType == 'Company') {
        $getfield = 'vCountry,vCode,vEmail,vName,vLastName,vPhone,vImage';
        $codeField = 'vCode';
    } else {
        $getfield = 'vCountry,vPhoneCode,iUserId,vEmail,vName,vLastName,vPhone,vImgName';
        $codeField = 'vPhoneCode';
    }
    if($UserType == 'tracking_company'){
        $getfield = 'vCountry,vCode,iTrackServiceCompanyId,vEmail,vPhone';
        $codeField = 'vCode';
    }
    if($UserType == 'Tracking'){
        $getfield = 'vCountry,vCode,iTrackServiceUserId,vEmail,vPhone';
        $codeField = 'vPhoneCode';
    }

    $get_data = $obj->MySQLSelect("SELECT $getfield FROM " . $tableName . " WHERE ($field = '$phoneNumber' {$sql} ) AND $codeField = '$vPhoneCode' AND eStatus = 'Active'");


    if ($UserType == 'Driver') {
        $vCountry = $get_data[0]['vPhone'];
        $vPhoneCode = $get_data[0]['vCode'];
    } else if ($UserType == 'Company') {
        $vCountry = $get_data[0]['vCountry'];
        $vPhoneCode = $get_data[0]['vCode'];
    } else {
        $vCountry = $get_data[0]['vCountry'];
        $vPhoneCode = $get_data[0]['vPhoneCode'];
    }
    if (!empty($vCountry) && !empty($vPhoneCode)) {
        $CountryData = $obj->MySQLSelect("SELECT eZeroAllowed,vCountryCode FROM `country` WHERE vCountryCode  = '" . $vCountry . "' AND vPhoneCode = '" . $vPhoneCode . "'");
        if (!empty($selectedfield)) {
            return $selectedfield_sql;
        }
        if ($findNumber == 1) {
            return $CountryData[0]['eZeroAllowed'];
        }
        if ($CountryData[0]['eZeroAllowed'] == 'No') {
            $sql = '';
        }
    }
    return $sql;
}

function getFinalFare($iBaseFare, $priceParMin, $tripTimeInMinutes, $priceParKM, $distance, $siteCommision, $priceRatio, $vCurrencyCode, $startDate, $endDate)
{
    if ($startDate != '' && $endDate != '') {
        $tripTimeInMinutes = @round(abs(strtotime($startDate) - strtotime($endDate)) / 60, 2);
    }
    $Minute_Fare = round($priceParMin * $tripTimeInMinutes, 2) * $priceRatio;
    $Distance_Fare = round($priceParKM * $distance, 2) * $priceRatio;
    $iBaseFare = round($iBaseFare, 2) * $priceRatio;
    $total_fare = $iBaseFare + $Minute_Fare + $Distance_Fare;
    $Commision_Fare = round((($total_fare * $siteCommision) / 100), 2) * $priceRatio;
    $total_fare = $total_fare + $Commision_Fare;
    $result['FareOfMinutes'] = $Minute_Fare;
    $result['FareOfDistance'] = $Distance_Fare;
    $result['FareOfCommision'] = $Commision_Fare;
    $result['iBaseFare'] = $iBaseFare;
    $result['fPricePerMin'] = $priceParMin * $priceRatio;
    $result['fPricePerKM'] = $priceParKM * $priceRatio;
    $result['fCommision'] = $siteCommision * $priceRatio;
    $result['FinalFare'] = $total_fare;
    return $result;
}

function getInnerPageUrl($iVehicleCategoryId)
{
    return getSeviceCategoryDataForHomepage($iVehicleCategoryId, $notin = 0, $customurl = 1, $isAdmin = "No");
}

function getServiceCategoriesMedicalServices($Data, $lang, $CategoryType)
{
    global $tconfig, $languageLabelsArrMS, $MODULES_OBJ;

    if ($CategoryType == "SubCategories") {
        foreach ($Data as $medicalService) {
            if ($medicalService['eForMedicalService'] == "Yes" || $medicalService['iVehicleCategoryId'] == "3") {
                $medicalService['eCatViewType'] = "List";
                $medicalService['eForMedicalService'] = "Yes";
                $medicalServiceData = array();
                $medicalServiceData = $medicalService;
                $MEDICAL_SERVICES_ARR[] = $medicalServiceData;
            }
        }
    } else {
        $OnDemandServicesArr = $VideoConsultServicesArr = $MoreServicesArr = array();
        // echo "<pre>"; print_r($Data); exit;
        foreach ($Data as $medicalService) {
            if ($medicalService['eForMedicalService'] == "Yes" && in_array($medicalService['iParentId'], [0, 3])) {


                $medicalServiceData = array();
                $BannerButtonText = "tBannerButtonText_" . $lang;
                $tBannerButtonTextArr = json_decode($medicalService['tBannerButtonText'], true);
                $tBannerButtonText = $tBannerButtonTextArr[$BannerButtonText];
                $listDescText = "tListDescription_" . $lang;
                if (isJsonTextGT($medicalService['tListDescription'])) {
                    $tListDescriptionArr = json_decode($medicalService['tListDescription'], true);
                    $tListDescriptionText = $tListDescriptionArr[$listDescText];
                } else {
                    $tListDescriptionText = $medicalService['tListDescription'];
                }
                if ($tListDescriptionText == null) {
                    $tListDescriptionText = "";
                }
                $medicalServiceData['eCatType'] = $medicalService['eCatType'];
                $medicalServiceData['eSubCatType'] = $medicalService['eSubCatType'];
                $medicalServiceData['eDeliveryType'] = $medicalService['eDeliveryType'];
                $medicalServiceData['iVehicleCategoryId'] = $medicalService['iVehicleCategoryId'];
                $medicalServiceData['vCategory'] = $medicalService['vCategory'];
                $medicalServiceData['vCategoryBanner'] = $medicalService['vCategory'];
                $medicalServiceData['vLogo'] = $medicalService['vLogo'];
                if(isset($medicalService['vLogo2'])) {
                    $medicalServiceData['vLogo_image'] = $tconfig['tsite_upload_images_vehicle_category'] . '/' . $medicalService['iVehicleCategoryId'] . '/android/' . $medicalService['vLogo2'];
                }                
                $medicalServiceData['eShowType'] = "";
                $medicalServiceData['tBannerButtonText'] = isset($tBannerButtonText) ? $tBannerButtonText : "";
                $medicalServiceData['vBannerImage'] = "";
                if ($medicalService['vListLogo'] != "" && $medicalService['iParentId'] == 0) {
                    $medicalServiceData['vListLogo'] = $medicalService['vListLogo'];
                } else {
                    $medicalServiceData['vListLogo'] = $medicalServiceData['vLogo_image'];
                }
                $medicalServiceData['vImage'] = $medicalServiceData['vListLogo'];

                if($medicalService['eCatType'] == "DeliverAll"){
                    $medicalServiceData['iServiceId'] = $medicalService['iServiceId'];
                }
                $medicalServiceData['eCatViewType'] = $medicalService['eCatViewType'];
                $medicalServiceData['tListDescription'] = $tListDescriptionText;
                $medicalServiceData['eVideoConsultEnable'] = "No";
                if ($MODULES_OBJ->isEnableVideoConsultingService()) {
                    $medicalServiceData['eVideoConsultEnable'] = isset($medicalService['eVideoConsultEnable']) ? $medicalService['eVideoConsultEnable'] : "No";
                }
                $medicalServiceData['eFor'] = $medicalService['eFor'];
                $medicalServiceData['iParentId'] = $medicalService['iParentId'];
                $medicalServiceData['vParentCategoryName'] = isset($medicalService['vParentCategoryName']) ? $medicalService['vParentCategoryName'] : "";
                $medicalServiceData['eForMedicalService'] = $medicalService['eForMedicalService'];
                if (!empty($medicalService['tMedicalServiceInfo'])) {
                    $tMedicalServiceInfoArr = json_decode($medicalService['tMedicalServiceInfo'], true);
                    if ($tMedicalServiceInfoArr['BookService'] == "Yes") {
                        $medicalServiceData['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderBS'];
                        $medicalServiceDataBS = array();
                        $medicalServiceDataBS = $medicalServiceData;
                        $medicalServiceDataBS['eVideoConsultEnable'] = "No";
                        $OnDemandServicesArr[] = $medicalServiceDataBS;
                    }
                    if (isset($medicalService['eVideoConsultEnable']) && $medicalService['eVideoConsultEnable'] == "Yes" && $tMedicalServiceInfoArr['VideoConsult'] == "Yes") {
                        $medicalServiceData['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderVC'];
                        $VideoConsultServicesArr[] = $medicalServiceData;
                    }
                    if ($tMedicalServiceInfoArr['MoreService'] == "Yes") {
                        $medicalServiceData['ms_display_order'] = $tMedicalServiceInfoArr['iDisplayOrderMS'];
                        $medicalServiceDataMS = array();
                        $medicalServiceDataMS = $medicalServiceData;
                        $medicalServiceDataMS['eVideoConsultEnable'] = "No";
                        $MoreServicesArr[] = $medicalServiceDataMS;
                    }
                }
            }
        }
        $ms_display_order = array_column($OnDemandServicesArr, 'ms_display_order');
        array_multisort($ms_display_order, SORT_ASC, $OnDemandServicesArr);
        $ms_display_order = array_column($VideoConsultServicesArr, 'ms_display_order');
        array_multisort($ms_display_order, SORT_ASC, $VideoConsultServicesArr);
        $ms_display_order = array_column($MoreServicesArr, 'ms_display_order');
        array_multisort($ms_display_order, SORT_ASC, $MoreServicesArr);
        $MEDICAL_SERVICES_ARR = array();

        if($MODULES_OBJ->isEnableAppHomeScreenLayoutV3()) {
            if (!empty($OnDemandServicesArr) && count($OnDemandServicesArr) > 0) {
                $MEDICAL_SERVICES_ARR['BookService'] = array(
                    'vTitle' => $languageLabelsArrMS['LBL_ON_DEMAND_MEDICAL_SERVICES_TITLE'],
                    'vDescription' => $languageLabelsArrMS['LBL_ON_DEMAND_MEDICAL_SERVICES_DESC'],
                    'GridView' => "No",
                    'Services' => $OnDemandServicesArr
                );
            }
            if (!empty($VideoConsultServicesArr) && count($VideoConsultServicesArr) > 0) {
                $MEDICAL_SERVICES_ARR['VideoConsult'] = array(
                    'vTitle' => $languageLabelsArrMS['LBL_VIDEO_CONSULT_MEDICAL_SERVICES_TITLE'],
                    'vDescription' => $languageLabelsArrMS['LBL_VIDEO_CONSULT_MEDICAL_SERVICES_DESC'],
                    'GridView' => "No",
                    'VideoConsult' => "Yes",
                    'Services' => $VideoConsultServicesArr
                );
            }
            if (!empty($MoreServicesArr) && count($MoreServicesArr) > 0) {
                $MEDICAL_SERVICES_ARR['MoreService'] = array(
                    'vTitle' => $languageLabelsArrMS['LBL_MEDICAL_MORE_SERVICES_TITLE'],
                    'vDescription' => $languageLabelsArrMS['LBL_MEDICAL_MORE_SERVICES_DESC'],
                    'GridView' => "Yes",
                    'Services' => $MoreServicesArr
                );
            }
        } else {
            if (!empty($OnDemandServicesArr) && count($OnDemandServicesArr) > 0) {
                $MEDICAL_SERVICES_ARR[] = array(
                    'vTitle' => $languageLabelsArrMS['LBL_ON_DEMAND_MEDICAL_SERVICES_TITLE'],
                    'GridView' => "No",
                    'BookService' => "Yes",
                    'Services' => $OnDemandServicesArr
                );
            }
            if (!empty($VideoConsultServicesArr) && count($VideoConsultServicesArr) > 0) {
                $MEDICAL_SERVICES_ARR[] = array(
                    'vTitle' => $languageLabelsArrMS['LBL_VIDEO_CONSULT_MEDICAL_SERVICES_TITLE'],
                    'GridView' => "No",
                    'VideoConsult' => "Yes",
                    'Services' => $VideoConsultServicesArr
                );
            }
            if (!empty($MoreServicesArr) && count($MoreServicesArr) > 0) {
                $MEDICAL_SERVICES_ARR[] = array(
                    'vTitle' => $languageLabelsArrMS['LBL_MEDICAL_MORE_SERVICES_TITLE'],
                    'GridView' => "Yes",
                    'MoreService' => "Yes",
                    'Services' => $MoreServicesArr
                );
            }
        }
    }
    return $MEDICAL_SERVICES_ARR;
}

/*--------------------- admin left menu ------------------*/

function getMasterServiceCategoryId()
{
    global $obj,$master_service_category_tbl;

    $mServiceCategory = $obj->MySQLSelect("SELECT eType,iMasterServiceCategoryId FROM $master_service_category_tbl WHERE eStatus != 'Deleted' ");
  
    $resArr = [];
    foreach ($mServiceCategory as $category){
        $resArr[$category['eType']] = $category['iMasterServiceCategoryId'];
    }

    return $resArr;
}

function getVehicleCategoryId()
{
    global $obj,$master_service_category_tbl, $MODULES_OBJ, $THEME_OBJ;
    
    $vehicleCategory = $obj->MySQLSelect("SELECT  iVehicleCategoryId , eCatType , eFor, vCategory_EN FROM vehicle_category WHERE iParentId='0' AND eStatus != 'Deleted' AND ( eCatType = 'Delivery' OR eCatType = 'MultipleDelivery' OR eCatType = 'MotoDelivery' OR eCatType = 'MoreDelivery' OR eCatType = 'Genie' OR eCatType = 'Runner' OR eCatType = 'Anywhere' ) ");

    $resArr = [];
    foreach ($vehicleCategory as $category){
        $resArr[$category['eCatType']]['iVehicleCategoryId'] = $category['iVehicleCategoryId'];

        $resArr[$category['eCatType']]['active'] = "VehicleCategory_".$category['iVehicleCategoryId'];
        $banner = [];
        if($category['eCatType'] == 'MoreDelivery') {
            $vehicleCategory = $obj->MySQLSelect("SELECT iMasterServiceCategoryId FROM `master_service_category_pro` WHERE eType='Deliver'");


            $banner['eForDelivery'] = $category['eCatType'];
            $banner['eFor'] = $category['eFor'];
            $resArr[$category['eCatType']]['banner_url'] =  "banner.php?".http_build_query($banner) ;
            $resArr[$category['eCatType']]['sub_category_url'] =  "vehicle_sub_category.php?sub_cid=".$category['iVehicleCategoryId']."&eServiceType=Deliver";
            $resArr[$category['eCatType']]['sub_category_action'] =  "VehicleCategory_Deliver";
            //$resArr[$category['eCatType']]['url'] =  "vehicle_category_action.php?eServiceType=Deliver&id=".$category['iVehicleCategoryId'];
            $resArr[$category['eCatType']]['url'] =  "master_service_category_action.php?id=".$vehicleCategory[0]['iMasterServiceCategoryId'];
            $resArr[$category['eCatType']]['active'] = "mVehicleCategory_Deliver";
            
            if($MODULES_OBJ->isEnableRideDeliveryV1() || $THEME_OBJ->isProDeliveryKingThemeActive() == "Yes") {
                $resArr[$category['eCatType']]['url'] =  "vehicle_category_action.php?eServiceType=Deliver&id=".$category['iVehicleCategoryId'];
            }

        }elseif(in_array($category['eCatType'] , ['Genie','Runner'])){
            $resArr[$category['eCatType']]['active'] = "VehicleCategory_".$category['eCatType'];
           // $banner['eBuyAnyService'] = $category['eCatType'];
            $banner['eType'] = $category['eCatType'];
            $resArr[$category['eCatType']]['banner_url'] =  "banner.php?".http_build_query($banner) ;
            $resArr[$category['eCatType']]['url'] =  "vehicle_category_action.php?eServiceType=".$category['eCatType']."&id=".$category['iVehicleCategoryId'];
        }
    }

    return $resArr;
}

/*--------------------- admin left menu ------------------*/
function geteTypeForBSR($eType = 'RentItem')
{
   switch ($eType) {
      case "GeneralItem":
        return "RentItem";
        break;
      case "RealEstate":
        return "RentEstate";
        break;
      case "Cars":
        return "RentCars";
        break;
      default:
        return "RentItem";
    }
}
function getItemeTypeNew($eType = 'GeneralItem')
{
   switch ($eType) {
      case "RentItem":
        return "GeneralItem";
        break;
      case "RentEstate":
        return "RealEstate";
        break;
      case "RentCars":
        return "Cars";
        break;
      default:
        return "GeneralItem";
    }
}

function  isVehicleCategoryAvailable($eType){
    global $obj;
    $vehicle_category_available = false;
    $VehicleCategory = $obj->MySQLSelect("SELECT eStatus,eCatType  FROM " . getVehicleCategoryTblName() . " WHERE eCatType = '$eType' ");
    if (!empty($VehicleCategory) && count($VehicleCategory) > 0) {
        $vehicle_category_available = $VehicleCategory[0]['eStatus'] == "Active" ? true : false;
    }

    return $vehicle_category_available;
}

function updateQueueRequestStatus($iOrderId, $iDriverId, $queueRequestStatus) {
    global $oCache;

    if(!empty($oCache)) {
        $queueRequestsKey = md5("QUEUE_REQUESTS_ORDER_" . $iOrderId);
        $queueRequests = $oCache->getData($queueRequestsKey);
        $queueRequestsArr = json_decode($queueRequests, true);

        $qKeyCurr = "";
        foreach ($queueRequestsArr as $qKey => $qRequest) {
            if($queueRequestStatus == "Fail") {
                if($qRequest['iDriverId'] == $iDriverId) {
                    $queueRequestsArr[$qKey]['eStatus'] = $queueRequestStatus;
                    $qKeyCurr = $qKey;
                } elseif ($qKeyCurr > $qKey && $qRequest['eStatus'] == "Hold") {
                    $queueRequestsArr[$qKey]['eStatus'] = "Inprocess";
                    break;
                }
            } elseif ($queueRequestStatus == "Accept") {
                if($qRequest['iDriverId'] == $iDriverId) {
                    $queueRequestsArr[$qKey]['eStatus'] = "Accept";
                } else {
                    $queueRequestsArr[$qKey]['eStatus'] = "Fail";
                }
            }
        }

        $queueRequestsJson = json_encode($queueRequestsArr);
        $oCache->setData($queueRequestsKey, $queueRequestsJson);
    }
}

function calculateTimeByDistance($lat1, $lon1, $lat2, $lon2, $onlyVal = "No") {
    global $DRIVER_ARRIVED_MIN_TIME_PER_MINUTE;

    $distance = distanceByLocation($lat1, $lon1, $lat2, $lon2, "K");
    $time = $distance * $DRIVER_ARRIVED_MIN_TIME_PER_MINUTE;
    if(strtoupper($onlyVal) == "YES") {
        return round($time + $addMins);
    }
    return convertMinToHoursToDays(round($time), 'Minutes', 1);
}

function getTripLiveActivity($iTripId) {
    global $obj, $SITE_NAME, $tconfig, $LANG_OBJ, $oCache, $iServiceId;

    $tripData = $obj->MySQLSelect("SELECT tr.iTripId, tr.iDriverId, tr.iUserId, tr.iActive, tr.tStartLat, tr.tStartLong, tr.tEndLat, tr.tEndLong, tr.iDriverId, tr.eType, tr.iVehicleTypeId, tr.tDaddress as DestinationAddress, rd.vName, rd.vImage, rd.vLatitude as driverLatitude, rd.vLongitude as driverLongitude, ru.vLang, ru.iAppVersion, ru.eDeviceType, ru.iGcmRegId, ru.eAppTerminate, ru.eDebugMode, ru.eHmsDevice, tad.vLatitude as DriverStartLatitude, tad.vLongitude as DriverStartLongitude, dv.vLicencePlate, ma.vMake, mo.vTitle, vt.vLogo FROM trips as tr 
        LEFT JOIN register_driver as rd ON rd.iDriverId = tr.iDriverId 
        LEFT JOIN register_user as ru ON ru.iUserId = tr.iUserId 
        LEFT JOIN trip_activity_details as tad ON tad.iTripId = tr.iTripId 
        LEFT JOIN driver_vehicle as dv ON dv.iDriverVehicleId = rd.iDriverVehicleId 
        LEFT JOIN make as ma ON dv.iMakeId = ma.iMakeId 
        LEFT JOIN model as mo ON dv.iModelId = mo.iModelId 
        LEFT JOIN vehicle_type as vt ON vt.iVehicleTypeId = tr.iVehicleTypeId 
        WHERE tr.iTripId = '$iTripId' ");

    $vUserLang = $tripData[0]['vLang'];
    $iDriverId = $tripData[0]['iDriverId'];
    $iUserId = $tripData[0]['iUserId'];
    $eType = $tripData[0]['eType'];
    $DriverStartLatitude = $tripData[0]['DriverStartLatitude'];
    $DriverStartLongitude = $tripData[0]['DriverStartLongitude'];
    $tStartLat = $tripData[0]['tStartLat'];
    $tStartLong = $tripData[0]['tStartLong'];
    $tEndLat = $tripData[0]['tEndLat'];
    $tEndLong = $tripData[0]['tEndLong'];
    $driverLatitude = $tripData[0]['driverLatitude'];
    $driverLongitude = $tripData[0]['driverLongitude'];
    $iActive = $tripData[0]['iActive'];
    $vLicencePlate = $tripData[0]['vLicencePlate'];
    $DriverVehicleMake = $tripData[0]['vMake'];
    $DriverVehicleModel = $tripData[0]['vTitle'];
    $vLogo = $tripData[0]['vLogo'];
    $vImage = $tripData[0]['vImage'];
    $iVehicleTypeId = $tripData[0]['iVehicleTypeId'];
    $DestinationAddress = $tripData[0]['DestinationAddress'];

    $langLabelApcKey = md5($cacheKeysArr['language_label_global_config_'] . $iServiceId . "_" . $vUserLang);
    $getLabelCacheData = $oCache->getData($langLabelApcKey);
    if (!empty($getLabelCacheData) && count($getLabelCacheData) > 0) {
        $languageLabelsArr = $getLabelCacheData;
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vUserLang, "1", $iServiceId);
        $oCache->setData($langLabelApcKey, $languageLabelsArr);
    }

    $vGMapLangCode = get_value('language_master', 'vGMapLangCode', 'eDefault', 'Yes', '', 'true');

    $APP_NAME = $SITE_NAME;
    $DISTANCE_STEP = "0";
    $ETA = $ETA_TITLE = $ETA_SUBTITLE = $DRIVER_IMG = $DRIVER_LICENSE_PLATE = $DRIVER_VEHICLE = $VEHICLE_TYPE_IMG = $STATUS = $APP_TYPE = "";

    $driver_img_path = "";
    if (!empty($vImage) && file_exists($tconfig["tsite_upload_images_driver_path"] . "/" . $iDriverId . "/2_" . $vImage)) {
        $driver_img_path = $tconfig["tsite_upload_images_driver"] . "/" . $iDriverId . "/2_" . $vImage;
    }

    $DRIVER_IMG = !empty($driver_img_path) ? get_tiny_url($tconfig['tsite_url'] . 'resizeImg.php?w=150&src=' . $driver_img_path) : "";
    $DRIVER_LICENSE_PLATE = $vLicencePlate;
    $DRIVER_VEHICLE = $DriverVehicleMake . ' ' . $DriverVehicleModel;
    $VEHICLE_TYPE_IMG = !empty($vLogo) ? $tconfig['tsite_url'] . 'resizeImg.php?w=150&src=' . $tconfig['tsite_upload_images_vehicle_type'] . "/" . $iVehicleTypeId . "/ios/3x_" . $vLogo : '';

    if($iActive == "Active") {
        $step_total_distance = distanceByLocation($tStartLat, $tStartLong, $DriverStartLatitude, $DriverStartLongitude, "K") * 1000;
        $current_distance = distanceByLocation($tStartLat, $tStartLong, $driverLatitude, $driverLongitude, "K") * 1000;

        if($current_distance > $step_total_distance) {
            $step_total_distance = $current_distance;
            $Data_activity = array();
            $Data_activity['vLatitude'] = $driverLatitude;
            $Data_activity['vLongitude'] = $driverLongitude;
            $where_trip = " iTripId = '$iTripId' ";
            $obj->MySQLQueryPerform("trip_activity_details", $Data_activity, "update", $where_trip);
        }

        $step_distance = round($step_total_distance / 10);
        $step_distance_arr = array();
        $step_distance_new = 0;
        for($d = 0; $d < 10; $d++) {
            $step_distance_new = $step_distance_new + $step_distance;
            $step_distance_arr[] = $step_distance_new;
        }

        // $timeToPickup = calculateTimeByDistance($tStartLat, $tStartLong, $driverLatitude, $driverLongitude);   
        $timeToPickupVal = calculateTimeByDistance($tStartLat, $tStartLong, $driverLatitude, $driverLongitude, 'Yes');   
        
        // $requestDataArr = array();
        // $requestDataArr['SOURCE_LATITUDE'] = $tStartLat;
        // $requestDataArr['SOURCE_LONGITUDE'] = $tStartLong;
        // $requestDataArr['DEST_LATITUDE'] = $driverLatitude;
        // $requestDataArr['DEST_LONGITUDE'] = $driverLongitude;
        // $requestDataArr['LANGUAGE_CODE'] = $vGMapLangCode;
        // $direction_data = getPathInfoBetweenLocations($requestDataArr);
        // $timeToPickupVal = round($direction_data['duration'] / 60);
        
        $timeToPickup = convertMinToHoursToDays($timeToPickupVal, 'Minutes', 1);

        $distance_diff = $step_total_distance - $current_distance;

        $LiveActivityStep = 0;
        if($timeToPickupVal == 0) {
            $LiveActivityStep = 10;
        } else {
            for ($i = 0; $i < count($step_distance_arr); $i++) { 
                if($step_distance_arr[$i] > $distance_diff) {
                    $LiveActivityStep = $i - 1;
                    $LiveActivityStep = $LiveActivityStep < 0 ? 0 : $LiveActivityStep;
                    break;
                }
            }
        }

        $ETA = trim($timeToPickup);
        $ETA_TITLE = ' ' . $languageLabelsArr['LBL_ARRIVING_TIME_TO_PICKUP'];
        $ETA_SUBTITLE = $tripData[0]['vName'] . " " . $languageLabelsArr['LBL_DRIVER_IS_ARRIVING'];
        $DISTANCE_STEP = (string)$LiveActivityStep;

    } elseif ($iActive == "Arrived") {
        $ETA = $tripData[0]['vName'];
        $ETA_TITLE = ' ' . $languageLabelsArr['LBL_DRIVER_ARRIVED_NOTI_MSG'];
        $ETA_SUBTITLE = "";
        $DISTANCE_STEP = "10";

    } elseif ($iActive == "On Going Trip") {
        $step_total_distance = distanceByLocation($tStartLat, $tStartLong, $tEndLat, $tEndLong, "K") * 1000;
        $step_distance = round($step_total_distance / 10);
        $step_distance_arr = array();
        $step_distance_new = 0;
        for($d = 0; $d < 10; $d++) {
            $step_distance_new = $step_distance_new + $step_distance;
            $step_distance_arr[] = $step_distance_new;
        }

        $timeToDropOffVal = calculateTimeByDistance($tEndLat, $tEndLong, $driverLatitude, $driverLongitude, 'Yes');
        /*$requestDataArr = array();
        $requestDataArr['SOURCE_LATITUDE'] = $driverLatitude;
        $requestDataArr['SOURCE_LONGITUDE'] = $driverLongitude;
        $requestDataArr['DEST_LATITUDE'] = $tEndLat;
        $requestDataArr['DEST_LONGITUDE'] = $tEndLong;
        $requestDataArr['LANGUAGE_CODE'] = $vGMapLangCode;
        $direction_data = getPathInfoBetweenLocations($requestDataArr);
        $timeToDropOffVal = round($direction_data['duration'] / 60);*/

        $timeToDropOff = date('h:i A', strtotime("+$timeToDropOffVal minutes", time())); 
        $current_distance = distanceByLocation($tEndLat, $tEndLong, $driverLatitude, $driverLongitude, "K") * 1000;
        $distance_diff = $step_total_distance - $current_distance;

        $LiveActivityStep = 0;
        if($timeToDropOffVal == 0) {
            $LiveActivityStep = 10;
        } else {
            for ($i = 0; $i < count($step_distance_arr); $i++) { 
                if($step_distance_arr[$i] > $distance_diff) {
                    $LiveActivityStep = $i - 1;
                    $LiveActivityStep = $LiveActivityStep < 0 ? 0 : $LiveActivityStep;
                    break;
                }
            }
        }

        $ETA = ' ' . $timeToDropOff;
        $ETA_TITLE = $languageLabelsArr['LBL_DROPOFF_AT_NOTI_TXT'];
        $ETA_SUBTITLE = $languageLabelsArr['LBL_GOING_TO_DEST_LOC_NOTI_TXT'] . " " . $DestinationAddress;
        $DISTANCE_STEP = (string)$LiveActivityStep;
    }

    $LiveActivityArr = array();

    $LiveActivityArr["APP_NAME"] = $APP_NAME;
    $LiveActivityArr["ETA"] = $ETA;
    $LiveActivityArr["ETA_TITLE"] = $ETA_TITLE;
    $LiveActivityArr["ETA_SUBTITLE"] = $ETA_SUBTITLE;
    $LiveActivityArr["DRIVER_IMG"] = $DRIVER_IMG;
    $LiveActivityArr["DRIVER_LICENSE_PLATE"] = $DRIVER_LICENSE_PLATE;
    $LiveActivityArr["DRIVER_VEHICLE"] = $DRIVER_VEHICLE;
    $LiveActivityArr["VEHICLE_TYPE_IMG"] = $VEHICLE_TYPE_IMG;
    $LiveActivityArr["DISTANCE_STEP"] = $DISTANCE_STEP;
    if($iActive == "Active") {
        $LiveActivityArr["STATUS"] = "CabRequestAccepted";    
    } elseif ($iActive == "On Going Trip") {
        $LiveActivityArr["STATUS"] = "OnGoingTrip";    
    } else {
        $LiveActivityArr["STATUS"] = $iActive;
    }
    
    $LiveActivityArr["APP_TYPE"] = $eType;

    return $LiveActivityArr;
}

function getOrderLiveActivity($iOrderId) {
    global $obj, $SITE_NAME, $tconfig, $LANG_OBJ, $oCache;

    $orderData = $obj->MySQLSelect("SELECT o.iOrderId, o.iUserId, o.iDriverId, o.iCompanyId, o.iStatusCode, o.eBuyAnyService, ru.vLang, ru.iAppVersion, ru.eDeviceType, ru.iGcmRegId, ru.eAppTerminate, ru.eDebugMode, ru.eHmsDevice, c.vCompany, c.vRestuarantLocationLat, c.vRestuarantLocationLong, c.fPrepareTime, c.iServiceId, ua.vLatitude as userLatitude, ua.vLongitude as userLongitude, rd.vLatitude as driverLatitude, rd.vLongitude as driverLongitude, tad.vLatitude as DriverStartLatitude, tad.vLongitude as DriverStartLongitude FROM orders as o 
    LEFT JOIN register_user as ru ON ru.iUserId = o.iUserId
    LEFT JOIN register_driver as rd ON rd.iDriverId = o.iDriverId
    LEFT JOIN trip_activity_details as tad ON tad.iOrderId = o.iOrderId 
    LEFT JOIN company as c ON c.iCompanyId = o.iCompanyId
    LEFT JOIN user_address as ua ON ua.iUserAddressId = o.iUserAddressId
    WHERE o.iOrderId = '$iOrderId' ");
    // echo "<pre>"; print_r($orderData); exit;
    $vUserLang = $orderData[0]['vLang'];
    $vStoreName = $orderData[0]['vCompany'];
    $vStoreLat = $orderData[0]['vRestuarantLocationLat'];
    $vStoreLng = $orderData[0]['vRestuarantLocationLong'];
    $fPrepareTime = $orderData[0]['fPrepareTime'];
    $userLatitude = $orderData[0]['userLatitude'];
    $userLongitude = $orderData[0]['userLongitude'];
    $driverLatitude = $orderData[0]['driverLatitude'];
    $driverLongitude = $orderData[0]['driverLongitude'];
    $iServiceId = $orderData[0]['iServiceId'];
    $iStatusCode = $orderData[0]['iStatusCode'];
    $iOrderId = $orderData[0]['iOrderId'];
    $DriverStartLatitude = $orderData[0]['DriverStartLatitude'];
    $DriverStartLongitude = $orderData[0]['DriverStartLongitude'];

    $langLabelApcKey = md5($cacheKeysArr['language_label_global_config_'] . $iServiceId . "_" . $vUserLang);
    $getLabelCacheData = $oCache->getData($langLabelApcKey);
    if (!empty($getLabelCacheData) && count($getLabelCacheData) > 0) {
        $languageLabelsArr = $getLabelCacheData;
    } else {
        $languageLabelsArr = $LANG_OBJ->FetchLanguageLabels($vUserLang, "1", $iServiceId);
        $oCache->setData($langLabelApcKey, $languageLabelsArr);
    }

    $vGMapLangCode = get_value('language_master', 'vGMapLangCode', 'eDefault', 'Yes', '', 'true');
    
    $APP_NAME = $SITE_NAME;
    $DISTANCE_STEP = "0";
    $ETA = $ETA_SUBTITLE = $ORDER_STATUS = $STORE_NAME = $STATUS = "";
    $ETA_TITLE = $languageLabelsArr['LBL_DELIVERING_IN_NOTI_MSG'];

    if($iStatusCode == "2") {
        $ETA_SUBTITLE = $languageLabelsArr['LBL_STORE_PREPARING_ORDER_NOTI_MSG'];
        $STATUS = "OrderAccepted";
    } elseif ($iStatusCode == "4") {
        $ETA_SUBTITLE = $languageLabelsArr['LBL_STORE_PREPARING_ORDER_NOTI_MSG'];

        $storeDriverDistance = distanceByLocation($vStoreLat, $vStoreLng, $DriverStartLatitude, $DriverStartLongitude, "K") * 1000;
        $storeDriverDistanceCurr = distanceByLocation($vStoreLat, $vStoreLng, $driverLatitude, $driverLongitude, "K") * 1000;

        if($storeDriverDistanceCurr > $storeDriverDistance) {
            $storeDriverDistance = $storeDriverDistanceCurr;
            $Data_activity = array();
            $Data_activity['vLatitude'] = $driverLatitude;
            $Data_activity['vLongitude'] = $driverLongitude;
            $where_trip = " iOrderId = '$iOrderId' ";
            $obj->MySQLQueryPerform("trip_activity_details", $Data_activity, "update", $where_trip);
        }

        $step_distance = round($storeDriverDistance / 5);
        $step_distance_arr = array();
        $step_distance_new = 0;
        for($d = 0; $d < 5; $d++) {
            $step_distance_new = $step_distance_new + $step_distance;
            $step_distance_arr[] = $step_distance_new;
        }
        
        $distance_diff = $storeDriverDistance - $storeDriverDistanceCurr;


        $LiveActivityStep = 0;
        if($storeDriverDistanceCurr <= 25) {
            $ETA_SUBTITLE = $languageLabelsArr['LBL_DELIVERY_DRIVER_AT_STORE_NOTI_MSG'];
            $STATUS = "OrderPrepared";
            $DISTANCE_STEP = "5";
        } else {
            
            for ($i = 0; $i < count($step_distance_arr); $i++) { 
                if($step_distance_arr[$i] > $distance_diff) {
                    $LiveActivityStep = $i - 1;
                    $LiveActivityStep = $LiveActivityStep < 0 ? 0 : $LiveActivityStep;
                    break;
                }
            }

            $DISTANCE_STEP = (string)$LiveActivityStep;
            $STATUS = "OrderAccepted";
        }
    } elseif ($iStatusCode == "5") {
        $ETA_SUBTITLE = $languageLabelsArr['LBL_ORDER_DISPATCHED_NOTI_MSG'];
        $DISTANCE_STEP = "7";
        $STATUS = "OrderDispatched";

        $timeRemainingVal = calculateTimeByDistance($driverLatitude, $driverLongitude, $userLatitude, $userLongitude, 'Yes');

        /*$requestDataArr = array();
        $requestDataArr['SOURCE_LATITUDE'] = $driverLatitude;
        $requestDataArr['SOURCE_LONGITUDE'] = $driverLongitude;
        $requestDataArr['DEST_LATITUDE'] = $userLatitude;
        $requestDataArr['DEST_LONGITUDE'] = $userLongitude;
        $requestDataArr['LANGUAGE_CODE'] = $vGMapLangCode;
        $direction_data = getPathInfoBetweenLocations($requestDataArr);
        $timeRemainingVal = $direction_data['duration'] / 60;

        $timeRemaining = convertMinToHoursToDays(round($timeRemainingVal), 'Minutes', 1);*/
        $ETA = trim($timeRemaining);

        // if($timeRemainingVal <= 3) {
        //     $ETA = strtolower($languageLabelsArr['LBL_NOW']);
        //     $ETA_TITLE = $languageLabelsArr['LBL_ARRIVING'];
        //     $ETA_SUBTITLE = $languageLabelsArr['LBL_READY_TO_COLLECT_ORDER_NOTI_MSG'];
        //     $DISTANCE_STEP = "9";
        //     $STATUS = "OrderReadyToCollect";
        // }

        $userDriverDistance = distanceByLocation($vStoreLat, $vStoreLng, $userLatitude, $userLongitude, "K") * 1000;
        
        $userDriverDistanceCurr = distanceByLocation($driverLatitude, $driverLongitude, $userLatitude, $userLongitude, "K") * 1000;
        $step_distance = round($userDriverDistance / 5);
        $step_distance_arr = array();
        $step_distance_new = 0;
        for($d = 0; $d < 5; $d++) {
            $step_distance_new = $step_distance_new + $step_distance;
            $step_distance_arr[] = $step_distance_new;
        }

        $distance_diff = $userDriverDistance - $userDriverDistanceCurr;
        // echo $userDriverDistance . ' === ' . $userDriverDistanceCurr . ' === ' . $distance_diff . "<pre>"; print_r($step_distance_arr); exit;
        $LiveActivityStep = 5;
        if($timeRemainingVal == 0) {
            $DISTANCE_STEP = "10";
        } else {
            for ($i = 0; $i < count($step_distance_arr); $i++) { 
                if($step_distance_arr[$i] > $distance_diff) {
                    $LiveActivityStep = ($i + 5);
                    $LiveActivityStep = $LiveActivityStep < 5 ? 5 : $LiveActivityStep;
                    break;
                } elseif ($distance_diff > $step_distance_arr[count($step_distance_arr) - 1]) {
                    $LiveActivityStep = 10;
                }
            }

            $DISTANCE_STEP = (string)$LiveActivityStep;
        }
    }

    if(in_array($iStatusCode, [2,4])) {
        $timeRemainingVal = calculateTimeByDistance($vStoreLat, $vStoreLng, $userLatitude, $userLongitude, 'Yes');
        /*$requestDataArr = array();
        $requestDataArr['SOURCE_LATITUDE'] = $vStoreLat;
        $requestDataArr['SOURCE_LONGITUDE'] = $vStoreLng;
        $requestDataArr['DEST_LATITUDE'] = $userLatitude;
        $requestDataArr['DEST_LONGITUDE'] = $userLongitude;
        $requestDataArr['LANGUAGE_CODE'] = $vGMapLangCode;
        $direction_data = getPathInfoBetweenLocations($requestDataArr);
        $timeRemainingVal = $direction_data['duration'] / 60;*/

        $addMins = $fPrepareTime + $timeRemainingVal;
        $timeRemaining = convertMinToHoursToDays(round($addMins), 'Minutes', 1);
        $ETA = trim($timeRemaining);
    }

    $LiveActivityArr = array();

    $LiveActivityArr["APP_NAME"] = $SITE_NAME;
    $LiveActivityArr["ETA"] = $ETA;
    $LiveActivityArr["ETA_TITLE"] = $ETA_TITLE;
    $LiveActivityArr["ETA_SUBTITLE"] = $ETA_SUBTITLE;
    $LiveActivityArr["STORE_NAME"] = $vStoreName;
    $LiveActivityArr["APP_TYPE"] = "DeliverAll";
    $LiveActivityArr["ORDER_STAGE"] = $STATUS;
    $LiveActivityArr["DISTANCE_STEP"] = $DISTANCE_STEP;

    return $LiveActivityArr;
}

function getLiveActivityDeviceToken($iTripOrderId, $eType) {
    global $obj;

    if($eType == "Trip") {
        $field = 'iTripId';
        $fieldVal = $iTripOrderId;
    } else {
        $field = 'iOrderId';
        $fieldVal = $iTripOrderId;
    }

    $tokenData = $obj->MySQLSelect("SELECT tDeviceLiveActivityToken FROM live_activity_device_tokens WHERE $field = '$fieldVal' ");
    return $tokenData[0]['tDeviceLiveActivityToken'];
}

function scriptForPreViewImage() {
    global $langage_lbl, $langage_lbl_admin;

    return "<script> 

            var imagesPreview = function(input, placeToInsertImagePreview) {

                if (input.files) {
                    $('.banner-img').each(function() {
                        if(!$(this).attr('id')) {
                            $(this).remove();
                        }
                    });

                    $('.manage-banner-section').removeClass('hidden').addClass('show');
                    var t = $('#gallery>video').length + $('#gallery>img').length;
                    var filesAmount = input.files.length;

                    for (i = 0; i < filesAmount; i++) {
                        if (input.files[i].type == 'video/mp4' || input.files[i].type == 'video/webm' 
                        || input.files[i].type == 'video/quicktime'|| input.files[i].type == 'video/x-ms-wmv'
                        || input.files[i].type == 'video/avi' || input.files[i].type == 'video/x-flv' 
                        || input.files[i].type == 'video/x-matroska' ) {
                            $('#gallery').append('<div class=\"banner-img\" ><video src=\"'+URL.createObjectURL(input.files[i])+'\"></video></div>');
                        }else{

                            $('#gallery').append('<div class=\"banner-img\"><img src=\"'+URL.createObjectURL(input.files[i])+'\" /></div>');
                        }
                    }
                }

            };

            $('#previewmultiImg').on('change', function() {
                imagesPreview(this, 'div#gallery');
            });

            var curr_elem = '';
            $('.removebtn').on('click', function() {
                curr_elem = $(this);

                show_alert('', '" . addslashes($langage_lbl['LBL_DELETE_IMG_CONFIRM_MSG']) . "', '" . addslashes($langage_lbl['LBL_BTN_CANCEL_TXT']) . "', '" . addslashes($langage_lbl['LBL_BTN_OK_TXT']) . "', '', function (btn_id) {
                    if (btn_id == 1) {
                        removeItemMedia(curr_elem);
                    }
                }, true, true, true);
            });

            function removeItemMedia(elem) {
                var id = elem.attr('attr-id'); 
                var name = elem.attr('attr-name'); 
                $('#'+id).hide();
                
                var delete_img = $('#delete_img').val();
                var delete_img = delete_img+','+id;
                $('#delete_img').val(delete_img);
                var delete_img = $('#delete_img').val();
            }
        </script>";
}

function getReviseImageHeight($height) {
    $isRatinaDisplay = $_COOKIE['isRatinaDisplay'];
    if($isRatinaDisplay == "true") {
        $height = $height * 2;
    }

    return $height;
}

function getServiceCategoriesProDK($Data, $lang) {
    global $obj, $MODULES_OBJ, $languageLabelsArr, $tconfig, $master_service_category_tbl;

    $DataNewArr = array();

    $mServiceCategoryArr = array();
    $mServiceCategoryArr['vTitle'] = $languageLabelsArr['LBL_HEADER_ORDER_SERVICE_TITLE'];
    $mServiceCategoryArr['eViewType'] = 'TitleView';
    $mServiceCategoryArr['AddBottomPadding'] = "No";
    $DataNewArr[] = $mServiceCategoryArr;

    $mServiceCategoryArr = array();
    $mServiceCategoryArr['eViewType'] = "GridView";
    $serviceDataArr = array();
    foreach ($Data as $skey => $SubCategory) {
        if(in_array($SubCategory['iServiceId'], [1,2,5])) {
            $SubCategory['vImage'] = $SubCategory['vListLogo'];
            $SubCategory['vCategoryName'] = $SubCategory['vCategory'];
            $serviceDataArr[] = $SubCategory;    
        }        
    }
    $mServiceCategoryArr['servicesArr'] = $serviceDataArr;
    $DataNewArr[] = $mServiceCategoryArr;

    $mServiceCategoryArr = array();
    $mServiceCategoryArr['eViewType'] = "ListView";
    $serviceDataArr = array();
    foreach ($Data as $skey => $SubCategory) {
        if(!in_array($SubCategory['iServiceId'], [1,2,5])) {
            $SubCategory['vImage'] = $SubCategory['vListLogo'];
            $SubCategory['vCategoryName'] = $SubCategory['vCategory'];
            $serviceDataArr[] = $SubCategory;    
        }        
    }
    $mServiceCategoryArr['servicesArr'] = $serviceDataArr;
    $DataNewArr[] = $mServiceCategoryArr;

    return $DataNewArr;
}
function getDriverCompany($iDriverId)
{
    global $obj;
    $dc = $obj->MySQLSelect("select rd.iCompanyId from register_driver rd JOIN company c ON (c.iCompanyId = rd.iCompanyId) where iDriverId='" . $iDriverId . "'");
    return $dc;
}

function isEnableAddCard(){

    global $APP_PAYMENT_MODE , $APP_PAYMENT_METHOD;
    $CARD_SAVE_ENABLE = "No";
    if($APP_PAYMENT_MODE != "Cash" ) {
        $ADD_CARD_STATUS = strtoupper($APP_PAYMENT_METHOD) . '_CARD_SAVE_ENABLE';
        global $$ADD_CARD_STATUS;
        $CARD_SAVE_ENABLE = $$ADD_CARD_STATUS;
    }
    $ARR['CARD_SAVE_ENABLE'] = $CARD_SAVE_ENABLE;
    return $ARR;

}

?>